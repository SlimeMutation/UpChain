{
	"id": "18a513a2cdcd2774860b369be7375520",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"MyERC721Market.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract MyERC721Market {\r\n    using SafeERC20 for IERC20;\r\n\r\n    ERC721URIStorage public erc721;\r\n    IERC20 public erc20;\r\n    mapping(uint256 => uint256) public tokenPrice;\r\n    mapping(uint256 => address) public tokenOwner;\r\n\r\n    constructor(ERC721URIStorage _erc721, IERC20 _erc20) {\r\n        erc721 = _erc721;\r\n        erc20 = _erc20;\r\n    }\r\n\r\n    function list(uint256 _tokenId, uint256 _price) public {\r\n        require(erc721.ownerOf(_tokenId) == msg.sender, \"not NFT owner\");\r\n        tokenPrice[_tokenId] = _price;\r\n        tokenOwner[_tokenId] = msg.sender;\r\n    }\r\n\r\n    function buyNFT(uint256 _tokenId) public {\r\n        uint256 nftPrice = tokenPrice[_tokenId];\r\n        address nftOwner = tokenOwner[_tokenId];\r\n        require(nftPrice > 0 && nftOwner != address(0), \"NFT not list\");\r\n        require(erc20.balanceOf(msg.sender) >= nftPrice, \"insufficient balance\");\r\n        erc20.safeTransferFrom(msg.sender, nftOwner, nftPrice);\r\n        erc721.safeTransferFrom(nftOwner, msg.sender, _tokenId);\r\n        tokenPrice[_tokenId] = 0;\r\n        tokenOwner[_tokenId] = address(0);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"MyERC721Market.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 605,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 607,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 611,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 615,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 619,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 625,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 605,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 607,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 611,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 615,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 619,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 625,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1744,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"MyERC721Market.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xA8 PUSH18 0x5979020060B5847A3F92A10202C663F26952 DUP8 0xDE CALLDATACOPY DUP6 POP SWAP6 0xCC 0xAE PUSH1 0xC DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xA8 PUSH18 0x5979020060B5847A3F92A10202C663F26952 DUP8 0xDE CALLDATACOPY DUP6 POP SWAP6 0xCC 0xAE PUSH1 0xC DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"MyERC721Market.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"MyERC721Market.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xFC SGT DUP16 STOP PUSH16 0xCE36EAAFB8C23C8F3807F830920CD962 0xD1 SUB SLT 0x4D 0xCD 0xDF PUSH2 0x1702 TSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xFC SGT DUP16 STOP PUSH16 0xCE36EAAFB8C23C8F3807F830920CD962 0xD1 SUB SLT 0x4D 0xCD 0xDF PUSH2 0x1702 TSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"MyERC721Market.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MyERC721Market.sol": {
				"MyERC721Market": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ERC721URIStorage",
									"name": "_erc721",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_erc20",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "buyNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc20",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc721",
							"outputs": [
								{
									"internalType": "contract ERC721URIStorage",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "list",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MyERC721Market.sol\":299:1404  contract MyERC721Market {... */\n  mstore(0x40, 0x80)\n    /* \"MyERC721Market.sol\":534:647  constructor(ERC721URIStorage _erc721, IERC20 _erc20) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"MyERC721Market.sol\":607:614  _erc721 */\n  dup2\n    /* \"MyERC721Market.sol\":598:604  erc721 */\n  0x00\n  dup1\n    /* \"MyERC721Market.sol\":598:614  erc721 = _erc721 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"MyERC721Market.sol\":633:639  _erc20 */\n  dup1\n    /* \"MyERC721Market.sol\":625:630  erc20 */\n  0x01\n  0x00\n    /* \"MyERC721Market.sol\":625:639  erc20 = _erc20 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"MyERC721Market.sol\":534:647  constructor(ERC721URIStorage _erc721, IERC20 _erc20) {... */\n  pop\n  pop\n    /* \"MyERC721Market.sol\":299:1404  contract MyERC721Market {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_24\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:689   */\ntag_12:\n    /* \"#utility.yul\":630:637   */\n  0x00\n    /* \"#utility.yul\":659:683   */\n  tag_26\n    /* \"#utility.yul\":677:682   */\n  dup3\n    /* \"#utility.yul\":659:683   */\n  tag_11\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":648:683   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:689   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":695:867   */\ntag_13:\n    /* \"#utility.yul\":793:842   */\n  tag_28\n    /* \"#utility.yul\":836:841   */\n  dup2\n    /* \"#utility.yul\":793:842   */\n  tag_12\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":786:791   */\n  dup2\n    /* \"#utility.yul\":783:843   */\n  eq\n    /* \"#utility.yul\":773:861   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":854:855   */\n  dup1\n    /* \"#utility.yul\":847:859   */\n  revert\n    /* \"#utility.yul\":773:861   */\ntag_29:\n    /* \"#utility.yul\":695:867   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":873:1066   */\ntag_14:\n    /* \"#utility.yul\":955:960   */\n  0x00\n    /* \"#utility.yul\":986:992   */\n  dup2\n    /* \"#utility.yul\":980:993   */\n  mload\n    /* \"#utility.yul\":971:993   */\n  swap1\n  pop\n    /* \"#utility.yul\":1002:1060   */\n  tag_31\n    /* \"#utility.yul\":1054:1059   */\n  dup2\n    /* \"#utility.yul\":1002:1060   */\n  tag_13\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":873:1066   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1072:1182   */\ntag_15:\n    /* \"#utility.yul\":1123:1130   */\n  0x00\n    /* \"#utility.yul\":1152:1176   */\n  tag_33\n    /* \"#utility.yul\":1170:1175   */\n  dup3\n    /* \"#utility.yul\":1152:1176   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1141:1176   */\n  swap1\n  pop\n    /* \"#utility.yul\":1072:1182   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1188:1338   */\ntag_16:\n    /* \"#utility.yul\":1275:1313   */\n  tag_35\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1275:1313   */\n  tag_15\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1268:1273   */\n  dup2\n    /* \"#utility.yul\":1265:1314   */\n  eq\n    /* \"#utility.yul\":1255:1332   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1328:1329   */\n  0x00\n    /* \"#utility.yul\":1325:1326   */\n  dup1\n    /* \"#utility.yul\":1318:1330   */\n  revert\n    /* \"#utility.yul\":1255:1332   */\ntag_36:\n    /* \"#utility.yul\":1188:1338   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1344:1515   */\ntag_17:\n    /* \"#utility.yul\":1415:1420   */\n  0x00\n    /* \"#utility.yul\":1446:1452   */\n  dup2\n    /* \"#utility.yul\":1440:1453   */\n  mload\n    /* \"#utility.yul\":1431:1453   */\n  swap1\n  pop\n    /* \"#utility.yul\":1462:1509   */\n  tag_38\n    /* \"#utility.yul\":1503:1508   */\n  dup2\n    /* \"#utility.yul\":1462:1509   */\n  tag_16\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1344:1515   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1521:2106   */\ntag_3:\n    /* \"#utility.yul\":1639:1645   */\n  0x00\n    /* \"#utility.yul\":1647:1653   */\n  dup1\n    /* \"#utility.yul\":1696:1698   */\n  0x40\n    /* \"#utility.yul\":1684:1693   */\n  dup4\n    /* \"#utility.yul\":1675:1682   */\n  dup6\n    /* \"#utility.yul\":1671:1694   */\n  sub\n    /* \"#utility.yul\":1667:1699   */\n  slt\n    /* \"#utility.yul\":1664:1783   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1702:1781   */\n  tag_41\n  tag_8\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1664:1783   */\ntag_40:\n    /* \"#utility.yul\":1822:1823   */\n  0x00\n    /* \"#utility.yul\":1847:1936   */\n  tag_42\n    /* \"#utility.yul\":1928:1935   */\n  dup6\n    /* \"#utility.yul\":1919:1925   */\n  dup3\n    /* \"#utility.yul\":1908:1917   */\n  dup7\n    /* \"#utility.yul\":1904:1926   */\n  add\n    /* \"#utility.yul\":1847:1936   */\n  tag_14\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1837:1936   */\n  swap3\n  pop\n    /* \"#utility.yul\":1793:1946   */\n  pop\n    /* \"#utility.yul\":1985:1987   */\n  0x20\n    /* \"#utility.yul\":2011:2089   */\n  tag_43\n    /* \"#utility.yul\":2081:2088   */\n  dup6\n    /* \"#utility.yul\":2072:2078   */\n  dup3\n    /* \"#utility.yul\":2061:2070   */\n  dup7\n    /* \"#utility.yul\":2057:2079   */\n  add\n    /* \"#utility.yul\":2011:2089   */\n  tag_17\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":2001:2089   */\n  swap2\n  pop\n    /* \"#utility.yul\":1956:2099   */\n  pop\n    /* \"#utility.yul\":1521:2106   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"MyERC721Market.sol\":299:1404  contract MyERC721Market {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MyERC721Market.sol\":299:1404  contract MyERC721Market {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1caaa487\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x50fd7367\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x51ed8288\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x785e9e86\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xbca6ce64\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xd4ddce8a\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"MyERC721Market.sol\":480:525  mapping(uint256 => address) public tokenOwner */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MyERC721Market.sol\":655:877  function list(uint256 _tokenId, uint256 _price) public {... */\n    tag_4:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"MyERC721Market.sol\":885:1401  function buyNFT(uint256 _tokenId) public {... */\n    tag_5:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_20:\n      tag_21\n      jump\t// in\n    tag_19:\n      stop\n        /* \"MyERC721Market.sol\":402:421  IERC20 public erc20 */\n    tag_6:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MyERC721Market.sol\":365:395  ERC721URIStorage public erc721 */\n    tag_7:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MyERC721Market.sol\":428:473  mapping(uint256 => uint256) public tokenPrice */\n    tag_8:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MyERC721Market.sol\":480:525  mapping(uint256 => address) public tokenOwner */\n    tag_12:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"MyERC721Market.sol\":655:877  function list(uint256 _tokenId, uint256 _price) public {... */\n    tag_18:\n        /* \"MyERC721Market.sol\":757:767  msg.sender */\n      caller\n        /* \"MyERC721Market.sol\":729:767  erc721.ownerOf(_tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MyERC721Market.sol\":729:735  erc721 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MyERC721Market.sol\":729:743  erc721.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"MyERC721Market.sol\":744:752  _tokenId */\n      dup5\n        /* \"MyERC721Market.sol\":729:753  erc721.ownerOf(_tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_36\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_36:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_38\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_38:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"MyERC721Market.sol\":729:767  erc721.ownerOf(_tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"MyERC721Market.sol\":721:785  require(erc721.ownerOf(_tokenId) == msg.sender, \"not NFT owner\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"MyERC721Market.sol\":819:825  _price */\n      dup1\n        /* \"MyERC721Market.sol\":796:806  tokenPrice */\n      0x02\n        /* \"MyERC721Market.sol\":796:816  tokenPrice[_tokenId] */\n      0x00\n        /* \"MyERC721Market.sol\":807:815  _tokenId */\n      dup5\n        /* \"MyERC721Market.sol\":796:816  tokenPrice[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MyERC721Market.sol\":796:825  tokenPrice[_tokenId] = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MyERC721Market.sol\":859:869  msg.sender */\n      caller\n        /* \"MyERC721Market.sol\":836:846  tokenOwner */\n      0x03\n        /* \"MyERC721Market.sol\":836:856  tokenOwner[_tokenId] */\n      0x00\n        /* \"MyERC721Market.sol\":847:855  _tokenId */\n      dup5\n        /* \"MyERC721Market.sol\":836:856  tokenOwner[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"MyERC721Market.sol\":836:869  tokenOwner[_tokenId] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"MyERC721Market.sol\":655:877  function list(uint256 _tokenId, uint256 _price) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MyERC721Market.sol\":885:1401  function buyNFT(uint256 _tokenId) public {... */\n    tag_21:\n        /* \"MyERC721Market.sol\":937:953  uint256 nftPrice */\n      0x00\n        /* \"MyERC721Market.sol\":956:966  tokenPrice */\n      0x02\n        /* \"MyERC721Market.sol\":956:976  tokenPrice[_tokenId] */\n      0x00\n        /* \"MyERC721Market.sol\":967:975  _tokenId */\n      dup4\n        /* \"MyERC721Market.sol\":956:976  tokenPrice[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MyERC721Market.sol\":937:976  uint256 nftPrice = tokenPrice[_tokenId] */\n      swap1\n      pop\n        /* \"MyERC721Market.sol\":987:1003  address nftOwner */\n      0x00\n        /* \"MyERC721Market.sol\":1006:1016  tokenOwner */\n      0x03\n        /* \"MyERC721Market.sol\":1006:1026  tokenOwner[_tokenId] */\n      0x00\n        /* \"MyERC721Market.sol\":1017:1025  _tokenId */\n      dup5\n        /* \"MyERC721Market.sol\":1006:1026  tokenOwner[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MyERC721Market.sol\":987:1026  address nftOwner = tokenOwner[_tokenId] */\n      swap1\n      pop\n        /* \"MyERC721Market.sol\":1056:1057  0 */\n      0x00\n        /* \"MyERC721Market.sol\":1045:1053  nftPrice */\n      dup3\n        /* \"MyERC721Market.sol\":1045:1057  nftPrice > 0 */\n      gt\n        /* \"MyERC721Market.sol\":1045:1083  nftPrice > 0 && nftOwner != address(0) */\n      dup1\n      iszero\n      tag_45\n      jumpi\n      pop\n        /* \"MyERC721Market.sol\":1081:1082  0 */\n      0x00\n        /* \"MyERC721Market.sol\":1061:1083  nftOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MyERC721Market.sol\":1061:1069  nftOwner */\n      dup2\n        /* \"MyERC721Market.sol\":1061:1083  nftOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"MyERC721Market.sol\":1045:1083  nftPrice > 0 && nftOwner != address(0) */\n    tag_45:\n        /* \"MyERC721Market.sol\":1037:1100  require(nftPrice > 0 && nftOwner != address(0), \"NFT not list\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"MyERC721Market.sol\":1150:1158  nftPrice */\n      dup2\n        /* \"MyERC721Market.sol\":1119:1124  erc20 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MyERC721Market.sol\":1119:1134  erc20.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"MyERC721Market.sol\":1135:1145  msg.sender */\n      caller\n        /* \"MyERC721Market.sol\":1119:1146  erc20.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_49:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_51:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"MyERC721Market.sol\":1119:1158  erc20.balanceOf(msg.sender) >= nftPrice */\n      lt\n      iszero\n        /* \"MyERC721Market.sol\":1111:1183  require(erc20.balanceOf(msg.sender) >= nftPrice, \"insufficient balance\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"MyERC721Market.sol\":1194:1248  erc20.safeTransferFrom(msg.sender, nftOwner, nftPrice) */\n      tag_57\n        /* \"MyERC721Market.sol\":1217:1227  msg.sender */\n      caller\n        /* \"MyERC721Market.sol\":1229:1237  nftOwner */\n      dup3\n        /* \"MyERC721Market.sol\":1239:1247  nftPrice */\n      dup5\n        /* \"MyERC721Market.sol\":1194:1199  erc20 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MyERC721Market.sol\":1194:1216  erc20.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_58\n      swap1\n        /* \"MyERC721Market.sol\":1194:1248  erc20.safeTransferFrom(msg.sender, nftOwner, nftPrice) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_57:\n        /* \"MyERC721Market.sol\":1259:1265  erc721 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MyERC721Market.sol\":1259:1282  erc721.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"MyERC721Market.sol\":1283:1291  nftOwner */\n      dup3\n        /* \"MyERC721Market.sol\":1293:1303  msg.sender */\n      caller\n        /* \"MyERC721Market.sol\":1305:1313  _tokenId */\n      dup7\n        /* \"MyERC721Market.sol\":1259:1314  erc721.safeTransferFrom(nftOwner, msg.sender, _tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n        /* \"MyERC721Market.sol\":1348:1349  0 */\n      0x00\n        /* \"MyERC721Market.sol\":1325:1335  tokenPrice */\n      0x02\n        /* \"MyERC721Market.sol\":1325:1345  tokenPrice[_tokenId] */\n      0x00\n        /* \"MyERC721Market.sol\":1336:1344  _tokenId */\n      dup6\n        /* \"MyERC721Market.sol\":1325:1345  tokenPrice[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MyERC721Market.sol\":1325:1349  tokenPrice[_tokenId] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MyERC721Market.sol\":1391:1392  0 */\n      0x00\n        /* \"MyERC721Market.sol\":1360:1370  tokenOwner */\n      0x03\n        /* \"MyERC721Market.sol\":1360:1380  tokenOwner[_tokenId] */\n      0x00\n        /* \"MyERC721Market.sol\":1371:1379  _tokenId */\n      dup6\n        /* \"MyERC721Market.sol\":1360:1380  tokenOwner[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"MyERC721Market.sol\":1360:1393  tokenOwner[_tokenId] = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"MyERC721Market.sol\":926:1401  {... */\n      pop\n      pop\n        /* \"MyERC721Market.sol\":885:1401  function buyNFT(uint256 _tokenId) public {... */\n      pop\n      jump\t// out\n        /* \"MyERC721Market.sol\":402:421  IERC20 public erc20 */\n    tag_23:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"MyERC721Market.sol\":365:395  ERC721URIStorage public erc721 */\n    tag_27:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"MyERC721Market.sol\":428:473  mapping(uint256 => uint256) public tokenPrice */\n    tag_32:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_66\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_70\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_71\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_74\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_77\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_78\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_80\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_86\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_85)\n    tag_86:\n      0x60\n      swap2\n      pop\n    tag_85:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_87\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_88\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_88:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_90\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_91\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_92\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_93)\n    tag_90:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_94\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_94:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_95\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_89)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_89:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_98\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_101:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_103:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_104:\n        /* \"#utility.yul\":490:514   */\n      tag_140\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_103\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_141\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_141:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_105:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_143\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_104\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_11:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_146\n      tag_101\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":766:885   */\n    tag_145:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_147\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_105\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_106:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_107:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_150\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_106\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_108:\n        /* \"#utility.yul\":1346:1370   */\n      tag_152\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_107\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_14:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_154\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_108\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:2085   */\n    tag_17:\n        /* \"#utility.yul\":1679:1685   */\n      0x00\n        /* \"#utility.yul\":1687:1693   */\n      dup1\n        /* \"#utility.yul\":1736:1738   */\n      0x40\n        /* \"#utility.yul\":1724:1733   */\n      dup4\n        /* \"#utility.yul\":1715:1722   */\n      dup6\n        /* \"#utility.yul\":1711:1734   */\n      sub\n        /* \"#utility.yul\":1707:1739   */\n      slt\n        /* \"#utility.yul\":1704:1823   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1742:1821   */\n      tag_157\n      tag_101\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1704:1823   */\n    tag_156:\n        /* \"#utility.yul\":1862:1863   */\n      0x00\n        /* \"#utility.yul\":1887:1940   */\n      tag_158\n        /* \"#utility.yul\":1932:1939   */\n      dup6\n        /* \"#utility.yul\":1923:1929   */\n      dup3\n        /* \"#utility.yul\":1912:1921   */\n      dup7\n        /* \"#utility.yul\":1908:1930   */\n      add\n        /* \"#utility.yul\":1887:1940   */\n      tag_105\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1877:1940   */\n      swap3\n      pop\n        /* \"#utility.yul\":1833:1950   */\n      pop\n        /* \"#utility.yul\":1989:1991   */\n      0x20\n        /* \"#utility.yul\":2015:2068   */\n      tag_159\n        /* \"#utility.yul\":2060:2067   */\n      dup6\n        /* \"#utility.yul\":2051:2057   */\n      dup3\n        /* \"#utility.yul\":2040:2049   */\n      dup7\n        /* \"#utility.yul\":2036:2058   */\n      add\n        /* \"#utility.yul\":2015:2068   */\n      tag_105\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2005:2068   */\n      swap2\n      pop\n        /* \"#utility.yul\":1960:2078   */\n      pop\n        /* \"#utility.yul\":1611:2085   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2151   */\n    tag_109:\n        /* \"#utility.yul\":2119:2122   */\n      0x00\n        /* \"#utility.yul\":2140:2145   */\n      dup2\n        /* \"#utility.yul\":2133:2145   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2157:2299   */\n    tag_110:\n        /* \"#utility.yul\":2207:2216   */\n      0x00\n        /* \"#utility.yul\":2240:2293   */\n      tag_162\n        /* \"#utility.yul\":2258:2292   */\n      tag_163\n        /* \"#utility.yul\":2267:2291   */\n      tag_164\n        /* \"#utility.yul\":2285:2290   */\n      dup5\n        /* \"#utility.yul\":2267:2291   */\n      tag_106\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2258:2292   */\n      tag_109\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2240:2293   */\n      tag_106\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2227:2293   */\n      swap1\n      pop\n        /* \"#utility.yul\":2157:2299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2305:2431   */\n    tag_111:\n        /* \"#utility.yul\":2355:2364   */\n      0x00\n        /* \"#utility.yul\":2388:2425   */\n      tag_166\n        /* \"#utility.yul\":2419:2424   */\n      dup3\n        /* \"#utility.yul\":2388:2425   */\n      tag_110\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2375:2425   */\n      swap1\n      pop\n        /* \"#utility.yul\":2305:2431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2437:2577   */\n    tag_112:\n        /* \"#utility.yul\":2501:2510   */\n      0x00\n        /* \"#utility.yul\":2534:2571   */\n      tag_168\n        /* \"#utility.yul\":2565:2570   */\n      dup3\n        /* \"#utility.yul\":2534:2571   */\n      tag_111\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2521:2571   */\n      swap1\n      pop\n        /* \"#utility.yul\":2437:2577   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2583:2742   */\n    tag_113:\n        /* \"#utility.yul\":2684:2735   */\n      tag_170\n        /* \"#utility.yul\":2729:2734   */\n      dup2\n        /* \"#utility.yul\":2684:2735   */\n      tag_112\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":2679:2682   */\n      dup3\n        /* \"#utility.yul\":2672:2736   */\n      mstore\n        /* \"#utility.yul\":2583:2742   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2748:2998   */\n    tag_25:\n        /* \"#utility.yul\":2855:2859   */\n      0x00\n        /* \"#utility.yul\":2893:2895   */\n      0x20\n        /* \"#utility.yul\":2882:2891   */\n      dup3\n        /* \"#utility.yul\":2878:2896   */\n      add\n        /* \"#utility.yul\":2870:2896   */\n      swap1\n      pop\n        /* \"#utility.yul\":2906:2991   */\n      tag_172\n        /* \"#utility.yul\":2988:2989   */\n      0x00\n        /* \"#utility.yul\":2977:2986   */\n      dup4\n        /* \"#utility.yul\":2973:2990   */\n      add\n        /* \"#utility.yul\":2964:2970   */\n      dup5\n        /* \"#utility.yul\":2906:2991   */\n      tag_113\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2748:2998   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3004:3155   */\n    tag_114:\n        /* \"#utility.yul\":3079:3088   */\n      0x00\n        /* \"#utility.yul\":3112:3149   */\n      tag_174\n        /* \"#utility.yul\":3143:3148   */\n      dup3\n        /* \"#utility.yul\":3112:3149   */\n      tag_111\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":3099:3149   */\n      swap1\n      pop\n        /* \"#utility.yul\":3004:3155   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3161:3342   */\n    tag_115:\n        /* \"#utility.yul\":3273:3335   */\n      tag_176\n        /* \"#utility.yul\":3329:3334   */\n      dup2\n        /* \"#utility.yul\":3273:3335   */\n      tag_114\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":3268:3271   */\n      dup3\n        /* \"#utility.yul\":3261:3336   */\n      mstore\n        /* \"#utility.yul\":3161:3342   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3348:3620   */\n    tag_29:\n        /* \"#utility.yul\":3466:3470   */\n      0x00\n        /* \"#utility.yul\":3504:3506   */\n      0x20\n        /* \"#utility.yul\":3493:3502   */\n      dup3\n        /* \"#utility.yul\":3489:3507   */\n      add\n        /* \"#utility.yul\":3481:3507   */\n      swap1\n      pop\n        /* \"#utility.yul\":3517:3613   */\n      tag_178\n        /* \"#utility.yul\":3610:3611   */\n      0x00\n        /* \"#utility.yul\":3599:3608   */\n      dup4\n        /* \"#utility.yul\":3595:3612   */\n      add\n        /* \"#utility.yul\":3586:3592   */\n      dup5\n        /* \"#utility.yul\":3517:3613   */\n      tag_115\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":3348:3620   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3626:3744   */\n    tag_116:\n        /* \"#utility.yul\":3713:3737   */\n      tag_180\n        /* \"#utility.yul\":3731:3736   */\n      dup2\n        /* \"#utility.yul\":3713:3737   */\n      tag_103\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":3708:3711   */\n      dup3\n        /* \"#utility.yul\":3701:3738   */\n      mstore\n        /* \"#utility.yul\":3626:3744   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3750:3972   */\n    tag_34:\n        /* \"#utility.yul\":3843:3847   */\n      0x00\n        /* \"#utility.yul\":3881:3883   */\n      0x20\n        /* \"#utility.yul\":3870:3879   */\n      dup3\n        /* \"#utility.yul\":3866:3884   */\n      add\n        /* \"#utility.yul\":3858:3884   */\n      swap1\n      pop\n        /* \"#utility.yul\":3894:3965   */\n      tag_182\n        /* \"#utility.yul\":3962:3963   */\n      0x00\n        /* \"#utility.yul\":3951:3960   */\n      dup4\n        /* \"#utility.yul\":3947:3964   */\n      add\n        /* \"#utility.yul\":3938:3944   */\n      dup5\n        /* \"#utility.yul\":3894:3965   */\n      tag_116\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3750:3972   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3978:4100   */\n    tag_117:\n        /* \"#utility.yul\":4051:4075   */\n      tag_184\n        /* \"#utility.yul\":4069:4074   */\n      dup2\n        /* \"#utility.yul\":4051:4075   */\n      tag_107\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":4044:4049   */\n      dup2\n        /* \"#utility.yul\":4041:4076   */\n      eq\n        /* \"#utility.yul\":4031:4094   */\n      tag_185\n      jumpi\n        /* \"#utility.yul\":4090:4091   */\n      0x00\n        /* \"#utility.yul\":4087:4088   */\n      dup1\n        /* \"#utility.yul\":4080:4092   */\n      revert\n        /* \"#utility.yul\":4031:4094   */\n    tag_185:\n        /* \"#utility.yul\":3978:4100   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4106:4249   */\n    tag_118:\n        /* \"#utility.yul\":4163:4168   */\n      0x00\n        /* \"#utility.yul\":4194:4200   */\n      dup2\n        /* \"#utility.yul\":4188:4201   */\n      mload\n        /* \"#utility.yul\":4179:4201   */\n      swap1\n      pop\n        /* \"#utility.yul\":4210:4243   */\n      tag_187\n        /* \"#utility.yul\":4237:4242   */\n      dup2\n        /* \"#utility.yul\":4210:4243   */\n      tag_117\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":4106:4249   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4255:4606   */\n    tag_40:\n        /* \"#utility.yul\":4325:4331   */\n      0x00\n        /* \"#utility.yul\":4374:4376   */\n      0x20\n        /* \"#utility.yul\":4362:4371   */\n      dup3\n        /* \"#utility.yul\":4353:4360   */\n      dup5\n        /* \"#utility.yul\":4349:4372   */\n      sub\n        /* \"#utility.yul\":4345:4377   */\n      slt\n        /* \"#utility.yul\":4342:4461   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":4380:4459   */\n      tag_190\n      tag_101\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":4342:4461   */\n    tag_189:\n        /* \"#utility.yul\":4500:4501   */\n      0x00\n        /* \"#utility.yul\":4525:4589   */\n      tag_191\n        /* \"#utility.yul\":4581:4588   */\n      dup5\n        /* \"#utility.yul\":4572:4578   */\n      dup3\n        /* \"#utility.yul\":4561:4570   */\n      dup6\n        /* \"#utility.yul\":4557:4579   */\n      add\n        /* \"#utility.yul\":4525:4589   */\n      tag_118\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4515:4589   */\n      swap2\n      pop\n        /* \"#utility.yul\":4471:4599   */\n      pop\n        /* \"#utility.yul\":4255:4606   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4612:4781   */\n    tag_119:\n        /* \"#utility.yul\":4696:4707   */\n      0x00\n        /* \"#utility.yul\":4730:4736   */\n      dup3\n        /* \"#utility.yul\":4725:4728   */\n      dup3\n        /* \"#utility.yul\":4718:4737   */\n      mstore\n        /* \"#utility.yul\":4770:4774   */\n      0x20\n        /* \"#utility.yul\":4765:4768   */\n      dup3\n        /* \"#utility.yul\":4761:4775   */\n      add\n        /* \"#utility.yul\":4746:4775   */\n      swap1\n      pop\n        /* \"#utility.yul\":4612:4781   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4787:4950   */\n    tag_120:\n        /* \"#utility.yul\":4927:4942   */\n      0x6e6f74204e4654206f776e657200000000000000000000000000000000000000\n        /* \"#utility.yul\":4923:4924   */\n      0x00\n        /* \"#utility.yul\":4915:4921   */\n      dup3\n        /* \"#utility.yul\":4911:4925   */\n      add\n        /* \"#utility.yul\":4904:4943   */\n      mstore\n        /* \"#utility.yul\":4787:4950   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4956:5322   */\n    tag_121:\n        /* \"#utility.yul\":5098:5101   */\n      0x00\n        /* \"#utility.yul\":5119:5186   */\n      tag_195\n        /* \"#utility.yul\":5183:5185   */\n      0x0d\n        /* \"#utility.yul\":5178:5181   */\n      dup4\n        /* \"#utility.yul\":5119:5186   */\n      tag_119\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":5112:5186   */\n      swap2\n      pop\n        /* \"#utility.yul\":5195:5288   */\n      tag_196\n        /* \"#utility.yul\":5284:5287   */\n      dup3\n        /* \"#utility.yul\":5195:5288   */\n      tag_120\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":5313:5315   */\n      0x20\n        /* \"#utility.yul\":5308:5311   */\n      dup3\n        /* \"#utility.yul\":5304:5316   */\n      add\n        /* \"#utility.yul\":5297:5316   */\n      swap1\n      pop\n        /* \"#utility.yul\":4956:5322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5328:5747   */\n    tag_43:\n        /* \"#utility.yul\":5494:5498   */\n      0x00\n        /* \"#utility.yul\":5532:5534   */\n      0x20\n        /* \"#utility.yul\":5521:5530   */\n      dup3\n        /* \"#utility.yul\":5517:5535   */\n      add\n        /* \"#utility.yul\":5509:5535   */\n      swap1\n      pop\n        /* \"#utility.yul\":5581:5590   */\n      dup2\n        /* \"#utility.yul\":5575:5579   */\n      dup2\n        /* \"#utility.yul\":5571:5591   */\n      sub\n        /* \"#utility.yul\":5567:5568   */\n      0x00\n        /* \"#utility.yul\":5556:5565   */\n      dup4\n        /* \"#utility.yul\":5552:5569   */\n      add\n        /* \"#utility.yul\":5545:5592   */\n      mstore\n        /* \"#utility.yul\":5609:5740   */\n      tag_198\n        /* \"#utility.yul\":5735:5739   */\n      dup2\n        /* \"#utility.yul\":5609:5740   */\n      tag_121\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":5601:5740   */\n      swap1\n      pop\n        /* \"#utility.yul\":5328:5747   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5753:5915   */\n    tag_122:\n        /* \"#utility.yul\":5893:5907   */\n      0x4e4654206e6f74206c6973740000000000000000000000000000000000000000\n        /* \"#utility.yul\":5889:5890   */\n      0x00\n        /* \"#utility.yul\":5881:5887   */\n      dup3\n        /* \"#utility.yul\":5877:5891   */\n      add\n        /* \"#utility.yul\":5870:5908   */\n      mstore\n        /* \"#utility.yul\":5753:5915   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5921:6287   */\n    tag_123:\n        /* \"#utility.yul\":6063:6066   */\n      0x00\n        /* \"#utility.yul\":6084:6151   */\n      tag_201\n        /* \"#utility.yul\":6148:6150   */\n      0x0c\n        /* \"#utility.yul\":6143:6146   */\n      dup4\n        /* \"#utility.yul\":6084:6151   */\n      tag_119\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":6077:6151   */\n      swap2\n      pop\n        /* \"#utility.yul\":6160:6253   */\n      tag_202\n        /* \"#utility.yul\":6249:6252   */\n      dup3\n        /* \"#utility.yul\":6160:6253   */\n      tag_122\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":6278:6280   */\n      0x20\n        /* \"#utility.yul\":6273:6276   */\n      dup3\n        /* \"#utility.yul\":6269:6281   */\n      add\n        /* \"#utility.yul\":6262:6281   */\n      swap1\n      pop\n        /* \"#utility.yul\":5921:6287   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6293:6712   */\n    tag_48:\n        /* \"#utility.yul\":6459:6463   */\n      0x00\n        /* \"#utility.yul\":6497:6499   */\n      0x20\n        /* \"#utility.yul\":6486:6495   */\n      dup3\n        /* \"#utility.yul\":6482:6500   */\n      add\n        /* \"#utility.yul\":6474:6500   */\n      swap1\n      pop\n        /* \"#utility.yul\":6546:6555   */\n      dup2\n        /* \"#utility.yul\":6540:6544   */\n      dup2\n        /* \"#utility.yul\":6536:6556   */\n      sub\n        /* \"#utility.yul\":6532:6533   */\n      0x00\n        /* \"#utility.yul\":6521:6530   */\n      dup4\n        /* \"#utility.yul\":6517:6534   */\n      add\n        /* \"#utility.yul\":6510:6557   */\n      mstore\n        /* \"#utility.yul\":6574:6705   */\n      tag_204\n        /* \"#utility.yul\":6700:6704   */\n      dup2\n        /* \"#utility.yul\":6574:6705   */\n      tag_123\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":6566:6705   */\n      swap1\n      pop\n        /* \"#utility.yul\":6293:6712   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6718:6861   */\n    tag_124:\n        /* \"#utility.yul\":6775:6780   */\n      0x00\n        /* \"#utility.yul\":6806:6812   */\n      dup2\n        /* \"#utility.yul\":6800:6813   */\n      mload\n        /* \"#utility.yul\":6791:6813   */\n      swap1\n      pop\n        /* \"#utility.yul\":6822:6855   */\n      tag_206\n        /* \"#utility.yul\":6849:6854   */\n      dup2\n        /* \"#utility.yul\":6822:6855   */\n      tag_104\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":6718:6861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6867:7218   */\n    tag_53:\n        /* \"#utility.yul\":6937:6943   */\n      0x00\n        /* \"#utility.yul\":6986:6988   */\n      0x20\n        /* \"#utility.yul\":6974:6983   */\n      dup3\n        /* \"#utility.yul\":6965:6972   */\n      dup5\n        /* \"#utility.yul\":6961:6984   */\n      sub\n        /* \"#utility.yul\":6957:6989   */\n      slt\n        /* \"#utility.yul\":6954:7073   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":6992:7071   */\n      tag_209\n      tag_101\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":6954:7073   */\n    tag_208:\n        /* \"#utility.yul\":7112:7113   */\n      0x00\n        /* \"#utility.yul\":7137:7201   */\n      tag_210\n        /* \"#utility.yul\":7193:7200   */\n      dup5\n        /* \"#utility.yul\":7184:7190   */\n      dup3\n        /* \"#utility.yul\":7173:7182   */\n      dup6\n        /* \"#utility.yul\":7169:7191   */\n      add\n        /* \"#utility.yul\":7137:7201   */\n      tag_124\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":7127:7201   */\n      swap2\n      pop\n        /* \"#utility.yul\":7083:7211   */\n      pop\n        /* \"#utility.yul\":6867:7218   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7224:7394   */\n    tag_125:\n        /* \"#utility.yul\":7364:7386   */\n      0x696e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":7360:7361   */\n      0x00\n        /* \"#utility.yul\":7352:7358   */\n      dup3\n        /* \"#utility.yul\":7348:7362   */\n      add\n        /* \"#utility.yul\":7341:7387   */\n      mstore\n        /* \"#utility.yul\":7224:7394   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7400:7766   */\n    tag_126:\n        /* \"#utility.yul\":7542:7545   */\n      0x00\n        /* \"#utility.yul\":7563:7630   */\n      tag_213\n        /* \"#utility.yul\":7627:7629   */\n      0x14\n        /* \"#utility.yul\":7622:7625   */\n      dup4\n        /* \"#utility.yul\":7563:7630   */\n      tag_119\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":7556:7630   */\n      swap2\n      pop\n        /* \"#utility.yul\":7639:7732   */\n      tag_214\n        /* \"#utility.yul\":7728:7731   */\n      dup3\n        /* \"#utility.yul\":7639:7732   */\n      tag_125\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":7757:7759   */\n      0x20\n        /* \"#utility.yul\":7752:7755   */\n      dup3\n        /* \"#utility.yul\":7748:7760   */\n      add\n        /* \"#utility.yul\":7741:7760   */\n      swap1\n      pop\n        /* \"#utility.yul\":7400:7766   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7772:8191   */\n    tag_56:\n        /* \"#utility.yul\":7938:7942   */\n      0x00\n        /* \"#utility.yul\":7976:7978   */\n      0x20\n        /* \"#utility.yul\":7965:7974   */\n      dup3\n        /* \"#utility.yul\":7961:7979   */\n      add\n        /* \"#utility.yul\":7953:7979   */\n      swap1\n      pop\n        /* \"#utility.yul\":8025:8034   */\n      dup2\n        /* \"#utility.yul\":8019:8023   */\n      dup2\n        /* \"#utility.yul\":8015:8035   */\n      sub\n        /* \"#utility.yul\":8011:8012   */\n      0x00\n        /* \"#utility.yul\":8000:8009   */\n      dup4\n        /* \"#utility.yul\":7996:8013   */\n      add\n        /* \"#utility.yul\":7989:8036   */\n      mstore\n        /* \"#utility.yul\":8053:8184   */\n      tag_216\n        /* \"#utility.yul\":8179:8183   */\n      dup2\n        /* \"#utility.yul\":8053:8184   */\n      tag_126\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":8045:8184   */\n      swap1\n      pop\n        /* \"#utility.yul\":7772:8191   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8197:8639   */\n    tag_60:\n        /* \"#utility.yul\":8346:8350   */\n      0x00\n        /* \"#utility.yul\":8384:8386   */\n      0x60\n        /* \"#utility.yul\":8373:8382   */\n      dup3\n        /* \"#utility.yul\":8369:8387   */\n      add\n        /* \"#utility.yul\":8361:8387   */\n      swap1\n      pop\n        /* \"#utility.yul\":8397:8468   */\n      tag_218\n        /* \"#utility.yul\":8465:8466   */\n      0x00\n        /* \"#utility.yul\":8454:8463   */\n      dup4\n        /* \"#utility.yul\":8450:8467   */\n      add\n        /* \"#utility.yul\":8441:8447   */\n      dup7\n        /* \"#utility.yul\":8397:8468   */\n      tag_108\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":8478:8550   */\n      tag_219\n        /* \"#utility.yul\":8546:8548   */\n      0x20\n        /* \"#utility.yul\":8535:8544   */\n      dup4\n        /* \"#utility.yul\":8531:8549   */\n      add\n        /* \"#utility.yul\":8522:8528   */\n      dup6\n        /* \"#utility.yul\":8478:8550   */\n      tag_108\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":8560:8632   */\n      tag_220\n        /* \"#utility.yul\":8628:8630   */\n      0x40\n        /* \"#utility.yul\":8617:8626   */\n      dup4\n        /* \"#utility.yul\":8613:8631   */\n      add\n        /* \"#utility.yul\":8604:8610   */\n      dup5\n        /* \"#utility.yul\":8560:8632   */\n      tag_116\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":8197:8639   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8645:8735   */\n    tag_127:\n        /* \"#utility.yul\":8679:8686   */\n      0x00\n        /* \"#utility.yul\":8722:8727   */\n      dup2\n        /* \"#utility.yul\":8715:8728   */\n      iszero\n        /* \"#utility.yul\":8708:8729   */\n      iszero\n        /* \"#utility.yul\":8697:8729   */\n      swap1\n      pop\n        /* \"#utility.yul\":8645:8735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8741:8857   */\n    tag_128:\n        /* \"#utility.yul\":8811:8832   */\n      tag_223\n        /* \"#utility.yul\":8826:8831   */\n      dup2\n        /* \"#utility.yul\":8811:8832   */\n      tag_127\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":8804:8809   */\n      dup2\n        /* \"#utility.yul\":8801:8833   */\n      eq\n        /* \"#utility.yul\":8791:8851   */\n      tag_224\n      jumpi\n        /* \"#utility.yul\":8847:8848   */\n      0x00\n        /* \"#utility.yul\":8844:8845   */\n      dup1\n        /* \"#utility.yul\":8837:8849   */\n      revert\n        /* \"#utility.yul\":8791:8851   */\n    tag_224:\n        /* \"#utility.yul\":8741:8857   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8863:9000   */\n    tag_129:\n        /* \"#utility.yul\":8917:8922   */\n      0x00\n        /* \"#utility.yul\":8948:8954   */\n      dup2\n        /* \"#utility.yul\":8942:8955   */\n      mload\n        /* \"#utility.yul\":8933:8955   */\n      swap1\n      pop\n        /* \"#utility.yul\":8964:8994   */\n      tag_226\n        /* \"#utility.yul\":8988:8993   */\n      dup2\n        /* \"#utility.yul\":8964:8994   */\n      tag_128\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":8863:9000   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9006:9351   */\n    tag_73:\n        /* \"#utility.yul\":9073:9079   */\n      0x00\n        /* \"#utility.yul\":9122:9124   */\n      0x20\n        /* \"#utility.yul\":9110:9119   */\n      dup3\n        /* \"#utility.yul\":9101:9108   */\n      dup5\n        /* \"#utility.yul\":9097:9120   */\n      sub\n        /* \"#utility.yul\":9093:9125   */\n      slt\n        /* \"#utility.yul\":9090:9209   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":9128:9207   */\n      tag_229\n      tag_101\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":9090:9209   */\n    tag_228:\n        /* \"#utility.yul\":9248:9249   */\n      0x00\n        /* \"#utility.yul\":9273:9334   */\n      tag_230\n        /* \"#utility.yul\":9326:9333   */\n      dup5\n        /* \"#utility.yul\":9317:9323   */\n      dup3\n        /* \"#utility.yul\":9306:9315   */\n      dup6\n        /* \"#utility.yul\":9302:9324   */\n      add\n        /* \"#utility.yul\":9273:9334   */\n      tag_129\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":9263:9334   */\n      swap2\n      pop\n        /* \"#utility.yul\":9219:9344   */\n      pop\n        /* \"#utility.yul\":9006:9351   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9357:9455   */\n    tag_130:\n        /* \"#utility.yul\":9408:9414   */\n      0x00\n        /* \"#utility.yul\":9442:9447   */\n      dup2\n        /* \"#utility.yul\":9436:9448   */\n      mload\n        /* \"#utility.yul\":9426:9448   */\n      swap1\n      pop\n        /* \"#utility.yul\":9357:9455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9461:9608   */\n    tag_131:\n        /* \"#utility.yul\":9562:9573   */\n      0x00\n        /* \"#utility.yul\":9599:9602   */\n      dup2\n        /* \"#utility.yul\":9584:9602   */\n      swap1\n      pop\n        /* \"#utility.yul\":9461:9608   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9614:9753   */\n    tag_132:\n        /* \"#utility.yul\":9703:9709   */\n      dup3\n        /* \"#utility.yul\":9698:9701   */\n      dup2\n        /* \"#utility.yul\":9693:9696   */\n      dup4\n        /* \"#utility.yul\":9687:9710   */\n      mcopy\n        /* \"#utility.yul\":9744:9745   */\n      0x00\n        /* \"#utility.yul\":9735:9741   */\n      dup4\n        /* \"#utility.yul\":9730:9733   */\n      dup4\n        /* \"#utility.yul\":9726:9742   */\n      add\n        /* \"#utility.yul\":9719:9746   */\n      mstore\n        /* \"#utility.yul\":9614:9753   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9759:10145   */\n    tag_133:\n        /* \"#utility.yul\":9863:9866   */\n      0x00\n        /* \"#utility.yul\":9891:9929   */\n      tag_235\n        /* \"#utility.yul\":9923:9928   */\n      dup3\n        /* \"#utility.yul\":9891:9929   */\n      tag_130\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":9945:10033   */\n      tag_236\n        /* \"#utility.yul\":10026:10032   */\n      dup2\n        /* \"#utility.yul\":10021:10024   */\n      dup6\n        /* \"#utility.yul\":9945:10033   */\n      tag_131\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":9938:10033   */\n      swap4\n      pop\n        /* \"#utility.yul\":10042:10107   */\n      tag_237\n        /* \"#utility.yul\":10100:10106   */\n      dup2\n        /* \"#utility.yul\":10095:10098   */\n      dup6\n        /* \"#utility.yul\":10088:10092   */\n      0x20\n        /* \"#utility.yul\":10081:10086   */\n      dup7\n        /* \"#utility.yul\":10077:10093   */\n      add\n        /* \"#utility.yul\":10042:10107   */\n      tag_132\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":10132:10138   */\n      dup1\n        /* \"#utility.yul\":10127:10130   */\n      dup5\n        /* \"#utility.yul\":10123:10139   */\n      add\n        /* \"#utility.yul\":10116:10139   */\n      swap2\n      pop\n        /* \"#utility.yul\":9867:10145   */\n      pop\n        /* \"#utility.yul\":9759:10145   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10151:10422   */\n    tag_83:\n        /* \"#utility.yul\":10281:10284   */\n      0x00\n        /* \"#utility.yul\":10303:10396   */\n      tag_239\n        /* \"#utility.yul\":10392:10395   */\n      dup3\n        /* \"#utility.yul\":10383:10389   */\n      dup5\n        /* \"#utility.yul\":10303:10396   */\n      tag_133\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":10296:10396   */\n      swap2\n      pop\n        /* \"#utility.yul\":10413:10416   */\n      dup2\n        /* \"#utility.yul\":10406:10416   */\n      swap1\n      pop\n        /* \"#utility.yul\":10151:10422   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122003793d856da8b2336c90e27b4ff98d4280da861a20acac37e8802369f884086d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3646": {
									"entryPoint": null,
									"id": 3646,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_ERC721URIStorage_$1842_fromMemory": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$246_fromMemory": {
									"entryPoint": 333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ERC721URIStorage_$1842t_contract$_IERC20_$246_fromMemory": {
									"entryPoint": 353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ERC721URIStorage_$1842": {
									"entryPoint": 235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$246": {
									"entryPoint": 294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ERC721URIStorage_$1842": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$246": {
									"entryPoint": 311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2109:20",
										"nodeType": "YulBlock",
										"src": "0:2109:20",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:20",
													"nodeType": "YulBlock",
													"src": "47:35:20",
													"statements": [
														{
															"nativeSrc": "57:19:20",
															"nodeType": "YulAssignment",
															"src": "57:19:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:20",
																		"nodeType": "YulLiteral",
																		"src": "73:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:20"
																},
																"nativeSrc": "67:9:20",
																"nodeType": "YulFunctionCall",
																"src": "67:9:20"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:20"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:20",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:20",
														"nodeType": "YulTypedName",
														"src": "40:6:20",
														"type": ""
													}
												],
												"src": "7:75:20"
											},
											{
												"body": {
													"nativeSrc": "177:28:20",
													"nodeType": "YulBlock",
													"src": "177:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:20",
																		"nodeType": "YulLiteral",
																		"src": "194:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:20",
																		"nodeType": "YulLiteral",
																		"src": "197:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:20"
																},
																"nativeSrc": "187:12:20",
																"nodeType": "YulFunctionCall",
																"src": "187:12:20"
															},
															"nativeSrc": "187:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:20"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:20"
											},
											{
												"body": {
													"nativeSrc": "300:28:20",
													"nodeType": "YulBlock",
													"src": "300:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:20",
																		"nodeType": "YulLiteral",
																		"src": "317:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:20",
																		"nodeType": "YulLiteral",
																		"src": "320:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:20"
																},
																"nativeSrc": "310:12:20",
																"nodeType": "YulFunctionCall",
																"src": "310:12:20"
															},
															"nativeSrc": "310:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:20"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:20"
											},
											{
												"body": {
													"nativeSrc": "379:81:20",
													"nodeType": "YulBlock",
													"src": "379:81:20",
													"statements": [
														{
															"nativeSrc": "389:65:20",
															"nodeType": "YulAssignment",
															"src": "389:65:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:20",
																		"nodeType": "YulLiteral",
																		"src": "411:42:20",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:20"
																},
																"nativeSrc": "400:54:20",
																"nodeType": "YulFunctionCall",
																"src": "400:54:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:20",
														"nodeType": "YulTypedName",
														"src": "361:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:20",
														"nodeType": "YulTypedName",
														"src": "371:7:20",
														"type": ""
													}
												],
												"src": "334:126:20"
											},
											{
												"body": {
													"nativeSrc": "511:51:20",
													"nodeType": "YulBlock",
													"src": "511:51:20",
													"statements": [
														{
															"nativeSrc": "521:35:20",
															"nodeType": "YulAssignment",
															"src": "521:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:20"
																},
																"nativeSrc": "532:24:20",
																"nodeType": "YulFunctionCall",
																"src": "532:24:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:20",
														"nodeType": "YulTypedName",
														"src": "493:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:20",
														"nodeType": "YulTypedName",
														"src": "503:7:20",
														"type": ""
													}
												],
												"src": "466:96:20"
											},
											{
												"body": {
													"nativeSrc": "638:51:20",
													"nodeType": "YulBlock",
													"src": "638:51:20",
													"statements": [
														{
															"nativeSrc": "648:35:20",
															"nodeType": "YulAssignment",
															"src": "648:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "677:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "677:5:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "659:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "659:17:20"
																},
																"nativeSrc": "659:24:20",
																"nodeType": "YulFunctionCall",
																"src": "659:24:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "648:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ERC721URIStorage_$1842",
												"nativeSrc": "568:121:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "620:5:20",
														"nodeType": "YulTypedName",
														"src": "620:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "630:7:20",
														"nodeType": "YulTypedName",
														"src": "630:7:20",
														"type": ""
													}
												],
												"src": "568:121:20"
											},
											{
												"body": {
													"nativeSrc": "763:104:20",
													"nodeType": "YulBlock",
													"src": "763:104:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "845:16:20",
																"nodeType": "YulBlock",
																"src": "845:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "854:1:20",
																					"nodeType": "YulLiteral",
																					"src": "854:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "857:1:20",
																					"nodeType": "YulLiteral",
																					"src": "857:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "847:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "847:6:20"
																			},
																			"nativeSrc": "847:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "847:12:20"
																		},
																		"nativeSrc": "847:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "847:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "786:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "786:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "836:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "836:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ERC721URIStorage_$1842",
																					"nativeSrc": "793:42:20",
																					"nodeType": "YulIdentifier",
																					"src": "793:42:20"
																				},
																				"nativeSrc": "793:49:20",
																				"nodeType": "YulFunctionCall",
																				"src": "793:49:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "783:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "783:2:20"
																		},
																		"nativeSrc": "783:60:20",
																		"nodeType": "YulFunctionCall",
																		"src": "783:60:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "776:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "776:6:20"
																},
																"nativeSrc": "776:68:20",
																"nodeType": "YulFunctionCall",
																"src": "776:68:20"
															},
															"nativeSrc": "773:88:20",
															"nodeType": "YulIf",
															"src": "773:88:20"
														}
													]
												},
												"name": "validator_revert_t_contract$_ERC721URIStorage_$1842",
												"nativeSrc": "695:172:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "756:5:20",
														"nodeType": "YulTypedName",
														"src": "756:5:20",
														"type": ""
													}
												],
												"src": "695:172:20"
											},
											{
												"body": {
													"nativeSrc": "961:105:20",
													"nodeType": "YulBlock",
													"src": "961:105:20",
													"statements": [
														{
															"nativeSrc": "971:22:20",
															"nodeType": "YulAssignment",
															"src": "971:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "986:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "986:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "980:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "980:5:20"
																},
																"nativeSrc": "980:13:20",
																"nodeType": "YulFunctionCall",
																"src": "980:13:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "971:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "971:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1054:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1054:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ERC721URIStorage_$1842",
																	"nativeSrc": "1002:51:20",
																	"nodeType": "YulIdentifier",
																	"src": "1002:51:20"
																},
																"nativeSrc": "1002:58:20",
																"nodeType": "YulFunctionCall",
																"src": "1002:58:20"
															},
															"nativeSrc": "1002:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "1002:58:20"
														}
													]
												},
												"name": "abi_decode_t_contract$_ERC721URIStorage_$1842_fromMemory",
												"nativeSrc": "873:193:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "939:6:20",
														"nodeType": "YulTypedName",
														"src": "939:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "947:3:20",
														"nodeType": "YulTypedName",
														"src": "947:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "955:5:20",
														"nodeType": "YulTypedName",
														"src": "955:5:20",
														"type": ""
													}
												],
												"src": "873:193:20"
											},
											{
												"body": {
													"nativeSrc": "1131:51:20",
													"nodeType": "YulBlock",
													"src": "1131:51:20",
													"statements": [
														{
															"nativeSrc": "1141:35:20",
															"nodeType": "YulAssignment",
															"src": "1141:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1170:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1170:5:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "1152:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "1152:17:20"
																},
																"nativeSrc": "1152:24:20",
																"nodeType": "YulFunctionCall",
																"src": "1152:24:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1141:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "1141:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$246",
												"nativeSrc": "1072:110:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1113:5:20",
														"nodeType": "YulTypedName",
														"src": "1113:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1123:7:20",
														"nodeType": "YulTypedName",
														"src": "1123:7:20",
														"type": ""
													}
												],
												"src": "1072:110:20"
											},
											{
												"body": {
													"nativeSrc": "1245:93:20",
													"nodeType": "YulBlock",
													"src": "1245:93:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "1316:16:20",
																"nodeType": "YulBlock",
																"src": "1316:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1325:1:20",
																					"nodeType": "YulLiteral",
																					"src": "1325:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1328:1:20",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1318:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "1318:6:20"
																			},
																			"nativeSrc": "1318:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "1318:12:20"
																		},
																		"nativeSrc": "1318:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "1318:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1268:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "1268:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1307:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "1307:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$246",
																					"nativeSrc": "1275:31:20",
																					"nodeType": "YulIdentifier",
																					"src": "1275:31:20"
																				},
																				"nativeSrc": "1275:38:20",
																				"nodeType": "YulFunctionCall",
																				"src": "1275:38:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1265:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "1265:2:20"
																		},
																		"nativeSrc": "1265:49:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1265:49:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1258:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:20"
																},
																"nativeSrc": "1258:57:20",
																"nodeType": "YulFunctionCall",
																"src": "1258:57:20"
															},
															"nativeSrc": "1255:77:20",
															"nodeType": "YulIf",
															"src": "1255:77:20"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$246",
												"nativeSrc": "1188:150:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1238:5:20",
														"nodeType": "YulTypedName",
														"src": "1238:5:20",
														"type": ""
													}
												],
												"src": "1188:150:20"
											},
											{
												"body": {
													"nativeSrc": "1421:94:20",
													"nodeType": "YulBlock",
													"src": "1421:94:20",
													"statements": [
														{
															"nativeSrc": "1431:22:20",
															"nodeType": "YulAssignment",
															"src": "1431:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1446:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "1446:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1440:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:20"
																},
																"nativeSrc": "1440:13:20",
																"nodeType": "YulFunctionCall",
																"src": "1440:13:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1431:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "1431:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1503:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1503:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$246",
																	"nativeSrc": "1462:40:20",
																	"nodeType": "YulIdentifier",
																	"src": "1462:40:20"
																},
																"nativeSrc": "1462:47:20",
																"nodeType": "YulFunctionCall",
																"src": "1462:47:20"
															},
															"nativeSrc": "1462:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "1462:47:20"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$246_fromMemory",
												"nativeSrc": "1344:171:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1399:6:20",
														"nodeType": "YulTypedName",
														"src": "1399:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1407:3:20",
														"nodeType": "YulTypedName",
														"src": "1407:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1415:5:20",
														"nodeType": "YulTypedName",
														"src": "1415:5:20",
														"type": ""
													}
												],
												"src": "1344:171:20"
											},
											{
												"body": {
													"nativeSrc": "1654:452:20",
													"nodeType": "YulBlock",
													"src": "1654:452:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "1700:83:20",
																"nodeType": "YulBlock",
																"src": "1700:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1702:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "1702:77:20"
																			},
																			"nativeSrc": "1702:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "1702:79:20"
																		},
																		"nativeSrc": "1702:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "1702:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1675:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "1675:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1684:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1684:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1671:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1671:3:20"
																		},
																		"nativeSrc": "1671:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1671:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1696:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1696:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1667:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1667:3:20"
																},
																"nativeSrc": "1667:32:20",
																"nodeType": "YulFunctionCall",
																"src": "1667:32:20"
															},
															"nativeSrc": "1664:119:20",
															"nodeType": "YulIf",
															"src": "1664:119:20"
														},
														{
															"nativeSrc": "1793:153:20",
															"nodeType": "YulBlock",
															"src": "1793:153:20",
															"statements": [
																{
																	"nativeSrc": "1808:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1808:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1822:1:20",
																		"nodeType": "YulLiteral",
																		"src": "1822:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1812:6:20",
																			"nodeType": "YulTypedName",
																			"src": "1812:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1837:99:20",
																	"nodeType": "YulAssignment",
																	"src": "1837:99:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1908:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "1908:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1919:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "1919:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1904:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "1904:3:20"
																				},
																				"nativeSrc": "1904:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "1904:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1928:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "1928:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ERC721URIStorage_$1842_fromMemory",
																			"nativeSrc": "1847:56:20",
																			"nodeType": "YulIdentifier",
																			"src": "1847:56:20"
																		},
																		"nativeSrc": "1847:89:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1847:89:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1837:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "1837:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1956:143:20",
															"nodeType": "YulBlock",
															"src": "1956:143:20",
															"statements": [
																{
																	"nativeSrc": "1971:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1971:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1985:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1985:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1975:6:20",
																			"nodeType": "YulTypedName",
																			"src": "1975:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2001:88:20",
																	"nodeType": "YulAssignment",
																	"src": "2001:88:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2061:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "2061:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2072:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "2072:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2057:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "2057:3:20"
																				},
																				"nativeSrc": "2057:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2057:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2081:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "2081:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$246_fromMemory",
																			"nativeSrc": "2011:45:20",
																			"nodeType": "YulIdentifier",
																			"src": "2011:45:20"
																		},
																		"nativeSrc": "2011:78:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2011:78:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2001:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "2001:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ERC721URIStorage_$1842t_contract$_IERC20_$246_fromMemory",
												"nativeSrc": "1521:585:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1616:9:20",
														"nodeType": "YulTypedName",
														"src": "1616:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1627:7:20",
														"nodeType": "YulTypedName",
														"src": "1627:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1639:6:20",
														"nodeType": "YulTypedName",
														"src": "1639:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1647:6:20",
														"nodeType": "YulTypedName",
														"src": "1647:6:20",
														"type": ""
													}
												],
												"src": "1521:585:20"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ERC721URIStorage_$1842(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC721URIStorage_$1842(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC721URIStorage_$1842(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC721URIStorage_$1842_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC721URIStorage_$1842(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$246(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$246(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$246(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$246_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$246(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC721URIStorage_$1842t_contract$_IERC20_$246_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC721URIStorage_$1842_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$246_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 20,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610f5f380380610f5f83398181016040528101906100319190610161565b815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061019f565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100e4826100bb565b9050919050565b5f6100f5826100da565b9050919050565b610105816100eb565b811461010f575f80fd5b50565b5f81519050610120816100fc565b92915050565b5f610130826100da565b9050919050565b61014081610126565b811461014a575f80fd5b50565b5f8151905061015b81610137565b92915050565b5f8060408385031215610177576101766100b7565b5b5f61018485828601610112565b92505060206101958582860161014d565b9150509250929050565b610db3806101ac5f395ff3fe608060405234801561000f575f80fd5b5060043610610060575f3560e01c80631caaa4871461006457806350fd73671461009457806351ed8288146100b0578063785e9e86146100cc578063bca6ce64146100ea578063d4ddce8a14610108575b5f80fd5b61007e6004803603810190610079919061090e565b610138565b60405161008b9190610978565b60405180910390f35b6100ae60048036038101906100a99190610991565b610168565b005b6100ca60048036038101906100c5919061090e565b6102d5565b005b6100d46105b4565b6040516100e19190610a2a565b60405180910390f35b6100f26105d9565b6040516100ff9190610a63565b60405180910390f35b610122600480360381019061011d919061090e565b6105fc565b60405161012f9190610a8b565b60405180910390f35b6003602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016101d79190610a8b565b602060405180830381865afa1580156101f2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102169190610ace565b73ffffffffffffffffffffffffffffffffffffffff161461026c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026390610b53565b60405180910390fd5b8060025f8481526020019081526020015f20819055503360035f8481526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b5f60025f8381526020019081526020015f205490505f60035f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8211801561035957505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b610398576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038f90610bbb565b60405180910390fd5b8160015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103f39190610978565b602060405180830381865afa15801561040e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104329190610bed565b1015610473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046a90610c62565b60405180910390fd5b6104c133828460015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610611909392919063ffffffff16565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e8233866040518463ffffffff1660e01b815260040161051d93929190610c80565b5f604051808303815f87803b158015610534575f80fd5b505af1158015610546573d5f803e3d5ffd5b505050505f60025f8581526020019081526020015f20819055505f60035f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052805f5260405f205f915090505481565b61068d848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161064693929190610c80565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610693565b50505050565b5f6106bd828473ffffffffffffffffffffffffffffffffffffffff1661072890919063ffffffff16565b90505f8151141580156106e15750808060200190518101906106df9190610cea565b155b1561072357826040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161071a9190610978565b60405180910390fd5b505050565b606061073583835f61073d565b905092915050565b60608147101561078457306040517fcd78605900000000000000000000000000000000000000000000000000000000815260040161077b9190610978565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516107ac9190610d67565b5f6040518083038185875af1925050503d805f81146107e6576040519150601f19603f3d011682016040523d82523d5f602084013e6107eb565b606091505b50915091506107fb868383610806565b925050509392505050565b60608261081b5761081682610893565b61088b565b5f825114801561084157505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561088357836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161087a9190610978565b60405180910390fd5b81905061088c565b5b9392505050565b5f815111156108a55780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f819050919050565b6108ed816108db565b81146108f7575f80fd5b50565b5f81359050610908816108e4565b92915050565b5f60208284031215610923576109226108d7565b5b5f610930848285016108fa565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61096282610939565b9050919050565b61097281610958565b82525050565b5f60208201905061098b5f830184610969565b92915050565b5f80604083850312156109a7576109a66108d7565b5b5f6109b4858286016108fa565b92505060206109c5858286016108fa565b9150509250929050565b5f819050919050565b5f6109f26109ed6109e884610939565b6109cf565b610939565b9050919050565b5f610a03826109d8565b9050919050565b5f610a14826109f9565b9050919050565b610a2481610a0a565b82525050565b5f602082019050610a3d5f830184610a1b565b92915050565b5f610a4d826109f9565b9050919050565b610a5d81610a43565b82525050565b5f602082019050610a765f830184610a54565b92915050565b610a85816108db565b82525050565b5f602082019050610a9e5f830184610a7c565b92915050565b610aad81610958565b8114610ab7575f80fd5b50565b5f81519050610ac881610aa4565b92915050565b5f60208284031215610ae357610ae26108d7565b5b5f610af084828501610aba565b91505092915050565b5f82825260208201905092915050565b7f6e6f74204e4654206f776e6572000000000000000000000000000000000000005f82015250565b5f610b3d600d83610af9565b9150610b4882610b09565b602082019050919050565b5f6020820190508181035f830152610b6a81610b31565b9050919050565b7f4e4654206e6f74206c69737400000000000000000000000000000000000000005f82015250565b5f610ba5600c83610af9565b9150610bb082610b71565b602082019050919050565b5f6020820190508181035f830152610bd281610b99565b9050919050565b5f81519050610be7816108e4565b92915050565b5f60208284031215610c0257610c016108d7565b5b5f610c0f84828501610bd9565b91505092915050565b7f696e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f610c4c601483610af9565b9150610c5782610c18565b602082019050919050565b5f6020820190508181035f830152610c7981610c40565b9050919050565b5f606082019050610c935f830186610969565b610ca06020830185610969565b610cad6040830184610a7c565b949350505050565b5f8115159050919050565b610cc981610cb5565b8114610cd3575f80fd5b50565b5f81519050610ce481610cc0565b92915050565b5f60208284031215610cff57610cfe6108d7565b5b5f610d0c84828501610cd6565b91505092915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f610d4182610d15565b610d4b8185610d1f565b9350610d5b818560208601610d29565b80840191505092915050565b5f610d728284610d37565b91508190509291505056fea264697066735822122003793d856da8b2336c90e27b4ff98d4280da861a20acac37e8802369f884086d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xF5F CODESIZE SUB DUP1 PUSH2 0xF5F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x161 JUMP JUMPDEST DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x19F JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE4 DUP3 PUSH2 0xBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF5 DUP3 PUSH2 0xDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105 DUP2 PUSH2 0xEB JUMP JUMPDEST DUP2 EQ PUSH2 0x10F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x120 DUP2 PUSH2 0xFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x130 DUP3 PUSH2 0xDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x140 DUP2 PUSH2 0x126 JUMP JUMPDEST DUP2 EQ PUSH2 0x14A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x15B DUP2 PUSH2 0x137 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x177 JUMPI PUSH2 0x176 PUSH2 0xB7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x184 DUP6 DUP3 DUP7 ADD PUSH2 0x112 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x195 DUP6 DUP3 DUP7 ADD PUSH2 0x14D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB3 DUP1 PUSH2 0x1AC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1CAAA487 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x50FD7367 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x51ED8288 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0x785E9E86 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0xBCA6CE64 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0xD4DDCE8A EQ PUSH2 0x108 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x138 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x991 JUMP JUMPDEST PUSH2 0x168 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x2D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD4 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0xA63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xA8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0xA8B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0xACE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x26C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x263 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x359 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x398 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38F SWAP1 PUSH2 0xBBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x40E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x432 SWAP2 SWAP1 PUSH2 0xBED JUMP JUMPDEST LT ISZERO PUSH2 0x473 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46A SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4C1 CALLER DUP3 DUP5 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x611 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E DUP3 CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC80 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x534 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x546 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x68D DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x646 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x693 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6BD DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x728 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x6E1 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6DF SWAP2 SWAP1 PUSH2 0xCEA JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x723 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x735 DUP4 DUP4 PUSH0 PUSH2 0x73D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x784 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x7AC SWAP2 SWAP1 PUSH2 0xD67 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7E6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x7FB DUP7 DUP4 DUP4 PUSH2 0x806 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x81B JUMPI PUSH2 0x816 DUP3 PUSH2 0x893 JUMP JUMPDEST PUSH2 0x88B JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x841 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x883 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87A SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x88C JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x8A5 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8ED DUP2 PUSH2 0x8DB JUMP JUMPDEST DUP2 EQ PUSH2 0x8F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x908 DUP2 PUSH2 0x8E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x923 JUMPI PUSH2 0x922 PUSH2 0x8D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x930 DUP5 DUP3 DUP6 ADD PUSH2 0x8FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x962 DUP3 PUSH2 0x939 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x972 DUP2 PUSH2 0x958 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x98B PUSH0 DUP4 ADD DUP5 PUSH2 0x969 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9A7 JUMPI PUSH2 0x9A6 PUSH2 0x8D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9B4 DUP6 DUP3 DUP7 ADD PUSH2 0x8FA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9C5 DUP6 DUP3 DUP7 ADD PUSH2 0x8FA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9F2 PUSH2 0x9ED PUSH2 0x9E8 DUP5 PUSH2 0x939 JUMP JUMPDEST PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x939 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA03 DUP3 PUSH2 0x9D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA14 DUP3 PUSH2 0x9F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA24 DUP2 PUSH2 0xA0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA3D PUSH0 DUP4 ADD DUP5 PUSH2 0xA1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA4D DUP3 PUSH2 0x9F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA5D DUP2 PUSH2 0xA43 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA76 PUSH0 DUP4 ADD DUP5 PUSH2 0xA54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA85 DUP2 PUSH2 0x8DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA9E PUSH0 DUP4 ADD DUP5 PUSH2 0xA7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAAD DUP2 PUSH2 0x958 JUMP JUMPDEST DUP2 EQ PUSH2 0xAB7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xAC8 DUP2 PUSH2 0xAA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAE3 JUMPI PUSH2 0xAE2 PUSH2 0x8D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAF0 DUP5 DUP3 DUP6 ADD PUSH2 0xABA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F74204E4654206F776E657200000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB3D PUSH1 0xD DUP4 PUSH2 0xAF9 JUMP JUMPDEST SWAP2 POP PUSH2 0xB48 DUP3 PUSH2 0xB09 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB6A DUP2 PUSH2 0xB31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E4654206E6F74206C6973740000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBA5 PUSH1 0xC DUP4 PUSH2 0xAF9 JUMP JUMPDEST SWAP2 POP PUSH2 0xBB0 DUP3 PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBD2 DUP2 PUSH2 0xB99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBE7 DUP2 PUSH2 0x8E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC02 JUMPI PUSH2 0xC01 PUSH2 0x8D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC0F DUP5 DUP3 DUP6 ADD PUSH2 0xBD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC4C PUSH1 0x14 DUP4 PUSH2 0xAF9 JUMP JUMPDEST SWAP2 POP PUSH2 0xC57 DUP3 PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC79 DUP2 PUSH2 0xC40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC93 PUSH0 DUP4 ADD DUP7 PUSH2 0x969 JUMP JUMPDEST PUSH2 0xCA0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x969 JUMP JUMPDEST PUSH2 0xCAD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA7C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC9 DUP2 PUSH2 0xCB5 JUMP JUMPDEST DUP2 EQ PUSH2 0xCD3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCE4 DUP2 PUSH2 0xCC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFF JUMPI PUSH2 0xCFE PUSH2 0x8D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD0C DUP5 DUP3 DUP6 ADD PUSH2 0xCD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD41 DUP3 PUSH2 0xD15 JUMP JUMPDEST PUSH2 0xD4B DUP2 DUP6 PUSH2 0xD1F JUMP JUMPDEST SWAP4 POP PUSH2 0xD5B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD29 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD72 DUP3 DUP5 PUSH2 0xD37 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB PUSH26 0x3D856DA8B2336C90E27B4FF98D4280DA861A20ACAC37E8802369 0xF8 DUP5 ADDMOD PUSH14 0x64736F6C634300081A0033000000 ",
							"sourceMap": "299:1105:19:-:0;;;534:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;607:7;598:6;;:16;;;;;;;;;;;;;;;;;;633:6;625:5;;:14;;;;;;;;;;;;;;;;;;534:113;;299:1105;;88:117:20;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:121::-;630:7;659:24;677:5;659:24;:::i;:::-;648:35;;568:121;;;:::o;695:172::-;793:49;836:5;793:49;:::i;:::-;786:5;783:60;773:88;;857:1;854;847:12;773:88;695:172;:::o;873:193::-;955:5;986:6;980:13;971:22;;1002:58;1054:5;1002:58;:::i;:::-;873:193;;;;:::o;1072:110::-;1123:7;1152:24;1170:5;1152:24;:::i;:::-;1141:35;;1072:110;;;:::o;1188:150::-;1275:38;1307:5;1275:38;:::i;:::-;1268:5;1265:49;1255:77;;1328:1;1325;1318:12;1255:77;1188:150;:::o;1344:171::-;1415:5;1446:6;1440:13;1431:22;;1462:47;1503:5;1462:47;:::i;:::-;1344:171;;;;:::o;1521:585::-;1639:6;1647;1696:2;1684:9;1675:7;1671:23;1667:32;1664:119;;;1702:79;;:::i;:::-;1664:119;1822:1;1847:89;1928:7;1919:6;1908:9;1904:22;1847:89;:::i;:::-;1837:99;;1793:153;1985:2;2011:78;2081:7;2072:6;2061:9;2057:22;2011:78;:::i;:::-;2001:88;;1956:143;1521:585;;;;;:::o;299:1105:19:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_522": {
									"entryPoint": 1683,
									"id": 522,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_2122": {
									"entryPoint": 2195,
									"id": 2122,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyNFT_3754": {
									"entryPoint": 725,
									"id": 3754,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@erc20_3620": {
									"entryPoint": 1460,
									"id": 3620,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc721_3617": {
									"entryPoint": 1497,
									"id": 3617,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_1990": {
									"entryPoint": 1853,
									"id": 1990,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_1944": {
									"entryPoint": 1832,
									"id": 1944,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@list_3678": {
									"entryPoint": 360,
									"id": 3678,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_359": {
									"entryPoint": 1553,
									"id": 359,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@tokenOwner_3628": {
									"entryPoint": 312,
									"id": 3628,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPrice_3624": {
									"entryPoint": 1532,
									"id": 3624,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2082": {
									"entryPoint": 2054,
									"id": 2082,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_ERC721URIStorage_$1842_to_t_address_fromStack": {
									"entryPoint": 2644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$246_to_t_address_fromStack": {
									"entryPoint": 2587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_282894232b05b6ad88298cd6107ea4287558953550cfb6dc11d4aa836e0ba6cb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ad2136552e70ec86c474894eb94b189d187b885f7b94c254663fa6f0c2245fde_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3200,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC721URIStorage_$1842__to_t_address__fromStack_reversed": {
									"entryPoint": 2659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$246__to_t_address__fromStack_reversed": {
									"entryPoint": 2602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_282894232b05b6ad88298cd6107ea4287558953550cfb6dc11d4aa836e0ba6cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad2136552e70ec86c474894eb94b189d187b885f7b94c254663fa6f0c2245fde__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ERC721URIStorage_$1842_to_t_address": {
									"entryPoint": 2627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$246_to_t_address": {
									"entryPoint": 2570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3369,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2263,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_282894232b05b6ad88298cd6107ea4287558953550cfb6dc11d4aa836e0ba6cb": {
									"entryPoint": 2929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee": {
									"entryPoint": 3096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad2136552e70ec86c474894eb94b189d187b885f7b94c254663fa6f0c2245fde": {
									"entryPoint": 2825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10425:20",
										"nodeType": "YulBlock",
										"src": "0:10425:20",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:20",
													"nodeType": "YulBlock",
													"src": "47:35:20",
													"statements": [
														{
															"nativeSrc": "57:19:20",
															"nodeType": "YulAssignment",
															"src": "57:19:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:20",
																		"nodeType": "YulLiteral",
																		"src": "73:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:20"
																},
																"nativeSrc": "67:9:20",
																"nodeType": "YulFunctionCall",
																"src": "67:9:20"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:20"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:20",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:20",
														"nodeType": "YulTypedName",
														"src": "40:6:20",
														"type": ""
													}
												],
												"src": "7:75:20"
											},
											{
												"body": {
													"nativeSrc": "177:28:20",
													"nodeType": "YulBlock",
													"src": "177:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:20",
																		"nodeType": "YulLiteral",
																		"src": "194:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:20",
																		"nodeType": "YulLiteral",
																		"src": "197:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:20"
																},
																"nativeSrc": "187:12:20",
																"nodeType": "YulFunctionCall",
																"src": "187:12:20"
															},
															"nativeSrc": "187:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:20"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:20"
											},
											{
												"body": {
													"nativeSrc": "300:28:20",
													"nodeType": "YulBlock",
													"src": "300:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:20",
																		"nodeType": "YulLiteral",
																		"src": "317:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:20",
																		"nodeType": "YulLiteral",
																		"src": "320:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:20"
																},
																"nativeSrc": "310:12:20",
																"nodeType": "YulFunctionCall",
																"src": "310:12:20"
															},
															"nativeSrc": "310:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:20"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:20"
											},
											{
												"body": {
													"nativeSrc": "379:32:20",
													"nodeType": "YulBlock",
													"src": "379:32:20",
													"statements": [
														{
															"nativeSrc": "389:16:20",
															"nodeType": "YulAssignment",
															"src": "389:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:20",
																"nodeType": "YulIdentifier",
																"src": "400:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:20",
														"nodeType": "YulTypedName",
														"src": "361:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:20",
														"nodeType": "YulTypedName",
														"src": "371:7:20",
														"type": ""
													}
												],
												"src": "334:77:20"
											},
											{
												"body": {
													"nativeSrc": "460:79:20",
													"nodeType": "YulBlock",
													"src": "460:79:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:20",
																"nodeType": "YulBlock",
																"src": "517:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:20",
																					"nodeType": "YulLiteral",
																					"src": "526:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:20",
																					"nodeType": "YulLiteral",
																					"src": "529:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:20"
																			},
																			"nativeSrc": "519:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:20"
																		},
																		"nativeSrc": "519:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:20"
																				},
																				"nativeSrc": "490:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:20"
																		},
																		"nativeSrc": "480:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:20"
																},
																"nativeSrc": "473:43:20",
																"nodeType": "YulFunctionCall",
																"src": "473:43:20"
															},
															"nativeSrc": "470:63:20",
															"nodeType": "YulIf",
															"src": "470:63:20"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:20",
														"nodeType": "YulTypedName",
														"src": "453:5:20",
														"type": ""
													}
												],
												"src": "417:122:20"
											},
											{
												"body": {
													"nativeSrc": "597:87:20",
													"nodeType": "YulBlock",
													"src": "597:87:20",
													"statements": [
														{
															"nativeSrc": "607:29:20",
															"nodeType": "YulAssignment",
															"src": "607:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:20"
																},
																"nativeSrc": "616:20:20",
																"nodeType": "YulFunctionCall",
																"src": "616:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:20"
																},
																"nativeSrc": "645:33:20",
																"nodeType": "YulFunctionCall",
																"src": "645:33:20"
															},
															"nativeSrc": "645:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:20"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:20",
														"nodeType": "YulTypedName",
														"src": "575:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:20",
														"nodeType": "YulTypedName",
														"src": "583:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:20",
														"nodeType": "YulTypedName",
														"src": "591:5:20",
														"type": ""
													}
												],
												"src": "545:139:20"
											},
											{
												"body": {
													"nativeSrc": "756:263:20",
													"nodeType": "YulBlock",
													"src": "756:263:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:20",
																"nodeType": "YulBlock",
																"src": "802:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:20"
																			},
																			"nativeSrc": "804:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:20"
																		},
																		"nativeSrc": "804:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:20"
																		},
																		"nativeSrc": "773:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:20",
																		"nodeType": "YulLiteral",
																		"src": "798:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:20"
																},
																"nativeSrc": "769:32:20",
																"nodeType": "YulFunctionCall",
																"src": "769:32:20"
															},
															"nativeSrc": "766:119:20",
															"nodeType": "YulIf",
															"src": "766:119:20"
														},
														{
															"nativeSrc": "895:117:20",
															"nodeType": "YulBlock",
															"src": "895:117:20",
															"statements": [
																{
																	"nativeSrc": "910:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:20",
																		"nodeType": "YulLiteral",
																		"src": "924:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:20",
																			"nodeType": "YulTypedName",
																			"src": "914:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:20",
																	"nodeType": "YulAssignment",
																	"src": "939:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:20"
																				},
																				"nativeSrc": "970:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:20"
																		},
																		"nativeSrc": "949:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:20",
														"nodeType": "YulTypedName",
														"src": "726:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:20",
														"nodeType": "YulTypedName",
														"src": "737:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:20",
														"nodeType": "YulTypedName",
														"src": "749:6:20",
														"type": ""
													}
												],
												"src": "690:329:20"
											},
											{
												"body": {
													"nativeSrc": "1070:81:20",
													"nodeType": "YulBlock",
													"src": "1070:81:20",
													"statements": [
														{
															"nativeSrc": "1080:65:20",
															"nodeType": "YulAssignment",
															"src": "1080:65:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1095:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:42:20",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:20",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:20"
																},
																"nativeSrc": "1091:54:20",
																"nodeType": "YulFunctionCall",
																"src": "1091:54:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1025:126:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:20",
														"nodeType": "YulTypedName",
														"src": "1052:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:20",
														"nodeType": "YulTypedName",
														"src": "1062:7:20",
														"type": ""
													}
												],
												"src": "1025:126:20"
											},
											{
												"body": {
													"nativeSrc": "1202:51:20",
													"nodeType": "YulBlock",
													"src": "1202:51:20",
													"statements": [
														{
															"nativeSrc": "1212:35:20",
															"nodeType": "YulAssignment",
															"src": "1212:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1241:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1223:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:20"
																},
																"nativeSrc": "1223:24:20",
																"nodeType": "YulFunctionCall",
																"src": "1223:24:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1212:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1157:96:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1184:5:20",
														"nodeType": "YulTypedName",
														"src": "1184:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1194:7:20",
														"nodeType": "YulTypedName",
														"src": "1194:7:20",
														"type": ""
													}
												],
												"src": "1157:96:20"
											},
											{
												"body": {
													"nativeSrc": "1324:53:20",
													"nodeType": "YulBlock",
													"src": "1324:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1346:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:20"
																		},
																		"nativeSrc": "1346:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:20"
																},
																"nativeSrc": "1334:37:20",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:20"
															},
															"nativeSrc": "1334:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:20"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1259:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:20",
														"nodeType": "YulTypedName",
														"src": "1312:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:20",
														"nodeType": "YulTypedName",
														"src": "1319:3:20",
														"type": ""
													}
												],
												"src": "1259:118:20"
											},
											{
												"body": {
													"nativeSrc": "1481:124:20",
													"nodeType": "YulBlock",
													"src": "1481:124:20",
													"statements": [
														{
															"nativeSrc": "1491:26:20",
															"nodeType": "YulAssignment",
															"src": "1491:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:20"
																},
																"nativeSrc": "1499:18:20",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:20",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:20"
																		},
																		"nativeSrc": "1580:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1527:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:20"
																},
																"nativeSrc": "1527:71:20",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:20"
															},
															"nativeSrc": "1527:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1383:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:20",
														"nodeType": "YulTypedName",
														"src": "1453:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:20",
														"nodeType": "YulTypedName",
														"src": "1465:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:20",
														"nodeType": "YulTypedName",
														"src": "1476:4:20",
														"type": ""
													}
												],
												"src": "1383:222:20"
											},
											{
												"body": {
													"nativeSrc": "1694:391:20",
													"nodeType": "YulBlock",
													"src": "1694:391:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "1740:83:20",
																"nodeType": "YulBlock",
																"src": "1740:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1742:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "1742:77:20"
																			},
																			"nativeSrc": "1742:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "1742:79:20"
																		},
																		"nativeSrc": "1742:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "1742:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1715:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "1715:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1724:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1724:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1711:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:20"
																		},
																		"nativeSrc": "1711:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1711:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1736:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1707:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1707:3:20"
																},
																"nativeSrc": "1707:32:20",
																"nodeType": "YulFunctionCall",
																"src": "1707:32:20"
															},
															"nativeSrc": "1704:119:20",
															"nodeType": "YulIf",
															"src": "1704:119:20"
														},
														{
															"nativeSrc": "1833:117:20",
															"nodeType": "YulBlock",
															"src": "1833:117:20",
															"statements": [
																{
																	"nativeSrc": "1848:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1848:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1862:1:20",
																		"nodeType": "YulLiteral",
																		"src": "1862:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1852:6:20",
																			"nodeType": "YulTypedName",
																			"src": "1852:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1877:63:20",
																	"nodeType": "YulAssignment",
																	"src": "1877:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1912:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "1912:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1923:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "1923:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1908:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "1908:3:20"
																				},
																				"nativeSrc": "1908:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "1908:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1932:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "1932:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1887:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "1887:20:20"
																		},
																		"nativeSrc": "1887:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1887:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1877:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "1877:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1960:118:20",
															"nodeType": "YulBlock",
															"src": "1960:118:20",
															"statements": [
																{
																	"nativeSrc": "1975:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1975:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1989:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1989:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1979:6:20",
																			"nodeType": "YulTypedName",
																			"src": "1979:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2005:63:20",
																	"nodeType": "YulAssignment",
																	"src": "2005:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2040:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "2040:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2051:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "2051:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2036:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "2036:3:20"
																				},
																				"nativeSrc": "2036:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2036:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2060:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "2060:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2015:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "2015:20:20"
																		},
																		"nativeSrc": "2015:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2005:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "2005:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1611:474:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1656:9:20",
														"nodeType": "YulTypedName",
														"src": "1656:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1667:7:20",
														"nodeType": "YulTypedName",
														"src": "1667:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1679:6:20",
														"nodeType": "YulTypedName",
														"src": "1679:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1687:6:20",
														"nodeType": "YulTypedName",
														"src": "1687:6:20",
														"type": ""
													}
												],
												"src": "1611:474:20"
											},
											{
												"body": {
													"nativeSrc": "2123:28:20",
													"nodeType": "YulBlock",
													"src": "2123:28:20",
													"statements": [
														{
															"nativeSrc": "2133:12:20",
															"nodeType": "YulAssignment",
															"src": "2133:12:20",
															"value": {
																"name": "value",
																"nativeSrc": "2140:5:20",
																"nodeType": "YulIdentifier",
																"src": "2140:5:20"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2133:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2133:3:20"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2091:60:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2109:5:20",
														"nodeType": "YulTypedName",
														"src": "2109:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2119:3:20",
														"nodeType": "YulTypedName",
														"src": "2119:3:20",
														"type": ""
													}
												],
												"src": "2091:60:20"
											},
											{
												"body": {
													"nativeSrc": "2217:82:20",
													"nodeType": "YulBlock",
													"src": "2217:82:20",
													"statements": [
														{
															"nativeSrc": "2227:66:20",
															"nodeType": "YulAssignment",
															"src": "2227:66:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2285:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "2285:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2267:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "2267:17:20"
																				},
																				"nativeSrc": "2267:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2267:24:20"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2258:8:20",
																			"nodeType": "YulIdentifier",
																			"src": "2258:8:20"
																		},
																		"nativeSrc": "2258:34:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2258:34:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2240:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "2240:17:20"
																},
																"nativeSrc": "2240:53:20",
																"nodeType": "YulFunctionCall",
																"src": "2240:53:20"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2227:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "2227:9:20"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2157:142:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2197:5:20",
														"nodeType": "YulTypedName",
														"src": "2197:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2207:9:20",
														"nodeType": "YulTypedName",
														"src": "2207:9:20",
														"type": ""
													}
												],
												"src": "2157:142:20"
											},
											{
												"body": {
													"nativeSrc": "2365:66:20",
													"nodeType": "YulBlock",
													"src": "2365:66:20",
													"statements": [
														{
															"nativeSrc": "2375:50:20",
															"nodeType": "YulAssignment",
															"src": "2375:50:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2419:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "2419:5:20"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2388:30:20",
																	"nodeType": "YulIdentifier",
																	"src": "2388:30:20"
																},
																"nativeSrc": "2388:37:20",
																"nodeType": "YulFunctionCall",
																"src": "2388:37:20"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2375:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "2375:9:20"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2305:126:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2345:5:20",
														"nodeType": "YulTypedName",
														"src": "2345:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2355:9:20",
														"nodeType": "YulTypedName",
														"src": "2355:9:20",
														"type": ""
													}
												],
												"src": "2305:126:20"
											},
											{
												"body": {
													"nativeSrc": "2511:66:20",
													"nodeType": "YulBlock",
													"src": "2511:66:20",
													"statements": [
														{
															"nativeSrc": "2521:50:20",
															"nodeType": "YulAssignment",
															"src": "2521:50:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2565:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:20"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2534:30:20",
																	"nodeType": "YulIdentifier",
																	"src": "2534:30:20"
																},
																"nativeSrc": "2534:37:20",
																"nodeType": "YulFunctionCall",
																"src": "2534:37:20"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2521:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "2521:9:20"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$246_to_t_address",
												"nativeSrc": "2437:140:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2491:5:20",
														"nodeType": "YulTypedName",
														"src": "2491:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2501:9:20",
														"nodeType": "YulTypedName",
														"src": "2501:9:20",
														"type": ""
													}
												],
												"src": "2437:140:20"
											},
											{
												"body": {
													"nativeSrc": "2662:80:20",
													"nodeType": "YulBlock",
													"src": "2662:80:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2679:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "2679:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2729:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "2729:5:20"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$246_to_t_address",
																			"nativeSrc": "2684:44:20",
																			"nodeType": "YulIdentifier",
																			"src": "2684:44:20"
																		},
																		"nativeSrc": "2684:51:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2684:51:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2672:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2672:6:20"
																},
																"nativeSrc": "2672:64:20",
																"nodeType": "YulFunctionCall",
																"src": "2672:64:20"
															},
															"nativeSrc": "2672:64:20",
															"nodeType": "YulExpressionStatement",
															"src": "2672:64:20"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$246_to_t_address_fromStack",
												"nativeSrc": "2583:159:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2650:5:20",
														"nodeType": "YulTypedName",
														"src": "2650:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2657:3:20",
														"nodeType": "YulTypedName",
														"src": "2657:3:20",
														"type": ""
													}
												],
												"src": "2583:159:20"
											},
											{
												"body": {
													"nativeSrc": "2860:138:20",
													"nodeType": "YulBlock",
													"src": "2860:138:20",
													"statements": [
														{
															"nativeSrc": "2870:26:20",
															"nodeType": "YulAssignment",
															"src": "2870:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2882:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "2882:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2893:2:20",
																		"nodeType": "YulLiteral",
																		"src": "2893:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2878:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2878:3:20"
																},
																"nativeSrc": "2878:18:20",
																"nodeType": "YulFunctionCall",
																"src": "2878:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2870:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "2870:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2964:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2964:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2977:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "2977:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2988:1:20",
																				"nodeType": "YulLiteral",
																				"src": "2988:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2973:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2973:3:20"
																		},
																		"nativeSrc": "2973:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2973:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$246_to_t_address_fromStack",
																	"nativeSrc": "2906:57:20",
																	"nodeType": "YulIdentifier",
																	"src": "2906:57:20"
																},
																"nativeSrc": "2906:85:20",
																"nodeType": "YulFunctionCall",
																"src": "2906:85:20"
															},
															"nativeSrc": "2906:85:20",
															"nodeType": "YulExpressionStatement",
															"src": "2906:85:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$246__to_t_address__fromStack_reversed",
												"nativeSrc": "2748:250:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2832:9:20",
														"nodeType": "YulTypedName",
														"src": "2832:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2844:6:20",
														"nodeType": "YulTypedName",
														"src": "2844:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2855:4:20",
														"nodeType": "YulTypedName",
														"src": "2855:4:20",
														"type": ""
													}
												],
												"src": "2748:250:20"
											},
											{
												"body": {
													"nativeSrc": "3089:66:20",
													"nodeType": "YulBlock",
													"src": "3089:66:20",
													"statements": [
														{
															"nativeSrc": "3099:50:20",
															"nodeType": "YulAssignment",
															"src": "3099:50:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3143:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "3143:5:20"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3112:30:20",
																	"nodeType": "YulIdentifier",
																	"src": "3112:30:20"
																},
																"nativeSrc": "3112:37:20",
																"nodeType": "YulFunctionCall",
																"src": "3112:37:20"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3099:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "3099:9:20"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ERC721URIStorage_$1842_to_t_address",
												"nativeSrc": "3004:151:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3069:5:20",
														"nodeType": "YulTypedName",
														"src": "3069:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3079:9:20",
														"nodeType": "YulTypedName",
														"src": "3079:9:20",
														"type": ""
													}
												],
												"src": "3004:151:20"
											},
											{
												"body": {
													"nativeSrc": "3251:91:20",
													"nodeType": "YulBlock",
													"src": "3251:91:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3268:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "3268:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3329:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "3329:5:20"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ERC721URIStorage_$1842_to_t_address",
																			"nativeSrc": "3273:55:20",
																			"nodeType": "YulIdentifier",
																			"src": "3273:55:20"
																		},
																		"nativeSrc": "3273:62:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3273:62:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3261:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3261:6:20"
																},
																"nativeSrc": "3261:75:20",
																"nodeType": "YulFunctionCall",
																"src": "3261:75:20"
															},
															"nativeSrc": "3261:75:20",
															"nodeType": "YulExpressionStatement",
															"src": "3261:75:20"
														}
													]
												},
												"name": "abi_encode_t_contract$_ERC721URIStorage_$1842_to_t_address_fromStack",
												"nativeSrc": "3161:181:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3239:5:20",
														"nodeType": "YulTypedName",
														"src": "3239:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3246:3:20",
														"nodeType": "YulTypedName",
														"src": "3246:3:20",
														"type": ""
													}
												],
												"src": "3161:181:20"
											},
											{
												"body": {
													"nativeSrc": "3471:149:20",
													"nodeType": "YulBlock",
													"src": "3471:149:20",
													"statements": [
														{
															"nativeSrc": "3481:26:20",
															"nodeType": "YulAssignment",
															"src": "3481:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3493:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "3493:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3504:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3504:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3489:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3489:3:20"
																},
																"nativeSrc": "3489:18:20",
																"nodeType": "YulFunctionCall",
																"src": "3489:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3481:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "3481:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3586:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3586:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3599:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3610:1:20",
																				"nodeType": "YulLiteral",
																				"src": "3610:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3595:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:20"
																		},
																		"nativeSrc": "3595:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3595:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ERC721URIStorage_$1842_to_t_address_fromStack",
																	"nativeSrc": "3517:68:20",
																	"nodeType": "YulIdentifier",
																	"src": "3517:68:20"
																},
																"nativeSrc": "3517:96:20",
																"nodeType": "YulFunctionCall",
																"src": "3517:96:20"
															},
															"nativeSrc": "3517:96:20",
															"nodeType": "YulExpressionStatement",
															"src": "3517:96:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC721URIStorage_$1842__to_t_address__fromStack_reversed",
												"nativeSrc": "3348:272:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3443:9:20",
														"nodeType": "YulTypedName",
														"src": "3443:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3455:6:20",
														"nodeType": "YulTypedName",
														"src": "3455:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3466:4:20",
														"nodeType": "YulTypedName",
														"src": "3466:4:20",
														"type": ""
													}
												],
												"src": "3348:272:20"
											},
											{
												"body": {
													"nativeSrc": "3691:53:20",
													"nodeType": "YulBlock",
													"src": "3691:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3708:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "3708:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3731:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "3731:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3713:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "3713:17:20"
																		},
																		"nativeSrc": "3713:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3713:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3701:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3701:6:20"
																},
																"nativeSrc": "3701:37:20",
																"nodeType": "YulFunctionCall",
																"src": "3701:37:20"
															},
															"nativeSrc": "3701:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "3701:37:20"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3626:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3679:5:20",
														"nodeType": "YulTypedName",
														"src": "3679:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3686:3:20",
														"nodeType": "YulTypedName",
														"src": "3686:3:20",
														"type": ""
													}
												],
												"src": "3626:118:20"
											},
											{
												"body": {
													"nativeSrc": "3848:124:20",
													"nodeType": "YulBlock",
													"src": "3848:124:20",
													"statements": [
														{
															"nativeSrc": "3858:26:20",
															"nodeType": "YulAssignment",
															"src": "3858:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3870:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "3870:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3881:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3881:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3866:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3866:3:20"
																},
																"nativeSrc": "3866:18:20",
																"nodeType": "YulFunctionCall",
																"src": "3866:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3858:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "3858:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3938:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3938:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3951:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3951:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3962:1:20",
																				"nodeType": "YulLiteral",
																				"src": "3962:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3947:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3947:3:20"
																		},
																		"nativeSrc": "3947:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3947:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3894:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "3894:43:20"
																},
																"nativeSrc": "3894:71:20",
																"nodeType": "YulFunctionCall",
																"src": "3894:71:20"
															},
															"nativeSrc": "3894:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "3894:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3750:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3820:9:20",
														"nodeType": "YulTypedName",
														"src": "3820:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3832:6:20",
														"nodeType": "YulTypedName",
														"src": "3832:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3843:4:20",
														"nodeType": "YulTypedName",
														"src": "3843:4:20",
														"type": ""
													}
												],
												"src": "3750:222:20"
											},
											{
												"body": {
													"nativeSrc": "4021:79:20",
													"nodeType": "YulBlock",
													"src": "4021:79:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "4078:16:20",
																"nodeType": "YulBlock",
																"src": "4078:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4087:1:20",
																					"nodeType": "YulLiteral",
																					"src": "4087:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4090:1:20",
																					"nodeType": "YulLiteral",
																					"src": "4090:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4080:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "4080:6:20"
																			},
																			"nativeSrc": "4080:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "4080:12:20"
																		},
																		"nativeSrc": "4080:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "4080:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4044:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "4044:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4069:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "4069:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4051:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "4051:17:20"
																				},
																				"nativeSrc": "4051:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "4051:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4041:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "4041:2:20"
																		},
																		"nativeSrc": "4041:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4041:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4034:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4034:6:20"
																},
																"nativeSrc": "4034:43:20",
																"nodeType": "YulFunctionCall",
																"src": "4034:43:20"
															},
															"nativeSrc": "4031:63:20",
															"nodeType": "YulIf",
															"src": "4031:63:20"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3978:122:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4014:5:20",
														"nodeType": "YulTypedName",
														"src": "4014:5:20",
														"type": ""
													}
												],
												"src": "3978:122:20"
											},
											{
												"body": {
													"nativeSrc": "4169:80:20",
													"nodeType": "YulBlock",
													"src": "4169:80:20",
													"statements": [
														{
															"nativeSrc": "4179:22:20",
															"nodeType": "YulAssignment",
															"src": "4179:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4194:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "4194:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4188:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "4188:5:20"
																},
																"nativeSrc": "4188:13:20",
																"nodeType": "YulFunctionCall",
																"src": "4188:13:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4179:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "4179:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4237:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "4237:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4210:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "4210:26:20"
																},
																"nativeSrc": "4210:33:20",
																"nodeType": "YulFunctionCall",
																"src": "4210:33:20"
															},
															"nativeSrc": "4210:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "4210:33:20"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "4106:143:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4147:6:20",
														"nodeType": "YulTypedName",
														"src": "4147:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4155:3:20",
														"nodeType": "YulTypedName",
														"src": "4155:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4163:5:20",
														"nodeType": "YulTypedName",
														"src": "4163:5:20",
														"type": ""
													}
												],
												"src": "4106:143:20"
											},
											{
												"body": {
													"nativeSrc": "4332:274:20",
													"nodeType": "YulBlock",
													"src": "4332:274:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "4378:83:20",
																"nodeType": "YulBlock",
																"src": "4378:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4380:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "4380:77:20"
																			},
																			"nativeSrc": "4380:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "4380:79:20"
																		},
																		"nativeSrc": "4380:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "4380:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4353:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4353:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4362:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "4362:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4349:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:20"
																		},
																		"nativeSrc": "4349:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4374:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4374:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4345:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "4345:3:20"
																},
																"nativeSrc": "4345:32:20",
																"nodeType": "YulFunctionCall",
																"src": "4345:32:20"
															},
															"nativeSrc": "4342:119:20",
															"nodeType": "YulIf",
															"src": "4342:119:20"
														},
														{
															"nativeSrc": "4471:128:20",
															"nodeType": "YulBlock",
															"src": "4471:128:20",
															"statements": [
																{
																	"nativeSrc": "4486:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4486:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4500:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4500:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4490:6:20",
																			"nodeType": "YulTypedName",
																			"src": "4490:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4515:74:20",
																	"nodeType": "YulAssignment",
																	"src": "4515:74:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4561:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "4561:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4572:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "4572:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4557:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "4557:3:20"
																				},
																				"nativeSrc": "4557:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "4557:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4581:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4581:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4525:31:20",
																			"nodeType": "YulIdentifier",
																			"src": "4525:31:20"
																		},
																		"nativeSrc": "4525:64:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4525:64:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4515:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "4515:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "4255:351:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4302:9:20",
														"nodeType": "YulTypedName",
														"src": "4302:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4313:7:20",
														"nodeType": "YulTypedName",
														"src": "4313:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4325:6:20",
														"nodeType": "YulTypedName",
														"src": "4325:6:20",
														"type": ""
													}
												],
												"src": "4255:351:20"
											},
											{
												"body": {
													"nativeSrc": "4708:73:20",
													"nodeType": "YulBlock",
													"src": "4708:73:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4725:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "4725:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4730:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "4730:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4718:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4718:6:20"
																},
																"nativeSrc": "4718:19:20",
																"nodeType": "YulFunctionCall",
																"src": "4718:19:20"
															},
															"nativeSrc": "4718:19:20",
															"nodeType": "YulExpressionStatement",
															"src": "4718:19:20"
														},
														{
															"nativeSrc": "4746:29:20",
															"nodeType": "YulAssignment",
															"src": "4746:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4765:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "4765:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4770:4:20",
																		"nodeType": "YulLiteral",
																		"src": "4770:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4761:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "4761:3:20"
																},
																"nativeSrc": "4761:14:20",
																"nodeType": "YulFunctionCall",
																"src": "4761:14:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4746:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "4746:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4612:169:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4680:3:20",
														"nodeType": "YulTypedName",
														"src": "4680:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4685:6:20",
														"nodeType": "YulTypedName",
														"src": "4685:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4696:11:20",
														"nodeType": "YulTypedName",
														"src": "4696:11:20",
														"type": ""
													}
												],
												"src": "4612:169:20"
											},
											{
												"body": {
													"nativeSrc": "4893:57:20",
													"nodeType": "YulBlock",
													"src": "4893:57:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4915:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "4915:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4923:1:20",
																				"nodeType": "YulLiteral",
																				"src": "4923:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4911:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4911:3:20"
																		},
																		"nativeSrc": "4911:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4911:14:20"
																	},
																	{
																		"hexValue": "6e6f74204e4654206f776e6572",
																		"kind": "string",
																		"nativeSrc": "4927:15:20",
																		"nodeType": "YulLiteral",
																		"src": "4927:15:20",
																		"type": "",
																		"value": "not NFT owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4904:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4904:6:20"
																},
																"nativeSrc": "4904:39:20",
																"nodeType": "YulFunctionCall",
																"src": "4904:39:20"
															},
															"nativeSrc": "4904:39:20",
															"nodeType": "YulExpressionStatement",
															"src": "4904:39:20"
														}
													]
												},
												"name": "store_literal_in_memory_ad2136552e70ec86c474894eb94b189d187b885f7b94c254663fa6f0c2245fde",
												"nativeSrc": "4787:163:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4885:6:20",
														"nodeType": "YulTypedName",
														"src": "4885:6:20",
														"type": ""
													}
												],
												"src": "4787:163:20"
											},
											{
												"body": {
													"nativeSrc": "5102:220:20",
													"nodeType": "YulBlock",
													"src": "5102:220:20",
													"statements": [
														{
															"nativeSrc": "5112:74:20",
															"nodeType": "YulAssignment",
															"src": "5112:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5178:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5183:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5183:2:20",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5119:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "5119:58:20"
																},
																"nativeSrc": "5119:67:20",
																"nodeType": "YulFunctionCall",
																"src": "5119:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5112:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5112:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5284:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "5284:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad2136552e70ec86c474894eb94b189d187b885f7b94c254663fa6f0c2245fde",
																	"nativeSrc": "5195:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "5195:88:20"
																},
																"nativeSrc": "5195:93:20",
																"nodeType": "YulFunctionCall",
																"src": "5195:93:20"
															},
															"nativeSrc": "5195:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "5195:93:20"
														},
														{
															"nativeSrc": "5297:19:20",
															"nodeType": "YulAssignment",
															"src": "5297:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5308:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "5308:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5313:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5313:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5304:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5304:3:20"
																},
																"nativeSrc": "5304:12:20",
																"nodeType": "YulFunctionCall",
																"src": "5304:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5297:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5297:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad2136552e70ec86c474894eb94b189d187b885f7b94c254663fa6f0c2245fde_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4956:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5090:3:20",
														"nodeType": "YulTypedName",
														"src": "5090:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5098:3:20",
														"nodeType": "YulTypedName",
														"src": "5098:3:20",
														"type": ""
													}
												],
												"src": "4956:366:20"
											},
											{
												"body": {
													"nativeSrc": "5499:248:20",
													"nodeType": "YulBlock",
													"src": "5499:248:20",
													"statements": [
														{
															"nativeSrc": "5509:26:20",
															"nodeType": "YulAssignment",
															"src": "5509:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5521:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "5521:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5532:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5532:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5517:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5517:3:20"
																},
																"nativeSrc": "5517:18:20",
																"nodeType": "YulFunctionCall",
																"src": "5517:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5509:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "5509:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5556:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "5556:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5567:1:20",
																				"nodeType": "YulLiteral",
																				"src": "5567:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5552:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5552:3:20"
																		},
																		"nativeSrc": "5552:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5552:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5575:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "5575:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5581:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "5581:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5571:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:20"
																		},
																		"nativeSrc": "5571:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5571:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5545:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5545:6:20"
																},
																"nativeSrc": "5545:47:20",
																"nodeType": "YulFunctionCall",
																"src": "5545:47:20"
															},
															"nativeSrc": "5545:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "5545:47:20"
														},
														{
															"nativeSrc": "5601:139:20",
															"nodeType": "YulAssignment",
															"src": "5601:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5735:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "5735:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad2136552e70ec86c474894eb94b189d187b885f7b94c254663fa6f0c2245fde_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5609:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "5609:124:20"
																},
																"nativeSrc": "5609:131:20",
																"nodeType": "YulFunctionCall",
																"src": "5609:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5601:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "5601:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad2136552e70ec86c474894eb94b189d187b885f7b94c254663fa6f0c2245fde__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5328:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5479:9:20",
														"nodeType": "YulTypedName",
														"src": "5479:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5494:4:20",
														"nodeType": "YulTypedName",
														"src": "5494:4:20",
														"type": ""
													}
												],
												"src": "5328:419:20"
											},
											{
												"body": {
													"nativeSrc": "5859:56:20",
													"nodeType": "YulBlock",
													"src": "5859:56:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5881:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "5881:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5889:1:20",
																				"nodeType": "YulLiteral",
																				"src": "5889:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5877:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5877:3:20"
																		},
																		"nativeSrc": "5877:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5877:14:20"
																	},
																	{
																		"hexValue": "4e4654206e6f74206c697374",
																		"kind": "string",
																		"nativeSrc": "5893:14:20",
																		"nodeType": "YulLiteral",
																		"src": "5893:14:20",
																		"type": "",
																		"value": "NFT not list"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5870:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5870:6:20"
																},
																"nativeSrc": "5870:38:20",
																"nodeType": "YulFunctionCall",
																"src": "5870:38:20"
															},
															"nativeSrc": "5870:38:20",
															"nodeType": "YulExpressionStatement",
															"src": "5870:38:20"
														}
													]
												},
												"name": "store_literal_in_memory_282894232b05b6ad88298cd6107ea4287558953550cfb6dc11d4aa836e0ba6cb",
												"nativeSrc": "5753:162:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5851:6:20",
														"nodeType": "YulTypedName",
														"src": "5851:6:20",
														"type": ""
													}
												],
												"src": "5753:162:20"
											},
											{
												"body": {
													"nativeSrc": "6067:220:20",
													"nodeType": "YulBlock",
													"src": "6067:220:20",
													"statements": [
														{
															"nativeSrc": "6077:74:20",
															"nodeType": "YulAssignment",
															"src": "6077:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6143:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6143:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6148:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6148:2:20",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6084:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "6084:58:20"
																},
																"nativeSrc": "6084:67:20",
																"nodeType": "YulFunctionCall",
																"src": "6084:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6077:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6077:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6249:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6249:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_282894232b05b6ad88298cd6107ea4287558953550cfb6dc11d4aa836e0ba6cb",
																	"nativeSrc": "6160:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "6160:88:20"
																},
																"nativeSrc": "6160:93:20",
																"nodeType": "YulFunctionCall",
																"src": "6160:93:20"
															},
															"nativeSrc": "6160:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "6160:93:20"
														},
														{
															"nativeSrc": "6262:19:20",
															"nodeType": "YulAssignment",
															"src": "6262:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6273:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6273:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6278:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6278:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6269:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6269:3:20"
																},
																"nativeSrc": "6269:12:20",
																"nodeType": "YulFunctionCall",
																"src": "6269:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6262:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6262:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_282894232b05b6ad88298cd6107ea4287558953550cfb6dc11d4aa836e0ba6cb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5921:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6055:3:20",
														"nodeType": "YulTypedName",
														"src": "6055:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6063:3:20",
														"nodeType": "YulTypedName",
														"src": "6063:3:20",
														"type": ""
													}
												],
												"src": "5921:366:20"
											},
											{
												"body": {
													"nativeSrc": "6464:248:20",
													"nodeType": "YulBlock",
													"src": "6464:248:20",
													"statements": [
														{
															"nativeSrc": "6474:26:20",
															"nodeType": "YulAssignment",
															"src": "6474:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6486:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "6486:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6497:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6497:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6482:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6482:3:20"
																},
																"nativeSrc": "6482:18:20",
																"nodeType": "YulFunctionCall",
																"src": "6482:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6474:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "6474:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6521:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6521:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6532:1:20",
																				"nodeType": "YulLiteral",
																				"src": "6532:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6517:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6517:3:20"
																		},
																		"nativeSrc": "6517:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6517:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6540:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "6540:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6546:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6546:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6536:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6536:3:20"
																		},
																		"nativeSrc": "6536:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6536:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6510:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6510:6:20"
																},
																"nativeSrc": "6510:47:20",
																"nodeType": "YulFunctionCall",
																"src": "6510:47:20"
															},
															"nativeSrc": "6510:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "6510:47:20"
														},
														{
															"nativeSrc": "6566:139:20",
															"nodeType": "YulAssignment",
															"src": "6566:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6700:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "6700:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_282894232b05b6ad88298cd6107ea4287558953550cfb6dc11d4aa836e0ba6cb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6574:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "6574:124:20"
																},
																"nativeSrc": "6574:131:20",
																"nodeType": "YulFunctionCall",
																"src": "6574:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6566:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "6566:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_282894232b05b6ad88298cd6107ea4287558953550cfb6dc11d4aa836e0ba6cb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6293:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6444:9:20",
														"nodeType": "YulTypedName",
														"src": "6444:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6459:4:20",
														"nodeType": "YulTypedName",
														"src": "6459:4:20",
														"type": ""
													}
												],
												"src": "6293:419:20"
											},
											{
												"body": {
													"nativeSrc": "6781:80:20",
													"nodeType": "YulBlock",
													"src": "6781:80:20",
													"statements": [
														{
															"nativeSrc": "6791:22:20",
															"nodeType": "YulAssignment",
															"src": "6791:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6806:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6806:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6800:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "6800:5:20"
																},
																"nativeSrc": "6800:13:20",
																"nodeType": "YulFunctionCall",
																"src": "6800:13:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6791:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "6791:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6849:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "6849:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "6822:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "6822:26:20"
																},
																"nativeSrc": "6822:33:20",
																"nodeType": "YulFunctionCall",
																"src": "6822:33:20"
															},
															"nativeSrc": "6822:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "6822:33:20"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "6718:143:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6759:6:20",
														"nodeType": "YulTypedName",
														"src": "6759:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6767:3:20",
														"nodeType": "YulTypedName",
														"src": "6767:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6775:5:20",
														"nodeType": "YulTypedName",
														"src": "6775:5:20",
														"type": ""
													}
												],
												"src": "6718:143:20"
											},
											{
												"body": {
													"nativeSrc": "6944:274:20",
													"nodeType": "YulBlock",
													"src": "6944:274:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "6990:83:20",
																"nodeType": "YulBlock",
																"src": "6990:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6992:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "6992:77:20"
																			},
																			"nativeSrc": "6992:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "6992:79:20"
																		},
																		"nativeSrc": "6992:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "6992:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6965:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "6965:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6974:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6974:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6961:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6961:3:20"
																		},
																		"nativeSrc": "6961:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6961:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6986:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6986:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6957:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6957:3:20"
																},
																"nativeSrc": "6957:32:20",
																"nodeType": "YulFunctionCall",
																"src": "6957:32:20"
															},
															"nativeSrc": "6954:119:20",
															"nodeType": "YulIf",
															"src": "6954:119:20"
														},
														{
															"nativeSrc": "7083:128:20",
															"nodeType": "YulBlock",
															"src": "7083:128:20",
															"statements": [
																{
																	"nativeSrc": "7098:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7098:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7112:1:20",
																		"nodeType": "YulLiteral",
																		"src": "7112:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7102:6:20",
																			"nodeType": "YulTypedName",
																			"src": "7102:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7127:74:20",
																	"nodeType": "YulAssignment",
																	"src": "7127:74:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7173:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "7173:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7184:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "7184:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7169:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "7169:3:20"
																				},
																				"nativeSrc": "7169:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "7169:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7193:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "7193:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "7137:31:20",
																			"nodeType": "YulIdentifier",
																			"src": "7137:31:20"
																		},
																		"nativeSrc": "7137:64:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7137:64:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7127:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "7127:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "6867:351:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6914:9:20",
														"nodeType": "YulTypedName",
														"src": "6914:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6925:7:20",
														"nodeType": "YulTypedName",
														"src": "6925:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6937:6:20",
														"nodeType": "YulTypedName",
														"src": "6937:6:20",
														"type": ""
													}
												],
												"src": "6867:351:20"
											},
											{
												"body": {
													"nativeSrc": "7330:64:20",
													"nodeType": "YulBlock",
													"src": "7330:64:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7352:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "7352:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7360:1:20",
																				"nodeType": "YulLiteral",
																				"src": "7360:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7348:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:20"
																		},
																		"nativeSrc": "7348:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7348:14:20"
																	},
																	{
																		"hexValue": "696e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "7364:22:20",
																		"nodeType": "YulLiteral",
																		"src": "7364:22:20",
																		"type": "",
																		"value": "insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7341:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7341:6:20"
																},
																"nativeSrc": "7341:46:20",
																"nodeType": "YulFunctionCall",
																"src": "7341:46:20"
															},
															"nativeSrc": "7341:46:20",
															"nodeType": "YulExpressionStatement",
															"src": "7341:46:20"
														}
													]
												},
												"name": "store_literal_in_memory_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
												"nativeSrc": "7224:170:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7322:6:20",
														"nodeType": "YulTypedName",
														"src": "7322:6:20",
														"type": ""
													}
												],
												"src": "7224:170:20"
											},
											{
												"body": {
													"nativeSrc": "7546:220:20",
													"nodeType": "YulBlock",
													"src": "7546:220:20",
													"statements": [
														{
															"nativeSrc": "7556:74:20",
															"nodeType": "YulAssignment",
															"src": "7556:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7622:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "7622:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7627:2:20",
																		"nodeType": "YulLiteral",
																		"src": "7627:2:20",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7563:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "7563:58:20"
																},
																"nativeSrc": "7563:67:20",
																"nodeType": "YulFunctionCall",
																"src": "7563:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7556:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7556:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7728:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "7728:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
																	"nativeSrc": "7639:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "7639:88:20"
																},
																"nativeSrc": "7639:93:20",
																"nodeType": "YulFunctionCall",
																"src": "7639:93:20"
															},
															"nativeSrc": "7639:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "7639:93:20"
														},
														{
															"nativeSrc": "7741:19:20",
															"nodeType": "YulAssignment",
															"src": "7741:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7752:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "7752:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7757:2:20",
																		"nodeType": "YulLiteral",
																		"src": "7757:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7748:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7748:3:20"
																},
																"nativeSrc": "7748:12:20",
																"nodeType": "YulFunctionCall",
																"src": "7748:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7741:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7741:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7400:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7534:3:20",
														"nodeType": "YulTypedName",
														"src": "7534:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7542:3:20",
														"nodeType": "YulTypedName",
														"src": "7542:3:20",
														"type": ""
													}
												],
												"src": "7400:366:20"
											},
											{
												"body": {
													"nativeSrc": "7943:248:20",
													"nodeType": "YulBlock",
													"src": "7943:248:20",
													"statements": [
														{
															"nativeSrc": "7953:26:20",
															"nodeType": "YulAssignment",
															"src": "7953:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7965:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "7965:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7976:2:20",
																		"nodeType": "YulLiteral",
																		"src": "7976:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7961:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7961:3:20"
																},
																"nativeSrc": "7961:18:20",
																"nodeType": "YulFunctionCall",
																"src": "7961:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7953:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "7953:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8000:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8000:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8011:1:20",
																				"nodeType": "YulLiteral",
																				"src": "8011:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7996:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7996:3:20"
																		},
																		"nativeSrc": "7996:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7996:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8019:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "8019:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8025:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8025:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8015:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8015:3:20"
																		},
																		"nativeSrc": "8015:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8015:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7989:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7989:6:20"
																},
																"nativeSrc": "7989:47:20",
																"nodeType": "YulFunctionCall",
																"src": "7989:47:20"
															},
															"nativeSrc": "7989:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "7989:47:20"
														},
														{
															"nativeSrc": "8045:139:20",
															"nodeType": "YulAssignment",
															"src": "8045:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8179:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "8179:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8053:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "8053:124:20"
																},
																"nativeSrc": "8053:131:20",
																"nodeType": "YulFunctionCall",
																"src": "8053:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8045:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "8045:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7772:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7923:9:20",
														"nodeType": "YulTypedName",
														"src": "7923:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7938:4:20",
														"nodeType": "YulTypedName",
														"src": "7938:4:20",
														"type": ""
													}
												],
												"src": "7772:419:20"
											},
											{
												"body": {
													"nativeSrc": "8351:288:20",
													"nodeType": "YulBlock",
													"src": "8351:288:20",
													"statements": [
														{
															"nativeSrc": "8361:26:20",
															"nodeType": "YulAssignment",
															"src": "8361:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8373:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "8373:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8384:2:20",
																		"nodeType": "YulLiteral",
																		"src": "8384:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8369:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "8369:3:20"
																},
																"nativeSrc": "8369:18:20",
																"nodeType": "YulFunctionCall",
																"src": "8369:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8361:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "8361:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8441:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8441:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8454:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8454:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8465:1:20",
																				"nodeType": "YulLiteral",
																				"src": "8465:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8450:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8450:3:20"
																		},
																		"nativeSrc": "8450:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8450:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8397:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "8397:43:20"
																},
																"nativeSrc": "8397:71:20",
																"nodeType": "YulFunctionCall",
																"src": "8397:71:20"
															},
															"nativeSrc": "8397:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "8397:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8522:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8522:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8535:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8535:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8546:2:20",
																				"nodeType": "YulLiteral",
																				"src": "8546:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8531:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8531:3:20"
																		},
																		"nativeSrc": "8531:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8531:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8478:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "8478:43:20"
																},
																"nativeSrc": "8478:72:20",
																"nodeType": "YulFunctionCall",
																"src": "8478:72:20"
															},
															"nativeSrc": "8478:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "8478:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8604:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8604:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8617:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8617:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8628:2:20",
																				"nodeType": "YulLiteral",
																				"src": "8628:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8613:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8613:3:20"
																		},
																		"nativeSrc": "8613:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8613:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8560:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "8560:43:20"
																},
																"nativeSrc": "8560:72:20",
																"nodeType": "YulFunctionCall",
																"src": "8560:72:20"
															},
															"nativeSrc": "8560:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "8560:72:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8197:442:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8307:9:20",
														"nodeType": "YulTypedName",
														"src": "8307:9:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8319:6:20",
														"nodeType": "YulTypedName",
														"src": "8319:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8327:6:20",
														"nodeType": "YulTypedName",
														"src": "8327:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8335:6:20",
														"nodeType": "YulTypedName",
														"src": "8335:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8346:4:20",
														"nodeType": "YulTypedName",
														"src": "8346:4:20",
														"type": ""
													}
												],
												"src": "8197:442:20"
											},
											{
												"body": {
													"nativeSrc": "8687:48:20",
													"nodeType": "YulBlock",
													"src": "8687:48:20",
													"statements": [
														{
															"nativeSrc": "8697:32:20",
															"nodeType": "YulAssignment",
															"src": "8697:32:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8722:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "8722:5:20"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "8715:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "8715:6:20"
																		},
																		"nativeSrc": "8715:13:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8715:13:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8708:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8708:6:20"
																},
																"nativeSrc": "8708:21:20",
																"nodeType": "YulFunctionCall",
																"src": "8708:21:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8697:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "8697:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "8645:90:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8669:5:20",
														"nodeType": "YulTypedName",
														"src": "8669:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8679:7:20",
														"nodeType": "YulTypedName",
														"src": "8679:7:20",
														"type": ""
													}
												],
												"src": "8645:90:20"
											},
											{
												"body": {
													"nativeSrc": "8781:76:20",
													"nodeType": "YulBlock",
													"src": "8781:76:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "8835:16:20",
																"nodeType": "YulBlock",
																"src": "8835:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8844:1:20",
																					"nodeType": "YulLiteral",
																					"src": "8844:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8847:1:20",
																					"nodeType": "YulLiteral",
																					"src": "8847:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8837:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "8837:6:20"
																			},
																			"nativeSrc": "8837:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "8837:12:20"
																		},
																		"nativeSrc": "8837:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "8837:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8804:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "8804:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8826:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "8826:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8811:14:20",
																					"nodeType": "YulIdentifier",
																					"src": "8811:14:20"
																				},
																				"nativeSrc": "8811:21:20",
																				"nodeType": "YulFunctionCall",
																				"src": "8811:21:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8801:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "8801:2:20"
																		},
																		"nativeSrc": "8801:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8801:32:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8794:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8794:6:20"
																},
																"nativeSrc": "8794:40:20",
																"nodeType": "YulFunctionCall",
																"src": "8794:40:20"
															},
															"nativeSrc": "8791:60:20",
															"nodeType": "YulIf",
															"src": "8791:60:20"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8741:116:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8774:5:20",
														"nodeType": "YulTypedName",
														"src": "8774:5:20",
														"type": ""
													}
												],
												"src": "8741:116:20"
											},
											{
												"body": {
													"nativeSrc": "8923:77:20",
													"nodeType": "YulBlock",
													"src": "8923:77:20",
													"statements": [
														{
															"nativeSrc": "8933:22:20",
															"nodeType": "YulAssignment",
															"src": "8933:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8948:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8948:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8942:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "8942:5:20"
																},
																"nativeSrc": "8942:13:20",
																"nodeType": "YulFunctionCall",
																"src": "8942:13:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8933:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "8933:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8988:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "8988:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "8964:23:20",
																	"nodeType": "YulIdentifier",
																	"src": "8964:23:20"
																},
																"nativeSrc": "8964:30:20",
																"nodeType": "YulFunctionCall",
																"src": "8964:30:20"
															},
															"nativeSrc": "8964:30:20",
															"nodeType": "YulExpressionStatement",
															"src": "8964:30:20"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "8863:137:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8901:6:20",
														"nodeType": "YulTypedName",
														"src": "8901:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8909:3:20",
														"nodeType": "YulTypedName",
														"src": "8909:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8917:5:20",
														"nodeType": "YulTypedName",
														"src": "8917:5:20",
														"type": ""
													}
												],
												"src": "8863:137:20"
											},
											{
												"body": {
													"nativeSrc": "9080:271:20",
													"nodeType": "YulBlock",
													"src": "9080:271:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "9126:83:20",
																"nodeType": "YulBlock",
																"src": "9126:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9128:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "9128:77:20"
																			},
																			"nativeSrc": "9128:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "9128:79:20"
																		},
																		"nativeSrc": "9128:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "9128:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9101:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "9101:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9110:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9110:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9097:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9097:3:20"
																		},
																		"nativeSrc": "9097:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9097:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9122:2:20",
																		"nodeType": "YulLiteral",
																		"src": "9122:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9093:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "9093:3:20"
																},
																"nativeSrc": "9093:32:20",
																"nodeType": "YulFunctionCall",
																"src": "9093:32:20"
															},
															"nativeSrc": "9090:119:20",
															"nodeType": "YulIf",
															"src": "9090:119:20"
														},
														{
															"nativeSrc": "9219:125:20",
															"nodeType": "YulBlock",
															"src": "9219:125:20",
															"statements": [
																{
																	"nativeSrc": "9234:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9234:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9248:1:20",
																		"nodeType": "YulLiteral",
																		"src": "9248:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9238:6:20",
																			"nodeType": "YulTypedName",
																			"src": "9238:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9263:71:20",
																	"nodeType": "YulAssignment",
																	"src": "9263:71:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9306:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "9306:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9317:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "9317:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9302:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "9302:3:20"
																				},
																				"nativeSrc": "9302:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "9302:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9326:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "9326:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9273:28:20",
																			"nodeType": "YulIdentifier",
																			"src": "9273:28:20"
																		},
																		"nativeSrc": "9273:61:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9273:61:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9263:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "9263:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9006:345:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9050:9:20",
														"nodeType": "YulTypedName",
														"src": "9050:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9061:7:20",
														"nodeType": "YulTypedName",
														"src": "9061:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9073:6:20",
														"nodeType": "YulTypedName",
														"src": "9073:6:20",
														"type": ""
													}
												],
												"src": "9006:345:20"
											},
											{
												"body": {
													"nativeSrc": "9415:40:20",
													"nodeType": "YulBlock",
													"src": "9415:40:20",
													"statements": [
														{
															"nativeSrc": "9426:22:20",
															"nodeType": "YulAssignment",
															"src": "9426:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9442:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "9442:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9436:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "9436:5:20"
																},
																"nativeSrc": "9436:12:20",
																"nodeType": "YulFunctionCall",
																"src": "9436:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9426:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9426:6:20"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "9357:98:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9398:5:20",
														"nodeType": "YulTypedName",
														"src": "9398:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9408:6:20",
														"nodeType": "YulTypedName",
														"src": "9408:6:20",
														"type": ""
													}
												],
												"src": "9357:98:20"
											},
											{
												"body": {
													"nativeSrc": "9574:34:20",
													"nodeType": "YulBlock",
													"src": "9574:34:20",
													"statements": [
														{
															"nativeSrc": "9584:18:20",
															"nodeType": "YulAssignment",
															"src": "9584:18:20",
															"value": {
																"name": "pos",
																"nativeSrc": "9599:3:20",
																"nodeType": "YulIdentifier",
																"src": "9599:3:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9584:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "9584:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "9461:147:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9546:3:20",
														"nodeType": "YulTypedName",
														"src": "9546:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9551:6:20",
														"nodeType": "YulTypedName",
														"src": "9551:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9562:11:20",
														"nodeType": "YulTypedName",
														"src": "9562:11:20",
														"type": ""
													}
												],
												"src": "9461:147:20"
											},
											{
												"body": {
													"nativeSrc": "9676:77:20",
													"nodeType": "YulBlock",
													"src": "9676:77:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "9693:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "9693:3:20"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "9698:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "9698:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9703:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9703:6:20"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "9687:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "9687:5:20"
																},
																"nativeSrc": "9687:23:20",
																"nodeType": "YulFunctionCall",
																"src": "9687:23:20"
															},
															"nativeSrc": "9687:23:20",
															"nodeType": "YulExpressionStatement",
															"src": "9687:23:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "9730:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "9730:3:20"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9735:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "9735:6:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9726:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9726:3:20"
																		},
																		"nativeSrc": "9726:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9726:16:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9744:1:20",
																		"nodeType": "YulLiteral",
																		"src": "9744:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9719:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9719:6:20"
																},
																"nativeSrc": "9719:27:20",
																"nodeType": "YulFunctionCall",
																"src": "9719:27:20"
															},
															"nativeSrc": "9719:27:20",
															"nodeType": "YulExpressionStatement",
															"src": "9719:27:20"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "9614:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9658:3:20",
														"nodeType": "YulTypedName",
														"src": "9658:3:20",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "9663:3:20",
														"nodeType": "YulTypedName",
														"src": "9663:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9668:6:20",
														"nodeType": "YulTypedName",
														"src": "9668:6:20",
														"type": ""
													}
												],
												"src": "9614:139:20"
											},
											{
												"body": {
													"nativeSrc": "9867:278:20",
													"nodeType": "YulBlock",
													"src": "9867:278:20",
													"statements": [
														{
															"nativeSrc": "9877:52:20",
															"nodeType": "YulVariableDeclaration",
															"src": "9877:52:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9923:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "9923:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "9891:31:20",
																	"nodeType": "YulIdentifier",
																	"src": "9891:31:20"
																},
																"nativeSrc": "9891:38:20",
																"nodeType": "YulFunctionCall",
																"src": "9891:38:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9881:6:20",
																	"nodeType": "YulTypedName",
																	"src": "9881:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9938:95:20",
															"nodeType": "YulAssignment",
															"src": "9938:95:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10021:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "10021:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10026:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10026:6:20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "9945:75:20",
																	"nodeType": "YulIdentifier",
																	"src": "9945:75:20"
																},
																"nativeSrc": "9945:88:20",
																"nodeType": "YulFunctionCall",
																"src": "9945:88:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9938:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "9938:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10081:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "10081:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10088:4:20",
																				"nodeType": "YulLiteral",
																				"src": "10088:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10077:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10077:3:20"
																		},
																		"nativeSrc": "10077:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10077:16:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10095:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "10095:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10100:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10100:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10042:34:20",
																	"nodeType": "YulIdentifier",
																	"src": "10042:34:20"
																},
																"nativeSrc": "10042:65:20",
																"nodeType": "YulFunctionCall",
																"src": "10042:65:20"
															},
															"nativeSrc": "10042:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "10042:65:20"
														},
														{
															"nativeSrc": "10116:23:20",
															"nodeType": "YulAssignment",
															"src": "10116:23:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10127:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "10127:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10132:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10132:6:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10123:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10123:3:20"
																},
																"nativeSrc": "10123:16:20",
																"nodeType": "YulFunctionCall",
																"src": "10123:16:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10116:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10116:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "9759:386:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9848:5:20",
														"nodeType": "YulTypedName",
														"src": "9848:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9855:3:20",
														"nodeType": "YulTypedName",
														"src": "9855:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9863:3:20",
														"nodeType": "YulTypedName",
														"src": "9863:3:20",
														"type": ""
													}
												],
												"src": "9759:386:20"
											},
											{
												"body": {
													"nativeSrc": "10285:137:20",
													"nodeType": "YulBlock",
													"src": "10285:137:20",
													"statements": [
														{
															"nativeSrc": "10296:100:20",
															"nodeType": "YulAssignment",
															"src": "10296:100:20",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10383:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10383:6:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10392:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "10392:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "10303:79:20",
																	"nodeType": "YulIdentifier",
																	"src": "10303:79:20"
																},
																"nativeSrc": "10303:93:20",
																"nodeType": "YulFunctionCall",
																"src": "10303:93:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10296:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10296:3:20"
																}
															]
														},
														{
															"nativeSrc": "10406:10:20",
															"nodeType": "YulAssignment",
															"src": "10406:10:20",
															"value": {
																"name": "pos",
																"nativeSrc": "10413:3:20",
																"nodeType": "YulIdentifier",
																"src": "10413:3:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10406:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10406:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10151:271:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10264:3:20",
														"nodeType": "YulTypedName",
														"src": "10264:3:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10270:6:20",
														"nodeType": "YulTypedName",
														"src": "10270:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10281:3:20",
														"nodeType": "YulTypedName",
														"src": "10281:3:20",
														"type": ""
													}
												],
												"src": "10151:271:20"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$246_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$246_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$246_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$246__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$246_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_ERC721URIStorage_$1842_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC721URIStorage_$1842_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC721URIStorage_$1842_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC721URIStorage_$1842__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC721URIStorage_$1842_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ad2136552e70ec86c474894eb94b189d187b885f7b94c254663fa6f0c2245fde(memPtr) {\n\n        mstore(add(memPtr, 0), \"not NFT owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad2136552e70ec86c474894eb94b189d187b885f7b94c254663fa6f0c2245fde_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_ad2136552e70ec86c474894eb94b189d187b885f7b94c254663fa6f0c2245fde(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad2136552e70ec86c474894eb94b189d187b885f7b94c254663fa6f0c2245fde__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad2136552e70ec86c474894eb94b189d187b885f7b94c254663fa6f0c2245fde_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_282894232b05b6ad88298cd6107ea4287558953550cfb6dc11d4aa836e0ba6cb(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT not list\")\n\n    }\n\n    function abi_encode_t_stringliteral_282894232b05b6ad88298cd6107ea4287558953550cfb6dc11d4aa836e0ba6cb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_282894232b05b6ad88298cd6107ea4287558953550cfb6dc11d4aa836e0ba6cb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_282894232b05b6ad88298cd6107ea4287558953550cfb6dc11d4aa836e0ba6cb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_282894232b05b6ad88298cd6107ea4287558953550cfb6dc11d4aa836e0ba6cb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee(memPtr) {\n\n        mstore(add(memPtr, 0), \"insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 20,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610060575f3560e01c80631caaa4871461006457806350fd73671461009457806351ed8288146100b0578063785e9e86146100cc578063bca6ce64146100ea578063d4ddce8a14610108575b5f80fd5b61007e6004803603810190610079919061090e565b610138565b60405161008b9190610978565b60405180910390f35b6100ae60048036038101906100a99190610991565b610168565b005b6100ca60048036038101906100c5919061090e565b6102d5565b005b6100d46105b4565b6040516100e19190610a2a565b60405180910390f35b6100f26105d9565b6040516100ff9190610a63565b60405180910390f35b610122600480360381019061011d919061090e565b6105fc565b60405161012f9190610a8b565b60405180910390f35b6003602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016101d79190610a8b565b602060405180830381865afa1580156101f2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102169190610ace565b73ffffffffffffffffffffffffffffffffffffffff161461026c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026390610b53565b60405180910390fd5b8060025f8481526020019081526020015f20819055503360035f8481526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b5f60025f8381526020019081526020015f205490505f60035f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8211801561035957505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b610398576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038f90610bbb565b60405180910390fd5b8160015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103f39190610978565b602060405180830381865afa15801561040e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104329190610bed565b1015610473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046a90610c62565b60405180910390fd5b6104c133828460015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610611909392919063ffffffff16565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e8233866040518463ffffffff1660e01b815260040161051d93929190610c80565b5f604051808303815f87803b158015610534575f80fd5b505af1158015610546573d5f803e3d5ffd5b505050505f60025f8581526020019081526020015f20819055505f60035f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052805f5260405f205f915090505481565b61068d848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161064693929190610c80565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610693565b50505050565b5f6106bd828473ffffffffffffffffffffffffffffffffffffffff1661072890919063ffffffff16565b90505f8151141580156106e15750808060200190518101906106df9190610cea565b155b1561072357826040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161071a9190610978565b60405180910390fd5b505050565b606061073583835f61073d565b905092915050565b60608147101561078457306040517fcd78605900000000000000000000000000000000000000000000000000000000815260040161077b9190610978565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516107ac9190610d67565b5f6040518083038185875af1925050503d805f81146107e6576040519150601f19603f3d011682016040523d82523d5f602084013e6107eb565b606091505b50915091506107fb868383610806565b925050509392505050565b60608261081b5761081682610893565b61088b565b5f825114801561084157505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561088357836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161087a9190610978565b60405180910390fd5b81905061088c565b5b9392505050565b5f815111156108a55780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f819050919050565b6108ed816108db565b81146108f7575f80fd5b50565b5f81359050610908816108e4565b92915050565b5f60208284031215610923576109226108d7565b5b5f610930848285016108fa565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61096282610939565b9050919050565b61097281610958565b82525050565b5f60208201905061098b5f830184610969565b92915050565b5f80604083850312156109a7576109a66108d7565b5b5f6109b4858286016108fa565b92505060206109c5858286016108fa565b9150509250929050565b5f819050919050565b5f6109f26109ed6109e884610939565b6109cf565b610939565b9050919050565b5f610a03826109d8565b9050919050565b5f610a14826109f9565b9050919050565b610a2481610a0a565b82525050565b5f602082019050610a3d5f830184610a1b565b92915050565b5f610a4d826109f9565b9050919050565b610a5d81610a43565b82525050565b5f602082019050610a765f830184610a54565b92915050565b610a85816108db565b82525050565b5f602082019050610a9e5f830184610a7c565b92915050565b610aad81610958565b8114610ab7575f80fd5b50565b5f81519050610ac881610aa4565b92915050565b5f60208284031215610ae357610ae26108d7565b5b5f610af084828501610aba565b91505092915050565b5f82825260208201905092915050565b7f6e6f74204e4654206f776e6572000000000000000000000000000000000000005f82015250565b5f610b3d600d83610af9565b9150610b4882610b09565b602082019050919050565b5f6020820190508181035f830152610b6a81610b31565b9050919050565b7f4e4654206e6f74206c69737400000000000000000000000000000000000000005f82015250565b5f610ba5600c83610af9565b9150610bb082610b71565b602082019050919050565b5f6020820190508181035f830152610bd281610b99565b9050919050565b5f81519050610be7816108e4565b92915050565b5f60208284031215610c0257610c016108d7565b5b5f610c0f84828501610bd9565b91505092915050565b7f696e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f610c4c601483610af9565b9150610c5782610c18565b602082019050919050565b5f6020820190508181035f830152610c7981610c40565b9050919050565b5f606082019050610c935f830186610969565b610ca06020830185610969565b610cad6040830184610a7c565b949350505050565b5f8115159050919050565b610cc981610cb5565b8114610cd3575f80fd5b50565b5f81519050610ce481610cc0565b92915050565b5f60208284031215610cff57610cfe6108d7565b5b5f610d0c84828501610cd6565b91505092915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f610d4182610d15565b610d4b8185610d1f565b9350610d5b818560208601610d29565b80840191505092915050565b5f610d728284610d37565b91508190509291505056fea264697066735822122003793d856da8b2336c90e27b4ff98d4280da861a20acac37e8802369f884086d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1CAAA487 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x50FD7367 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x51ED8288 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0x785E9E86 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0xBCA6CE64 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0xD4DDCE8A EQ PUSH2 0x108 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x138 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x991 JUMP JUMPDEST PUSH2 0x168 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x2D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD4 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0xA63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xA8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0xA8B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0xACE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x26C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x263 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x359 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x398 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38F SWAP1 PUSH2 0xBBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x40E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x432 SWAP2 SWAP1 PUSH2 0xBED JUMP JUMPDEST LT ISZERO PUSH2 0x473 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46A SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4C1 CALLER DUP3 DUP5 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x611 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E DUP3 CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC80 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x534 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x546 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x68D DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x646 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x693 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6BD DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x728 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x6E1 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6DF SWAP2 SWAP1 PUSH2 0xCEA JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x723 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x735 DUP4 DUP4 PUSH0 PUSH2 0x73D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x784 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x7AC SWAP2 SWAP1 PUSH2 0xD67 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7E6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x7FB DUP7 DUP4 DUP4 PUSH2 0x806 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x81B JUMPI PUSH2 0x816 DUP3 PUSH2 0x893 JUMP JUMPDEST PUSH2 0x88B JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x841 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x883 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87A SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x88C JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x8A5 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8ED DUP2 PUSH2 0x8DB JUMP JUMPDEST DUP2 EQ PUSH2 0x8F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x908 DUP2 PUSH2 0x8E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x923 JUMPI PUSH2 0x922 PUSH2 0x8D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x930 DUP5 DUP3 DUP6 ADD PUSH2 0x8FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x962 DUP3 PUSH2 0x939 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x972 DUP2 PUSH2 0x958 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x98B PUSH0 DUP4 ADD DUP5 PUSH2 0x969 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9A7 JUMPI PUSH2 0x9A6 PUSH2 0x8D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9B4 DUP6 DUP3 DUP7 ADD PUSH2 0x8FA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9C5 DUP6 DUP3 DUP7 ADD PUSH2 0x8FA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9F2 PUSH2 0x9ED PUSH2 0x9E8 DUP5 PUSH2 0x939 JUMP JUMPDEST PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x939 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA03 DUP3 PUSH2 0x9D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA14 DUP3 PUSH2 0x9F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA24 DUP2 PUSH2 0xA0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA3D PUSH0 DUP4 ADD DUP5 PUSH2 0xA1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA4D DUP3 PUSH2 0x9F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA5D DUP2 PUSH2 0xA43 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA76 PUSH0 DUP4 ADD DUP5 PUSH2 0xA54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA85 DUP2 PUSH2 0x8DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA9E PUSH0 DUP4 ADD DUP5 PUSH2 0xA7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAAD DUP2 PUSH2 0x958 JUMP JUMPDEST DUP2 EQ PUSH2 0xAB7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xAC8 DUP2 PUSH2 0xAA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAE3 JUMPI PUSH2 0xAE2 PUSH2 0x8D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAF0 DUP5 DUP3 DUP6 ADD PUSH2 0xABA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F74204E4654206F776E657200000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB3D PUSH1 0xD DUP4 PUSH2 0xAF9 JUMP JUMPDEST SWAP2 POP PUSH2 0xB48 DUP3 PUSH2 0xB09 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB6A DUP2 PUSH2 0xB31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E4654206E6F74206C6973740000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBA5 PUSH1 0xC DUP4 PUSH2 0xAF9 JUMP JUMPDEST SWAP2 POP PUSH2 0xBB0 DUP3 PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBD2 DUP2 PUSH2 0xB99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBE7 DUP2 PUSH2 0x8E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC02 JUMPI PUSH2 0xC01 PUSH2 0x8D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC0F DUP5 DUP3 DUP6 ADD PUSH2 0xBD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC4C PUSH1 0x14 DUP4 PUSH2 0xAF9 JUMP JUMPDEST SWAP2 POP PUSH2 0xC57 DUP3 PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC79 DUP2 PUSH2 0xC40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC93 PUSH0 DUP4 ADD DUP7 PUSH2 0x969 JUMP JUMPDEST PUSH2 0xCA0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x969 JUMP JUMPDEST PUSH2 0xCAD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA7C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC9 DUP2 PUSH2 0xCB5 JUMP JUMPDEST DUP2 EQ PUSH2 0xCD3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCE4 DUP2 PUSH2 0xCC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFF JUMPI PUSH2 0xCFE PUSH2 0x8D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD0C DUP5 DUP3 DUP6 ADD PUSH2 0xCD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD41 DUP3 PUSH2 0xD15 JUMP JUMPDEST PUSH2 0xD4B DUP2 DUP6 PUSH2 0xD1F JUMP JUMPDEST SWAP4 POP PUSH2 0xD5B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD29 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD72 DUP3 DUP5 PUSH2 0xD37 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB PUSH26 0x3D856DA8B2336C90E27B4FF98D4280DA861A20ACAC37E8802369 0xF8 DUP5 ADDMOD PUSH14 0x64736F6C634300081A0033000000 ",
							"sourceMap": "299:1105:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;480:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;655:222;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;885:516;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;402:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;365:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;428:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;480;;;;;;;;;;;;;;;;;;;;;;:::o;655:222::-;757:10;729:38;;:6;;;;;;;;;;:14;;;744:8;729:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;;721:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;819:6;796:10;:20;807:8;796:20;;;;;;;;;;;:29;;;;859:10;836;:20;847:8;836:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;655:222;;:::o;885:516::-;937:16;956:10;:20;967:8;956:20;;;;;;;;;;;;937:39;;987:16;1006:10;:20;1017:8;1006:20;;;;;;;;;;;;;;;;;;;;;987:39;;1056:1;1045:8;:12;:38;;;;;1081:1;1061:22;;:8;:22;;;;1045:38;1037:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1150:8;1119:5;;;;;;;;;;;:15;;;1135:10;1119:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;1111:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1194:54;1217:10;1229:8;1239;1194:5;;;;;;;;;;;:22;;;;:54;;;;;;:::i;:::-;1259:6;;;;;;;;;;:23;;;1283:8;1293:10;1305:8;1259:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1348:1;1325:10;:20;1336:8;1325:20;;;;;;;;;;;:24;;;;1391:1;1360:10;:20;1371:8;1360:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;926:475;;885:516;:::o;402:19::-;;;;;;;;;;;;;:::o;365:30::-;;;;;;;;;;;;:::o;428:45::-;;;;;;;;;;;;;;;;;:::o;1702:188:6:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;4059:629::-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:12:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:20;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:474::-;1679:6;1687;1736:2;1724:9;1715:7;1711:23;1707:32;1704:119;;;1742:79;;:::i;:::-;1704:119;1862:1;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1833:117;1989:2;2015:53;2060:7;2051:6;2040:9;2036:22;2015:53;:::i;:::-;2005:63;;1960:118;1611:474;;;;;:::o;2091:60::-;2119:3;2140:5;2133:12;;2091:60;;;:::o;2157:142::-;2207:9;2240:53;2258:34;2267:24;2285:5;2267:24;:::i;:::-;2258:34;:::i;:::-;2240:53;:::i;:::-;2227:66;;2157:142;;;:::o;2305:126::-;2355:9;2388:37;2419:5;2388:37;:::i;:::-;2375:50;;2305:126;;;:::o;2437:140::-;2501:9;2534:37;2565:5;2534:37;:::i;:::-;2521:50;;2437:140;;;:::o;2583:159::-;2684:51;2729:5;2684:51;:::i;:::-;2679:3;2672:64;2583:159;;:::o;2748:250::-;2855:4;2893:2;2882:9;2878:18;2870:26;;2906:85;2988:1;2977:9;2973:17;2964:6;2906:85;:::i;:::-;2748:250;;;;:::o;3004:151::-;3079:9;3112:37;3143:5;3112:37;:::i;:::-;3099:50;;3004:151;;;:::o;3161:181::-;3273:62;3329:5;3273:62;:::i;:::-;3268:3;3261:75;3161:181;;:::o;3348:272::-;3466:4;3504:2;3493:9;3489:18;3481:26;;3517:96;3610:1;3599:9;3595:17;3586:6;3517:96;:::i;:::-;3348:272;;;;:::o;3626:118::-;3713:24;3731:5;3713:24;:::i;:::-;3708:3;3701:37;3626:118;;:::o;3750:222::-;3843:4;3881:2;3870:9;3866:18;3858:26;;3894:71;3962:1;3951:9;3947:17;3938:6;3894:71;:::i;:::-;3750:222;;;;:::o;3978:122::-;4051:24;4069:5;4051:24;:::i;:::-;4044:5;4041:35;4031:63;;4090:1;4087;4080:12;4031:63;3978:122;:::o;4106:143::-;4163:5;4194:6;4188:13;4179:22;;4210:33;4237:5;4210:33;:::i;:::-;4106:143;;;;:::o;4255:351::-;4325:6;4374:2;4362:9;4353:7;4349:23;4345:32;4342:119;;;4380:79;;:::i;:::-;4342:119;4500:1;4525:64;4581:7;4572:6;4561:9;4557:22;4525:64;:::i;:::-;4515:74;;4471:128;4255:351;;;;:::o;4612:169::-;4696:11;4730:6;4725:3;4718:19;4770:4;4765:3;4761:14;4746:29;;4612:169;;;;:::o;4787:163::-;4927:15;4923:1;4915:6;4911:14;4904:39;4787:163;:::o;4956:366::-;5098:3;5119:67;5183:2;5178:3;5119:67;:::i;:::-;5112:74;;5195:93;5284:3;5195:93;:::i;:::-;5313:2;5308:3;5304:12;5297:19;;4956:366;;;:::o;5328:419::-;5494:4;5532:2;5521:9;5517:18;5509:26;;5581:9;5575:4;5571:20;5567:1;5556:9;5552:17;5545:47;5609:131;5735:4;5609:131;:::i;:::-;5601:139;;5328:419;;;:::o;5753:162::-;5893:14;5889:1;5881:6;5877:14;5870:38;5753:162;:::o;5921:366::-;6063:3;6084:67;6148:2;6143:3;6084:67;:::i;:::-;6077:74;;6160:93;6249:3;6160:93;:::i;:::-;6278:2;6273:3;6269:12;6262:19;;5921:366;;;:::o;6293:419::-;6459:4;6497:2;6486:9;6482:18;6474:26;;6546:9;6540:4;6536:20;6532:1;6521:9;6517:17;6510:47;6574:131;6700:4;6574:131;:::i;:::-;6566:139;;6293:419;;;:::o;6718:143::-;6775:5;6806:6;6800:13;6791:22;;6822:33;6849:5;6822:33;:::i;:::-;6718:143;;;;:::o;6867:351::-;6937:6;6986:2;6974:9;6965:7;6961:23;6957:32;6954:119;;;6992:79;;:::i;:::-;6954:119;7112:1;7137:64;7193:7;7184:6;7173:9;7169:22;7137:64;:::i;:::-;7127:74;;7083:128;6867:351;;;;:::o;7224:170::-;7364:22;7360:1;7352:6;7348:14;7341:46;7224:170;:::o;7400:366::-;7542:3;7563:67;7627:2;7622:3;7563:67;:::i;:::-;7556:74;;7639:93;7728:3;7639:93;:::i;:::-;7757:2;7752:3;7748:12;7741:19;;7400:366;;;:::o;7772:419::-;7938:4;7976:2;7965:9;7961:18;7953:26;;8025:9;8019:4;8015:20;8011:1;8000:9;7996:17;7989:47;8053:131;8179:4;8053:131;:::i;:::-;8045:139;;7772:419;;;:::o;8197:442::-;8346:4;8384:2;8373:9;8369:18;8361:26;;8397:71;8465:1;8454:9;8450:17;8441:6;8397:71;:::i;:::-;8478:72;8546:2;8535:9;8531:18;8522:6;8478:72;:::i;:::-;8560;8628:2;8617:9;8613:18;8604:6;8560:72;:::i;:::-;8197:442;;;;;;:::o;8645:90::-;8679:7;8722:5;8715:13;8708:21;8697:32;;8645:90;;;:::o;8741:116::-;8811:21;8826:5;8811:21;:::i;:::-;8804:5;8801:32;8791:60;;8847:1;8844;8837:12;8791:60;8741:116;:::o;8863:137::-;8917:5;8948:6;8942:13;8933:22;;8964:30;8988:5;8964:30;:::i;:::-;8863:137;;;;:::o;9006:345::-;9073:6;9122:2;9110:9;9101:7;9097:23;9093:32;9090:119;;;9128:79;;:::i;:::-;9090:119;9248:1;9273:61;9326:7;9317:6;9306:9;9302:22;9273:61;:::i;:::-;9263:71;;9219:125;9006:345;;;;:::o;9357:98::-;9408:6;9442:5;9436:12;9426:22;;9357:98;;;:::o;9461:147::-;9562:11;9599:3;9584:18;;9461:147;;;;:::o;9614:139::-;9703:6;9698:3;9693;9687:23;9744:1;9735:6;9730:3;9726:16;9719:27;9614:139;;;:::o;9759:386::-;9863:3;9891:38;9923:5;9891:38;:::i;:::-;9945:88;10026:6;10021:3;9945:88;:::i;:::-;9938:95;;10042:65;10100:6;10095:3;10088:4;10081:5;10077:16;10042:65;:::i;:::-;10132:6;10127:3;10123:16;10116:23;;9867:278;9759:386;;;;:::o;10151:271::-;10281:3;10303:93;10392:3;10383:6;10303:93;:::i;:::-;10296:100;;10413:3;10406:10;;10151:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "701400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyNFT(uint256)": "infinite",
								"erc20()": "infinite",
								"erc721()": "infinite",
								"list(uint256,uint256)": "infinite",
								"tokenOwner(uint256)": "2805",
								"tokenPrice(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 299,
									"end": 1404,
									"name": "PUSH",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 299,
									"end": 1404,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 299,
									"end": 1404,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "CALLVALUE",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 534,
									"end": 647,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 534,
									"end": 647,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 534,
									"end": 647,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 534,
									"end": 647,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "PUSHSIZE",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "CODESIZE",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "PUSHSIZE",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 534,
									"end": 647,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 534,
									"end": 647,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "3"
								},
								{
									"begin": 534,
									"end": 647,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "tag",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 534,
									"end": 647,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 607,
									"end": 614,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 598,
									"end": 604,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 598,
									"end": 604,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 598,
									"end": 614,
									"name": "PUSH",
									"source": 19,
									"value": "100"
								},
								{
									"begin": 598,
									"end": 614,
									"name": "EXP",
									"source": 19
								},
								{
									"begin": 598,
									"end": 614,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 598,
									"end": 614,
									"name": "SLOAD",
									"source": 19
								},
								{
									"begin": 598,
									"end": 614,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 598,
									"end": 614,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 598,
									"end": 614,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 598,
									"end": 614,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 598,
									"end": 614,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 598,
									"end": 614,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 598,
									"end": 614,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 598,
									"end": 614,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 598,
									"end": 614,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 598,
									"end": 614,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 598,
									"end": 614,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 598,
									"end": 614,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 598,
									"end": 614,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 598,
									"end": 614,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 625,
									"end": 630,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 625,
									"end": 630,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 639,
									"name": "PUSH",
									"source": 19,
									"value": "100"
								},
								{
									"begin": 625,
									"end": 639,
									"name": "EXP",
									"source": 19
								},
								{
									"begin": 625,
									"end": 639,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 625,
									"end": 639,
									"name": "SLOAD",
									"source": 19
								},
								{
									"begin": 625,
									"end": 639,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 625,
									"end": 639,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 625,
									"end": 639,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 625,
									"end": 639,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 625,
									"end": 639,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 625,
									"end": 639,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 625,
									"end": 639,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 625,
									"end": 639,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 625,
									"end": 639,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 625,
									"end": 639,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 625,
									"end": 639,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 625,
									"end": 639,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 625,
									"end": 639,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 625,
									"end": 639,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 534,
									"end": 647,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 299,
									"end": 1404,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "6"
								},
								{
									"begin": 299,
									"end": 1404,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 20,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 20,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 20,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 20,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "24"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 20,
									"value": "24"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 568,
									"end": 689,
									"name": "tag",
									"source": 20,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 689,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 630,
									"end": 637,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 659,
									"end": 683,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "26"
								},
								{
									"begin": 677,
									"end": 682,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 659,
									"end": 683,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "11"
								},
								{
									"begin": 659,
									"end": 683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 659,
									"end": 683,
									"name": "tag",
									"source": 20,
									"value": "26"
								},
								{
									"begin": 659,
									"end": 683,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 648,
									"end": 683,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 648,
									"end": 683,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 568,
									"end": 689,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 568,
									"end": 689,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 568,
									"end": 689,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 568,
									"end": 689,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 695,
									"end": 867,
									"name": "tag",
									"source": 20,
									"value": "13"
								},
								{
									"begin": 695,
									"end": 867,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 793,
									"end": 842,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "28"
								},
								{
									"begin": 836,
									"end": 841,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 793,
									"end": 842,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "12"
								},
								{
									"begin": 793,
									"end": 842,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 793,
									"end": 842,
									"name": "tag",
									"source": 20,
									"value": "28"
								},
								{
									"begin": 793,
									"end": 842,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 786,
									"end": 791,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 783,
									"end": 843,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 773,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "29"
								},
								{
									"begin": 773,
									"end": 861,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 847,
									"end": 859,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 773,
									"end": 861,
									"name": "tag",
									"source": 20,
									"value": "29"
								},
								{
									"begin": 773,
									"end": 861,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 695,
									"end": 867,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 695,
									"end": 867,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 873,
									"end": 1066,
									"name": "tag",
									"source": 20,
									"value": "14"
								},
								{
									"begin": 873,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 955,
									"end": 960,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 986,
									"end": 992,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 980,
									"end": 993,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 971,
									"end": 993,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 971,
									"end": 993,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1002,
									"end": 1060,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "31"
								},
								{
									"begin": 1054,
									"end": 1059,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1002,
									"end": 1060,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "13"
								},
								{
									"begin": 1002,
									"end": 1060,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1002,
									"end": 1060,
									"name": "tag",
									"source": 20,
									"value": "31"
								},
								{
									"begin": 1002,
									"end": 1060,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 873,
									"end": 1066,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 873,
									"end": 1066,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 873,
									"end": 1066,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 873,
									"end": 1066,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 873,
									"end": 1066,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1072,
									"end": 1182,
									"name": "tag",
									"source": 20,
									"value": "15"
								},
								{
									"begin": 1072,
									"end": 1182,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1123,
									"end": 1130,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1152,
									"end": 1176,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "33"
								},
								{
									"begin": 1170,
									"end": 1175,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 1152,
									"end": 1176,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "11"
								},
								{
									"begin": 1152,
									"end": 1176,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1152,
									"end": 1176,
									"name": "tag",
									"source": 20,
									"value": "33"
								},
								{
									"begin": 1152,
									"end": 1176,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1141,
									"end": 1176,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1141,
									"end": 1176,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1072,
									"end": 1182,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1072,
									"end": 1182,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1072,
									"end": 1182,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1072,
									"end": 1182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1188,
									"end": 1338,
									"name": "tag",
									"source": 20,
									"value": "16"
								},
								{
									"begin": 1188,
									"end": 1338,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1275,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "35"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1275,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "15"
								},
								{
									"begin": 1275,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1275,
									"end": 1313,
									"name": "tag",
									"source": 20,
									"value": "35"
								},
								{
									"begin": 1275,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1268,
									"end": 1273,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1265,
									"end": 1314,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 1255,
									"end": 1332,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "36"
								},
								{
									"begin": 1255,
									"end": 1332,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1325,
									"end": 1326,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 1318,
									"end": 1330,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 1255,
									"end": 1332,
									"name": "tag",
									"source": 20,
									"value": "36"
								},
								{
									"begin": 1255,
									"end": 1332,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1188,
									"end": 1338,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1188,
									"end": 1338,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1344,
									"end": 1515,
									"name": "tag",
									"source": 20,
									"value": "17"
								},
								{
									"begin": 1344,
									"end": 1515,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1415,
									"end": 1420,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1446,
									"end": 1452,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1440,
									"end": 1453,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 1431,
									"end": 1453,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1431,
									"end": 1453,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1462,
									"end": 1509,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "38"
								},
								{
									"begin": 1503,
									"end": 1508,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1462,
									"end": 1509,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "16"
								},
								{
									"begin": 1462,
									"end": 1509,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1462,
									"end": 1509,
									"name": "tag",
									"source": 20,
									"value": "38"
								},
								{
									"begin": 1462,
									"end": 1509,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1344,
									"end": 1515,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 1344,
									"end": 1515,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1344,
									"end": 1515,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1344,
									"end": 1515,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1344,
									"end": 1515,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1521,
									"end": 2106,
									"name": "tag",
									"source": 20,
									"value": "3"
								},
								{
									"begin": 1521,
									"end": 2106,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1639,
									"end": 1645,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1647,
									"end": 1653,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 1696,
									"end": 1698,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 1675,
									"end": 1682,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 1671,
									"end": 1694,
									"name": "SUB",
									"source": 20
								},
								{
									"begin": 1667,
									"end": 1699,
									"name": "SLT",
									"source": 20
								},
								{
									"begin": 1664,
									"end": 1783,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 1664,
									"end": 1783,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 1664,
									"end": 1783,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 1702,
									"end": 1781,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "41"
								},
								{
									"begin": 1702,
									"end": 1781,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "8"
								},
								{
									"begin": 1702,
									"end": 1781,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1702,
									"end": 1781,
									"name": "tag",
									"source": 20,
									"value": "41"
								},
								{
									"begin": 1702,
									"end": 1781,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1664,
									"end": 1783,
									"name": "tag",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 1664,
									"end": 1783,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1822,
									"end": 1823,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1847,
									"end": 1936,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "42"
								},
								{
									"begin": 1928,
									"end": 1935,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 1919,
									"end": 1925,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 1908,
									"end": 1917,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 1904,
									"end": 1926,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 1847,
									"end": 1936,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "14"
								},
								{
									"begin": 1847,
									"end": 1936,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1847,
									"end": 1936,
									"name": "tag",
									"source": 20,
									"value": "42"
								},
								{
									"begin": 1847,
									"end": 1936,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1837,
									"end": 1936,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 1837,
									"end": 1936,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1793,
									"end": 1946,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1985,
									"end": 1987,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 2011,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "43"
								},
								{
									"begin": 2081,
									"end": 2088,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 2072,
									"end": 2078,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 2061,
									"end": 2070,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 2057,
									"end": 2079,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 2011,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "17"
								},
								{
									"begin": 2011,
									"end": 2089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2011,
									"end": 2089,
									"name": "tag",
									"source": 20,
									"value": "43"
								},
								{
									"begin": 2011,
									"end": 2089,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2001,
									"end": 2089,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 2001,
									"end": 2089,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1956,
									"end": 2099,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1521,
									"end": 2106,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 1521,
									"end": 2106,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1521,
									"end": 2106,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 1521,
									"end": 2106,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1521,
									"end": 2106,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1521,
									"end": 2106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 299,
									"end": 1404,
									"name": "tag",
									"source": 19,
									"value": "6"
								},
								{
									"begin": 299,
									"end": 1404,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 299,
									"end": 1404,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 299,
									"end": 1404,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 299,
									"end": 1404,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 299,
									"end": 1404,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 1404,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 299,
									"end": 1404,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 1404,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122003793d856da8b2336c90e27b4ff98d4280da861a20acac37e8802369f884086d64736f6c634300081a0033",
									".code": [
										{
											"begin": 299,
											"end": 1404,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "tag",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "PUSH",
											"source": 19,
											"value": "1CAAA487"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "PUSH",
											"source": 19,
											"value": "50FD7367"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "PUSH",
											"source": 19,
											"value": "51ED8288"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "PUSH",
											"source": 19,
											"value": "785E9E86"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "6"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "PUSH",
											"source": 19,
											"value": "BCA6CE64"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "7"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "PUSH",
											"source": 19,
											"value": "D4DDCE8A"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "tag",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 299,
											"end": 1404,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "tag",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 480,
											"end": 525,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "9"
										},
										{
											"begin": 480,
											"end": 525,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 480,
											"end": 525,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "10"
										},
										{
											"begin": 480,
											"end": 525,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 480,
											"end": 525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "tag",
											"source": 19,
											"value": "10"
										},
										{
											"begin": 480,
											"end": 525,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 480,
											"end": 525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "tag",
											"source": 19,
											"value": "9"
										},
										{
											"begin": 480,
											"end": 525,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 525,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "13"
										},
										{
											"begin": 480,
											"end": 525,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "14"
										},
										{
											"begin": 480,
											"end": 525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "tag",
											"source": 19,
											"value": "13"
										},
										{
											"begin": 480,
											"end": 525,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 525,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 655,
											"end": 877,
											"name": "tag",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 655,
											"end": 877,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 655,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 655,
											"end": 877,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 655,
											"end": 877,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 655,
											"end": 877,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 655,
											"end": 877,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 655,
											"end": 877,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 655,
											"end": 877,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 655,
											"end": 877,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 655,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "16"
										},
										{
											"begin": 655,
											"end": 877,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 655,
											"end": 877,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 655,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 655,
											"end": 877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 655,
											"end": 877,
											"name": "tag",
											"source": 19,
											"value": "16"
										},
										{
											"begin": 655,
											"end": 877,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 655,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 655,
											"end": 877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 655,
											"end": 877,
											"name": "tag",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 655,
											"end": 877,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 655,
											"end": 877,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "tag",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "19"
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 885,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "tag",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "21"
										},
										{
											"begin": 885,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "tag",
											"source": 19,
											"value": "19"
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "tag",
											"source": 19,
											"value": "6"
										},
										{
											"begin": 402,
											"end": 421,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 402,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "23"
										},
										{
											"begin": 402,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "tag",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 402,
											"end": 421,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 421,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 402,
											"end": 421,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "25"
										},
										{
											"begin": 402,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "tag",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 402,
											"end": 421,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 421,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "tag",
											"source": 19,
											"value": "7"
										},
										{
											"begin": 365,
											"end": 395,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "26"
										},
										{
											"begin": 365,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "27"
										},
										{
											"begin": 365,
											"end": 395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "tag",
											"source": 19,
											"value": "26"
										},
										{
											"begin": 365,
											"end": 395,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 395,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "28"
										},
										{
											"begin": 365,
											"end": 395,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "29"
										},
										{
											"begin": 365,
											"end": 395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "tag",
											"source": 19,
											"value": "28"
										},
										{
											"begin": 365,
											"end": 395,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 395,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "tag",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 428,
											"end": 473,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "30"
										},
										{
											"begin": 428,
											"end": 473,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 473,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "31"
										},
										{
											"begin": 428,
											"end": 473,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 428,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "tag",
											"source": 19,
											"value": "31"
										},
										{
											"begin": 428,
											"end": 473,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 428,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "tag",
											"source": 19,
											"value": "30"
										},
										{
											"begin": 428,
											"end": 473,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 473,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "33"
										},
										{
											"begin": 428,
											"end": 473,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "34"
										},
										{
											"begin": 428,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "tag",
											"source": 19,
											"value": "33"
										},
										{
											"begin": 428,
											"end": 473,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 473,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "tag",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 480,
											"end": 525,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "PUSH",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 480,
											"end": 525,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 525,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 525,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 525,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 525,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 525,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 480,
											"end": 525,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 480,
											"end": 525,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 480,
											"end": 525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 655,
											"end": 877,
											"name": "tag",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 655,
											"end": 877,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 757,
											"end": 767,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": 729,
											"end": 767,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 729,
											"end": 767,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 729,
											"end": 735,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 735,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 729,
											"end": 735,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 729,
											"end": 735,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 729,
											"end": 735,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 729,
											"end": 735,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 729,
											"end": 735,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 729,
											"end": 735,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 729,
											"end": 735,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 729,
											"end": 735,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 729,
											"end": 743,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 729,
											"end": 743,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 729,
											"end": 743,
											"name": "PUSH",
											"source": 19,
											"value": "6352211E"
										},
										{
											"begin": 744,
											"end": 752,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 753,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 729,
											"end": 753,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 729,
											"end": 753,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 729,
											"end": 753,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "36"
										},
										{
											"begin": 729,
											"end": 753,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "34"
										},
										{
											"begin": 729,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "tag",
											"source": 19,
											"value": "36"
										},
										{
											"begin": 729,
											"end": 753,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 729,
											"end": 753,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 753,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "STATICCALL",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "38"
										},
										{
											"begin": 729,
											"end": 753,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 753,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 753,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "tag",
											"source": 19,
											"value": "38"
										},
										{
											"begin": 729,
											"end": 753,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 753,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 729,
											"end": 753,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 729,
											"end": 753,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 753,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "39"
										},
										{
											"begin": 729,
											"end": 753,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 729,
											"end": 753,
											"name": "tag",
											"source": 19,
											"value": "39"
										},
										{
											"begin": 729,
											"end": 753,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 729,
											"end": 767,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 729,
											"end": 767,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 729,
											"end": 767,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 721,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 721,
											"end": 785,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 721,
											"end": 785,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 721,
											"end": 785,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 721,
											"end": 785,
											"name": "PUSH",
											"source": 19,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 721,
											"end": 785,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 721,
											"end": 785,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 721,
											"end": 785,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 721,
											"end": 785,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 721,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "42"
										},
										{
											"begin": 721,
											"end": 785,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 721,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "43"
										},
										{
											"begin": 721,
											"end": 785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 721,
											"end": 785,
											"name": "tag",
											"source": 19,
											"value": "42"
										},
										{
											"begin": 721,
											"end": 785,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 721,
											"end": 785,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 721,
											"end": 785,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 721,
											"end": 785,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 721,
											"end": 785,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 721,
											"end": 785,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 721,
											"end": 785,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 721,
											"end": 785,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 721,
											"end": 785,
											"name": "tag",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 721,
											"end": 785,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 819,
											"end": 825,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 796,
											"end": 806,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 796,
											"end": 816,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 796,
											"end": 816,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 796,
											"end": 816,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 796,
											"end": 816,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 796,
											"end": 816,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 796,
											"end": 816,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 796,
											"end": 816,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 796,
											"end": 816,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 796,
											"end": 816,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 796,
											"end": 816,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 796,
											"end": 816,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 816,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 796,
											"end": 825,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 796,
											"end": 825,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 796,
											"end": 825,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 796,
											"end": 825,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 859,
											"end": 869,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": 836,
											"end": 846,
											"name": "PUSH",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 836,
											"end": 856,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 855,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 836,
											"end": 856,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 836,
											"end": 856,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 836,
											"end": 856,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 856,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 836,
											"end": 856,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 836,
											"end": 856,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 836,
											"end": 856,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 836,
											"end": 856,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 856,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 836,
											"end": 856,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 856,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 836,
											"end": 856,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 869,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 836,
											"end": 869,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 836,
											"end": 869,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 836,
											"end": 869,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 836,
											"end": 869,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 836,
											"end": 869,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 869,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 836,
											"end": 869,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 836,
											"end": 869,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 836,
											"end": 869,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 836,
											"end": 869,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 836,
											"end": 869,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 869,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 836,
											"end": 869,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 836,
											"end": 869,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 836,
											"end": 869,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 836,
											"end": 869,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 836,
											"end": 869,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 655,
											"end": 877,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 655,
											"end": 877,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 655,
											"end": 877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "tag",
											"source": 19,
											"value": "21"
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 937,
											"end": 953,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 956,
											"end": 966,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 956,
											"end": 976,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 975,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 956,
											"end": 976,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 956,
											"end": 976,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 956,
											"end": 976,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 956,
											"end": 976,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 956,
											"end": 976,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 956,
											"end": 976,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 956,
											"end": 976,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 956,
											"end": 976,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 956,
											"end": 976,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 956,
											"end": 976,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 956,
											"end": 976,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 956,
											"end": 976,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 937,
											"end": 976,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 937,
											"end": 976,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 987,
											"end": 1003,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1016,
											"name": "PUSH",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1025,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 987,
											"end": 1026,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 987,
											"end": 1026,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1056,
											"end": 1057,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1053,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1045,
											"end": 1057,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 1045,
											"end": 1083,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1045,
											"end": 1083,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1045,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "45"
										},
										{
											"begin": 1045,
											"end": 1083,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1045,
											"end": 1083,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1081,
											"end": 1082,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1061,
											"end": 1083,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1061,
											"end": 1083,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1061,
											"end": 1083,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1061,
											"end": 1083,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1061,
											"end": 1083,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 1061,
											"end": 1083,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1045,
											"end": 1083,
											"name": "tag",
											"source": 19,
											"value": "45"
										},
										{
											"begin": 1045,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "46"
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "PUSH",
											"source": 19,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "47"
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "48"
										},
										{
											"begin": 1037,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "tag",
											"source": 19,
											"value": "47"
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "tag",
											"source": 19,
											"value": "46"
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1150,
											"end": 1158,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1124,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1119,
											"end": 1124,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1119,
											"end": 1124,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1124,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1124,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1124,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 1119,
											"end": 1124,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1124,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1124,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1124,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1119,
											"end": 1124,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1134,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1119,
											"end": 1134,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1134,
											"name": "PUSH",
											"source": 19,
											"value": "70A08231"
										},
										{
											"begin": 1135,
											"end": 1145,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "49"
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "14"
										},
										{
											"begin": 1119,
											"end": 1146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "tag",
											"source": 19,
											"value": "49"
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "STATICCALL",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "51"
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "tag",
											"source": 19,
											"value": "51"
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "52"
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "53"
										},
										{
											"begin": 1119,
											"end": 1146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "tag",
											"source": 19,
											"value": "52"
										},
										{
											"begin": 1119,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1158,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1158,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "54"
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "PUSH",
											"source": 19,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "55"
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "56"
										},
										{
											"begin": 1111,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "tag",
											"source": 19,
											"value": "55"
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "tag",
											"source": 19,
											"value": "54"
										},
										{
											"begin": 1111,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1194,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "57"
										},
										{
											"begin": 1217,
											"end": 1227,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": 1229,
											"end": 1237,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1239,
											"end": 1247,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1194,
											"end": 1199,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1194,
											"end": 1199,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1194,
											"end": 1199,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1194,
											"end": 1199,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1194,
											"end": 1199,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1194,
											"end": 1199,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 1194,
											"end": 1199,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 1194,
											"end": 1199,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1194,
											"end": 1199,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 1194,
											"end": 1199,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1194,
											"end": 1199,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1194,
											"end": 1216,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1194,
											"end": 1216,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1194,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "58"
										},
										{
											"begin": 1194,
											"end": 1216,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1194,
											"end": 1248,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 1194,
											"end": 1248,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1194,
											"end": 1248,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1194,
											"end": 1248,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1194,
											"end": 1248,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1194,
											"end": 1248,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1194,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1194,
											"end": 1248,
											"name": "tag",
											"source": 19,
											"value": "57"
										},
										{
											"begin": 1194,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1282,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1259,
											"end": 1282,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1282,
											"name": "PUSH",
											"source": 19,
											"value": "42842E0E"
										},
										{
											"begin": 1283,
											"end": 1291,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1293,
											"end": 1303,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": 1305,
											"end": 1313,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "59"
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 1259,
											"end": 1314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "tag",
											"source": 19,
											"value": "59"
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "EXTCODESIZE",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "61"
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "tag",
											"source": 19,
											"value": "61"
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "CALL",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "63"
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "tag",
											"source": 19,
											"value": "63"
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1314,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1348,
											"end": 1349,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1335,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 1325,
											"end": 1345,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1344,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1325,
											"end": 1345,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1325,
											"end": 1345,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1325,
											"end": 1345,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1325,
											"end": 1345,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1325,
											"end": 1345,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1325,
											"end": 1345,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1325,
											"end": 1345,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1325,
											"end": 1345,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1325,
											"end": 1345,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1325,
											"end": 1345,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1345,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1391,
											"end": 1392,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "PUSH",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1379,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 926,
											"end": 1401,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 926,
											"end": 1401,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1401,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "tag",
											"source": 19,
											"value": "23"
										},
										{
											"begin": 402,
											"end": 421,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 402,
											"end": 421,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 421,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 402,
											"end": 421,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 402,
											"end": 421,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 402,
											"end": 421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "tag",
											"source": 19,
											"value": "27"
										},
										{
											"begin": 365,
											"end": 395,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 395,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 365,
											"end": 395,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 365,
											"end": 395,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 365,
											"end": 395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "tag",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 428,
											"end": 473,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 473,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 473,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 473,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 473,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 473,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 473,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 428,
											"end": 473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 12
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 12,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 12,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 12,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 20,
											"value": "101"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 20,
											"value": "103"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 20,
											"value": "104"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "140"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "103"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 20,
											"value": "140"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "141"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 20,
											"value": "141"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 20,
											"value": "105"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "143"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "104"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 20,
											"value": "143"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "145"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "146"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "101"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 20,
											"value": "146"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 20,
											"value": "145"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "147"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "105"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 20,
											"value": "147"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 20,
											"value": "106"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 20,
											"value": "107"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "106"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 20,
											"value": "108"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "152"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "107"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 20,
											"value": "152"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 20,
											"value": "14"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "154"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "108"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 20,
											"value": "154"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1611,
											"end": 2085,
											"name": "tag",
											"source": 20,
											"value": "17"
										},
										{
											"begin": 1611,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 1711,
											"end": 1734,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1707,
											"end": 1739,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "156"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "157"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "101"
										},
										{
											"begin": 1742,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "tag",
											"source": 20,
											"value": "157"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "tag",
											"source": 20,
											"value": "156"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "158"
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1912,
											"end": 1921,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 1908,
											"end": 1930,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "105"
										},
										{
											"begin": 1887,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "tag",
											"source": 20,
											"value": "158"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1989,
											"end": 1991,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2015,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "159"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 2051,
											"end": 2057,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2040,
											"end": 2049,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 2036,
											"end": 2058,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2015,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "105"
										},
										{
											"begin": 2015,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2015,
											"end": 2068,
											"name": "tag",
											"source": 20,
											"value": "159"
										},
										{
											"begin": 2015,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2005,
											"end": 2068,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2005,
											"end": 2068,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1960,
											"end": 2078,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1611,
											"end": 2085,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1611,
											"end": 2085,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1611,
											"end": 2085,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1611,
											"end": 2085,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1611,
											"end": 2085,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1611,
											"end": 2085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2091,
											"end": 2151,
											"name": "tag",
											"source": 20,
											"value": "109"
										},
										{
											"begin": 2091,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2119,
											"end": 2122,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2145,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2133,
											"end": 2145,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2133,
											"end": 2145,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2091,
											"end": 2151,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2091,
											"end": 2151,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2091,
											"end": 2151,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2091,
											"end": 2151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2157,
											"end": 2299,
											"name": "tag",
											"source": 20,
											"value": "110"
										},
										{
											"begin": 2157,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2207,
											"end": 2216,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "162"
										},
										{
											"begin": 2258,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "163"
										},
										{
											"begin": 2267,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "164"
										},
										{
											"begin": 2285,
											"end": 2290,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2267,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "106"
										},
										{
											"begin": 2267,
											"end": 2291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2267,
											"end": 2291,
											"name": "tag",
											"source": 20,
											"value": "164"
										},
										{
											"begin": 2267,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2258,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "109"
										},
										{
											"begin": 2258,
											"end": 2292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2258,
											"end": 2292,
											"name": "tag",
											"source": 20,
											"value": "163"
										},
										{
											"begin": 2258,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2240,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "106"
										},
										{
											"begin": 2240,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2240,
											"end": 2293,
											"name": "tag",
											"source": 20,
											"value": "162"
										},
										{
											"begin": 2240,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2227,
											"end": 2293,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2227,
											"end": 2293,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2157,
											"end": 2299,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2157,
											"end": 2299,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2157,
											"end": 2299,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2157,
											"end": 2299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2305,
											"end": 2431,
											"name": "tag",
											"source": 20,
											"value": "111"
										},
										{
											"begin": 2305,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2355,
											"end": 2364,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "166"
										},
										{
											"begin": 2419,
											"end": 2424,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2388,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "110"
										},
										{
											"begin": 2388,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2388,
											"end": 2425,
											"name": "tag",
											"source": 20,
											"value": "166"
										},
										{
											"begin": 2388,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2375,
											"end": 2425,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2375,
											"end": 2425,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2305,
											"end": 2431,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2305,
											"end": 2431,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2305,
											"end": 2431,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2305,
											"end": 2431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2437,
											"end": 2577,
											"name": "tag",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 2437,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2501,
											"end": 2510,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2534,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "111"
										},
										{
											"begin": 2534,
											"end": 2571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2534,
											"end": 2571,
											"name": "tag",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 2534,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2521,
											"end": 2571,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2521,
											"end": 2571,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2437,
											"end": 2577,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2437,
											"end": 2577,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2437,
											"end": 2577,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2437,
											"end": 2577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2583,
											"end": 2742,
											"name": "tag",
											"source": 20,
											"value": "113"
										},
										{
											"begin": 2583,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2684,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "170"
										},
										{
											"begin": 2729,
											"end": 2734,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2684,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 2684,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2684,
											"end": 2735,
											"name": "tag",
											"source": 20,
											"value": "170"
										},
										{
											"begin": 2684,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2679,
											"end": 2682,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2672,
											"end": 2736,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2583,
											"end": 2742,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2583,
											"end": 2742,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2583,
											"end": 2742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2748,
											"end": 2998,
											"name": "tag",
											"source": 20,
											"value": "25"
										},
										{
											"begin": 2748,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2855,
											"end": 2859,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2895,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2882,
											"end": 2891,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2870,
											"end": 2896,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2870,
											"end": 2896,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2906,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "172"
										},
										{
											"begin": 2988,
											"end": 2989,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2977,
											"end": 2986,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2973,
											"end": 2990,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2964,
											"end": 2970,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2906,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "113"
										},
										{
											"begin": 2906,
											"end": 2991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2906,
											"end": 2991,
											"name": "tag",
											"source": 20,
											"value": "172"
										},
										{
											"begin": 2906,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2748,
											"end": 2998,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2748,
											"end": 2998,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2748,
											"end": 2998,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2748,
											"end": 2998,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2748,
											"end": 2998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3004,
											"end": 3155,
											"name": "tag",
											"source": 20,
											"value": "114"
										},
										{
											"begin": 3004,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3079,
											"end": 3088,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3112,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "174"
										},
										{
											"begin": 3143,
											"end": 3148,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3112,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "111"
										},
										{
											"begin": 3112,
											"end": 3149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3112,
											"end": 3149,
											"name": "tag",
											"source": 20,
											"value": "174"
										},
										{
											"begin": 3112,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3099,
											"end": 3149,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3099,
											"end": 3149,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3004,
											"end": 3155,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3004,
											"end": 3155,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3004,
											"end": 3155,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3004,
											"end": 3155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3161,
											"end": 3342,
											"name": "tag",
											"source": 20,
											"value": "115"
										},
										{
											"begin": 3161,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "176"
										},
										{
											"begin": 3329,
											"end": 3334,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "114"
										},
										{
											"begin": 3273,
											"end": 3335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "tag",
											"source": 20,
											"value": "176"
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3268,
											"end": 3271,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3261,
											"end": 3336,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3161,
											"end": 3342,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3161,
											"end": 3342,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3161,
											"end": 3342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3348,
											"end": 3620,
											"name": "tag",
											"source": 20,
											"value": "29"
										},
										{
											"begin": 3348,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3466,
											"end": 3470,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3504,
											"end": 3506,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3489,
											"end": 3507,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3481,
											"end": 3507,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3481,
											"end": 3507,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3517,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "178"
										},
										{
											"begin": 3610,
											"end": 3611,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3595,
											"end": 3612,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3586,
											"end": 3592,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3517,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "115"
										},
										{
											"begin": 3517,
											"end": 3613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3517,
											"end": 3613,
											"name": "tag",
											"source": 20,
											"value": "178"
										},
										{
											"begin": 3517,
											"end": 3613,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3348,
											"end": 3620,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3348,
											"end": 3620,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3348,
											"end": 3620,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3348,
											"end": 3620,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3348,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3626,
											"end": 3744,
											"name": "tag",
											"source": 20,
											"value": "116"
										},
										{
											"begin": 3626,
											"end": 3744,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3713,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "180"
										},
										{
											"begin": 3731,
											"end": 3736,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3713,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "103"
										},
										{
											"begin": 3713,
											"end": 3737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3713,
											"end": 3737,
											"name": "tag",
											"source": 20,
											"value": "180"
										},
										{
											"begin": 3713,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3708,
											"end": 3711,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3701,
											"end": 3738,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3626,
											"end": 3744,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3626,
											"end": 3744,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3626,
											"end": 3744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3750,
											"end": 3972,
											"name": "tag",
											"source": 20,
											"value": "34"
										},
										{
											"begin": 3750,
											"end": 3972,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3843,
											"end": 3847,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3881,
											"end": 3883,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3879,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3858,
											"end": 3884,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3858,
											"end": 3884,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3894,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "182"
										},
										{
											"begin": 3962,
											"end": 3963,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3951,
											"end": 3960,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3938,
											"end": 3944,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3894,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "116"
										},
										{
											"begin": 3894,
											"end": 3965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3894,
											"end": 3965,
											"name": "tag",
											"source": 20,
											"value": "182"
										},
										{
											"begin": 3894,
											"end": 3965,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3750,
											"end": 3972,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3750,
											"end": 3972,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3750,
											"end": 3972,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3750,
											"end": 3972,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3750,
											"end": 3972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3978,
											"end": 4100,
											"name": "tag",
											"source": 20,
											"value": "117"
										},
										{
											"begin": 3978,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4051,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "184"
										},
										{
											"begin": 4069,
											"end": 4074,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4051,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "107"
										},
										{
											"begin": 4051,
											"end": 4075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4051,
											"end": 4075,
											"name": "tag",
											"source": 20,
											"value": "184"
										},
										{
											"begin": 4051,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4044,
											"end": 4049,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4041,
											"end": 4076,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 4031,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "185"
										},
										{
											"begin": 4031,
											"end": 4094,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4090,
											"end": 4091,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4088,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 4031,
											"end": 4094,
											"name": "tag",
											"source": 20,
											"value": "185"
										},
										{
											"begin": 4031,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3978,
											"end": 4100,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3978,
											"end": 4100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4106,
											"end": 4249,
											"name": "tag",
											"source": 20,
											"value": "118"
										},
										{
											"begin": 4106,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4163,
											"end": 4168,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4194,
											"end": 4200,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4188,
											"end": 4201,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 4179,
											"end": 4201,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4179,
											"end": 4201,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4210,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "187"
										},
										{
											"begin": 4237,
											"end": 4242,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4210,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "117"
										},
										{
											"begin": 4210,
											"end": 4243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4210,
											"end": 4243,
											"name": "tag",
											"source": 20,
											"value": "187"
										},
										{
											"begin": 4210,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4106,
											"end": 4249,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4106,
											"end": 4249,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4106,
											"end": 4249,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4106,
											"end": 4249,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4106,
											"end": 4249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4255,
											"end": 4606,
											"name": "tag",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4325,
											"end": 4331,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4374,
											"end": 4376,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4362,
											"end": 4371,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4353,
											"end": 4360,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4349,
											"end": 4372,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 4345,
											"end": 4377,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 4342,
											"end": 4461,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4342,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "189"
										},
										{
											"begin": 4342,
											"end": 4461,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4380,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "190"
										},
										{
											"begin": 4380,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "101"
										},
										{
											"begin": 4380,
											"end": 4459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4380,
											"end": 4459,
											"name": "tag",
											"source": 20,
											"value": "190"
										},
										{
											"begin": 4380,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4342,
											"end": 4461,
											"name": "tag",
											"source": 20,
											"value": "189"
										},
										{
											"begin": 4342,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4500,
											"end": 4501,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4525,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "191"
										},
										{
											"begin": 4581,
											"end": 4588,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4572,
											"end": 4578,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4561,
											"end": 4570,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4557,
											"end": 4579,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4525,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "118"
										},
										{
											"begin": 4525,
											"end": 4589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4525,
											"end": 4589,
											"name": "tag",
											"source": 20,
											"value": "191"
										},
										{
											"begin": 4525,
											"end": 4589,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4515,
											"end": 4589,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4515,
											"end": 4589,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4471,
											"end": 4599,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4255,
											"end": 4606,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4255,
											"end": 4606,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4255,
											"end": 4606,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4255,
											"end": 4606,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4255,
											"end": 4606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4612,
											"end": 4781,
											"name": "tag",
											"source": 20,
											"value": "119"
										},
										{
											"begin": 4612,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4696,
											"end": 4707,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4730,
											"end": 4736,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4725,
											"end": 4728,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4718,
											"end": 4737,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4770,
											"end": 4774,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4765,
											"end": 4768,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4761,
											"end": 4775,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4746,
											"end": 4775,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4746,
											"end": 4775,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4612,
											"end": 4781,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4612,
											"end": 4781,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4612,
											"end": 4781,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4612,
											"end": 4781,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4612,
											"end": 4781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4787,
											"end": 4950,
											"name": "tag",
											"source": 20,
											"value": "120"
										},
										{
											"begin": 4787,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4927,
											"end": 4942,
											"name": "PUSH",
											"source": 20,
											"value": "6E6F74204E4654206F776E657200000000000000000000000000000000000000"
										},
										{
											"begin": 4923,
											"end": 4924,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4915,
											"end": 4921,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4911,
											"end": 4925,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4904,
											"end": 4943,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4787,
											"end": 4950,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4787,
											"end": 4950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4956,
											"end": 5322,
											"name": "tag",
											"source": 20,
											"value": "121"
										},
										{
											"begin": 4956,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5098,
											"end": 5101,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5119,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "195"
										},
										{
											"begin": 5183,
											"end": 5185,
											"name": "PUSH",
											"source": 20,
											"value": "D"
										},
										{
											"begin": 5178,
											"end": 5181,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5119,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "119"
										},
										{
											"begin": 5119,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5119,
											"end": 5186,
											"name": "tag",
											"source": 20,
											"value": "195"
										},
										{
											"begin": 5119,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5112,
											"end": 5186,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5112,
											"end": 5186,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5195,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "196"
										},
										{
											"begin": 5284,
											"end": 5287,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5195,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "120"
										},
										{
											"begin": 5195,
											"end": 5288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5195,
											"end": 5288,
											"name": "tag",
											"source": 20,
											"value": "196"
										},
										{
											"begin": 5195,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5313,
											"end": 5315,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 5308,
											"end": 5311,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5304,
											"end": 5316,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5297,
											"end": 5316,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5297,
											"end": 5316,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4956,
											"end": 5322,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4956,
											"end": 5322,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4956,
											"end": 5322,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4956,
											"end": 5322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5328,
											"end": 5747,
											"name": "tag",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 5328,
											"end": 5747,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5494,
											"end": 5498,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5534,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 5521,
											"end": 5530,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5509,
											"end": 5535,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5509,
											"end": 5535,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5581,
											"end": 5590,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5575,
											"end": 5579,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5571,
											"end": 5591,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 5567,
											"end": 5568,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5556,
											"end": 5565,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5552,
											"end": 5569,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5545,
											"end": 5592,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5609,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "198"
										},
										{
											"begin": 5735,
											"end": 5739,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5609,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "121"
										},
										{
											"begin": 5609,
											"end": 5740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5609,
											"end": 5740,
											"name": "tag",
											"source": 20,
											"value": "198"
										},
										{
											"begin": 5609,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5601,
											"end": 5740,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5601,
											"end": 5740,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5328,
											"end": 5747,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5328,
											"end": 5747,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5328,
											"end": 5747,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5328,
											"end": 5747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5753,
											"end": 5915,
											"name": "tag",
											"source": 20,
											"value": "122"
										},
										{
											"begin": 5753,
											"end": 5915,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5893,
											"end": 5907,
											"name": "PUSH",
											"source": 20,
											"value": "4E4654206E6F74206C6973740000000000000000000000000000000000000000"
										},
										{
											"begin": 5889,
											"end": 5890,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5881,
											"end": 5887,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5877,
											"end": 5891,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5870,
											"end": 5908,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5753,
											"end": 5915,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5753,
											"end": 5915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5921,
											"end": 6287,
											"name": "tag",
											"source": 20,
											"value": "123"
										},
										{
											"begin": 5921,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6063,
											"end": 6066,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "201"
										},
										{
											"begin": 6148,
											"end": 6150,
											"name": "PUSH",
											"source": 20,
											"value": "C"
										},
										{
											"begin": 6143,
											"end": 6146,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6084,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "119"
										},
										{
											"begin": 6084,
											"end": 6151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6084,
											"end": 6151,
											"name": "tag",
											"source": 20,
											"value": "201"
										},
										{
											"begin": 6084,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6160,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "202"
										},
										{
											"begin": 6249,
											"end": 6252,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6160,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "122"
										},
										{
											"begin": 6160,
											"end": 6253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6160,
											"end": 6253,
											"name": "tag",
											"source": 20,
											"value": "202"
										},
										{
											"begin": 6160,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6278,
											"end": 6280,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6273,
											"end": 6276,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6269,
											"end": 6281,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6262,
											"end": 6281,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6262,
											"end": 6281,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5921,
											"end": 6287,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5921,
											"end": 6287,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5921,
											"end": 6287,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5921,
											"end": 6287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6293,
											"end": 6712,
											"name": "tag",
											"source": 20,
											"value": "48"
										},
										{
											"begin": 6293,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6459,
											"end": 6463,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6497,
											"end": 6499,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6486,
											"end": 6495,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6482,
											"end": 6500,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6474,
											"end": 6500,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6474,
											"end": 6500,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6546,
											"end": 6555,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6540,
											"end": 6544,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6536,
											"end": 6556,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 6532,
											"end": 6533,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6521,
											"end": 6530,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6517,
											"end": 6534,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6510,
											"end": 6557,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6574,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "204"
										},
										{
											"begin": 6700,
											"end": 6704,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6574,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "123"
										},
										{
											"begin": 6574,
											"end": 6705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6574,
											"end": 6705,
											"name": "tag",
											"source": 20,
											"value": "204"
										},
										{
											"begin": 6574,
											"end": 6705,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6566,
											"end": 6705,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6566,
											"end": 6705,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6293,
											"end": 6712,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6293,
											"end": 6712,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6293,
											"end": 6712,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6293,
											"end": 6712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6718,
											"end": 6861,
											"name": "tag",
											"source": 20,
											"value": "124"
										},
										{
											"begin": 6718,
											"end": 6861,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6775,
											"end": 6780,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6812,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6800,
											"end": 6813,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6791,
											"end": 6813,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6791,
											"end": 6813,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6822,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "206"
										},
										{
											"begin": 6849,
											"end": 6854,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6822,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "104"
										},
										{
											"begin": 6822,
											"end": 6855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6822,
											"end": 6855,
											"name": "tag",
											"source": 20,
											"value": "206"
										},
										{
											"begin": 6822,
											"end": 6855,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6718,
											"end": 6861,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6718,
											"end": 6861,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6718,
											"end": 6861,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6718,
											"end": 6861,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6718,
											"end": 6861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6867,
											"end": 7218,
											"name": "tag",
											"source": 20,
											"value": "53"
										},
										{
											"begin": 6867,
											"end": 7218,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6937,
											"end": 6943,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6986,
											"end": 6988,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6974,
											"end": 6983,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6965,
											"end": 6972,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 6961,
											"end": 6984,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 6957,
											"end": 6989,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 6954,
											"end": 7073,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6954,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "208"
										},
										{
											"begin": 6954,
											"end": 7073,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 6992,
											"end": 7071,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "209"
										},
										{
											"begin": 6992,
											"end": 7071,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "101"
										},
										{
											"begin": 6992,
											"end": 7071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6992,
											"end": 7071,
											"name": "tag",
											"source": 20,
											"value": "209"
										},
										{
											"begin": 6992,
											"end": 7071,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6954,
											"end": 7073,
											"name": "tag",
											"source": 20,
											"value": "208"
										},
										{
											"begin": 6954,
											"end": 7073,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7112,
											"end": 7113,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7137,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "210"
										},
										{
											"begin": 7193,
											"end": 7200,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 7184,
											"end": 7190,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7173,
											"end": 7182,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 7169,
											"end": 7191,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7137,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "124"
										},
										{
											"begin": 7137,
											"end": 7201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7137,
											"end": 7201,
											"name": "tag",
											"source": 20,
											"value": "210"
										},
										{
											"begin": 7137,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7127,
											"end": 7201,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7127,
											"end": 7201,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7083,
											"end": 7211,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6867,
											"end": 7218,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6867,
											"end": 7218,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6867,
											"end": 7218,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6867,
											"end": 7218,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6867,
											"end": 7218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7224,
											"end": 7394,
											"name": "tag",
											"source": 20,
											"value": "125"
										},
										{
											"begin": 7224,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7364,
											"end": 7386,
											"name": "PUSH",
											"source": 20,
											"value": "696E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 7360,
											"end": 7361,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7352,
											"end": 7358,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7348,
											"end": 7362,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7341,
											"end": 7387,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7224,
											"end": 7394,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7224,
											"end": 7394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7400,
											"end": 7766,
											"name": "tag",
											"source": 20,
											"value": "126"
										},
										{
											"begin": 7400,
											"end": 7766,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7542,
											"end": 7545,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7563,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "213"
										},
										{
											"begin": 7627,
											"end": 7629,
											"name": "PUSH",
											"source": 20,
											"value": "14"
										},
										{
											"begin": 7622,
											"end": 7625,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7563,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "119"
										},
										{
											"begin": 7563,
											"end": 7630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7563,
											"end": 7630,
											"name": "tag",
											"source": 20,
											"value": "213"
										},
										{
											"begin": 7563,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7556,
											"end": 7630,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7556,
											"end": 7630,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7639,
											"end": 7732,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "214"
										},
										{
											"begin": 7728,
											"end": 7731,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7639,
											"end": 7732,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "125"
										},
										{
											"begin": 7639,
											"end": 7732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7639,
											"end": 7732,
											"name": "tag",
											"source": 20,
											"value": "214"
										},
										{
											"begin": 7639,
											"end": 7732,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7757,
											"end": 7759,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7752,
											"end": 7755,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7748,
											"end": 7760,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7741,
											"end": 7760,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7741,
											"end": 7760,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7400,
											"end": 7766,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7400,
											"end": 7766,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7400,
											"end": 7766,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7400,
											"end": 7766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7772,
											"end": 8191,
											"name": "tag",
											"source": 20,
											"value": "56"
										},
										{
											"begin": 7772,
											"end": 8191,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7938,
											"end": 7942,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7976,
											"end": 7978,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7965,
											"end": 7974,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7961,
											"end": 7979,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7953,
											"end": 7979,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7953,
											"end": 7979,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8025,
											"end": 8034,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8019,
											"end": 8023,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8015,
											"end": 8035,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8011,
											"end": 8012,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8000,
											"end": 8009,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7989,
											"end": 8036,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8053,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "216"
										},
										{
											"begin": 8179,
											"end": 8183,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8053,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "126"
										},
										{
											"begin": 8053,
											"end": 8184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8053,
											"end": 8184,
											"name": "tag",
											"source": 20,
											"value": "216"
										},
										{
											"begin": 8053,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8045,
											"end": 8184,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8045,
											"end": 8184,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7772,
											"end": 8191,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7772,
											"end": 8191,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7772,
											"end": 8191,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7772,
											"end": 8191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8197,
											"end": 8639,
											"name": "tag",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 8197,
											"end": 8639,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8346,
											"end": 8350,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8384,
											"end": 8386,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 8373,
											"end": 8382,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8369,
											"end": 8387,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8361,
											"end": 8387,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8361,
											"end": 8387,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8397,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "218"
										},
										{
											"begin": 8465,
											"end": 8466,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8454,
											"end": 8463,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8450,
											"end": 8467,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8441,
											"end": 8447,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 8397,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "108"
										},
										{
											"begin": 8397,
											"end": 8468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8397,
											"end": 8468,
											"name": "tag",
											"source": 20,
											"value": "218"
										},
										{
											"begin": 8397,
											"end": 8468,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8478,
											"end": 8550,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "219"
										},
										{
											"begin": 8546,
											"end": 8548,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 8535,
											"end": 8544,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8531,
											"end": 8549,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8522,
											"end": 8528,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 8478,
											"end": 8550,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "108"
										},
										{
											"begin": 8478,
											"end": 8550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8478,
											"end": 8550,
											"name": "tag",
											"source": 20,
											"value": "219"
										},
										{
											"begin": 8478,
											"end": 8550,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8560,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "220"
										},
										{
											"begin": 8628,
											"end": 8630,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 8617,
											"end": 8626,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8613,
											"end": 8631,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8604,
											"end": 8610,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 8560,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "116"
										},
										{
											"begin": 8560,
											"end": 8632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8560,
											"end": 8632,
											"name": "tag",
											"source": 20,
											"value": "220"
										},
										{
											"begin": 8560,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8197,
											"end": 8639,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 8197,
											"end": 8639,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 8197,
											"end": 8639,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8197,
											"end": 8639,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8197,
											"end": 8639,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8197,
											"end": 8639,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8197,
											"end": 8639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8645,
											"end": 8735,
											"name": "tag",
											"source": 20,
											"value": "127"
										},
										{
											"begin": 8645,
											"end": 8735,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8679,
											"end": 8686,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8722,
											"end": 8727,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8715,
											"end": 8728,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 8708,
											"end": 8729,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 8697,
											"end": 8729,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8697,
											"end": 8729,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8645,
											"end": 8735,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8645,
											"end": 8735,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8645,
											"end": 8735,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8645,
											"end": 8735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8741,
											"end": 8857,
											"name": "tag",
											"source": 20,
											"value": "128"
										},
										{
											"begin": 8741,
											"end": 8857,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8811,
											"end": 8832,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 8826,
											"end": 8831,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8811,
											"end": 8832,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "127"
										},
										{
											"begin": 8811,
											"end": 8832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8811,
											"end": 8832,
											"name": "tag",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 8811,
											"end": 8832,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8804,
											"end": 8809,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8801,
											"end": 8833,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 8791,
											"end": 8851,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "224"
										},
										{
											"begin": 8791,
											"end": 8851,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 8847,
											"end": 8848,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8844,
											"end": 8845,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8837,
											"end": 8849,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 8791,
											"end": 8851,
											"name": "tag",
											"source": 20,
											"value": "224"
										},
										{
											"begin": 8791,
											"end": 8851,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8741,
											"end": 8857,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8741,
											"end": 8857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8863,
											"end": 9000,
											"name": "tag",
											"source": 20,
											"value": "129"
										},
										{
											"begin": 8863,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8917,
											"end": 8922,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8948,
											"end": 8954,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8942,
											"end": 8955,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 8933,
											"end": 8955,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8933,
											"end": 8955,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8964,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "226"
										},
										{
											"begin": 8988,
											"end": 8993,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8964,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "128"
										},
										{
											"begin": 8964,
											"end": 8994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8964,
											"end": 8994,
											"name": "tag",
											"source": 20,
											"value": "226"
										},
										{
											"begin": 8964,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8863,
											"end": 9000,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 8863,
											"end": 9000,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8863,
											"end": 9000,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8863,
											"end": 9000,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8863,
											"end": 9000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9006,
											"end": 9351,
											"name": "tag",
											"source": 20,
											"value": "73"
										},
										{
											"begin": 9006,
											"end": 9351,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9073,
											"end": 9079,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9122,
											"end": 9124,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 9110,
											"end": 9119,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9101,
											"end": 9108,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 9097,
											"end": 9120,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 9093,
											"end": 9125,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 9090,
											"end": 9209,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 9090,
											"end": 9209,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "228"
										},
										{
											"begin": 9090,
											"end": 9209,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9128,
											"end": 9207,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "229"
										},
										{
											"begin": 9128,
											"end": 9207,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "101"
										},
										{
											"begin": 9128,
											"end": 9207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9128,
											"end": 9207,
											"name": "tag",
											"source": 20,
											"value": "229"
										},
										{
											"begin": 9128,
											"end": 9207,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9090,
											"end": 9209,
											"name": "tag",
											"source": 20,
											"value": "228"
										},
										{
											"begin": 9090,
											"end": 9209,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9248,
											"end": 9249,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9273,
											"end": 9334,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "230"
										},
										{
											"begin": 9326,
											"end": 9333,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 9317,
											"end": 9323,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9306,
											"end": 9315,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 9302,
											"end": 9324,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9273,
											"end": 9334,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "129"
										},
										{
											"begin": 9273,
											"end": 9334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9273,
											"end": 9334,
											"name": "tag",
											"source": 20,
											"value": "230"
										},
										{
											"begin": 9273,
											"end": 9334,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9263,
											"end": 9334,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9263,
											"end": 9334,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9219,
											"end": 9344,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9006,
											"end": 9351,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9006,
											"end": 9351,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9006,
											"end": 9351,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9006,
											"end": 9351,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9006,
											"end": 9351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9357,
											"end": 9455,
											"name": "tag",
											"source": 20,
											"value": "130"
										},
										{
											"begin": 9357,
											"end": 9455,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9408,
											"end": 9414,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9442,
											"end": 9447,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9436,
											"end": 9448,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9357,
											"end": 9455,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9357,
											"end": 9455,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9357,
											"end": 9455,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9357,
											"end": 9455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9461,
											"end": 9608,
											"name": "tag",
											"source": 20,
											"value": "131"
										},
										{
											"begin": 9461,
											"end": 9608,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9562,
											"end": 9573,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9599,
											"end": 9602,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9584,
											"end": 9602,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9584,
											"end": 9602,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9461,
											"end": 9608,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9461,
											"end": 9608,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9461,
											"end": 9608,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9461,
											"end": 9608,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9461,
											"end": 9608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9614,
											"end": 9753,
											"name": "tag",
											"source": 20,
											"value": "132"
										},
										{
											"begin": 9614,
											"end": 9753,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9703,
											"end": 9709,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9698,
											"end": 9701,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9693,
											"end": 9696,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9687,
											"end": 9710,
											"name": "MCOPY",
											"source": 20
										},
										{
											"begin": 9744,
											"end": 9745,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9735,
											"end": 9741,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9730,
											"end": 9733,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9726,
											"end": 9742,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9719,
											"end": 9746,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9614,
											"end": 9753,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9614,
											"end": 9753,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9614,
											"end": 9753,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9614,
											"end": 9753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9759,
											"end": 10145,
											"name": "tag",
											"source": 20,
											"value": "133"
										},
										{
											"begin": 9759,
											"end": 10145,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9863,
											"end": 9866,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9891,
											"end": 9929,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "235"
										},
										{
											"begin": 9923,
											"end": 9928,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9891,
											"end": 9929,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "130"
										},
										{
											"begin": 9891,
											"end": 9929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9891,
											"end": 9929,
											"name": "tag",
											"source": 20,
											"value": "235"
										},
										{
											"begin": 9891,
											"end": 9929,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9945,
											"end": 10033,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "236"
										},
										{
											"begin": 10026,
											"end": 10032,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10021,
											"end": 10024,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 9945,
											"end": 10033,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "131"
										},
										{
											"begin": 9945,
											"end": 10033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9945,
											"end": 10033,
											"name": "tag",
											"source": 20,
											"value": "236"
										},
										{
											"begin": 9945,
											"end": 10033,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9938,
											"end": 10033,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 9938,
											"end": 10033,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10042,
											"end": 10107,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "237"
										},
										{
											"begin": 10100,
											"end": 10106,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10095,
											"end": 10098,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 10088,
											"end": 10092,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 10081,
											"end": 10086,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 10077,
											"end": 10093,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10042,
											"end": 10107,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "132"
										},
										{
											"begin": 10042,
											"end": 10107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10042,
											"end": 10107,
											"name": "tag",
											"source": 20,
											"value": "237"
										},
										{
											"begin": 10042,
											"end": 10107,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10132,
											"end": 10138,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10127,
											"end": 10130,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 10123,
											"end": 10139,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10116,
											"end": 10139,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10116,
											"end": 10139,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9867,
											"end": 10145,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9759,
											"end": 10145,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9759,
											"end": 10145,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9759,
											"end": 10145,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9759,
											"end": 10145,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9759,
											"end": 10145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10151,
											"end": 10422,
											"name": "tag",
											"source": 20,
											"value": "83"
										},
										{
											"begin": 10151,
											"end": 10422,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10281,
											"end": 10284,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10303,
											"end": 10396,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "239"
										},
										{
											"begin": 10392,
											"end": 10395,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10383,
											"end": 10389,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 10303,
											"end": 10396,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "133"
										},
										{
											"begin": 10303,
											"end": 10396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10303,
											"end": 10396,
											"name": "tag",
											"source": 20,
											"value": "239"
										},
										{
											"begin": 10303,
											"end": 10396,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10296,
											"end": 10396,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10296,
											"end": 10396,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10413,
											"end": 10416,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10406,
											"end": 10416,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10406,
											"end": 10416,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10151,
											"end": 10422,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 10151,
											"end": 10422,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10151,
											"end": 10422,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10151,
											"end": 10422,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10151,
											"end": 10422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"MyERC721Market.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyNFT(uint256)": "51ed8288",
							"erc20()": "785e9e86",
							"erc721()": "bca6ce64",
							"list(uint256,uint256)": "50fd7367",
							"tokenOwner(uint256)": "1caaa487",
							"tokenPrice(uint256)": "d4ddce8a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC721URIStorage\",\"name\":\"_erc721\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_erc20\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"buyNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc721\",\"outputs\":[{\"internalType\":\"contract ERC721URIStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"list\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MyERC721Market.sol\":\"MyERC721Market\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"MyERC721Market.sol\":{\"keccak256\":\"0xe201ed95ae4689b3849848f404b33cf830263906dc192858717fbf9afc4a1952\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99d0a021b846a15ec201a85c2412181920424d0c2823a73c8758cb0517973ab7\",\"dweb:/ipfs/QmbP7mEFcX7YhRmHmaBY8BPnCsYNbsUCGNEzkakpRHm8Y4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3617,
								"contract": "MyERC721Market.sol:MyERC721Market",
								"label": "erc721",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ERC721URIStorage)1842"
							},
							{
								"astId": 3620,
								"contract": "MyERC721Market.sol:MyERC721Market",
								"label": "erc20",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)246"
							},
							{
								"astId": 3624,
								"contract": "MyERC721Market.sol:MyERC721Market",
								"label": "tokenPrice",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 3628,
								"contract": "MyERC721Market.sol:MyERC721Market",
								"label": "tokenOwner",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(ERC721URIStorage)1842": {
								"encoding": "inplace",
								"label": "contract ERC721URIStorage",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)246": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2444
						]
					},
					"id": 4,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4,
							"sourceUnit": 2445,
							"src": "132:59:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2444,
										"src": "140:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							2444
						],
						"IERC4906": [
							27
						],
						"IERC721": [
							1698
						]
					},
					"id": 28,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 28,
							"sourceUnit": 4,
							"src": "133:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2444,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 28,
							"sourceUnit": 32,
							"src": "172:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1698,
										"src": "180:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "IERC165",
										"nameLocations": [
											"279:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2444,
										"src": "279:7:1"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:1"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IERC721",
										"nameLocations": [
											"288:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1698,
										"src": "288:7:1"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:1"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 10,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:1",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 27,
							"linearizedBaseContracts": [
								27,
								1698,
								2444
							],
							"name": "IERC4906",
							"nameLocation": "267:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:1",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 19,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "529:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:1"
									},
									"src": "508:39:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:1",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 26,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "796:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "818:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:1"
									},
									"src": "770:68:1"
								}
							],
							"scope": 28,
							"src": "257:583:1",
							"usedErrors": [],
							"usedEvents": [
								19,
								26,
								1597,
								1606,
								1615
							]
						}
					],
					"src": "107:734:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1698
						]
					},
					"id": 32,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 29,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 31,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 32,
							"sourceUnit": 1699,
							"src": "132:52:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 30,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1698,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							168
						],
						"IERC20Errors": [
							73
						],
						"IERC721Errors": [
							121
						]
					},
					"id": 169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 33,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 34,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:3",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 43,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "668:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "685:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:3"
									},
									"src": "621:80:3"
								},
								{
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 48,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "889:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:3"
									},
									"src": "864:41:3"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 53,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1102:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:3"
									},
									"src": "1075:45:3"
								},
								{
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 62,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1509:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1526:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1545:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:3"
									},
									"src": "1476:85:3"
								},
								{
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 67,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1773:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:3"
									},
									"src": "1746:45:3"
								},
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 72,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:3"
									},
									"src": "1997:43:3"
								}
							],
							"scope": 169,
							"src": "278:1764:3",
							"usedErrors": [
								43,
								48,
								53,
								62,
								67,
								72
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 74,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:3",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 79,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2465:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:3"
									},
									"src": "2440:40:3"
								},
								{
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 84,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2652:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:3"
									},
									"src": "2623:46:3"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 93,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "2996:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3012:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3029:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:3"
									},
									"src": "2969:75:3"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 98,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3233:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:3"
									},
									"src": "3207:42:3"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 103,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3447:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:3"
									},
									"src": "3419:46:3"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 110,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3756:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3774:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:3"
									},
									"src": "3723:68:3"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 115,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "4004:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:3"
									},
									"src": "3976:46:3"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 120,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4258:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:3"
									},
									"src": "4230:46:3"
								}
							],
							"scope": 169,
							"src": "2186:2092:3",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:3",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 168,
							"linearizedBaseContracts": [
								168
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 133,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4854:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4870:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4887:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4903:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:3"
									},
									"src": "4821:99:3"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 138,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "5110:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:3"
									},
									"src": "5083:43:3"
								},
								{
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 143,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5325:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:3"
									},
									"src": "5296:47:3"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 150,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5645:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5663:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:3"
									},
									"src": "5610:68:3"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 155,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "5892:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:3"
									},
									"src": "5863:47:3"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 160,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6147:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:3"
									},
									"src": "6118:47:3"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 167,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6488:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6507:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:3"
									},
									"src": "6456:73:3"
								}
							],
							"scope": 169,
							"src": "4424:2107:3",
							"usedErrors": [
								133,
								138,
								143,
								150,
								155,
								160,
								167
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							246
						]
					},
					"id": 247,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 246,
							"linearizedBaseContracts": [
								246
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 180,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 189,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 246,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 246,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 210,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 246,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 246,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 246,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 245,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 246,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 247,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								180,
								189
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							282
						]
					},
					"id": 283,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 248,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 249,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:5",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 282,
							"linearizedBaseContracts": [
								282
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:5",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3022:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3045:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3070:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3093:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3119:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 259,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3136:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 261,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3155:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 263,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:5"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:5"
									},
									"scope": 282,
									"src": "2997:183:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:5",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "3501:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:5"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "3539:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:5"
									},
									"scope": 282,
									"src": "3485:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:5",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:5"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "3791:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 278,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:5"
									},
									"scope": 282,
									"src": "3740:60:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 283,
							"src": "2113:1689:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							2123
						],
						"IERC20": [
							246
						],
						"IERC20Permit": [
							282
						],
						"SafeERC20": [
							572
						]
					},
					"id": 573,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 284,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 286,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 573,
							"sourceUnit": 247,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 285,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 246,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 573,
							"sourceUnit": 283,
							"src": "179:60:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 282,
										"src": "187:12:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 573,
							"sourceUnit": 2124,
							"src": "240:51:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2123,
										"src": "248:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 291,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 572,
							"linearizedBaseContracts": [
								572
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 294,
									"libraryName": {
										"id": 292,
										"name": "Address",
										"nameLocations": [
											"781:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2123,
										"src": "781:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:6",
									"typeName": {
										"id": 293,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:6",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 299,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "907:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:6"
									},
									"src": "876:46:6"
								},
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 308,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1043:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1060:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1086:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:6"
									},
									"src": "1004:109:6"
								},
								{
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "1375:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "1405:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$246",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 323,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "1427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$246",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 213,
																	"src": "1427:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 325,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 314,
																			"src": "1444:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 326,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 316,
																			"src": "1448:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 327,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 321,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$246",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 319,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "1385:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$246_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:6"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "1325:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$246",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 311,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 310,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 246,
														"src": "1325:6:6"
													},
													"referencedDeclaration": 246,
													"src": "1325:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$246",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "1339:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "1351:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:6"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:6"
									},
									"scope": 572,
									"src": "1303:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "1792:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 346,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "1822:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$246",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 349,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 336,
																		"src": "1844:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$246",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 245,
																	"src": "1844:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 351,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 338,
																			"src": "1865:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 352,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 340,
																			"src": "1871:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 353,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "1875:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 354,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 347,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$246",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 345,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "1802:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$246_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:6"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1728:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$246",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 335,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 334,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 246,
														"src": "1728:6:6"
													},
													"referencedDeclaration": 246,
													"src": "1728:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$246",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1742:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1756:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1768:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:6"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:6"
									},
									"scope": 572,
									"src": "1702:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "2167:139:6",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "2177:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 370,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 380,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 376,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$572",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$572",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 374,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "2231:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 372,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "2200:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$246",
																"typeString": "contract IERC20"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "2200:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "2262:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$246",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 383,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "2269:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 384,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "2278:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 385,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "2293:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$246",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 381,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "2249:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$246_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:6"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "2112:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$246",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 362,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 361,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 246,
														"src": "2112:6:6"
													},
													"referencedDeclaration": 246,
													"src": "2112:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$246",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "2126:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "2143:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:6"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:6"
									},
									"scope": 572,
									"src": "2081:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "2607:370:6",
										"statements": [
											{
												"id": 431,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:6",
												"statements": [
													{
														"assignments": [
															402
														],
														"declarations": [
															{
																"constant": false,
																"id": 402,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 431,
																"src": "2641:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 401,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 411,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 407,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$572",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$572",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 405,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 409,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "2699:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 403,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "2668:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$246",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 223,
																"src": "2668:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "2725:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 413,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "2744:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 422,
														"nodeType": "IfStatement",
														"src": "2721:160:6",
														"trueBody": {
															"id": 421,
															"nodeType": "Block",
															"src": "2763:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 416,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 396,
																				"src": "2821:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 417,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 402,
																				"src": "2830:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 418,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 398,
																				"src": "2848:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 415,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 308,
																			"src": "2788:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 420,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 424,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "2907:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$246",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 425,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "2914:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 426,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "2923:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 427,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "2942:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$246",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 423,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "2894:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$246_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2540:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$246",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 393,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 392,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 246,
														"src": "2540:6:6"
													},
													"referencedDeclaration": 246,
													"src": "2540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$246",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2554:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2571:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:6"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:6"
									},
									"scope": 572,
									"src": "2509:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "3373:303:6",
										"statements": [
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "3383:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 444,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 454,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 448,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "3426:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$246",
																	"typeString": "contract IERC20"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 233,
															"src": "3426:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 450,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "3442:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 451,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "3451:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 452,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 446,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:6"
											},
											{
												"condition": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 456,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "3498:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$246",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 457,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "3505:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$246",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 455,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "3474:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$246_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "3469:201:6",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "3520:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 461,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "3554:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$246",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 464,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 437,
																					"src": "3576:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$246",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 233,
																				"src": "3576:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 466,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 439,
																						"src": "3592:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 467,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 468,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 462,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$246",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 460,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "3534:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$246_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 473,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "3639:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$246",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 474,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "3646:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$246",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 472,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "3619:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$246_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "3318:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$246",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 435,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 246,
														"src": "3318:6:6"
													},
													"referencedDeclaration": 246,
													"src": "3318:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$246",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "3332:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "3349:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:6"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:6"
									},
									"scope": 572,
									"src": "3296:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "4129:559:6",
										"statements": [
											{
												"assignments": [
													490
												],
												"declarations": [
													{
														"constant": false,
														"id": 490,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 521,
														"src": "4478:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 489,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 498,
												"initialValue": {
													"arguments": [
														{
															"id": 496,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "4532:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 493,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "4512:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$246",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$246",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 491,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:6",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1944,
														"src": "4504:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 499,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "4551:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 505,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "4589:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:6",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 508,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 503,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:6",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 520,
												"nodeType": "IfStatement",
												"src": "4547:135:6",
												"trueBody": {
													"id": 519,
													"nodeType": "Block",
													"src": "4610:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 515,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 484,
																				"src": "4664:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$246",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$246",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 513,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 512,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "4631:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 518,
															"nodeType": "RevertStatement",
															"src": "4624:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "4088:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$246",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 483,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 482,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 246,
														"src": "4088:6:6"
													},
													"referencedDeclaration": 246,
													"src": "4088:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$246",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "4102:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 485,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:6"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:6"
									},
									"scope": 572,
									"src": "4059:629:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "5278:489:6",
										"statements": [
											{
												"assignments": [
													534,
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "5574:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 533,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "5588:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 535,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 544,
												"initialValue": {
													"arguments": [
														{
															"id": 542,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "5635:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 539,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "5623:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$246",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$246",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 537,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:6",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 545,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "5657:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 546,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "5669:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:6",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 552,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "5706:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 554,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 553,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 555,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 550,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:6",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 558,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 562,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "5738:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$246",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$246",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 560,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 532,
												"id": 569,
												"nodeType": "Return",
												"src": "5650:110:6"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "5222:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$246",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 525,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 524,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 246,
														"src": "5222:6:6"
													},
													"referencedDeclaration": 246,
													"src": "5222:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$246",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "5236:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:6"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "5272:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:6"
									},
									"scope": 572,
									"src": "5189:578:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 573,
							"src": "751:5018:6",
							"usedErrors": [
								299,
								308
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							2153
						],
						"ERC165": [
							2432
						],
						"ERC721": [
							1581
						],
						"IERC165": [
							2444
						],
						"IERC721": [
							1698
						],
						"IERC721Errors": [
							121
						],
						"IERC721Metadata": [
							1870
						],
						"IERC721Receiver": [
							1716
						],
						"Strings": [
							2408
						]
					},
					"id": 1582,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 574,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 576,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1582,
							"sourceUnit": 1699,
							"src": "133:38:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 575,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1698,
										"src": "141:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 578,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1582,
							"sourceUnit": 1717,
							"src": "172:54:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 577,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1716,
										"src": "180:15:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 580,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1582,
							"sourceUnit": 1871,
							"src": "227:65:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 579,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1870,
										"src": "235:15:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 582,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1582,
							"sourceUnit": 2154,
							"src": "293:48:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 581,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2153,
										"src": "301:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1582,
							"sourceUnit": 2409,
							"src": "342:48:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 583,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2408,
										"src": "350:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 587,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1582,
							"sourceUnit": 2433,
							"src": "391:69:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 585,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2444,
										"src": "399:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 586,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2432,
										"src": "408:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 589,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1582,
							"sourceUnit": 169,
							"src": "461:66:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 588,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 121,
										"src": "469:13:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 591,
										"name": "Context",
										"nameLocations": [
											"804:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2153,
										"src": "804:7:7"
									},
									"id": 592,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:7"
								},
								{
									"baseName": {
										"id": 593,
										"name": "ERC165",
										"nameLocations": [
											"813:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2432,
										"src": "813:6:7"
									},
									"id": 594,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:7"
								},
								{
									"baseName": {
										"id": 595,
										"name": "IERC721",
										"nameLocations": [
											"821:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1698,
										"src": "821:7:7"
									},
									"id": 596,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:7"
								},
								{
									"baseName": {
										"id": 597,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1870,
										"src": "830:15:7"
									},
									"id": 598,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:7"
								},
								{
									"baseName": {
										"id": 599,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "847:13:7"
									},
									"id": 600,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:7"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 590,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:7",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1581,
							"linearizedBaseContracts": [
								1581,
								121,
								1870,
								1698,
								2432,
								2444,
								2153
							],
							"name": "ERC721",
							"nameLocation": "794:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 603,
									"libraryName": {
										"id": 601,
										"name": "Strings",
										"nameLocations": [
											"873:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2408,
										"src": "873:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:7",
									"typeName": {
										"id": 602,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 605,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1581,
									"src": "917:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 604,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 607,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1581,
									"src": "964:22:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 606,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 611,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1581,
									"src": "993:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 610,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:7",
										"keyType": {
											"id": 608,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 609,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:7",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 615,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1581,
									"src": "1051:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 614,
										"keyName": "owner",
										"keyNameLocation": "1067:5:7",
										"keyType": {
											"id": 612,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 613,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 619,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1581,
									"src": "1109:59:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 618,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:7",
										"keyType": {
											"id": 616,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 617,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:7",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 625,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:7",
									"nodeType": "VariableDeclaration",
									"scope": 1581,
									"src": "1175:86:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 624,
										"keyName": "owner",
										"keyNameLocation": "1191:5:7",
										"keyType": {
											"id": 620,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 623,
											"keyName": "operator",
											"keyNameLocation": "1216:8:7",
											"keyType": {
												"id": 621,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 622,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "1437:57:7",
										"statements": [
											{
												"expression": {
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 633,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "1447:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 634,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "1455:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:7"
											},
											{
												"expression": {
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 637,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "1470:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 638,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "1480:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:7"
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:7",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 642,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1393:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 627,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1414:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 629,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:7"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:7"
									},
									"scope": 1581,
									"src": "1381:113:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2431,
										2443
									],
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "1669:192:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 653,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "1698:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 655,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1698,
																			"src": "1718:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1698_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1698_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 654,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1698",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:7",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 659,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "1754:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 661,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1870,
																			"src": "1774:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1870_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1870_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 660,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1870",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:7",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 668,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "1842:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 666,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1581_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:7",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2431,
															"src": "1818:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 652,
												"id": 671,
												"nodeType": "Return",
												"src": "1679:175:7"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 649,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 647,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2432,
												"src": "1637:6:7"
											},
											{
												"id": 648,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2444,
												"src": "1645:7:7"
											}
										],
										"src": "1628:25:7"
									},
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "1588:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 644,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:7"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "1663:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 650,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:7"
									},
									"scope": 1581,
									"src": "1561:300:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1623
									],
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "1992:136:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 681,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "2006:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 682,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 695,
												"nodeType": "IfStatement",
												"src": "2002:87:7",
												"trueBody": {
													"id": 694,
													"nodeType": "Block",
													"src": "2027:62:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 688,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 687,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "2048:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 693,
															"nodeType": "RevertStatement",
															"src": "2041:37:7"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 696,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "2105:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 698,
													"indexExpression": {
														"id": 697,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "2115:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 680,
												"id": 699,
												"nodeType": "Return",
												"src": "2098:23:7"
											}
										]
									},
									"documentation": {
										"id": 674,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:7",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "1939:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:7"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "1983:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:7"
									},
									"scope": 1581,
									"src": "1920:208:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1631
									],
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "2257:46:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 710,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "2288:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 709,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1516,
														"src": "2274:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 708,
												"id": 712,
												"nodeType": "Return",
												"src": "2267:29:7"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:7",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "2202:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:7"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "2248:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:7"
									},
									"scope": 1581,
									"src": "2185:118:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1855
									],
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "2425:29:7",
										"statements": [
											{
												"expression": {
													"id": 720,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 605,
													"src": "2442:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 719,
												"id": 721,
												"nodeType": "Return",
												"src": "2435:12:7"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:7",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:7"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "2410:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 717,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:7"
									},
									"scope": 1581,
									"src": "2365:89:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1861
									],
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "2580:31:7",
										"statements": [
											{
												"expression": {
													"id": 729,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 607,
													"src": "2597:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 728,
												"id": 730,
												"nodeType": "Return",
												"src": "2590:14:7"
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:7",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:7"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "2565:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 726,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:7"
									},
									"scope": 1581,
									"src": "2518:93:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1869
									],
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "2756:176:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 741,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "2780:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 740,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1516,
														"src": "2766:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:7"
											},
											{
												"assignments": [
													745
												],
												"declarations": [
													{
														"constant": false,
														"id": 745,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 767,
														"src": "2799:21:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 744,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 748,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 746,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "2823:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:7"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 751,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 745,
																		"src": "2856:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 749,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:7",
													"trueExpression": {
														"arguments": [
															{
																"id": 759,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "2892:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 760,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 735,
																		"src": "2901:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:7",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2221,
																	"src": "2901:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 756,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:7",
																	"typeDescriptions": {}
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:7",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 739,
												"id": 766,
												"nodeType": "Return",
												"src": "2843:82:7"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:7",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "2695:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:7"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "2741:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 737,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:7"
									},
									"scope": 1581,
									"src": "2677:255:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "3240:26:7",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 773,
												"id": 775,
												"nodeType": "Return",
												"src": "3250:9:7"
											}
										]
									},
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:7",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:7"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "3225:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 771,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:7"
									},
									"scope": 1581,
									"src": "3174:92:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1671
									],
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "3384:52:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 786,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "3403:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "3407:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 788,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2135,
																"src": "3416:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 785,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1384,
															1450
														],
														"referencedDeclaration": 1384,
														"src": "3394:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:7"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:7",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "3340:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "3352:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:7"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:7"
									},
									"scope": 1581,
									"src": "3323:113:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1687
									],
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "3573:78:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 802,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "3597:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 801,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1516,
														"src": "3583:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 806,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "3636:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 805,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "3623:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 800,
												"id": 808,
												"nodeType": "Return",
												"src": "3616:28:7"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:7",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "3518:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:7"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "3564:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:7"
									},
									"scope": 1581,
									"src": "3497:154:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1679
									],
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "3793:69:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 819,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2135,
																"src": "3822:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 821,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "3836:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 822,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "3846:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 818,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "3803:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:7"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:7",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "3745:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "3763:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 814,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:7"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:7"
									},
									"scope": 1581,
									"src": "3718:144:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1697
									],
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "4022:59:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 836,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "4039:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 838,
														"indexExpression": {
															"id": 837,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "4058:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 840,
													"indexExpression": {
														"id": 839,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "4065:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 835,
												"id": 841,
												"nodeType": "Return",
												"src": "4032:42:7"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:7",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "3954:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "3969:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:7"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "4016:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 833,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:7"
									},
									"scope": 1581,
									"src": "3928:153:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1663
									],
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "4223:498:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 853,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "4237:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 854,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 867,
												"nodeType": "IfStatement",
												"src": "4233:87:7",
												"trueBody": {
													"id": 866,
													"nodeType": "Block",
													"src": "4255:65:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 862,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 860,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 859,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "4276:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 865,
															"nodeType": "RevertStatement",
															"src": "4269:40:7"
														}
													]
												}
											},
											{
												"assignments": [
													869
												],
												"declarations": [
													{
														"constant": false,
														"id": 869,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 888,
														"src": "4538:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 868,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 876,
												"initialValue": {
													"arguments": [
														{
															"id": 871,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "4570:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 872,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "4574:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 873,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2135,
																"src": "4583:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 870,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "4562:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 877,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "4610:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 878,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "4627:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 887,
												"nodeType": "IfStatement",
												"src": "4606:109:7",
												"trueBody": {
													"id": 886,
													"nodeType": "Block",
													"src": "4633:82:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 881,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "4675:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 882,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 850,
																		"src": "4681:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 883,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 869,
																		"src": "4690:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 880,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "4654:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 885,
															"nodeType": "RevertStatement",
															"src": "4647:57:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:7",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "4165:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "4179:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "4191:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:7"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:7"
									},
									"scope": 1581,
									"src": "4143:578:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1653
									],
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "4863:56:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 900,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "4890:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 901,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "4896:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 902,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "4900:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 899,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															907,
															933
														],
														"referencedDeclaration": 933,
														"src": "4873:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:7"
											}
										]
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:7",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "4813:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "4827:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "4839:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:7"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:7"
									},
									"scope": 1581,
									"src": "4787:132:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1643
									],
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "5088:105:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 920,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "5111:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 921,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "5117:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 922,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "5121:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 919,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "5098:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 926,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "5162:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "5168:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 928,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "5172:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 929,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "5181:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 925,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "5139:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 931,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:7"
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:7",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5011:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5025:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5037:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5054:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 915,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:7"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:7"
									},
									"scope": 1581,
									"src": "4985:208:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "5782:40:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 941,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "5799:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 943,
													"indexExpression": {
														"id": 942,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "5807:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 940,
												"id": 944,
												"nodeType": "Return",
												"src": "5792:23:7"
											}
										]
									},
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:7",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "5725:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:7"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "5773:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:7"
									},
									"scope": 1581,
									"src": "5707:115:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 958,
										"nodeType": "Block",
										"src": "6017:48:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 954,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "6034:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 956,
													"indexExpression": {
														"id": 955,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "6050:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 953,
												"id": 957,
												"nodeType": "Return",
												"src": "6027:31:7"
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:7",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "5960:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:7"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "6008:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:7"
									},
									"scope": 1581,
									"src": "5938:127:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "6485:163:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 971,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "6514:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 972,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 977,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 962,
																			"src": "6552:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 978,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 964,
																			"src": "6561:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 981,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 962,
																				"src": "6589:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 982,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "6596:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 980,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 843,
																			"src": "6572:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 986,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 966,
																				"src": "6621:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 985,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "6608:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 988,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 964,
																		"src": "6633:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 991,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 970,
												"id": 993,
												"nodeType": "Return",
												"src": "6495:146:7"
											}
										]
									},
									"documentation": {
										"id": 960,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:7",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "6399:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "6414:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "6431:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:7"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "6479:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 968,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:7"
									},
									"scope": 1581,
									"src": "6376:272:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "7179:271:7",
										"statements": [
											{
												"condition": {
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:7",
													"subExpression": {
														"arguments": [
															{
																"id": 1006,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "7208:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1007,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "7215:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1008,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "7224:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1005,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "7194:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "7189:255:7",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "7234:210:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1011,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "7252:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1012,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1027,
																"nodeType": "Block",
																"src": "7350:84:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1023,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1000,
																					"src": "7402:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1024,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1002,
																					"src": "7411:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1022,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 110,
																				"src": "7375:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1026,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:7"
																	}
																]
															},
															"id": 1028,
															"nodeType": "IfStatement",
															"src": "7248:186:7",
															"trueBody": {
																"id": 1021,
																"nodeType": "Block",
																"src": "7273:71:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1018,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1002,
																					"src": "7321:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1017,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 84,
																				"src": "7298:22:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 1019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1020,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:7"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:7",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "7108:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "7123:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "7140:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:7"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:7"
									},
									"scope": 1581,
									"src": "7082:368:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1047,
										"nodeType": "Block",
										"src": "8167:78:7",
										"statements": [
											{
												"id": 1046,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:7",
												"statements": [
													{
														"expression": {
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1040,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "8201:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1042,
																"indexExpression": {
																	"id": 1041,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "8211:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1043,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "8223:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1045,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:7",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 1048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "8118:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "8135:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1036,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:7"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:7"
									},
									"scope": 1581,
									"src": "8092:153:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "8933:700:7",
										"statements": [
											{
												"assignments": [
													1061
												],
												"declarations": [
													{
														"constant": false,
														"id": 1061,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1137,
														"src": "8943:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1060,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1065,
												"initialValue": {
													"arguments": [
														{
															"id": 1063,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "8967:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1062,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "8958:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1066,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "9035:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1067,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1079,
												"nodeType": "IfStatement",
												"src": "9031:86:7",
												"trueBody": {
													"id": 1078,
													"nodeType": "Block",
													"src": "9055:62:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1073,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "9086:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1074,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1055,
																		"src": "9092:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1075,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1053,
																		"src": "9098:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1072,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1032,
																	"src": "9069:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1077,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1080,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "9161:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1081,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1107,
												"nodeType": "IfStatement",
												"src": "9157:256:7",
												"trueBody": {
													"id": 1106,
													"nodeType": "Block",
													"src": "9181:232:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1087,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1091,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1053,
																		"src": "9298:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1092,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 1096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1086,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1384,
																		1450
																	],
																	"referencedDeclaration": 1450,
																	"src": "9277:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1098,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:7"
														},
														{
															"id": 1105,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:7",
															"statements": [
																{
																	"expression": {
																		"id": 1103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1099,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 615,
																				"src": "9368:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1101,
																			"indexExpression": {
																				"id": 1100,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1061,
																				"src": "9378:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1104,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:7"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "9427:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1109,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1122,
												"nodeType": "IfStatement",
												"src": "9423:107:7",
												"trueBody": {
													"id": 1121,
													"nodeType": "Block",
													"src": "9445:85:7",
													"statements": [
														{
															"id": 1120,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:7",
															"statements": [
																{
																	"expression": {
																		"id": 1118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1114,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 615,
																				"src": "9487:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1116,
																			"indexExpression": {
																				"id": 1115,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1051,
																				"src": "9497:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1119,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:7"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1123,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "9540:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1125,
														"indexExpression": {
															"id": 1124,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "9548:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1126,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "9559:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1130,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "9586:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1131,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "9592:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1132,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "9596:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1129,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "9577:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "EmitStatement",
												"src": "9572:32:7"
											},
											{
												"expression": {
													"id": 1135,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1061,
													"src": "9622:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1059,
												"id": 1136,
												"nodeType": "Return",
												"src": "9615:11:7"
											}
										]
									},
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:7",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "8855:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "8867:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "8884:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:7"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "8924:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:7"
									},
									"scope": 1581,
									"src": "8838:795:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "10008:274:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1146,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "10022:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1147,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1160,
												"nodeType": "IfStatement",
												"src": "10018:87:7",
												"trueBody": {
													"id": 1159,
													"nodeType": "Block",
													"src": "10040:65:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1155,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1153,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1152,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "10061:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1158,
															"nodeType": "RevertStatement",
															"src": "10054:40:7"
														}
													]
												}
											},
											{
												"assignments": [
													1162
												],
												"declarations": [
													{
														"constant": false,
														"id": 1162,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1187,
														"src": "10114:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1161,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1171,
												"initialValue": {
													"arguments": [
														{
															"id": 1164,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "10146:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1165,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "10150:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1166,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1163,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "10138:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "10184:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1173,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "10180:96:7",
												"trueBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "10213:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1181,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1179,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1178,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "10234:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1184,
															"nodeType": "RevertStatement",
															"src": "10227:38:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:7",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "9970:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "9982:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:7"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:7"
									},
									"scope": 1581,
									"src": "9955:327:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1202,
										"nodeType": "Block",
										"src": "10690:43:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1197,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "10710:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1198,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "10714:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1196,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1203,
															1229
														],
														"referencedDeclaration": 1229,
														"src": "10700:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:7"
											}
										]
									},
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:7",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "10652:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "10664:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:7"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:7"
									},
									"scope": 1581,
									"src": "10633:100:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "11038:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1214,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "11054:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1215,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "11058:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1213,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "11048:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1219,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1223,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "11111:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1224,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "11115:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1225,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "11124:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1218,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "11076:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:7"
											}
										]
									},
									"documentation": {
										"id": 1204,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:7",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "10973:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "10985:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "11002:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:7"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:7"
									},
									"scope": 1581,
									"src": "10954:182:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1261,
										"nodeType": "Block",
										"src": "11503:186:7",
										"statements": [
											{
												"assignments": [
													1236
												],
												"declarations": [
													{
														"constant": false,
														"id": 1236,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1261,
														"src": "11513:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1235,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1248,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1238,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1242,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "11557:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1243,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1237,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "11537:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1249,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "11591:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1250,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1260,
												"nodeType": "IfStatement",
												"src": "11587:96:7",
												"trueBody": {
													"id": 1259,
													"nodeType": "Block",
													"src": "11620:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1256,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1232,
																		"src": "11664:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1255,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "11641:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1258,
															"nodeType": "RevertStatement",
															"src": "11634:38:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:7",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "11477:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:7"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:7"
									},
									"scope": 1581,
									"src": "11462:227:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1321,
										"nodeType": "Block",
										"src": "12084:389:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1272,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "12098:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1273,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1286,
												"nodeType": "IfStatement",
												"src": "12094:87:7",
												"trueBody": {
													"id": 1285,
													"nodeType": "Block",
													"src": "12116:65:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1279,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1278,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "12137:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1284,
															"nodeType": "RevertStatement",
															"src": "12130:40:7"
														}
													]
												}
											},
											{
												"assignments": [
													1288
												],
												"declarations": [
													{
														"constant": false,
														"id": 1288,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1321,
														"src": "12190:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1287,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1297,
												"initialValue": {
													"arguments": [
														{
															"id": 1290,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "12222:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1291,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "12226:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1292,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1289,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "12214:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1298,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "12260:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1299,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1309,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "12362:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1310,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "12379:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1319,
													"nodeType": "IfStatement",
													"src": "12358:109:7",
													"trueBody": {
														"id": 1318,
														"nodeType": "Block",
														"src": "12385:82:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1313,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "12427:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1314,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1269,
																			"src": "12433:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1315,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1288,
																			"src": "12442:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1312,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 93,
																		"src": "12406:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 1316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1317,
																"nodeType": "RevertStatement",
																"src": "12399:57:7"
															}
														]
													}
												},
												"id": 1320,
												"nodeType": "IfStatement",
												"src": "12256:211:7",
												"trueBody": {
													"id": 1308,
													"nodeType": "Block",
													"src": "12289:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1305,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "12333:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1304,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "12310:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1307,
															"nodeType": "RevertStatement",
															"src": "12303:38:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1263,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:7",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "12032:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "12046:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "12058:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:7"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:7"
									},
									"scope": 1581,
									"src": "12013:460:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "13481:53:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1333,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "13505:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1334,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "13511:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1335,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "13515:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1332,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1340,
															1366
														],
														"referencedDeclaration": 1366,
														"src": "13491:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1338,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:7"
											}
										]
									},
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "13429:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "13443:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "13455:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:7"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:7"
									},
									"scope": 1581,
									"src": "13406:128:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1365,
										"nodeType": "Block",
										"src": "13873:102:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1353,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "13893:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1354,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "13899:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1355,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "13903:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1352,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "13883:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1357,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1359,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "13944:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1360,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "13950:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1361,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "13954:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1362,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "13963:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1358,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "13921:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1364,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:7"
											}
										]
									},
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:7",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "13794:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "13808:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "13820:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "13837:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:7"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:7"
									},
									"scope": 1581,
									"src": "13771:204:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "14488:50:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1377,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "14507:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1378,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "14511:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1379,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "14520:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1376,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1384,
															1450
														],
														"referencedDeclaration": 1450,
														"src": "14498:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:7"
											}
										]
									},
									"documentation": {
										"id": 1367,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:7",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "14436:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "14448:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "14465:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:7"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:7"
									},
									"scope": 1581,
									"src": "14418:120:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1449,
										"nodeType": "Block",
										"src": "14814:568:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1396,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "14880:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1397,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "14893:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1398,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1442,
												"nodeType": "IfStatement",
												"src": "14876:460:7",
												"trueBody": {
													"id": 1441,
													"nodeType": "Block",
													"src": "14913:423:7",
													"statements": [
														{
															"assignments": [
																1405
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1405,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1441,
																	"src": "14927:13:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1404,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:7",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1409,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1407,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1389,
																		"src": "14957:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1406,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1516,
																	"src": "14943:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1410,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1391,
																			"src": "15093:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1413,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1412,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1411,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1416,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1405,
																			"src": "15115:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1417,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1391,
																			"src": "15124:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:7",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1421,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1405,
																				"src": "15150:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1422,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1391,
																				"src": "15157:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1420,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 843,
																			"src": "15133:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1431,
															"nodeType": "IfStatement",
															"src": "15089:142:7",
															"trueBody": {
																"id": 1430,
																"nodeType": "Block",
																"src": "15164:67:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1427,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1391,
																					"src": "15211:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1426,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 115,
																				"src": "15189:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1429,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:7"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1432,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1393,
																"src": "15249:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1440,
															"nodeType": "IfStatement",
															"src": "15245:81:7",
															"trueBody": {
																"id": 1439,
																"nodeType": "Block",
																"src": "15260:66:7",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1434,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1405,
																					"src": "15292:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1435,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1387,
																					"src": "15299:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1436,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1389,
																					"src": "15303:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1433,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1606,
																				"src": "15283:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1438,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:7"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1443,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "15346:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1445,
														"indexExpression": {
															"id": 1444,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "15362:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1446,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1387,
														"src": "15373:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1448,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:7"
											}
										]
									},
									"documentation": {
										"id": 1385,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:7",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "14738:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "14750:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "14767:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "14781:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:7"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:7"
									},
									"scope": 1581,
									"src": "14720:662:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1486,
										"nodeType": "Block",
										"src": "15684:219:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1460,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "15698:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1461,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1471,
												"nodeType": "IfStatement",
												"src": "15694:91:7",
												"trueBody": {
													"id": 1470,
													"nodeType": "Block",
													"src": "15722:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1467,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1455,
																		"src": "15765:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1466,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "15743:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1469,
															"nodeType": "RevertStatement",
															"src": "15736:38:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1472,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 625,
																"src": "15794:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1475,
															"indexExpression": {
																"id": 1473,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1453,
																"src": "15813:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1476,
														"indexExpression": {
															"id": 1474,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "15820:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1477,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "15832:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1481,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "15870:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1482,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "15877:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1483,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "15887:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1480,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1615,
														"src": "15855:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1485,
												"nodeType": "EmitStatement",
												"src": "15850:46:7"
											}
										]
									},
									"documentation": {
										"id": 1451,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:7",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "15619:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "15634:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "15652:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1456,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:7"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:7"
									},
									"scope": 1581,
									"src": "15591:312:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1515,
										"nodeType": "Block",
										"src": "16210:169:7",
										"statements": [
											{
												"assignments": [
													1496
												],
												"declarations": [
													{
														"constant": false,
														"id": 1496,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1515,
														"src": "16220:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1495,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1500,
												"initialValue": {
													"arguments": [
														{
															"id": 1498,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "16245:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1497,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "16236:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1501,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "16267:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1502,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1512,
												"nodeType": "IfStatement",
												"src": "16263:88:7",
												"trueBody": {
													"id": 1511,
													"nodeType": "Block",
													"src": "16288:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1508,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1490,
																		"src": "16332:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1507,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "16309:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1510,
															"nodeType": "RevertStatement",
															"src": "16302:38:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1513,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1496,
													"src": "16367:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1494,
												"id": 1514,
												"nodeType": "Return",
												"src": "16360:12:7"
											}
										]
									},
									"documentation": {
										"id": 1488,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:7",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "16161:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:7"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "16201:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:7"
									},
									"scope": 1581,
									"src": "16138:241:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "17020:680:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1528,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1521,
																"src": "17034:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1531,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1578,
												"nodeType": "IfStatement",
												"src": "17030:664:7",
												"trueBody": {
													"id": 1577,
													"nodeType": "Block",
													"src": "17054:640:7",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1557,
																		"nodeType": "Block",
																		"src": "17168:162:7",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1550,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1546,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1544,
																						"src": "17190:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1547,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1716,
																								"src": "17200:15:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1716_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1548,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:7",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1715,
																							"src": "17200:32:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1549,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:7",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1556,
																				"nodeType": "IfStatement",
																				"src": "17186:130:7",
																				"trueBody": {
																					"id": 1555,
																					"nodeType": "Block",
																					"src": "17243:73:7",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1552,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1521,
																										"src": "17294:2:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1551,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 103,
																									"src": "17272:21:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1553,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:7",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1554,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:7"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1558,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1545,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1544,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1558,
																				"src": "17153:13:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1543,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:7"
																	},
																	"src": "17144:186:7"
																},
																{
																	"block": {
																		"id": 1574,
																		"nodeType": "Block",
																		"src": "17359:325:7",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1565,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1562,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1560,
																							"src": "17381:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1563,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:7",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1564,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1572,
																					"nodeType": "Block",
																					"src": "17480:190:7",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:7",
																								"nodeType": "YulBlock",
																								"src": "17566:86:7",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:7",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:7",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:7",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:7"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:7"
																													},
																													"nativeSrc": "17599:15:7",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:7"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:7",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:7"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:7",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:7"
																													},
																													"nativeSrc": "17616:13:7",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:7"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:7",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:7"
																											},
																											"nativeSrc": "17592:38:7",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:7"
																										},
																										"nativeSrc": "17592:38:7",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:7"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1560,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:7",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1560,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:7",
																									"valueSize": 1
																								}
																							],
																							"id": 1571,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:7"
																						}
																					]
																				},
																				"id": 1573,
																				"nodeType": "IfStatement",
																				"src": "17377:293:7",
																				"trueBody": {
																					"id": 1570,
																					"nodeType": "Block",
																					"src": "17401:73:7",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1567,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1521,
																										"src": "17452:2:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1566,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 103,
																									"src": "17430:21:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1568,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:7",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1569,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:7"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1575,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1561,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1560,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1575,
																				"src": "17338:19:7",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1559,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:7"
																	},
																	"src": "17331:353:7"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1537,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2135,
																			"src": "17109:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1539,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1519,
																		"src": "17123:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1540,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "17129:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1541,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1525,
																		"src": "17138:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1534,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1521,
																				"src": "17088:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1533,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1716,
																			"src": "17072:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1716_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1716",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:7",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1715,
																	"src": "17072:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:7",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1576,
															"nodeType": "TryStatement",
															"src": "17068:616:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1517,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:7",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "16950:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "16964:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "16976:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "16993:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:7"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:7"
									},
									"scope": 1581,
									"src": "16918:782:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1582,
							"src": "776:16926:7",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": [
								1597,
								1606,
								1615
							]
						}
					],
					"src": "107:17596:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2444
						],
						"IERC721": [
							1698
						]
					},
					"id": 1699,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1583,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1585,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1699,
							"sourceUnit": 2445,
							"src": "134:62:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1584,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2444,
										"src": "142:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1587,
										"name": "IERC165",
										"nameLocations": [
											"287:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2444,
										"src": "287:7:8"
									},
									"id": 1588,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:8"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1586,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:8",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1698,
							"linearizedBaseContracts": [
								1698,
								2444
							],
							"name": "IERC721",
							"nameLocation": "276:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1589,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:8",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1597,
									"name": "Transfer",
									"nameLocation": "400:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "409:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1593,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "431:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "451:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:8"
									},
									"src": "394:82:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1598,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:8",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1606,
									"name": "Approval",
									"nameLocation": "587:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "596:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "619:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "645:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:8"
									},
									"src": "581:89:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1607,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:8",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1615,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "819:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "842:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1613,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "868:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1612,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:8"
									},
									"src": "798:85:8"
								},
								{
									"documentation": {
										"id": 1616,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:8",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1623,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "989:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:8"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "1027:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:8"
									},
									"scope": 1698,
									"src": "970:74:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1624,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:8",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "1203:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:8"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "1243:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:8"
									},
									"scope": 1698,
									"src": "1186:72:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1632,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:8",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "1860:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "1874:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "1886:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "1903:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:8"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:8"
									},
									"scope": 1698,
									"src": "1834:99:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1644,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:8",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1653,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "2675:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "2689:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "2701:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:8"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:8"
									},
									"scope": 1698,
									"src": "2649:78:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1654,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:8",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1663,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "3492:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "3506:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "3518:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:8"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:8"
									},
									"scope": 1698,
									"src": "3470:74:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1664,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:8",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "4024:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "4036:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:8"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:8"
									},
									"scope": 1698,
									"src": "4007:55:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1672,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:8",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1679,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "4415:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "4433:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1675,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:8"
									},
									"returnParameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:8"
									},
									"scope": 1698,
									"src": "4388:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:8",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "4628:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:8"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "4668:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:8"
									},
									"scope": 1698,
									"src": "4607:79:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:8",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1697,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "4861:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "4876:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:8"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "4917:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1694,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:8"
									},
									"scope": 1698,
									"src": "4835:88:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1699,
							"src": "266:4659:8",
							"usedErrors": [],
							"usedEvents": [
								1597,
								1606,
								1615
							]
						}
					],
					"src": "108:4818:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1716
						]
					},
					"id": 1717,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1700,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1701,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:9",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1716,
							"linearizedBaseContracts": [
								1716
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1702,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:9",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1715,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "867:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "893:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "915:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "940:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1709,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:9"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "984:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1712,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:9"
									},
									"scope": 1716,
									"src": "832:160:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1717,
							"src": "295:699:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1581
						],
						"ERC721URIStorage": [
							1842
						],
						"IERC165": [
							2444
						],
						"IERC4906": [
							27
						],
						"Strings": [
							2408
						]
					},
					"id": 1843,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1718,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1720,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1843,
							"sourceUnit": 1582,
							"src": "154:37:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1719,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1581,
										"src": "162:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1722,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1843,
							"sourceUnit": 2409,
							"src": "192:51:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1721,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2408,
										"src": "200:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1724,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1843,
							"sourceUnit": 28,
							"src": "244:58:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1723,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 27,
										"src": "252:8:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1726,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1843,
							"sourceUnit": 4,
							"src": "303:56:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1725,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2444,
										"src": "311:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1728,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 27,
										"src": "469:8:10"
									},
									"id": 1729,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:10"
								},
								{
									"baseName": {
										"id": 1730,
										"name": "ERC721",
										"nameLocations": [
											"479:6:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1581,
										"src": "479:6:10"
									},
									"id": 1731,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:10"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1727,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:10",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1842,
							"linearizedBaseContracts": [
								1842,
								1581,
								121,
								1870,
								27,
								1698,
								2432,
								2444,
								2153
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1734,
									"libraryName": {
										"id": 1732,
										"name": "Strings",
										"nameLocations": [
											"498:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2408,
										"src": "498:7:10"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:10",
									"typeName": {
										"id": 1733,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1740,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "730:20:10",
									"nodeType": "VariableDeclaration",
									"scope": 1842,
									"src": "706:65:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1735,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "706:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1738,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "760:10:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1737,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "753:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1736,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:10",
												"typeDescriptions": {}
											}
										},
										"id": 1739,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "753:18:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1744,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "860:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 1842,
									"src": "817:53:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1743,
										"keyName": "tokenId",
										"keyNameLocation": "833:7:10",
										"keyType": {
											"id": 1741,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "817:34:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1742,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "844:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										673,
										2443
									],
									"body": {
										"id": 1764,
										"nodeType": "Block",
										"src": "1045:99:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1755,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "1062:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1756,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "1077:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1062:35:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1760,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1747,
																"src": "1125:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1758,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1101:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1842_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:17:10",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 673,
															"src": "1101:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1101:36:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1062:75:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1754,
												"id": 1763,
												"nodeType": "Return",
												"src": "1055:82:10"
											}
										]
									},
									"documentation": {
										"id": 1745,
										"nodeType": "StructuredDocumentation",
										"src": "877:55:10",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "946:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1751,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1749,
												"name": "ERC721",
												"nameLocations": [
													"1013:6:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1581,
												"src": "1013:6:10"
											},
											{
												"id": 1750,
												"name": "IERC165",
												"nameLocations": [
													"1021:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2444,
												"src": "1021:7:10"
											}
										],
										"src": "1004:25:10"
									},
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "971:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "964:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1746,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:20:10"
									},
									"returnParameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "1039:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1752,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:6:10"
									},
									"scope": 1842,
									"src": "937:207:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										768
									],
									"body": {
										"id": 1821,
										"nodeType": "Block",
										"src": "1298:505:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1775,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "1322:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1774,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1516,
														"src": "1308:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1777,
												"nodeType": "ExpressionStatement",
												"src": "1308:22:10"
											},
											{
												"assignments": [
													1779
												],
												"declarations": [
													{
														"constant": false,
														"id": 1779,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1355:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1821,
														"src": "1341:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1778,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1341:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1783,
												"initialValue": {
													"baseExpression": {
														"id": 1780,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1744,
														"src": "1367:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1782,
													"indexExpression": {
														"id": 1781,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1768,
														"src": "1378:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1367:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:45:10"
											},
											{
												"assignments": [
													1785
												],
												"declarations": [
													{
														"constant": false,
														"id": 1785,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1410:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1821,
														"src": "1396:18:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1784,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1396:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1788,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1786,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "1417:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1396:31:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1791,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1785,
																	"src": "1506:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1500:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1789,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1500:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1500:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1522:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1500:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1799,
												"nodeType": "IfStatement",
												"src": "1496:70:10",
												"trueBody": {
													"id": 1798,
													"nodeType": "Block",
													"src": "1525:41:10",
													"statements": [
														{
															"expression": {
																"id": 1796,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "1546:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1773,
															"id": 1797,
															"nodeType": "Return",
															"src": "1539:16:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1802,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1779,
																	"src": "1671:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1665:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1800,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1665:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:16:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1682:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1665:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1805,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1691:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1665:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1815,
												"nodeType": "IfStatement",
												"src": "1661:95:10",
												"trueBody": {
													"id": 1814,
													"nodeType": "Block",
													"src": "1694:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1810,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1785,
																		"src": "1729:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1811,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "1735:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1807,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:6:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:10",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1715:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:30:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1773,
															"id": 1813,
															"nodeType": "Return",
															"src": "1708:37:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1818,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "1788:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1816,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1773:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1842_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1779:8:10",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 768,
														"src": "1773:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1773,
												"id": 1820,
												"nodeType": "Return",
												"src": "1766:30:10"
											}
										]
									},
									"documentation": {
										"id": 1766,
										"nodeType": "StructuredDocumentation",
										"src": "1150:55:10",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1219:8:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1770,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1265:8:10"
									},
									"parameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "1228:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:17:10"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "1283:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1771,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:10"
									},
									"scope": 1842,
									"src": "1210:593:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1840,
										"nodeType": "Block",
										"src": "2003:86:10",
										"statements": [
											{
												"expression": {
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1830,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "2013:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1832,
														"indexExpression": {
															"id": 1831,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "2024:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1833,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1827,
														"src": "2035:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1835,
												"nodeType": "ExpressionStatement",
												"src": "2013:31:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1837,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "2074:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1836,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "2059:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1839,
												"nodeType": "EmitStatement",
												"src": "2054:28:10"
											}
										]
									},
									"documentation": {
										"id": 1823,
										"nodeType": "StructuredDocumentation",
										"src": "1809:108:10",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1931:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1952:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "1944:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1975:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "1961:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1826,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:42:10"
									},
									"returnParameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:10"
									},
									"scope": 1842,
									"src": "1922:167:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1843,
							"src": "431:1660:10",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": [
								19,
								26,
								1597,
								1606,
								1615
							]
						}
					],
					"src": "128:1964:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1698
						],
						"IERC721Metadata": [
							1870
						]
					},
					"id": 1871,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1844,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1846,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1871,
							"sourceUnit": 1699,
							"src": "153:39:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1845,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1698,
										"src": "161:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1848,
										"name": "IERC721",
										"nameLocations": [
											"357:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1698,
										"src": "357:7:11"
									},
									"id": 1849,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:11"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1847,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:11",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1870,
							"linearizedBaseContracts": [
								1870,
								1698,
								2444
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1850,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:11",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1855,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:11"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "473:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1852,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:11"
									},
									"scope": 1870,
									"src": "434:54:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1856,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:11",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:11"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "600:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1858,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:11"
									},
									"scope": 1870,
									"src": "559:56:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1862,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:11",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1869,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "734:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:11"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "774:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1866,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:11"
									},
									"scope": 1870,
									"src": "716:73:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1871,
							"src": "328:463:11",
							"usedErrors": [],
							"usedEvents": [
								1597,
								1606,
								1615
							]
						}
					],
					"src": "127:665:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2123
						]
					},
					"id": 2124,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1872,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1873,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:12",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2123,
							"linearizedBaseContracts": [
								2123
							],
							"name": "Address",
							"nameLocation": "203:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1874,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:12",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1878,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "349:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:12"
									},
									"src": "316:50:12"
								},
								{
									"documentation": {
										"id": 1879,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:12",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1883,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "475:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:12"
									},
									"src": "452:39:12"
								},
								{
									"documentation": {
										"id": 1884,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:12",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1886,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:12"
									},
									"src": "591:24:12"
								},
								{
									"body": {
										"id": 1926,
										"nodeType": "Block",
										"src": "1602:260:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1896,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2123",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2123",
																		"typeString": "library Address"
																	}
																],
																"id": 1895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1894,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:12",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1899,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1891,
														"src": "1640:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1909,
												"nodeType": "IfStatement",
												"src": "1612:109:12",
												"trueBody": {
													"id": 1908,
													"nodeType": "Block",
													"src": "1648:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1904,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$2123",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$2123",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1902,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1901,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "1669:26:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1907,
															"nodeType": "RevertStatement",
															"src": "1662:48:12"
														}
													]
												}
											},
											{
												"assignments": [
													1911,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1911,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1926,
														"src": "1732:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1910,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1918,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1912,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "1750:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:12",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1914,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1891,
																"src": "1772:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:12"
											},
											{
												"condition": {
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:12",
													"subExpression": {
														"id": 1919,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1911,
														"src": "1798:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1925,
												"nodeType": "IfStatement",
												"src": "1793:63:12",
												"trueBody": {
													"id": 1924,
													"nodeType": "Block",
													"src": "1807:49:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1921,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1886,
																	"src": "1828:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1923,
															"nodeType": "RevertStatement",
															"src": "1821:24:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:12",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "1550:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:12",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "1577:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:12"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:12"
									},
									"scope": 2123,
									"src": "1531:331:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1943,
										"nodeType": "Block",
										"src": "2794:62:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1938,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1930,
															"src": "2833:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1939,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "2841:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1937,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1990,
														"src": "2811:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1936,
												"id": 1942,
												"nodeType": "Return",
												"src": "2804:45:12"
											}
										]
									},
									"documentation": {
										"id": 1928,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:12",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "2727:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "2743:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1931,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:12"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "2780:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1934,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:12"
									},
									"scope": 2123,
									"src": "2705:151:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1989,
										"nodeType": "Block",
										"src": "3293:279:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1958,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2123",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2123",
																		"typeString": "library Address"
																	}
																],
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1956,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:12",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1961,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1951,
														"src": "3331:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1971,
												"nodeType": "IfStatement",
												"src": "3303:108:12",
												"trueBody": {
													"id": 1970,
													"nodeType": "Block",
													"src": "3338:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1966,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$2123",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$2123",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1964,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1963,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "3359:26:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1969,
															"nodeType": "RevertStatement",
															"src": "3352:48:12"
														}
													]
												}
											},
											{
												"assignments": [
													1973,
													1975
												],
												"declarations": [
													{
														"constant": false,
														"id": 1973,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1989,
														"src": "3421:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1972,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1975,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1989,
														"src": "3435:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1974,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1982,
												"initialValue": {
													"arguments": [
														{
															"id": 1980,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1949,
															"src": "3488:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1976,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1947,
																"src": "3462:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:12",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1978,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "3481:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1984,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1947,
															"src": "3537:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1985,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "3545:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1986,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1975,
															"src": "3554:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1983,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2082,
														"src": "3510:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1955,
												"id": 1988,
												"nodeType": "Return",
												"src": "3503:62:12"
											}
										]
									},
									"documentation": {
										"id": 1945,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:12",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "3211:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "3227:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1948,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "3246:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:12"
									},
									"returnParameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "3279:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1953,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:12"
									},
									"scope": 2123,
									"src": "3180:392:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2015,
										"nodeType": "Block",
										"src": "3811:154:12",
										"statements": [
											{
												"assignments": [
													2001,
													2003
												],
												"declarations": [
													{
														"constant": false,
														"id": 2001,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2015,
														"src": "3822:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2000,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2003,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 2015,
														"src": "3836:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2002,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2008,
												"initialValue": {
													"arguments": [
														{
															"id": 2006,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1995,
															"src": "3881:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2004,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1993,
															"src": "3863:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:12",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2010,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1993,
															"src": "3930:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2011,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "3938:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2012,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2003,
															"src": "3947:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2009,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2082,
														"src": "3903:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1999,
												"id": 2014,
												"nodeType": "Return",
												"src": "3896:62:12"
											}
										]
									},
									"documentation": {
										"id": 1991,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:12",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 2016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "3739:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "3755:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1994,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:12"
									},
									"returnParameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "3797:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1997,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:12"
									},
									"scope": 2123,
									"src": "3711:254:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2041,
										"nodeType": "Block",
										"src": "4203:156:12",
										"statements": [
											{
												"assignments": [
													2027,
													2029
												],
												"declarations": [
													{
														"constant": false,
														"id": 2027,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2041,
														"src": "4214:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2026,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2029,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 2041,
														"src": "4228:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2028,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2034,
												"initialValue": {
													"arguments": [
														{
															"id": 2032,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "4275:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2030,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2019,
															"src": "4255:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:12",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2036,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2019,
															"src": "4324:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2037,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2027,
															"src": "4332:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2038,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2029,
															"src": "4341:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2035,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2082,
														"src": "4297:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2025,
												"id": 2040,
												"nodeType": "Return",
												"src": "4290:62:12"
											}
										]
									},
									"documentation": {
										"id": 2017,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:12",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 2042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "4136:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "4152:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2020,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:12"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "4189:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2023,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:12"
									},
									"scope": 2123,
									"src": "4106:253:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2081,
										"nodeType": "Block",
										"src": "4783:424:12",
										"statements": [
											{
												"condition": {
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:12",
													"subExpression": {
														"id": 2054,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2047,
														"src": "4798:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2079,
													"nodeType": "Block",
													"src": "4857:344:12",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2061,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2049,
																			"src": "5045:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:12",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 2065,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2045,
																				"src": "5071:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 2066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:12",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:12",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2076,
															"nodeType": "IfStatement",
															"src": "5041:119:12",
															"trueBody": {
																"id": 2075,
																"nodeType": "Block",
																"src": "5096:64:12",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2072,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2045,
																					"src": "5138:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2071,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1883,
																				"src": "5121:16:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 2073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2074,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:12"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2077,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2049,
																"src": "5180:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2053,
															"id": 2078,
															"nodeType": "Return",
															"src": "5173:17:12"
														}
													]
												},
												"id": 2080,
												"nodeType": "IfStatement",
												"src": "4793:408:12",
												"trueBody": {
													"id": 2060,
													"nodeType": "Block",
													"src": "4807:44:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2057,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2049,
																		"src": "4829:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2056,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "4821:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2059,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:12",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 2082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "4670:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "4694:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2046,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "4716:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2048,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:12"
									},
									"returnParameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "4769:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2051,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:12"
									},
									"scope": 2123,
									"src": "4625:582:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2103,
										"nodeType": "Block",
										"src": "5509:122:12",
										"statements": [
											{
												"condition": {
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:12",
													"subExpression": {
														"id": 2092,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2085,
														"src": "5524:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2101,
													"nodeType": "Block",
													"src": "5583:42:12",
													"statements": [
														{
															"expression": {
																"id": 2099,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2087,
																"src": "5604:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2091,
															"id": 2100,
															"nodeType": "Return",
															"src": "5597:17:12"
														}
													]
												},
												"id": 2102,
												"nodeType": "IfStatement",
												"src": "5519:106:12",
												"trueBody": {
													"id": 2098,
													"nodeType": "Block",
													"src": "5533:44:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2095,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2087,
																		"src": "5555:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2094,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "5547:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2097,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2083,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:12",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 2104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "5433:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2084,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "5447:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2086,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:12"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "5495:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2089,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:12"
									},
									"scope": 2123,
									"src": "5407:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2121,
										"nodeType": "Block",
										"src": "5798:461:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2110,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2107,
															"src": "5874:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2119,
													"nodeType": "Block",
													"src": "6204:49:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2116,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1886,
																	"src": "6225:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2118,
															"nodeType": "RevertStatement",
															"src": "6218:24:12"
														}
													]
												},
												"id": 2120,
												"nodeType": "IfStatement",
												"src": "5870:383:12",
												"trueBody": {
													"id": 2115,
													"nodeType": "Block",
													"src": "5897:301:12",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:12",
																"nodeType": "YulBlock",
																"src": "6055:133:12",
																"statements": [
																	{
																		"nativeSrc": "6073:40:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:12"
																			},
																			"nativeSrc": "6096:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:12"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:12",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:12",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:12",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:12"
																					},
																					"nativeSrc": "6137:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:12"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:12",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:12"
																			},
																			"nativeSrc": "6130:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:12"
																		},
																		"nativeSrc": "6130:44:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:12"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 2107,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:12",
																	"valueSize": 1
																},
																{
																	"declaration": 2107,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:12",
																	"valueSize": 1
																}
															],
															"id": 2114,
															"nodeType": "InlineAssembly",
															"src": "6046:142:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2105,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:12",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 2122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "5760:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2106,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:12"
									},
									"returnParameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:12"
									},
									"scope": 2123,
									"src": "5743:516:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2124,
							"src": "195:6066:12",
							"usedErrors": [
								1878,
								1883,
								1886
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2153
						]
					},
					"id": 2154,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2125,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:13"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2126,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:13",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2153,
							"linearizedBaseContracts": [
								2153
							],
							"name": "Context",
							"nameLocation": "642:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2134,
										"nodeType": "Block",
										"src": "718:34:13",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2131,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:13",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2130,
												"id": 2133,
												"nodeType": "Return",
												"src": "728:17:13"
											}
										]
									},
									"id": 2135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:13"
									},
									"returnParameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "709:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:13"
									},
									"scope": 2153,
									"src": "656:96:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2143,
										"nodeType": "Block",
										"src": "825:32:13",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2140,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:13",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2139,
												"id": 2142,
												"nodeType": "Return",
												"src": "835:15:13"
											}
										]
									},
									"id": 2144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:13"
									},
									"returnParameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "809:14:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2137,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:13"
									},
									"scope": 2153,
									"src": "758:99:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2151,
										"nodeType": "Block",
										"src": "935:25:13",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 2149,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 2148,
												"id": 2150,
												"nodeType": "Return",
												"src": "945:8:13"
											}
										]
									},
									"id": 2152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:13"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "926:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:13"
									},
									"scope": 2153,
									"src": "863:97:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2154,
							"src": "624:338:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3498
						],
						"SignedMath": [
							3603
						],
						"Strings": [
							2408
						]
					},
					"id": 2409,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2155,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 2157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2409,
							"sourceUnit": 3499,
							"src": "127:37:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2156,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3498,
										"src": "135:4:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 2159,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2409,
							"sourceUnit": 3604,
							"src": "165:49:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2158,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3603,
										"src": "173:10:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2160,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:14",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2408,
							"linearizedBaseContracts": [
								2408
							],
							"name": "Strings",
							"nameLocation": "259:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2163,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:14",
									"nodeType": "VariableDeclaration",
									"scope": 2408,
									"src": "273:56:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2161,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2162,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:14",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2166,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 2408,
									"src": "335:42:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2164,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2165,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2167,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:14",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 2173,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "505:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "520:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:14"
									},
									"src": "470:66:14"
								},
								{
									"body": {
										"id": 2220,
										"nodeType": "Block",
										"src": "708:627:14",
										"statements": [
											{
												"id": 2219,
												"nodeType": "UncheckedBlock",
												"src": "718:611:14",
												"statements": [
													{
														"assignments": [
															2182
														],
														"declarations": [
															{
																"constant": false,
																"id": 2182,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2219,
																"src": "742:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2181,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2189,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2185,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2176,
																		"src": "770:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2183,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3498,
																		"src": "759:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3498_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:14",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3318,
																	"src": "759:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:14"
													},
													{
														"assignments": [
															2191
														],
														"declarations": [
															{
																"constant": false,
																"id": 2191,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2219,
																"src": "794:20:14",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 2190,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2196,
														"initialValue": {
															"arguments": [
																{
																	"id": 2194,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2182,
																	"src": "828:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 2192,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:14"
													},
													{
														"assignments": [
															2198
														],
														"declarations": [
															{
																"constant": false,
																"id": 2198,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:14",
																"nodeType": "VariableDeclaration",
																"scope": 2219,
																"src": "849:11:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2197,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2199,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:14"
													},
													{
														"AST": {
															"nativeSrc": "930:67:14",
															"nodeType": "YulBlock",
															"src": "930:67:14",
															"statements": [
																{
																	"nativeSrc": "948:35:14",
																	"nodeType": "YulAssignment",
																	"src": "948:35:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:14",
																						"nodeType": "YulLiteral",
																						"src": "971:2:14",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:14"
																				},
																				"nativeSrc": "967:15:14",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:14"
																		},
																		"nativeSrc": "955:28:14",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:14"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:14"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2191,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:14",
																"valueSize": 1
															},
															{
																"declaration": 2182,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:14",
																"valueSize": 1
															},
															{
																"declaration": 2198,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:14",
																"valueSize": 1
															}
														],
														"id": 2200,
														"nodeType": "InlineAssembly",
														"src": "921:76:14"
													},
													{
														"body": {
															"id": 2215,
															"nodeType": "Block",
															"src": "1023:269:14",
															"statements": [
																{
																	"expression": {
																		"id": 2203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:14",
																		"subExpression": {
																			"id": 2202,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2198,
																			"src": "1041:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2204,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:14"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:14",
																		"nodeType": "YulBlock",
																		"src": "1124:86:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:14",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:14",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:14"
																									},
																									"nativeSrc": "1164:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:14"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:14",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:14"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:14",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:14"
																							},
																							"nativeSrc": "1159:32:14",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:14",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:14"
																					},
																					"nativeSrc": "1146:46:14",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:14"
																				},
																				"nativeSrc": "1146:46:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:14"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 2163,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:14",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2198,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:14",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2176,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:14",
																			"valueSize": 1
																		}
																	],
																	"id": 2205,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:14"
																},
																{
																	"expression": {
																		"id": 2208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2206,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2176,
																			"src": "1227:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2209,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:14"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2210,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2176,
																			"src": "1260:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2214,
																	"nodeType": "IfStatement",
																	"src": "1256:21:14",
																	"trueBody": {
																		"id": 2213,
																		"nodeType": "Break",
																		"src": "1272:5:14"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2216,
														"nodeType": "WhileStatement",
														"src": "1010:282:14"
													},
													{
														"expression": {
															"id": 2217,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2191,
															"src": "1312:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2180,
														"id": 2218,
														"nodeType": "Return",
														"src": "1305:13:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2174,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "655:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:14"
									},
									"returnParameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "693:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2178,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:14"
									},
									"scope": 2408,
									"src": "637:698:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2246,
										"nodeType": "Block",
										"src": "1511:92:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2232,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2224,
																	"src": "1542:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 2236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 2237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:14",
															"trueExpression": {
																"hexValue": "2d",
																"id": 2235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2241,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2224,
																			"src": "1588:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 2239,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3603,
																			"src": "1573:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3603_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 2240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:14",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3602,
																		"src": "1573:14:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 2242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2238,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2221,
																"src": "1564:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 2230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2229,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:14",
																"typeDescriptions": {}
															}
														},
														"id": 2231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:14",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 2244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2228,
												"id": 2245,
												"nodeType": "Return",
												"src": "1521:75:14"
											}
										]
									},
									"documentation": {
										"id": 2222,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:14",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "1459:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2223,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:14"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "1496:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2226,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:14"
									},
									"scope": 2408,
									"src": "1435:168:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2266,
										"nodeType": "Block",
										"src": "1782:100:14",
										"statements": [
											{
												"id": 2265,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2256,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2250,
																	"src": "1835:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2259,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2250,
																				"src": "1854:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2257,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3498,
																				"src": "1842:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3498_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:14",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3440,
																			"src": "1842:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2255,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2267,
																	2350,
																	2370
																],
																"referencedDeclaration": 2350,
																"src": "1823:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2254,
														"id": 2264,
														"nodeType": "Return",
														"src": "1816:49:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2248,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "1729:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:14"
									},
									"returnParameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "1767:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2252,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:14"
									},
									"scope": 2408,
									"src": "1708:174:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2349,
										"nodeType": "Block",
										"src": "2095:435:14",
										"statements": [
											{
												"assignments": [
													2278
												],
												"declarations": [
													{
														"constant": false,
														"id": 2278,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2349,
														"src": "2105:18:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2277,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2280,
												"initialValue": {
													"id": 2279,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2270,
													"src": "2126:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:14"
											},
											{
												"assignments": [
													2282
												],
												"declarations": [
													{
														"constant": false,
														"id": 2282,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2349,
														"src": "2141:19:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2281,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2291,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2286,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2272,
																	"src": "2177:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2283,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:14"
											},
											{
												"expression": {
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2292,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2282,
															"src": "2198:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2294,
														"indexExpression": {
															"hexValue": "30",
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2297,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:14"
											},
											{
												"expression": {
													"id": 2302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2298,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2282,
															"src": "2223:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2300,
														"indexExpression": {
															"hexValue": "31",
															"id": 2299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2303,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:14"
											},
											{
												"body": {
													"id": 2332,
													"nodeType": "Block",
													"src": "2293:95:14",
													"statements": [
														{
															"expression": {
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2318,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2282,
																		"src": "2307:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2320,
																	"indexExpression": {
																		"id": 2319,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2305,
																		"src": "2314:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2321,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2163,
																		"src": "2319:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2325,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2322,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2278,
																			"src": "2330:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2327,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:14"
														},
														{
															"expression": {
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2328,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2278,
																	"src": "2361:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2331,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2312,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2305,
														"src": "2281:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2333,
												"initializationExpression": {
													"assignments": [
														2305
													],
													"declarations": [
														{
															"constant": false,
															"id": 2305,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 2333,
															"src": "2253:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2304,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2311,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2307,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2272,
																"src": "2269:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:14"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:14",
														"subExpression": {
															"id": 2315,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2305,
															"src": "2290:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2317,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:14"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2334,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2278,
														"src": "2401:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2343,
												"nodeType": "IfStatement",
												"src": "2397:96:14",
												"trueBody": {
													"id": 2342,
													"nodeType": "Block",
													"src": "2418:75:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2338,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2270,
																		"src": "2468:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2339,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2272,
																		"src": "2475:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2337,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2173,
																	"src": "2439:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2341,
															"nodeType": "RevertStatement",
															"src": "2432:50:14"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2346,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2282,
															"src": "2516:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2344,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:14",
															"typeDescriptions": {}
														}
													},
													"id": 2347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2276,
												"id": 2348,
												"nodeType": "Return",
												"src": "2502:21:14"
											}
										]
									},
									"documentation": {
										"id": 2268,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "2026:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "2041:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:14"
									},
									"returnParameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "2080:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2274,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:14"
									},
									"scope": 2408,
									"src": "2005:525:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2369,
										"nodeType": "Block",
										"src": "2762:75:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2363,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2353,
																			"src": "2807:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2361,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2359,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2366,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2166,
															"src": "2815:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2358,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2267,
															2350,
															2370
														],
														"referencedDeclaration": 2350,
														"src": "2779:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2357,
												"id": 2368,
												"nodeType": "Return",
												"src": "2772:58:14"
											}
										]
									},
									"documentation": {
										"id": 2351,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:14",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "2710:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:14"
									},
									"returnParameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "2747:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2355,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:14"
									},
									"scope": 2408,
									"src": "2689:148:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2406,
										"nodeType": "Block",
										"src": "2992:104:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2382,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2373,
																		"src": "3015:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2380,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:14",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2387,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2375,
																		"src": "3034:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2385,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:14",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2394,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2373,
																			"src": "3063:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2392,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2391,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2400,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2375,
																			"src": "3086:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2398,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2397,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2379,
												"id": 2405,
												"nodeType": "Return",
												"src": "3002:87:14"
											}
										]
									},
									"documentation": {
										"id": 2371,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:14",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "2929:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2372,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "2946:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2374,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:14"
									},
									"returnParameters": {
										"id": 2379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "2986:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2377,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:14"
									},
									"scope": 2408,
									"src": "2914:182:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2409,
							"src": "251:2847:14",
							"usedErrors": [
								2173
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2432
						],
						"IERC165": [
							2444
						]
					},
					"id": 2433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2410,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2412,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2433,
							"sourceUnit": 2445,
							"src": "140:38:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2411,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2444,
										"src": "148:7:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2414,
										"name": "IERC165",
										"nameLocations": [
											"687:7:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2444,
										"src": "687:7:15"
									},
									"id": 2415,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:15"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2413,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:15",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2432,
							"linearizedBaseContracts": [
								2432,
								2444
							],
							"name": "ERC165",
							"nameLocation": "677:6:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2443
									],
									"body": {
										"id": 2430,
										"nodeType": "Block",
										"src": "844:64:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2423,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2418,
														"src": "861:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2425,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2444,
																	"src": "881:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2444_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2444_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2424,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2444",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:15",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2422,
												"id": 2429,
												"nodeType": "Return",
												"src": "854:47:15"
											}
										]
									},
									"documentation": {
										"id": 2416,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:15",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "789:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2417,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:15"
									},
									"returnParameters": {
										"id": 2422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "838:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:15"
									},
									"scope": 2432,
									"src": "762:146:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2433,
							"src": "659:251:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2444
						]
					},
					"id": 2445,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2434,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2435,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:16",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2444,
							"linearizedBaseContracts": [
								2444
							],
							"name": "IERC165",
							"nameLocation": "431:7:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2436,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:16",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2443,
												"src": "817:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2437,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:16"
									},
									"returnParameters": {
										"id": 2442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2443,
												"src": "860:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:16"
									},
									"scope": 2444,
									"src": "790:76:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2445,
							"src": "421:447:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3498
						]
					},
					"id": 3499,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2446,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2447,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:17",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3498,
							"linearizedBaseContracts": [
								3498
							],
							"name": "Math",
							"nameLocation": "211:4:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2448,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:17",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2450,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:17"
									},
									"src": "277:29:17"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2455,
									"members": [
										{
											"id": 2451,
											"name": "Floor",
											"nameLocation": "336:5:17",
											"nodeType": "EnumValue",
											"src": "336:5:17"
										},
										{
											"id": 2452,
											"name": "Ceil",
											"nameLocation": "379:4:17",
											"nodeType": "EnumValue",
											"src": "379:4:17"
										},
										{
											"id": 2453,
											"name": "Trunc",
											"nameLocation": "421:5:17",
											"nodeType": "EnumValue",
											"src": "421:5:17"
										},
										{
											"id": 2454,
											"name": "Expand",
											"nameLocation": "451:6:17",
											"nodeType": "EnumValue",
											"src": "451:6:17"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:17",
									"nodeType": "EnumDefinition",
									"src": "312:169:17"
								},
								{
									"body": {
										"id": 2486,
										"nodeType": "Block",
										"src": "661:140:17",
										"statements": [
											{
												"id": 2485,
												"nodeType": "UncheckedBlock",
												"src": "671:124:17",
												"statements": [
													{
														"assignments": [
															2468
														],
														"declarations": [
															{
																"constant": false,
																"id": 2468,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:17",
																"nodeType": "VariableDeclaration",
																"scope": 2485,
																"src": "695:9:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2467,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2472,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2469,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2458,
																"src": "707:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2470,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2460,
																"src": "711:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:17"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2473,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2468,
																"src": "730:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2474,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2458,
																"src": "734:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2480,
														"nodeType": "IfStatement",
														"src": "726:28:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2478,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2466,
															"id": 2479,
															"nodeType": "Return",
															"src": "737:17:17"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2482,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2468,
																	"src": "782:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2483,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2466,
														"id": 2484,
														"nodeType": "Return",
														"src": "768:16:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2456,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:17",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "601:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "612:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:17"
									},
									"returnParameters": {
										"id": 2466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "646:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "652:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:17"
									},
									"scope": 3498,
									"src": "585:216:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2514,
										"nodeType": "Block",
										"src": "984:113:17",
										"statements": [
											{
												"id": 2513,
												"nodeType": "UncheckedBlock",
												"src": "994:97:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2499,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2492,
																"src": "1022:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2500,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2490,
																"src": "1026:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2506,
														"nodeType": "IfStatement",
														"src": "1018:28:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2504,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2498,
															"id": 2505,
															"nodeType": "Return",
															"src": "1029:17:17"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2508,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2490,
																		"src": "1074:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2509,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2492,
																		"src": "1078:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2511,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2498,
														"id": 2512,
														"nodeType": "Return",
														"src": "1060:20:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2488,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:17",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "924:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "935:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:17"
									},
									"returnParameters": {
										"id": 2498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "969:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2494,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "975:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:17"
									},
									"scope": 3498,
									"src": "908:189:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2556,
										"nodeType": "Block",
										"src": "1283:417:17",
										"statements": [
											{
												"id": 2555,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2527,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2518,
																"src": "1551:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2534,
														"nodeType": "IfStatement",
														"src": "1547:28:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2532,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2526,
															"id": 2533,
															"nodeType": "Return",
															"src": "1559:16:17"
														}
													},
													{
														"assignments": [
															2536
														],
														"declarations": [
															{
																"constant": false,
																"id": 2536,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:17",
																"nodeType": "VariableDeclaration",
																"scope": 2555,
																"src": "1589:9:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2535,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2540,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2537,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2518,
																"src": "1601:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2538,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2520,
																"src": "1605:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:17"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2541,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2536,
																	"src": "1624:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2542,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2518,
																	"src": "1628:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2544,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2520,
																"src": "1633:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2550,
														"nodeType": "IfStatement",
														"src": "1620:33:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2548,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2526,
															"id": 2549,
															"nodeType": "Return",
															"src": "1636:17:17"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2552,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2536,
																	"src": "1681:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2553,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2526,
														"id": 2554,
														"nodeType": "Return",
														"src": "1667:16:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2516,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:17",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2518,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "1223:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "1234:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:17"
									},
									"returnParameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "1268:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2522,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "1274:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:17"
									},
									"scope": 3498,
									"src": "1207:493:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2584,
										"nodeType": "Block",
										"src": "1887:114:17",
										"statements": [
											{
												"id": 2583,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2569,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2562,
																"src": "1925:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2576,
														"nodeType": "IfStatement",
														"src": "1921:29:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2574,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2568,
															"id": 2575,
															"nodeType": "Return",
															"src": "1933:17:17"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2578,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2560,
																		"src": "1978:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2579,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2562,
																		"src": "1982:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2581,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2568,
														"id": 2582,
														"nodeType": "Return",
														"src": "1964:20:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2558,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:17",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2560,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "1827:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "1838:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:17"
									},
									"returnParameters": {
										"id": 2568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "1872:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2564,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "1878:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:17"
									},
									"scope": 3498,
									"src": "1811:190:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2612,
										"nodeType": "Block",
										"src": "2198:114:17",
										"statements": [
											{
												"id": 2611,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2597,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2590,
																"src": "2236:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2604,
														"nodeType": "IfStatement",
														"src": "2232:29:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2602,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2596,
															"id": 2603,
															"nodeType": "Return",
															"src": "2244:17:17"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2606,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2588,
																		"src": "2289:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2607,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2590,
																		"src": "2293:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2609,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2596,
														"id": 2610,
														"nodeType": "Return",
														"src": "2275:20:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2586,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:17",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "2138:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "2149:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:17"
									},
									"returnParameters": {
										"id": 2596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "2183:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2592,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "2189:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:17"
									},
									"scope": 3498,
									"src": "2122:190:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2630,
										"nodeType": "Block",
										"src": "2449:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2623,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2616,
															"src": "2466:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2624,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2618,
															"src": "2470:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2627,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2618,
														"src": "2478:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:17",
													"trueExpression": {
														"id": 2626,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2616,
														"src": "2474:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2622,
												"id": 2629,
												"nodeType": "Return",
												"src": "2459:20:17"
											}
										]
									},
									"documentation": {
										"id": 2614,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:17",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2631,
												"src": "2395:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2631,
												"src": "2406:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:17"
									},
									"returnParameters": {
										"id": 2622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2631,
												"src": "2440:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:17"
									},
									"scope": 3498,
									"src": "2382:104:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2648,
										"nodeType": "Block",
										"src": "2624:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2641,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2634,
															"src": "2641:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2642,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2636,
															"src": "2645:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2645,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2636,
														"src": "2653:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:17",
													"trueExpression": {
														"id": 2644,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2634,
														"src": "2649:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2640,
												"id": 2647,
												"nodeType": "Return",
												"src": "2634:20:17"
											}
										]
									},
									"documentation": {
										"id": 2632,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:17",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2634,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2649,
												"src": "2570:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2636,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2649,
												"src": "2581:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:17"
									},
									"returnParameters": {
										"id": 2640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2649,
												"src": "2615:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:17"
									},
									"scope": 3498,
									"src": "2557:104:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2671,
										"nodeType": "Block",
										"src": "2845:82:17",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2659,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2652,
																	"src": "2900:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2660,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2654,
																	"src": "2904:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2662,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2663,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2652,
																		"src": "2910:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2664,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2654,
																		"src": "2914:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2666,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2658,
												"id": 2670,
												"nodeType": "Return",
												"src": "2892:28:17"
											}
										]
									},
									"documentation": {
										"id": 2650,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:17",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "2791:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "2802:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:17"
									},
									"returnParameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "2836:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:17"
									},
									"scope": 3498,
									"src": "2774:153:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2705,
										"nodeType": "Block",
										"src": "3219:260:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2682,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2677,
														"src": "3233:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2690,
												"nodeType": "IfStatement",
												"src": "3229:127:17",
												"trueBody": {
													"id": 2689,
													"nodeType": "Block",
													"src": "3241:115:17",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2685,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2675,
																	"src": "3340:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2686,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2677,
																	"src": "3344:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2681,
															"id": 2688,
															"nodeType": "Return",
															"src": "3333:12:17"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2691,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "3444:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2695,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2675,
																			"src": "3458:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2698,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2699,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2677,
																"src": "3467:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:17",
													"trueExpression": {
														"hexValue": "30",
														"id": 2694,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2681,
												"id": 2704,
												"nodeType": "Return",
												"src": "3437:35:17"
											}
										]
									},
									"documentation": {
										"id": 2673,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:17",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "3165:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "3176:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:17"
									},
									"returnParameters": {
										"id": 2681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "3210:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:17"
									},
									"scope": 3498,
									"src": "3148:331:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2831,
										"nodeType": "Block",
										"src": "3901:4018:17",
										"statements": [
											{
												"id": 2830,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:17",
												"statements": [
													{
														"assignments": [
															2719
														],
														"declarations": [
															{
																"constant": false,
																"id": 2719,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:17",
																"nodeType": "VariableDeclaration",
																"scope": 2830,
																"src": "4232:13:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2718,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2723,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2720,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2709,
																"src": "4248:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2721,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2711,
																"src": "4252:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:17"
													},
													{
														"assignments": [
															2725
														],
														"declarations": [
															{
																"constant": false,
																"id": 2725,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:17",
																"nodeType": "VariableDeclaration",
																"scope": 2830,
																"src": "4312:13:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2724,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2726,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:17"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:17",
															"nodeType": "YulBlock",
															"src": "4392:122:17",
															"statements": [
																{
																	"nativeSrc": "4410:30:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:17"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:17",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:17"
																				},
																				"nativeSrc": "4433:6:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:17"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:17"
																		},
																		"nativeSrc": "4420:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:17"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:17",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:17",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:17"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:17"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:17"
																				},
																				"nativeSrc": "4470:14:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:17"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:17"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:17"
																				},
																				"nativeSrc": "4486:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:17"
																		},
																		"nativeSrc": "4466:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:17"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2719,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2719,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2725,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2709,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:17",
																"valueSize": 1
															},
															{
																"declaration": 2711,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:17",
																"valueSize": 1
															}
														],
														"id": 2727,
														"nodeType": "InlineAssembly",
														"src": "4383:131:17"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2728,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2725,
																"src": "4595:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2736,
														"nodeType": "IfStatement",
														"src": "4591:368:17",
														"trueBody": {
															"id": 2735,
															"nodeType": "Block",
															"src": "4607:352:17",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2731,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2719,
																			"src": "4925:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2732,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2713,
																			"src": "4933:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2717,
																	"id": 2734,
																	"nodeType": "Return",
																	"src": "4918:26:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2737,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2713,
																"src": "5065:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2738,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2725,
																"src": "5080:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2744,
														"nodeType": "IfStatement",
														"src": "5061:88:17",
														"trueBody": {
															"id": 2743,
															"nodeType": "Block",
															"src": "5087:62:17",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2740,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2450,
																			"src": "5112:20:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2742,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:17"
																}
															]
														}
													},
													{
														"assignments": [
															2746
														],
														"declarations": [
															{
																"constant": false,
																"id": 2746,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:17",
																"nodeType": "VariableDeclaration",
																"scope": 2830,
																"src": "5404:17:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2745,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2747,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:17"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:17",
															"nodeType": "YulBlock",
															"src": "5444:291:17",
															"statements": [
																{
																	"nativeSrc": "5513:38:17",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:17"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:17"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:17",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:17"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:17"
																		},
																		"nativeSrc": "5526:25:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:17"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:17",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:17"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:17",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:17"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:17"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:17"
																				},
																				"nativeSrc": "5653:20:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:17"
																		},
																		"nativeSrc": "5642:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:17"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:17",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:17"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:17"
																		},
																		"nativeSrc": "5700:21:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:17"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2713,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:17",
																"valueSize": 1
															},
															{
																"declaration": 2719,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2719,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2719,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2725,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2725,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2746,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:17",
																"valueSize": 1
															},
															{
																"declaration": 2746,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:17",
																"valueSize": 1
															},
															{
																"declaration": 2746,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:17",
																"valueSize": 1
															},
															{
																"declaration": 2709,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:17",
																"valueSize": 1
															},
															{
																"declaration": 2711,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:17",
																"valueSize": 1
															}
														],
														"id": 2748,
														"nodeType": "InlineAssembly",
														"src": "5435:300:17"
													},
													{
														"assignments": [
															2750
														],
														"declarations": [
															{
																"constant": false,
																"id": 2750,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:17",
																"nodeType": "VariableDeclaration",
																"scope": 2830,
																"src": "5939:12:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2749,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2757,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2751,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2713,
																"src": "5954:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2753,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2713,
																			"src": "5973:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2755,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:17"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:17",
															"nodeType": "YulBlock",
															"src": "6008:362:17",
															"statements": [
																{
																	"nativeSrc": "6073:37:17",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:17",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:17"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:17"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:17"
																		},
																		"nativeSrc": "6088:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:17"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:17",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:17"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:17",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:17"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:17"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:17"
																		},
																		"nativeSrc": "6186:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:17"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:17",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:17",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:17",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:17",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:17"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:17"
																						},
																						"nativeSrc": "6333:12:17",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:17"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:17"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:17"
																				},
																				"nativeSrc": "6329:23:17",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:17",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:17"
																		},
																		"nativeSrc": "6325:31:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:17"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:17",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:17"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2713,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:17",
																"valueSize": 1
															},
															{
																"declaration": 2713,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:17",
																"valueSize": 1
															},
															{
																"declaration": 2719,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2719,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2750,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2750,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2750,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2750,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2750,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:17",
																"valueSize": 1
															}
														],
														"id": 2758,
														"nodeType": "InlineAssembly",
														"src": "5999:371:17"
													},
													{
														"expression": {
															"id": 2763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2759,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2719,
																"src": "6436:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2760,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2725,
																	"src": "6445:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2761,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2750,
																	"src": "6453:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2764,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:17"
													},
													{
														"assignments": [
															2766
														],
														"declarations": [
															{
																"constant": false,
																"id": 2766,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:17",
																"nodeType": "VariableDeclaration",
																"scope": 2830,
																"src": "6775:15:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2765,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2773,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2768,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2713,
																			"src": "6798:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2770,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:17"
													},
													{
														"expression": {
															"id": 2780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2774,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2766,
																"src": "7031:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2776,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2713,
																		"src": "7046:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2777,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2766,
																		"src": "7060:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2781,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:17"
													},
													{
														"expression": {
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2782,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2766,
																"src": "7100:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2784,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2713,
																		"src": "7115:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2785,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2766,
																		"src": "7129:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2789,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:17"
													},
													{
														"expression": {
															"id": 2796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2790,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2766,
																"src": "7170:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2792,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2713,
																		"src": "7185:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2793,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2766,
																		"src": "7199:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2797,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:17"
													},
													{
														"expression": {
															"id": 2804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2798,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2766,
																"src": "7240:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2800,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2713,
																		"src": "7255:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2801,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2766,
																		"src": "7269:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2805,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:17"
													},
													{
														"expression": {
															"id": 2812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2806,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2766,
																"src": "7310:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2808,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2713,
																		"src": "7325:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2809,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2766,
																		"src": "7339:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2813,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:17"
													},
													{
														"expression": {
															"id": 2820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2814,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2766,
																"src": "7381:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2816,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2713,
																		"src": "7396:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2817,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2766,
																		"src": "7410:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2821,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:17"
													},
													{
														"expression": {
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2822,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "7851:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2823,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2719,
																	"src": "7860:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2824,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2766,
																	"src": "7868:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2827,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:17"
													},
													{
														"expression": {
															"id": 2828,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2716,
															"src": "7896:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2717,
														"id": 2829,
														"nodeType": "Return",
														"src": "7889:13:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2707,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:17",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2709,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "3819:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2711,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "3830:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2713,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "3841:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:17"
									},
									"returnParameters": {
										"id": 2717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2716,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "3885:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:17"
									},
									"scope": 3498,
									"src": "3803:4116:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2874,
										"nodeType": "Block",
										"src": "8161:192:17",
										"statements": [
											{
												"assignments": [
													2848
												],
												"declarations": [
													{
														"constant": false,
														"id": 2848,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 2874,
														"src": "8171:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2847,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2854,
												"initialValue": {
													"arguments": [
														{
															"id": 2850,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2835,
															"src": "8195:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2851,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2837,
															"src": "8198:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2852,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2839,
															"src": "8201:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2849,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2832,
															2875
														],
														"referencedDeclaration": 2832,
														"src": "8188:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2856,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2842,
																"src": "8244:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2455",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2455",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2855,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3497,
															"src": "8227:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2455_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2859,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2835,
																	"src": "8264:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2860,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2837,
																	"src": "8267:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2861,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2839,
																	"src": "8270:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2858,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2871,
												"nodeType": "IfStatement",
												"src": "8223:101:17",
												"trueBody": {
													"id": 2870,
													"nodeType": "Block",
													"src": "8288:36:17",
													"statements": [
														{
															"expression": {
																"id": 2868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2866,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2848,
																	"src": "8302:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2869,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:17"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2872,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2848,
													"src": "8340:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2846,
												"id": 2873,
												"nodeType": "Return",
												"src": "8333:13:17"
											}
										]
									},
									"documentation": {
										"id": 2833,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:17",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2835,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "8067:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2837,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "8078:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "8089:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "8110:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2455",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2841,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2840,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2455,
														"src": "8110:8:17"
													},
													"referencedDeclaration": 2455,
													"src": "8110:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2455",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:17"
									},
									"returnParameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "8152:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:17"
									},
									"scope": 3498,
									"src": "8051:302:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2986,
										"nodeType": "Block",
										"src": "8644:1585:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2883,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2878,
														"src": "8658:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2884,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2889,
												"nodeType": "IfStatement",
												"src": "8654:45:17",
												"trueBody": {
													"id": 2888,
													"nodeType": "Block",
													"src": "8666:33:17",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2882,
															"id": 2887,
															"nodeType": "Return",
															"src": "8680:8:17"
														}
													]
												}
											},
											{
												"assignments": [
													2891
												],
												"declarations": [
													{
														"constant": false,
														"id": 2891,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 2986,
														"src": "9378:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2890,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2900,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2894,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2878,
																			"src": "9406:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2893,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3154,
																			3189
																		],
																		"referencedDeclaration": 3154,
																		"src": "9401:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2898,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:17"
											},
											{
												"id": 2985,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:17",
												"statements": [
													{
														"expression": {
															"id": 2910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2901,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2891,
																"src": "9839:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2902,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2891,
																				"src": "9849:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2905,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2903,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2878,
																					"src": "9858:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2904,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2891,
																					"src": "9862:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2907,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2911,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:17"
													},
													{
														"expression": {
															"id": 2921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2912,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2891,
																"src": "9888:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2913,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2891,
																				"src": "9898:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2916,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2914,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2878,
																					"src": "9907:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2915,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2891,
																					"src": "9911:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2918,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2922,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:17"
													},
													{
														"expression": {
															"id": 2932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2923,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2891,
																"src": "9937:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2924,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2891,
																				"src": "9947:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2927,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2925,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2878,
																					"src": "9956:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2926,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2891,
																					"src": "9960:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2929,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2933,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:17"
													},
													{
														"expression": {
															"id": 2943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2934,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2891,
																"src": "9986:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2935,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2891,
																				"src": "9996:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2938,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2936,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2878,
																					"src": "10005:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2937,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2891,
																					"src": "10009:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2940,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2944,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:17"
													},
													{
														"expression": {
															"id": 2954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2945,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2891,
																"src": "10035:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2950,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2946,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2891,
																				"src": "10045:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2949,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2947,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2878,
																					"src": "10054:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2948,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2891,
																					"src": "10058:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2951,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2955,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:17"
													},
													{
														"expression": {
															"id": 2965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2956,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2891,
																"src": "10084:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2957,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2891,
																				"src": "10094:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2960,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2958,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2878,
																					"src": "10103:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2959,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2891,
																					"src": "10107:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2962,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2966,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:17"
													},
													{
														"expression": {
															"id": 2976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2967,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2891,
																"src": "10133:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2968,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2891,
																				"src": "10143:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2971,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2969,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2878,
																					"src": "10152:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2970,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2891,
																					"src": "10156:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2973,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2977,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:17"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2979,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2891,
																	"src": "10193:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2980,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2878,
																		"src": "10201:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2981,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2891,
																		"src": "10205:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2978,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2649,
																"src": "10189:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2882,
														"id": 2984,
														"nodeType": "Return",
														"src": "10182:30:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2876,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:17",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2878,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2987,
												"src": "8601:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:17"
									},
									"returnParameters": {
										"id": 2882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2987,
												"src": "8635:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:17"
									},
									"scope": 3498,
									"src": "8587:1642:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3021,
										"nodeType": "Block",
										"src": "10405:164:17",
										"statements": [
											{
												"id": 3020,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:17",
												"statements": [
													{
														"assignments": [
															2999
														],
														"declarations": [
															{
																"constant": false,
																"id": 2999,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 3020,
																"src": "10439:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2998,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3003,
														"initialValue": {
															"arguments": [
																{
																	"id": 3001,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2990,
																	"src": "10461:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3000,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2987,
																	3022
																],
																"referencedDeclaration": 2987,
																"src": "10456:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3004,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2999,
																"src": "10484:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3006,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2993,
																						"src": "10511:8:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2455",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2455",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3005,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3497,
																					"src": "10494:16:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2455_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3007,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3012,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3010,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3008,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2999,
																						"src": "10524:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 3009,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2999,
																						"src": "10533:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3011,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2990,
																					"src": "10542:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:17",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3017,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2997,
														"id": 3019,
														"nodeType": "Return",
														"src": "10477:75:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2988,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:17",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 3022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2990,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3022,
												"src": "10343:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2993,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3022,
												"src": "10354:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2455",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2992,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2991,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2455,
														"src": "10354:8:17"
													},
													"referencedDeclaration": 2455,
													"src": "10354:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2455",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:17"
									},
									"returnParameters": {
										"id": 2997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3022,
												"src": "10396:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:17"
									},
									"scope": 3498,
									"src": "10329:240:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3153,
										"nodeType": "Block",
										"src": "10760:922:17",
										"statements": [
											{
												"assignments": [
													3031
												],
												"declarations": [
													{
														"constant": false,
														"id": 3031,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 3153,
														"src": "10770:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3030,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3033,
												"initialValue": {
													"hexValue": "30",
													"id": 3032,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:17",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:17"
											},
											{
												"id": 3150,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3034,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3025,
																	"src": "10826:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3048,
														"nodeType": "IfStatement",
														"src": "10822:99:17",
														"trueBody": {
															"id": 3047,
															"nodeType": "Block",
															"src": "10844:77:17",
															"statements": [
																{
																	"expression": {
																		"id": 3041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3039,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "10862:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3042,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:17"
																},
																{
																	"expression": {
																		"id": 3045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3043,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3031,
																			"src": "10893:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3046,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3049,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3025,
																	"src": "10938:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3063,
														"nodeType": "IfStatement",
														"src": "10934:96:17",
														"trueBody": {
															"id": 3062,
															"nodeType": "Block",
															"src": "10955:75:17",
															"statements": [
																{
																	"expression": {
																		"id": 3056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3054,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "10973:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3057,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:17"
																},
																{
																	"expression": {
																		"id": 3060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3058,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3031,
																			"src": "11003:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3061,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3064,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3025,
																	"src": "11047:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3078,
														"nodeType": "IfStatement",
														"src": "11043:96:17",
														"trueBody": {
															"id": 3077,
															"nodeType": "Block",
															"src": "11064:75:17",
															"statements": [
																{
																	"expression": {
																		"id": 3071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3069,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "11082:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3072,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:17"
																},
																{
																	"expression": {
																		"id": 3075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3073,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3031,
																			"src": "11112:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3076,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3079,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3025,
																	"src": "11156:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3093,
														"nodeType": "IfStatement",
														"src": "11152:96:17",
														"trueBody": {
															"id": 3092,
															"nodeType": "Block",
															"src": "11173:75:17",
															"statements": [
																{
																	"expression": {
																		"id": 3086,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3084,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "11191:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3087,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:17"
																},
																{
																	"expression": {
																		"id": 3090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3088,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3031,
																			"src": "11221:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3091,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3094,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3025,
																	"src": "11265:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3108,
														"nodeType": "IfStatement",
														"src": "11261:93:17",
														"trueBody": {
															"id": 3107,
															"nodeType": "Block",
															"src": "11281:73:17",
															"statements": [
																{
																	"expression": {
																		"id": 3101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3099,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "11299:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3102,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:17"
																},
																{
																	"expression": {
																		"id": 3105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3103,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3031,
																			"src": "11328:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3106,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3109,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3025,
																	"src": "11371:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3123,
														"nodeType": "IfStatement",
														"src": "11367:93:17",
														"trueBody": {
															"id": 3122,
															"nodeType": "Block",
															"src": "11387:73:17",
															"statements": [
																{
																	"expression": {
																		"id": 3116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3114,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "11405:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3117,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:17"
																},
																{
																	"expression": {
																		"id": 3120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3118,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3031,
																			"src": "11434:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3121,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3124,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3025,
																	"src": "11477:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3138,
														"nodeType": "IfStatement",
														"src": "11473:93:17",
														"trueBody": {
															"id": 3137,
															"nodeType": "Block",
															"src": "11493:73:17",
															"statements": [
																{
																	"expression": {
																		"id": 3131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3129,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "11511:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3132,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:17"
																},
																{
																	"expression": {
																		"id": 3135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3133,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3031,
																			"src": "11540:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3136,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3139,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3025,
																	"src": "11583:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3149,
														"nodeType": "IfStatement",
														"src": "11579:64:17",
														"trueBody": {
															"id": 3148,
															"nodeType": "Block",
															"src": "11599:44:17",
															"statements": [
																{
																	"expression": {
																		"id": 3146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3144,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3031,
																			"src": "11617:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3147,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:17"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3151,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3031,
													"src": "11669:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3029,
												"id": 3152,
												"nodeType": "Return",
												"src": "11662:13:17"
											}
										]
									},
									"documentation": {
										"id": 3023,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:17",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3025,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3154,
												"src": "10713:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:17"
									},
									"returnParameters": {
										"id": 3029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3154,
												"src": "10751:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:17"
									},
									"scope": 3498,
									"src": "10699:983:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3188,
										"nodeType": "Block",
										"src": "11915:168:17",
										"statements": [
											{
												"id": 3187,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:17",
												"statements": [
													{
														"assignments": [
															3166
														],
														"declarations": [
															{
																"constant": false,
																"id": 3166,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 3187,
																"src": "11949:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3165,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3170,
														"initialValue": {
															"arguments": [
																{
																	"id": 3168,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3157,
																	"src": "11971:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3167,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3154,
																	3189
																],
																"referencedDeclaration": 3154,
																"src": "11966:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3171,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3166,
																"src": "11998:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3173,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3160,
																						"src": "12025:8:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2455",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2455",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3172,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3497,
																					"src": "12008:16:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2455_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3174,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3177,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3175,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 3176,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3166,
																						"src": "12043:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3178,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3157,
																					"src": "12052:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:17",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3184,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3164,
														"id": 3186,
														"nodeType": "Return",
														"src": "11991:75:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3155,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:17",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3157,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3189,
												"src": "11849:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3160,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3189,
												"src": "11864:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2455",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3159,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3158,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2455,
														"src": "11864:8:17"
													},
													"referencedDeclaration": 2455,
													"src": "11864:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2455",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:17"
									},
									"returnParameters": {
										"id": 3164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3189,
												"src": "11906:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:17"
									},
									"scope": 3498,
									"src": "11835:248:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3317,
										"nodeType": "Block",
										"src": "12276:854:17",
										"statements": [
											{
												"assignments": [
													3198
												],
												"declarations": [
													{
														"constant": false,
														"id": 3198,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 3317,
														"src": "12286:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3200,
												"initialValue": {
													"hexValue": "30",
													"id": 3199,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:17",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:17"
											},
											{
												"id": 3314,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3201,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3192,
																"src": "12342:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3217,
														"nodeType": "IfStatement",
														"src": "12338:103:17",
														"trueBody": {
															"id": 3216,
															"nodeType": "Block",
															"src": "12361:80:17",
															"statements": [
																{
																	"expression": {
																		"id": 3210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3206,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3192,
																			"src": "12379:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3207,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3208,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3211,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:17"
																},
																{
																	"expression": {
																		"id": 3214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3212,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3198,
																			"src": "12414:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3215,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3218,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3192,
																"src": "12458:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3234,
														"nodeType": "IfStatement",
														"src": "12454:103:17",
														"trueBody": {
															"id": 3233,
															"nodeType": "Block",
															"src": "12477:80:17",
															"statements": [
																{
																	"expression": {
																		"id": 3227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3223,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3192,
																			"src": "12495:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3224,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3225,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3228,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:17"
																},
																{
																	"expression": {
																		"id": 3231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3229,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3198,
																			"src": "12530:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3232,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3235,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3192,
																"src": "12574:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3251,
														"nodeType": "IfStatement",
														"src": "12570:103:17",
														"trueBody": {
															"id": 3250,
															"nodeType": "Block",
															"src": "12593:80:17",
															"statements": [
																{
																	"expression": {
																		"id": 3244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3240,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3192,
																			"src": "12611:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3241,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3242,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3245,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:17"
																},
																{
																	"expression": {
																		"id": 3248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3246,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3198,
																			"src": "12646:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3249,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3252,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3192,
																"src": "12690:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3268,
														"nodeType": "IfStatement",
														"src": "12686:100:17",
														"trueBody": {
															"id": 3267,
															"nodeType": "Block",
															"src": "12708:78:17",
															"statements": [
																{
																	"expression": {
																		"id": 3261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3257,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3192,
																			"src": "12726:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3259,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3262,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:17"
																},
																{
																	"expression": {
																		"id": 3265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3263,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3198,
																			"src": "12760:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3266,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3269,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3192,
																"src": "12803:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3285,
														"nodeType": "IfStatement",
														"src": "12799:100:17",
														"trueBody": {
															"id": 3284,
															"nodeType": "Block",
															"src": "12821:78:17",
															"statements": [
																{
																	"expression": {
																		"id": 3278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3274,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3192,
																			"src": "12839:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3275,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3279,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:17"
																},
																{
																	"expression": {
																		"id": 3282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3280,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3198,
																			"src": "12873:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3283,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3286,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3192,
																"src": "12916:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3302,
														"nodeType": "IfStatement",
														"src": "12912:100:17",
														"trueBody": {
															"id": 3301,
															"nodeType": "Block",
															"src": "12934:78:17",
															"statements": [
																{
																	"expression": {
																		"id": 3295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3291,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3192,
																			"src": "12952:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3292,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3293,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3296,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:17"
																},
																{
																	"expression": {
																		"id": 3299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3297,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3198,
																			"src": "12986:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3300,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3303,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3192,
																"src": "13029:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3313,
														"nodeType": "IfStatement",
														"src": "13025:66:17",
														"trueBody": {
															"id": 3312,
															"nodeType": "Block",
															"src": "13047:44:17",
															"statements": [
																{
																	"expression": {
																		"id": 3310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3308,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3198,
																			"src": "13065:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3311,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:17"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3315,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3198,
													"src": "13117:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3196,
												"id": 3316,
												"nodeType": "Return",
												"src": "13110:13:17"
											}
										]
									},
									"documentation": {
										"id": 3190,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:17",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3192,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "12229:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:17"
									},
									"returnParameters": {
										"id": 3196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "12267:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:17"
									},
									"scope": 3498,
									"src": "12214:916:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3352,
										"nodeType": "Block",
										"src": "13365:170:17",
										"statements": [
											{
												"id": 3351,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:17",
												"statements": [
													{
														"assignments": [
															3330
														],
														"declarations": [
															{
																"constant": false,
																"id": 3330,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 3351,
																"src": "13399:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3329,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3334,
														"initialValue": {
															"arguments": [
																{
																	"id": 3332,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3321,
																	"src": "13422:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3331,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3318,
																	3353
																],
																"referencedDeclaration": 3318,
																"src": "13416:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3335,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3330,
																"src": "13449:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3337,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3324,
																						"src": "13476:8:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2455",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2455",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3336,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3497,
																					"src": "13459:16:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2455_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3338,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3343,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3341,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3339,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3340,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3330,
																						"src": "13495:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3342,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3321,
																					"src": "13504:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:17",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3348,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3328,
														"id": 3350,
														"nodeType": "Return",
														"src": "13442:76:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3319,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:17",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3353,
												"src": "13299:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3324,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3353,
												"src": "13314:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2455",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3323,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3322,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2455,
														"src": "13314:8:17"
													},
													"referencedDeclaration": 2455,
													"src": "13314:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2455",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:17"
									},
									"returnParameters": {
										"id": 3328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3353,
												"src": "13356:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:17"
									},
									"scope": 3498,
									"src": "13284:251:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3439,
										"nodeType": "Block",
										"src": "13855:600:17",
										"statements": [
											{
												"assignments": [
													3362
												],
												"declarations": [
													{
														"constant": false,
														"id": 3362,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 3439,
														"src": "13865:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3364,
												"initialValue": {
													"hexValue": "30",
													"id": 3363,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:17",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:17"
											},
											{
												"id": 3436,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3365,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3356,
																	"src": "13921:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3379,
														"nodeType": "IfStatement",
														"src": "13917:98:17",
														"trueBody": {
															"id": 3378,
															"nodeType": "Block",
															"src": "13939:76:17",
															"statements": [
																{
																	"expression": {
																		"id": 3372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3370,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3356,
																			"src": "13957:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3373,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:17"
																},
																{
																	"expression": {
																		"id": 3376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3374,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3362,
																			"src": "13988:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3377,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3380,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3356,
																	"src": "14032:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3394,
														"nodeType": "IfStatement",
														"src": "14028:95:17",
														"trueBody": {
															"id": 3393,
															"nodeType": "Block",
															"src": "14049:74:17",
															"statements": [
																{
																	"expression": {
																		"id": 3387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3385,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3356,
																			"src": "14067:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3388,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:17"
																},
																{
																	"expression": {
																		"id": 3391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3389,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3362,
																			"src": "14097:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3392,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3395,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3356,
																	"src": "14140:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3409,
														"nodeType": "IfStatement",
														"src": "14136:95:17",
														"trueBody": {
															"id": 3408,
															"nodeType": "Block",
															"src": "14157:74:17",
															"statements": [
																{
																	"expression": {
																		"id": 3402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3400,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3356,
																			"src": "14175:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3403,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:17"
																},
																{
																	"expression": {
																		"id": 3406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3404,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3362,
																			"src": "14205:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3407,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3410,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3356,
																	"src": "14248:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3424,
														"nodeType": "IfStatement",
														"src": "14244:95:17",
														"trueBody": {
															"id": 3423,
															"nodeType": "Block",
															"src": "14265:74:17",
															"statements": [
																{
																	"expression": {
																		"id": 3417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3415,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3356,
																			"src": "14283:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3418,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:17"
																},
																{
																	"expression": {
																		"id": 3421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3419,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3362,
																			"src": "14313:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3422,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3425,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3356,
																	"src": "14356:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3435,
														"nodeType": "IfStatement",
														"src": "14352:64:17",
														"trueBody": {
															"id": 3434,
															"nodeType": "Block",
															"src": "14372:44:17",
															"statements": [
																{
																	"expression": {
																		"id": 3432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3430,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3362,
																			"src": "14390:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3433,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:17"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3437,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3362,
													"src": "14442:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3360,
												"id": 3438,
												"nodeType": "Return",
												"src": "14435:13:17"
											}
										]
									},
									"documentation": {
										"id": 3354,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:17",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3356,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3440,
												"src": "13808:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:17"
									},
									"returnParameters": {
										"id": 3360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3440,
												"src": "13846:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:17"
									},
									"scope": 3498,
									"src": "13792:663:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3477,
										"nodeType": "Block",
										"src": "14692:177:17",
										"statements": [
											{
												"id": 3476,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:17",
												"statements": [
													{
														"assignments": [
															3452
														],
														"declarations": [
															{
																"constant": false,
																"id": 3452,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 3476,
																"src": "14726:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3451,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3456,
														"initialValue": {
															"arguments": [
																{
																	"id": 3454,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3443,
																	"src": "14750:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3453,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3440,
																	3478
																],
																"referencedDeclaration": 3440,
																"src": "14743:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3457,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3452,
																"src": "14777:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3459,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3446,
																						"src": "14804:8:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2455",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2455",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3458,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3497,
																					"src": "14787:16:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2455_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3468,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3466,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3461,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3464,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3462,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3452,
																									"src": "14823:6:17",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3463,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:17",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3465,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3467,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3443,
																					"src": "14838:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:17",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3473,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3450,
														"id": 3475,
														"nodeType": "Return",
														"src": "14770:82:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3441,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:17",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3443,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3478,
												"src": "14626:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3446,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3478,
												"src": "14641:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2455",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3445,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3444,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2455,
														"src": "14641:8:17"
													},
													"referencedDeclaration": 2455,
													"src": "14641:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2455",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:17"
									},
									"returnParameters": {
										"id": 3450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3478,
												"src": "14683:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:17"
									},
									"scope": 3498,
									"src": "14610:259:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3496,
										"nodeType": "Block",
										"src": "15067:48:17",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3489,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3482,
																	"src": "15090:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2455",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2455",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3487,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:17",
																	"typeDescriptions": {}
																}
															},
															"id": 3490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3486,
												"id": 3495,
												"nodeType": "Return",
												"src": "15077:31:17"
											}
										]
									},
									"documentation": {
										"id": 3479,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:17",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3482,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3497,
												"src": "15019:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2455",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3480,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2455,
														"src": "15019:8:17"
													},
													"referencedDeclaration": 2455,
													"src": "15019:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2455",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:17"
									},
									"returnParameters": {
										"id": 3486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3497,
												"src": "15061:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3484,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:17"
									},
									"scope": 3498,
									"src": "14993:122:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3499,
							"src": "203:14914:17",
							"usedErrors": [
								2450
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:17"
				},
				"id": 17
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3603
						]
					},
					"id": 3604,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3500,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3501,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:18",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3603,
							"linearizedBaseContracts": [
								3603
							],
							"name": "SignedMath",
							"nameLocation": "224:10:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3518,
										"nodeType": "Block",
										"src": "376:37:18",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3511,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3504,
															"src": "393:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3512,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3506,
															"src": "397:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3515,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3506,
														"src": "405:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:18",
													"trueExpression": {
														"id": 3514,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3504,
														"src": "401:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3510,
												"id": 3517,
												"nodeType": "Return",
												"src": "386:20:18"
											}
										]
									},
									"documentation": {
										"id": 3502,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:18",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3504,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3519,
												"src": "325:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3503,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3506,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3519,
												"src": "335:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3505,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:18"
									},
									"returnParameters": {
										"id": 3510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3519,
												"src": "368:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3508,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:18"
									},
									"scope": 3603,
									"src": "312:101:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3536,
										"nodeType": "Block",
										"src": "555:37:18",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3529,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3522,
															"src": "572:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3530,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3524,
															"src": "576:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3533,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3524,
														"src": "584:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:18",
													"trueExpression": {
														"id": 3532,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3522,
														"src": "580:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3528,
												"id": 3535,
												"nodeType": "Return",
												"src": "565:20:18"
											}
										]
									},
									"documentation": {
										"id": 3520,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:18",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3522,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3537,
												"src": "504:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3521,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3524,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3537,
												"src": "514:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3523,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:18"
									},
									"returnParameters": {
										"id": 3528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3537,
												"src": "547:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3526,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:18"
									},
									"scope": 3603,
									"src": "491:101:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3580,
										"nodeType": "Block",
										"src": "797:162:18",
										"statements": [
											{
												"assignments": [
													3548
												],
												"declarations": [
													{
														"constant": false,
														"id": 3548,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:18",
														"nodeType": "VariableDeclaration",
														"scope": 3580,
														"src": "859:8:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3547,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3561,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3549,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3540,
																	"src": "871:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3550,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3542,
																	"src": "875:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3552,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3553,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3540,
																				"src": "882:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3554,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3542,
																				"src": "886:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3556,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3559,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:18"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3562,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3548,
														"src": "911:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3567,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3548,
																						"src": "931:1:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3566,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3565,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:18",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3569,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3563,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:18",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3572,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3540,
																				"src": "945:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3573,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3542,
																				"src": "949:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3575,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3577,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3546,
												"id": 3579,
												"nodeType": "Return",
												"src": "904:48:18"
											}
										]
									},
									"documentation": {
										"id": 3538,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:18",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3540,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3581,
												"src": "746:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3539,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3542,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3581,
												"src": "756:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3541,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:18"
									},
									"returnParameters": {
										"id": 3546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3581,
												"src": "789:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3544,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:18"
									},
									"scope": 3603,
									"src": "729:230:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3601,
										"nodeType": "Block",
										"src": "1103:158:18",
										"statements": [
											{
												"id": 3600,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:18",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3591,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3584,
																			"src": "1228:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:18",
																		"subExpression": {
																			"id": 3595,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3584,
																			"src": "1242:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:18",
																	"trueExpression": {
																		"id": 3594,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3584,
																		"src": "1237:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3589,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 3598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3588,
														"id": 3599,
														"nodeType": "Return",
														"src": "1213:31:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3582,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:18",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3584,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3602,
												"src": "1061:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3583,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:18"
									},
									"returnParameters": {
										"id": 3588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3602,
												"src": "1094:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:18"
									},
									"scope": 3603,
									"src": "1048:213:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "216:1047:18",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:18"
				},
				"id": 18
			},
			"MyERC721Market.sol": {
				"ast": {
					"absolutePath": "MyERC721Market.sol",
					"exportedSymbols": {
						"ERC721": [
							1581
						],
						"ERC721URIStorage": [
							1842
						],
						"IERC165": [
							2444
						],
						"IERC20": [
							246
						],
						"IERC4906": [
							27
						],
						"MyERC721Market": [
							3755
						],
						"SafeERC20": [
							572
						],
						"Strings": [
							2408
						]
					},
					"id": 3756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3605,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:19"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 3606,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3756,
							"sourceUnit": 1843,
							"src": "61:78:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3608,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3756,
							"sourceUnit": 247,
							"src": "141:70:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3607,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 246,
										"src": "149:6:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 3610,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3756,
							"sourceUnit": 573,
							"src": "213:82:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3609,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 572,
										"src": "221:9:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyERC721Market",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3755,
							"linearizedBaseContracts": [
								3755
							],
							"name": "MyERC721Market",
							"nameLocation": "308:14:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3614,
									"libraryName": {
										"id": 3611,
										"name": "SafeERC20",
										"nameLocations": [
											"336:9:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 572,
										"src": "336:9:19"
									},
									"nodeType": "UsingForDirective",
									"src": "330:27:19",
									"typeName": {
										"id": 3613,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3612,
											"name": "IERC20",
											"nameLocations": [
												"350:6:19"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 246,
											"src": "350:6:19"
										},
										"referencedDeclaration": 246,
										"src": "350:6:19",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$246",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "bca6ce64",
									"id": 3617,
									"mutability": "mutable",
									"name": "erc721",
									"nameLocation": "389:6:19",
									"nodeType": "VariableDeclaration",
									"scope": 3755,
									"src": "365:30:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC721URIStorage_$1842",
										"typeString": "contract ERC721URIStorage"
									},
									"typeName": {
										"id": 3616,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3615,
											"name": "ERC721URIStorage",
											"nameLocations": [
												"365:16:19"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1842,
											"src": "365:16:19"
										},
										"referencedDeclaration": 1842,
										"src": "365:16:19",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC721URIStorage_$1842",
											"typeString": "contract ERC721URIStorage"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "785e9e86",
									"id": 3620,
									"mutability": "mutable",
									"name": "erc20",
									"nameLocation": "416:5:19",
									"nodeType": "VariableDeclaration",
									"scope": 3755,
									"src": "402:19:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$246",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 3619,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3618,
											"name": "IERC20",
											"nameLocations": [
												"402:6:19"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 246,
											"src": "402:6:19"
										},
										"referencedDeclaration": 246,
										"src": "402:6:19",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$246",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d4ddce8a",
									"id": 3624,
									"mutability": "mutable",
									"name": "tokenPrice",
									"nameLocation": "463:10:19",
									"nodeType": "VariableDeclaration",
									"scope": 3755,
									"src": "428:45:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 3623,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3621,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "436:7:19",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "428:27:19",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3622,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "447:7:19",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1caaa487",
									"id": 3628,
									"mutability": "mutable",
									"name": "tokenOwner",
									"nameLocation": "515:10:19",
									"nodeType": "VariableDeclaration",
									"scope": 3755,
									"src": "480:45:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 3627,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3625,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "488:7:19",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "480:27:19",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3626,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "499:7:19",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3645,
										"nodeType": "Block",
										"src": "587:60:19",
										"statements": [
											{
												"expression": {
													"id": 3639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3637,
														"name": "erc721",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3617,
														"src": "598:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC721URIStorage_$1842",
															"typeString": "contract ERC721URIStorage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3638,
														"name": "_erc721",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3631,
														"src": "607:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC721URIStorage_$1842",
															"typeString": "contract ERC721URIStorage"
														}
													},
													"src": "598:16:19",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC721URIStorage_$1842",
														"typeString": "contract ERC721URIStorage"
													}
												},
												"id": 3640,
												"nodeType": "ExpressionStatement",
												"src": "598:16:19"
											},
											{
												"expression": {
													"id": 3643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3641,
														"name": "erc20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3620,
														"src": "625:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$246",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3642,
														"name": "_erc20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3634,
														"src": "633:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$246",
															"typeString": "contract IERC20"
														}
													},
													"src": "625:14:19",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$246",
														"typeString": "contract IERC20"
													}
												},
												"id": 3644,
												"nodeType": "ExpressionStatement",
												"src": "625:14:19"
											}
										]
									},
									"id": 3646,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3631,
												"mutability": "mutable",
												"name": "_erc721",
												"nameLocation": "563:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 3646,
												"src": "546:24:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC721URIStorage_$1842",
													"typeString": "contract ERC721URIStorage"
												},
												"typeName": {
													"id": 3630,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3629,
														"name": "ERC721URIStorage",
														"nameLocations": [
															"546:16:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1842,
														"src": "546:16:19"
													},
													"referencedDeclaration": 1842,
													"src": "546:16:19",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC721URIStorage_$1842",
														"typeString": "contract ERC721URIStorage"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3634,
												"mutability": "mutable",
												"name": "_erc20",
												"nameLocation": "579:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 3646,
												"src": "572:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$246",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 3633,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3632,
														"name": "IERC20",
														"nameLocations": [
															"572:6:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 246,
														"src": "572:6:19"
													},
													"referencedDeclaration": 246,
													"src": "572:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$246",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:41:19"
									},
									"returnParameters": {
										"id": 3636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:0:19"
									},
									"scope": 3755,
									"src": "534:113:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3677,
										"nodeType": "Block",
										"src": "710:167:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3656,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3648,
																		"src": "744:8:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3654,
																		"name": "erc721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3617,
																		"src": "729:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC721URIStorage_$1842",
																			"typeString": "contract ERC721URIStorage"
																		}
																	},
																	"id": 3655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "736:7:19",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 714,
																	"src": "729:14:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 3657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "729:24:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3658,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "757:3:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "761:6:19",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "757:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "729:38:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74204e4654206f776e6572",
															"id": 3661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "769:15:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad2136552e70ec86c474894eb94b189d187b885f7b94c254663fa6f0c2245fde",
																"typeString": "literal_string \"not NFT owner\""
															},
															"value": "not NFT owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad2136552e70ec86c474894eb94b189d187b885f7b94c254663fa6f0c2245fde",
																"typeString": "literal_string \"not NFT owner\""
															}
														],
														"id": 3653,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "721:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "721:64:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3663,
												"nodeType": "ExpressionStatement",
												"src": "721:64:19"
											},
											{
												"expression": {
													"id": 3668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3664,
															"name": "tokenPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3624,
															"src": "796:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3666,
														"indexExpression": {
															"id": 3665,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3648,
															"src": "807:8:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "796:20:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3667,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3650,
														"src": "819:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "796:29:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3669,
												"nodeType": "ExpressionStatement",
												"src": "796:29:19"
											},
											{
												"expression": {
													"id": 3675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3670,
															"name": "tokenOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3628,
															"src": "836:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 3672,
														"indexExpression": {
															"id": 3671,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3648,
															"src": "847:8:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "836:20:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3673,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "859:3:19",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "863:6:19",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "859:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "836:33:19",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3676,
												"nodeType": "ExpressionStatement",
												"src": "836:33:19"
											}
										]
									},
									"functionSelector": "50fd7367",
									"id": 3678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "list",
									"nameLocation": "664:4:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3648,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "677:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 3678,
												"src": "669:16:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3650,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "695:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 3678,
												"src": "687:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "668:34:19"
									},
									"returnParameters": {
										"id": 3652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:0:19"
									},
									"scope": 3755,
									"src": "655:222:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3753,
										"nodeType": "Block",
										"src": "926:475:19",
										"statements": [
											{
												"assignments": [
													3684
												],
												"declarations": [
													{
														"constant": false,
														"id": 3684,
														"mutability": "mutable",
														"name": "nftPrice",
														"nameLocation": "945:8:19",
														"nodeType": "VariableDeclaration",
														"scope": 3753,
														"src": "937:16:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3683,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "937:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3688,
												"initialValue": {
													"baseExpression": {
														"id": 3685,
														"name": "tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3624,
														"src": "956:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 3687,
													"indexExpression": {
														"id": 3686,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3680,
														"src": "967:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "956:20:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "937:39:19"
											},
											{
												"assignments": [
													3690
												],
												"declarations": [
													{
														"constant": false,
														"id": 3690,
														"mutability": "mutable",
														"name": "nftOwner",
														"nameLocation": "995:8:19",
														"nodeType": "VariableDeclaration",
														"scope": 3753,
														"src": "987:16:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3689,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "987:7:19",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3694,
												"initialValue": {
													"baseExpression": {
														"id": 3691,
														"name": "tokenOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3628,
														"src": "1006:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 3693,
													"indexExpression": {
														"id": 3692,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3680,
														"src": "1017:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1006:20:19",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "987:39:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3696,
																	"name": "nftPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3684,
																	"src": "1045:8:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1056:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1045:12:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3699,
																	"name": "nftOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3690,
																	"src": "1061:8:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 3702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1081:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 3701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1073:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3700,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1073:7:19",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1073:10:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1061:22:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1045:38:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4654206e6f74206c697374",
															"id": 3706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1085:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_282894232b05b6ad88298cd6107ea4287558953550cfb6dc11d4aa836e0ba6cb",
																"typeString": "literal_string \"NFT not list\""
															},
															"value": "NFT not list"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_282894232b05b6ad88298cd6107ea4287558953550cfb6dc11d4aa836e0ba6cb",
																"typeString": "literal_string \"NFT not list\""
															}
														],
														"id": 3695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1037:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1037:63:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3708,
												"nodeType": "ExpressionStatement",
												"src": "1037:63:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3712,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1135:3:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1139:6:19",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1135:10:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 3710,
																		"name": "erc20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3620,
																		"src": "1119:5:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$246",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 3711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1125:9:19",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 203,
																	"src": "1119:15:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 3714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1119:27:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3715,
																"name": "nftPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3684,
																"src": "1150:8:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1119:39:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e73756666696369656e742062616c616e6365",
															"id": 3717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1160:22:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
																"typeString": "literal_string \"insufficient balance\""
															},
															"value": "insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
																"typeString": "literal_string \"insufficient balance\""
															}
														],
														"id": 3709,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1111:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1111:72:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3719,
												"nodeType": "ExpressionStatement",
												"src": "1111:72:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3723,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1217:3:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1221:6:19",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1217:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3725,
															"name": "nftOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3690,
															"src": "1229:8:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3726,
															"name": "nftPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3684,
															"src": "1239:8:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3720,
															"name": "erc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3620,
															"src": "1194:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$246",
																"typeString": "contract IERC20"
															}
														},
														"id": 3722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1200:16:19",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 359,
														"src": "1194:22:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$246_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$246_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 3727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1194:54:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3728,
												"nodeType": "ExpressionStatement",
												"src": "1194:54:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3732,
															"name": "nftOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3690,
															"src": "1283:8:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3733,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1293:3:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1297:6:19",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1293:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3735,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3680,
															"src": "1305:8:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3729,
															"name": "erc721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3617,
															"src": "1259:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721URIStorage_$1842",
																"typeString": "contract ERC721URIStorage"
															}
														},
														"id": 3731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1266:16:19",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 907,
														"src": "1259:23:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1259:55:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3737,
												"nodeType": "ExpressionStatement",
												"src": "1259:55:19"
											},
											{
												"expression": {
													"id": 3742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3738,
															"name": "tokenPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3624,
															"src": "1325:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3740,
														"indexExpression": {
															"id": 3739,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3680,
															"src": "1336:8:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1325:20:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 3741,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1348:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1325:24:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3743,
												"nodeType": "ExpressionStatement",
												"src": "1325:24:19"
											},
											{
												"expression": {
													"id": 3751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3744,
															"name": "tokenOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3628,
															"src": "1360:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 3746,
														"indexExpression": {
															"id": 3745,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3680,
															"src": "1371:8:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1360:20:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1391:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1383:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3747,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1383:7:19",
																"typeDescriptions": {}
															}
														},
														"id": 3750,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1383:10:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1360:33:19",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3752,
												"nodeType": "ExpressionStatement",
												"src": "1360:33:19"
											}
										]
									},
									"functionSelector": "51ed8288",
									"id": 3754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyNFT",
									"nameLocation": "894:6:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3680,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "909:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 3754,
												"src": "901:16:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "901:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "900:18:19"
									},
									"returnParameters": {
										"id": 3682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:19"
									},
									"scope": 3755,
									"src": "885:516:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3756,
							"src": "299:1105:19",
							"usedErrors": [
								299,
								1878,
								1883,
								1886
							],
							"usedEvents": []
						}
					],
					"src": "33:1371:19"
				},
				"id": 19
			}
		}
	}
}