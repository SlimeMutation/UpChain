{
	"id": "cf85e8aa881a73047bd57d3e4664ba35",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Vault.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.24;\r\n\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract Vault {\r\n    using SafeERC20 for IERC20;\r\n\r\n    IERC20 public erc20;\r\n    mapping(address => uint256) public accountBalanceOf;\r\n\r\n\r\n    constructor(IERC20 _erc20) {\r\n        erc20 = _erc20;\r\n    }\r\n\r\n    function deposit(uint256 _amount) public {\r\n        require(_amount > 0, 'Vault: deposit amount must be greater than 0');\r\n        accountBalanceOf[msg.sender] += _amount;\r\n        erc20.safeTransferFrom(msg.sender, address(this), _amount);\r\n    }\r\n\r\n    function withdraw(uint256 _amount) public {\r\n        require(_amount > 0, 'Vault: withdraw amount must be greater than 0');\r\n        require(_amount <= accountBalanceOf[msg.sender], 'Vault: withdraw amount must be <= account balance');\r\n        accountBalanceOf[msg.sender] -= _amount;\r\n        erc20.safeTransfer(msg.sender, _amount);\r\n    }\r\n\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"Vault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"Vault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Vault.sol": {
				"Vault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_erc20",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "accountBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc20",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Vault.sol\":226:1043  contract Vault {... */\n  mstore(0x40, 0x80)\n    /* \"Vault.sol\":371:431  constructor(IERC20 _erc20) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Vault.sol\":417:423  _erc20 */\n  dup1\n    /* \"Vault.sol\":409:414  erc20 */\n  0x00\n  dup1\n    /* \"Vault.sol\":409:423  erc20 = _erc20 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Vault.sol\":371:431  constructor(IERC20 _erc20) {... */\n  pop\n    /* \"Vault.sol\":226:1043  contract Vault {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_21\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:677   */\ntag_12:\n    /* \"#utility.yul\":618:625   */\n  0x00\n    /* \"#utility.yul\":647:671   */\n  tag_23\n    /* \"#utility.yul\":665:670   */\n  dup3\n    /* \"#utility.yul\":647:671   */\n  tag_11\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":636:671   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:677   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":683:831   */\ntag_13:\n    /* \"#utility.yul\":769:806   */\n  tag_25\n    /* \"#utility.yul\":800:805   */\n  dup2\n    /* \"#utility.yul\":769:806   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":762:767   */\n  dup2\n    /* \"#utility.yul\":759:807   */\n  eq\n    /* \"#utility.yul\":749:825   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":821:822   */\n  0x00\n    /* \"#utility.yul\":818:819   */\n  dup1\n    /* \"#utility.yul\":811:823   */\n  revert\n    /* \"#utility.yul\":749:825   */\ntag_26:\n    /* \"#utility.yul\":683:831   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":837:1006   */\ntag_14:\n    /* \"#utility.yul\":907:912   */\n  0x00\n    /* \"#utility.yul\":938:944   */\n  dup2\n    /* \"#utility.yul\":932:945   */\n  mload\n    /* \"#utility.yul\":923:945   */\n  swap1\n  pop\n    /* \"#utility.yul\":954:1000   */\n  tag_28\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":954:1000   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":837:1006   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1012:1389   */\ntag_3:\n    /* \"#utility.yul\":1095:1101   */\n  0x00\n    /* \"#utility.yul\":1144:1146   */\n  0x20\n    /* \"#utility.yul\":1132:1141   */\n  dup3\n    /* \"#utility.yul\":1123:1130   */\n  dup5\n    /* \"#utility.yul\":1119:1142   */\n  sub\n    /* \"#utility.yul\":1115:1147   */\n  slt\n    /* \"#utility.yul\":1112:1231   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1150:1229   */\n  tag_31\n  tag_8\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1112:1231   */\ntag_30:\n    /* \"#utility.yul\":1270:1271   */\n  0x00\n    /* \"#utility.yul\":1295:1372   */\n  tag_32\n    /* \"#utility.yul\":1364:1371   */\n  dup5\n    /* \"#utility.yul\":1355:1361   */\n  dup3\n    /* \"#utility.yul\":1344:1353   */\n  dup6\n    /* \"#utility.yul\":1340:1362   */\n  add\n    /* \"#utility.yul\":1295:1372   */\n  tag_14\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1285:1372   */\n  swap2\n  pop\n    /* \"#utility.yul\":1241:1382   */\n  pop\n    /* \"#utility.yul\":1012:1389   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Vault.sol\":226:1043  contract Vault {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Vault.sol\":226:1043  contract Vault {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x785e9e86\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xcc4db503\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Vault.sol\":694:1036  function withdraw(uint256 _amount) public {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"Vault.sol\":283:302  IERC20 public erc20 */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Vault.sol\":439:686  function deposit(uint256 _amount) public {... */\n    tag_5:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_16:\n      tag_17\n      jump\t// in\n    tag_15:\n      stop\n        /* \"Vault.sol\":309:360  mapping(address => uint256) public accountBalanceOf */\n    tag_6:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Vault.sol\":694:1036  function withdraw(uint256 _amount) public {... */\n    tag_10:\n        /* \"Vault.sol\":765:766  0 */\n      0x00\n        /* \"Vault.sol\":755:762  _amount */\n      dup2\n        /* \"Vault.sol\":755:766  _amount > 0 */\n      gt\n        /* \"Vault.sol\":747:816  require(_amount > 0, 'Vault: withdraw amount must be greater than 0') */\n      tag_25\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_26\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"Vault.sol\":846:862  accountBalanceOf */\n      0x01\n        /* \"Vault.sol\":846:874  accountBalanceOf[msg.sender] */\n      0x00\n        /* \"Vault.sol\":863:873  msg.sender */\n      caller\n        /* \"Vault.sol\":846:874  accountBalanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Vault.sol\":835:842  _amount */\n      dup2\n        /* \"Vault.sol\":835:874  _amount <= accountBalanceOf[msg.sender] */\n      gt\n      iszero\n        /* \"Vault.sol\":827:928  require(_amount <= accountBalanceOf[msg.sender], 'Vault: withdraw amount must be <= account balance') */\n      tag_28\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_28:\n        /* \"Vault.sol\":971:978  _amount */\n      dup1\n        /* \"Vault.sol\":939:955  accountBalanceOf */\n      0x01\n        /* \"Vault.sol\":939:967  accountBalanceOf[msg.sender] */\n      0x00\n        /* \"Vault.sol\":956:966  msg.sender */\n      caller\n        /* \"Vault.sol\":939:967  accountBalanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Vault.sol\":939:978  accountBalanceOf[msg.sender] -= _amount */\n      dup3\n      dup3\n      sload\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Vault.sol\":989:1028  erc20.safeTransfer(msg.sender, _amount) */\n      tag_33\n        /* \"Vault.sol\":1008:1018  msg.sender */\n      caller\n        /* \"Vault.sol\":1020:1027  _amount */\n      dup3\n        /* \"Vault.sol\":989:994  erc20 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Vault.sol\":989:1007  erc20.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_34\n      swap1\n        /* \"Vault.sol\":989:1028  erc20.safeTransfer(msg.sender, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_33:\n        /* \"Vault.sol\":694:1036  function withdraw(uint256 _amount) public {... */\n      pop\n      jump\t// out\n        /* \"Vault.sol\":283:302  IERC20 public erc20 */\n    tag_12:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Vault.sol\":439:686  function deposit(uint256 _amount) public {... */\n    tag_17:\n        /* \"Vault.sol\":509:510  0 */\n      0x00\n        /* \"Vault.sol\":499:506  _amount */\n      dup2\n        /* \"Vault.sol\":499:510  _amount > 0 */\n      gt\n        /* \"Vault.sol\":491:559  require(_amount > 0, 'Vault: deposit amount must be greater than 0') */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"Vault.sol\":602:609  _amount */\n      dup1\n        /* \"Vault.sol\":570:586  accountBalanceOf */\n      0x01\n        /* \"Vault.sol\":570:598  accountBalanceOf[msg.sender] */\n      0x00\n        /* \"Vault.sol\":587:597  msg.sender */\n      caller\n        /* \"Vault.sol\":570:598  accountBalanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Vault.sol\":570:609  accountBalanceOf[msg.sender] += _amount */\n      dup3\n      dup3\n      sload\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Vault.sol\":620:678  erc20.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_41\n        /* \"Vault.sol\":643:653  msg.sender */\n      caller\n        /* \"Vault.sol\":663:667  this */\n      address\n        /* \"Vault.sol\":670:677  _amount */\n      dup4\n        /* \"Vault.sol\":620:625  erc20 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Vault.sol\":620:642  erc20.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_42\n      swap1\n        /* \"Vault.sol\":620:678  erc20.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_41:\n        /* \"Vault.sol\":439:686  function deposit(uint256 _amount) public {... */\n      pop\n      jump\t// out\n        /* \"Vault.sol\":309:360  mapping(address => uint256) public accountBalanceOf */\n    tag_21:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_44\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_45\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_49\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_50\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_53\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_54\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_55\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_58\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_62\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_63\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_65\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_71\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_70)\n    tag_71:\n      0x60\n      swap2\n      pop\n    tag_70:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_72\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_73:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_75\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_76\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_77\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_76:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_78)\n    tag_75:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_79\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_79:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_80\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_74)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_74:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_83\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_86:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_88:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_89:\n        /* \"#utility.yul\":490:514   */\n      tag_123\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_88\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_124\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_124:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_90:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_126\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_89\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_9:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_129\n      tag_86\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":766:885   */\n    tag_128:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_130\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_90\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_91:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1217   */\n    tag_92:\n        /* \"#utility.yul\":1185:1188   */\n      0x00\n        /* \"#utility.yul\":1206:1211   */\n      dup2\n        /* \"#utility.yul\":1199:1211   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1223:1365   */\n    tag_93:\n        /* \"#utility.yul\":1273:1282   */\n      0x00\n        /* \"#utility.yul\":1306:1359   */\n      tag_134\n        /* \"#utility.yul\":1324:1358   */\n      tag_135\n        /* \"#utility.yul\":1333:1357   */\n      tag_136\n        /* \"#utility.yul\":1351:1356   */\n      dup5\n        /* \"#utility.yul\":1333:1357   */\n      tag_91\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1324:1358   */\n      tag_92\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1306:1359   */\n      tag_91\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":1293:1359   */\n      swap1\n      pop\n        /* \"#utility.yul\":1223:1365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1371:1497   */\n    tag_94:\n        /* \"#utility.yul\":1421:1430   */\n      0x00\n        /* \"#utility.yul\":1454:1491   */\n      tag_138\n        /* \"#utility.yul\":1485:1490   */\n      dup3\n        /* \"#utility.yul\":1454:1491   */\n      tag_93\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":1441:1491   */\n      swap1\n      pop\n        /* \"#utility.yul\":1371:1497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1503:1642   */\n    tag_95:\n        /* \"#utility.yul\":1566:1575   */\n      0x00\n        /* \"#utility.yul\":1599:1636   */\n      tag_140\n        /* \"#utility.yul\":1630:1635   */\n      dup3\n        /* \"#utility.yul\":1599:1636   */\n      tag_94\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1586:1636   */\n      swap1\n      pop\n        /* \"#utility.yul\":1503:1642   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1648:1805   */\n    tag_96:\n        /* \"#utility.yul\":1748:1798   */\n      tag_142\n        /* \"#utility.yul\":1792:1797   */\n      dup2\n        /* \"#utility.yul\":1748:1798   */\n      tag_95\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":1743:1746   */\n      dup3\n        /* \"#utility.yul\":1736:1799   */\n      mstore\n        /* \"#utility.yul\":1648:1805   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1811:2059   */\n    tag_14:\n        /* \"#utility.yul\":1917:1921   */\n      0x00\n        /* \"#utility.yul\":1955:1957   */\n      0x20\n        /* \"#utility.yul\":1944:1953   */\n      dup3\n        /* \"#utility.yul\":1940:1958   */\n      add\n        /* \"#utility.yul\":1932:1958   */\n      swap1\n      pop\n        /* \"#utility.yul\":1968:2052   */\n      tag_144\n        /* \"#utility.yul\":2049:2050   */\n      0x00\n        /* \"#utility.yul\":2038:2047   */\n      dup4\n        /* \"#utility.yul\":2034:2051   */\n      add\n        /* \"#utility.yul\":2025:2031   */\n      dup5\n        /* \"#utility.yul\":1968:2052   */\n      tag_96\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1811:2059   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2065:2161   */\n    tag_97:\n        /* \"#utility.yul\":2102:2109   */\n      0x00\n        /* \"#utility.yul\":2131:2155   */\n      tag_146\n        /* \"#utility.yul\":2149:2154   */\n      dup3\n        /* \"#utility.yul\":2131:2155   */\n      tag_91\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":2120:2155   */\n      swap1\n      pop\n        /* \"#utility.yul\":2065:2161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2167:2289   */\n    tag_98:\n        /* \"#utility.yul\":2240:2264   */\n      tag_148\n        /* \"#utility.yul\":2258:2263   */\n      dup2\n        /* \"#utility.yul\":2240:2264   */\n      tag_97\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":2233:2238   */\n      dup2\n        /* \"#utility.yul\":2230:2265   */\n      eq\n        /* \"#utility.yul\":2220:2283   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":2279:2280   */\n      0x00\n        /* \"#utility.yul\":2276:2277   */\n      dup1\n        /* \"#utility.yul\":2269:2281   */\n      revert\n        /* \"#utility.yul\":2220:2283   */\n    tag_149:\n        /* \"#utility.yul\":2167:2289   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2295:2434   */\n    tag_99:\n        /* \"#utility.yul\":2341:2346   */\n      0x00\n        /* \"#utility.yul\":2379:2385   */\n      dup2\n        /* \"#utility.yul\":2366:2386   */\n      calldataload\n        /* \"#utility.yul\":2357:2386   */\n      swap1\n      pop\n        /* \"#utility.yul\":2395:2428   */\n      tag_151\n        /* \"#utility.yul\":2422:2427   */\n      dup2\n        /* \"#utility.yul\":2395:2428   */\n      tag_98\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2295:2434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2440:2769   */\n    tag_20:\n        /* \"#utility.yul\":2499:2505   */\n      0x00\n        /* \"#utility.yul\":2548:2550   */\n      0x20\n        /* \"#utility.yul\":2536:2545   */\n      dup3\n        /* \"#utility.yul\":2527:2534   */\n      dup5\n        /* \"#utility.yul\":2523:2546   */\n      sub\n        /* \"#utility.yul\":2519:2551   */\n      slt\n        /* \"#utility.yul\":2516:2635   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":2554:2633   */\n      tag_154\n      tag_86\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":2516:2635   */\n    tag_153:\n        /* \"#utility.yul\":2674:2675   */\n      0x00\n        /* \"#utility.yul\":2699:2752   */\n      tag_155\n        /* \"#utility.yul\":2744:2751   */\n      dup5\n        /* \"#utility.yul\":2735:2741   */\n      dup3\n        /* \"#utility.yul\":2724:2733   */\n      dup6\n        /* \"#utility.yul\":2720:2742   */\n      add\n        /* \"#utility.yul\":2699:2752   */\n      tag_99\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2689:2752   */\n      swap2\n      pop\n        /* \"#utility.yul\":2645:2762   */\n      pop\n        /* \"#utility.yul\":2440:2769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2775:2893   */\n    tag_100:\n        /* \"#utility.yul\":2862:2886   */\n      tag_157\n        /* \"#utility.yul\":2880:2885   */\n      dup2\n        /* \"#utility.yul\":2862:2886   */\n      tag_88\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2857:2860   */\n      dup3\n        /* \"#utility.yul\":2850:2887   */\n      mstore\n        /* \"#utility.yul\":2775:2893   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2899:3121   */\n    tag_23:\n        /* \"#utility.yul\":2992:2996   */\n      0x00\n        /* \"#utility.yul\":3030:3032   */\n      0x20\n        /* \"#utility.yul\":3019:3028   */\n      dup3\n        /* \"#utility.yul\":3015:3033   */\n      add\n        /* \"#utility.yul\":3007:3033   */\n      swap1\n      pop\n        /* \"#utility.yul\":3043:3114   */\n      tag_159\n        /* \"#utility.yul\":3111:3112   */\n      0x00\n        /* \"#utility.yul\":3100:3109   */\n      dup4\n        /* \"#utility.yul\":3096:3113   */\n      add\n        /* \"#utility.yul\":3087:3093   */\n      dup5\n        /* \"#utility.yul\":3043:3114   */\n      tag_100\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2899:3121   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3127:3296   */\n    tag_101:\n        /* \"#utility.yul\":3211:3222   */\n      0x00\n        /* \"#utility.yul\":3245:3251   */\n      dup3\n        /* \"#utility.yul\":3240:3243   */\n      dup3\n        /* \"#utility.yul\":3233:3252   */\n      mstore\n        /* \"#utility.yul\":3285:3289   */\n      0x20\n        /* \"#utility.yul\":3280:3283   */\n      dup3\n        /* \"#utility.yul\":3276:3290   */\n      add\n        /* \"#utility.yul\":3261:3290   */\n      swap1\n      pop\n        /* \"#utility.yul\":3127:3296   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3302:3534   */\n    tag_102:\n        /* \"#utility.yul\":3442:3476   */\n      0x5661756c743a20776974686472617720616d6f756e74206d7573742062652067\n        /* \"#utility.yul\":3438:3439   */\n      0x00\n        /* \"#utility.yul\":3430:3436   */\n      dup3\n        /* \"#utility.yul\":3426:3440   */\n      add\n        /* \"#utility.yul\":3419:3477   */\n      mstore\n        /* \"#utility.yul\":3511:3526   */\n      0x726561746572207468616e203000000000000000000000000000000000000000\n        /* \"#utility.yul\":3506:3508   */\n      0x20\n        /* \"#utility.yul\":3498:3504   */\n      dup3\n        /* \"#utility.yul\":3494:3509   */\n      add\n        /* \"#utility.yul\":3487:3527   */\n      mstore\n        /* \"#utility.yul\":3302:3534   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3540:3906   */\n    tag_103:\n        /* \"#utility.yul\":3682:3685   */\n      0x00\n        /* \"#utility.yul\":3703:3770   */\n      tag_163\n        /* \"#utility.yul\":3767:3769   */\n      0x2d\n        /* \"#utility.yul\":3762:3765   */\n      dup4\n        /* \"#utility.yul\":3703:3770   */\n      tag_101\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":3696:3770   */\n      swap2\n      pop\n        /* \"#utility.yul\":3779:3872   */\n      tag_164\n        /* \"#utility.yul\":3868:3871   */\n      dup3\n        /* \"#utility.yul\":3779:3872   */\n      tag_102\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":3897:3899   */\n      0x40\n        /* \"#utility.yul\":3892:3895   */\n      dup3\n        /* \"#utility.yul\":3888:3900   */\n      add\n        /* \"#utility.yul\":3881:3900   */\n      swap1\n      pop\n        /* \"#utility.yul\":3540:3906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3912:4331   */\n    tag_27:\n        /* \"#utility.yul\":4078:4082   */\n      0x00\n        /* \"#utility.yul\":4116:4118   */\n      0x20\n        /* \"#utility.yul\":4105:4114   */\n      dup3\n        /* \"#utility.yul\":4101:4119   */\n      add\n        /* \"#utility.yul\":4093:4119   */\n      swap1\n      pop\n        /* \"#utility.yul\":4165:4174   */\n      dup2\n        /* \"#utility.yul\":4159:4163   */\n      dup2\n        /* \"#utility.yul\":4155:4175   */\n      sub\n        /* \"#utility.yul\":4151:4152   */\n      0x00\n        /* \"#utility.yul\":4140:4149   */\n      dup4\n        /* \"#utility.yul\":4136:4153   */\n      add\n        /* \"#utility.yul\":4129:4176   */\n      mstore\n        /* \"#utility.yul\":4193:4324   */\n      tag_166\n        /* \"#utility.yul\":4319:4323   */\n      dup2\n        /* \"#utility.yul\":4193:4324   */\n      tag_103\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":4185:4324   */\n      swap1\n      pop\n        /* \"#utility.yul\":3912:4331   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4337:4573   */\n    tag_104:\n        /* \"#utility.yul\":4477:4511   */\n      0x5661756c743a20776974686472617720616d6f756e74206d757374206265203c\n        /* \"#utility.yul\":4473:4474   */\n      0x00\n        /* \"#utility.yul\":4465:4471   */\n      dup3\n        /* \"#utility.yul\":4461:4475   */\n      add\n        /* \"#utility.yul\":4454:4512   */\n      mstore\n        /* \"#utility.yul\":4546:4565   */\n      0x3d206163636f756e742062616c616e6365000000000000000000000000000000\n        /* \"#utility.yul\":4541:4543   */\n      0x20\n        /* \"#utility.yul\":4533:4539   */\n      dup3\n        /* \"#utility.yul\":4529:4544   */\n      add\n        /* \"#utility.yul\":4522:4566   */\n      mstore\n        /* \"#utility.yul\":4337:4573   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4579:4945   */\n    tag_105:\n        /* \"#utility.yul\":4721:4724   */\n      0x00\n        /* \"#utility.yul\":4742:4809   */\n      tag_169\n        /* \"#utility.yul\":4806:4808   */\n      0x31\n        /* \"#utility.yul\":4801:4804   */\n      dup4\n        /* \"#utility.yul\":4742:4809   */\n      tag_101\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":4735:4809   */\n      swap2\n      pop\n        /* \"#utility.yul\":4818:4911   */\n      tag_170\n        /* \"#utility.yul\":4907:4910   */\n      dup3\n        /* \"#utility.yul\":4818:4911   */\n      tag_104\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":4936:4938   */\n      0x40\n        /* \"#utility.yul\":4931:4934   */\n      dup3\n        /* \"#utility.yul\":4927:4939   */\n      add\n        /* \"#utility.yul\":4920:4939   */\n      swap1\n      pop\n        /* \"#utility.yul\":4579:4945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4951:5370   */\n    tag_30:\n        /* \"#utility.yul\":5117:5121   */\n      0x00\n        /* \"#utility.yul\":5155:5157   */\n      0x20\n        /* \"#utility.yul\":5144:5153   */\n      dup3\n        /* \"#utility.yul\":5140:5158   */\n      add\n        /* \"#utility.yul\":5132:5158   */\n      swap1\n      pop\n        /* \"#utility.yul\":5204:5213   */\n      dup2\n        /* \"#utility.yul\":5198:5202   */\n      dup2\n        /* \"#utility.yul\":5194:5214   */\n      sub\n        /* \"#utility.yul\":5190:5191   */\n      0x00\n        /* \"#utility.yul\":5179:5188   */\n      dup4\n        /* \"#utility.yul\":5175:5192   */\n      add\n        /* \"#utility.yul\":5168:5215   */\n      mstore\n        /* \"#utility.yul\":5232:5363   */\n      tag_172\n        /* \"#utility.yul\":5358:5362   */\n      dup2\n        /* \"#utility.yul\":5232:5363   */\n      tag_105\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":5224:5363   */\n      swap1\n      pop\n        /* \"#utility.yul\":4951:5370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5376:5556   */\n    tag_106:\n        /* \"#utility.yul\":5424:5501   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5421:5422   */\n      0x00\n        /* \"#utility.yul\":5414:5502   */\n      mstore\n        /* \"#utility.yul\":5521:5525   */\n      0x11\n        /* \"#utility.yul\":5518:5519   */\n      0x04\n        /* \"#utility.yul\":5511:5526   */\n      mstore\n        /* \"#utility.yul\":5545:5549   */\n      0x24\n        /* \"#utility.yul\":5542:5543   */\n      0x00\n        /* \"#utility.yul\":5535:5550   */\n      revert\n        /* \"#utility.yul\":5562:5756   */\n    tag_32:\n        /* \"#utility.yul\":5602:5606   */\n      0x00\n        /* \"#utility.yul\":5622:5642   */\n      tag_175\n        /* \"#utility.yul\":5640:5641   */\n      dup3\n        /* \"#utility.yul\":5622:5642   */\n      tag_88\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":5617:5642   */\n      swap2\n      pop\n        /* \"#utility.yul\":5656:5676   */\n      tag_176\n        /* \"#utility.yul\":5674:5675   */\n      dup4\n        /* \"#utility.yul\":5656:5676   */\n      tag_88\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":5651:5676   */\n      swap3\n      pop\n        /* \"#utility.yul\":5700:5701   */\n      dup3\n        /* \"#utility.yul\":5697:5698   */\n      dup3\n        /* \"#utility.yul\":5693:5702   */\n      sub\n        /* \"#utility.yul\":5685:5702   */\n      swap1\n      pop\n        /* \"#utility.yul\":5724:5725   */\n      dup2\n        /* \"#utility.yul\":5718:5722   */\n      dup2\n        /* \"#utility.yul\":5715:5726   */\n      gt\n        /* \"#utility.yul\":5712:5749   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":5729:5747   */\n      tag_178\n      tag_106\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":5712:5749   */\n    tag_177:\n        /* \"#utility.yul\":5562:5756   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5762:5993   */\n    tag_107:\n        /* \"#utility.yul\":5902:5936   */\n      0x5661756c743a206465706f73697420616d6f756e74206d757374206265206772\n        /* \"#utility.yul\":5898:5899   */\n      0x00\n        /* \"#utility.yul\":5890:5896   */\n      dup3\n        /* \"#utility.yul\":5886:5900   */\n      add\n        /* \"#utility.yul\":5879:5937   */\n      mstore\n        /* \"#utility.yul\":5971:5985   */\n      0x6561746572207468616e20300000000000000000000000000000000000000000\n        /* \"#utility.yul\":5966:5968   */\n      0x20\n        /* \"#utility.yul\":5958:5964   */\n      dup3\n        /* \"#utility.yul\":5954:5969   */\n      add\n        /* \"#utility.yul\":5947:5986   */\n      mstore\n        /* \"#utility.yul\":5762:5993   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5999:6365   */\n    tag_108:\n        /* \"#utility.yul\":6141:6144   */\n      0x00\n        /* \"#utility.yul\":6162:6229   */\n      tag_181\n        /* \"#utility.yul\":6226:6228   */\n      0x2c\n        /* \"#utility.yul\":6221:6224   */\n      dup4\n        /* \"#utility.yul\":6162:6229   */\n      tag_101\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":6155:6229   */\n      swap2\n      pop\n        /* \"#utility.yul\":6238:6331   */\n      tag_182\n        /* \"#utility.yul\":6327:6330   */\n      dup3\n        /* \"#utility.yul\":6238:6331   */\n      tag_107\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":6356:6358   */\n      0x40\n        /* \"#utility.yul\":6351:6354   */\n      dup3\n        /* \"#utility.yul\":6347:6359   */\n      add\n        /* \"#utility.yul\":6340:6359   */\n      swap1\n      pop\n        /* \"#utility.yul\":5999:6365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6371:6790   */\n    tag_38:\n        /* \"#utility.yul\":6537:6541   */\n      0x00\n        /* \"#utility.yul\":6575:6577   */\n      0x20\n        /* \"#utility.yul\":6564:6573   */\n      dup3\n        /* \"#utility.yul\":6560:6578   */\n      add\n        /* \"#utility.yul\":6552:6578   */\n      swap1\n      pop\n        /* \"#utility.yul\":6624:6633   */\n      dup2\n        /* \"#utility.yul\":6618:6622   */\n      dup2\n        /* \"#utility.yul\":6614:6634   */\n      sub\n        /* \"#utility.yul\":6610:6611   */\n      0x00\n        /* \"#utility.yul\":6599:6608   */\n      dup4\n        /* \"#utility.yul\":6595:6612   */\n      add\n        /* \"#utility.yul\":6588:6635   */\n      mstore\n        /* \"#utility.yul\":6652:6783   */\n      tag_184\n        /* \"#utility.yul\":6778:6782   */\n      dup2\n        /* \"#utility.yul\":6652:6783   */\n      tag_108\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":6644:6783   */\n      swap1\n      pop\n        /* \"#utility.yul\":6371:6790   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6796:6987   */\n    tag_40:\n        /* \"#utility.yul\":6836:6839   */\n      0x00\n        /* \"#utility.yul\":6855:6875   */\n      tag_186\n        /* \"#utility.yul\":6873:6874   */\n      dup3\n        /* \"#utility.yul\":6855:6875   */\n      tag_88\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":6850:6875   */\n      swap2\n      pop\n        /* \"#utility.yul\":6889:6909   */\n      tag_187\n        /* \"#utility.yul\":6907:6908   */\n      dup4\n        /* \"#utility.yul\":6889:6909   */\n      tag_88\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":6884:6909   */\n      swap3\n      pop\n        /* \"#utility.yul\":6932:6933   */\n      dup3\n        /* \"#utility.yul\":6929:6930   */\n      dup3\n        /* \"#utility.yul\":6925:6934   */\n      add\n        /* \"#utility.yul\":6918:6934   */\n      swap1\n      pop\n        /* \"#utility.yul\":6953:6956   */\n      dup1\n        /* \"#utility.yul\":6950:6951   */\n      dup3\n        /* \"#utility.yul\":6947:6957   */\n      gt\n        /* \"#utility.yul\":6944:6980   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":6960:6978   */\n      tag_189\n      tag_106\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":6944:6980   */\n    tag_188:\n        /* \"#utility.yul\":6796:6987   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6993:7111   */\n    tag_109:\n        /* \"#utility.yul\":7080:7104   */\n      tag_191\n        /* \"#utility.yul\":7098:7103   */\n      dup2\n        /* \"#utility.yul\":7080:7104   */\n      tag_97\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":7075:7078   */\n      dup3\n        /* \"#utility.yul\":7068:7105   */\n      mstore\n        /* \"#utility.yul\":6993:7111   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7117:7449   */\n    tag_46:\n        /* \"#utility.yul\":7238:7242   */\n      0x00\n        /* \"#utility.yul\":7276:7278   */\n      0x40\n        /* \"#utility.yul\":7265:7274   */\n      dup3\n        /* \"#utility.yul\":7261:7279   */\n      add\n        /* \"#utility.yul\":7253:7279   */\n      swap1\n      pop\n        /* \"#utility.yul\":7289:7360   */\n      tag_193\n        /* \"#utility.yul\":7357:7358   */\n      0x00\n        /* \"#utility.yul\":7346:7355   */\n      dup4\n        /* \"#utility.yul\":7342:7359   */\n      add\n        /* \"#utility.yul\":7333:7339   */\n      dup6\n        /* \"#utility.yul\":7289:7360   */\n      tag_109\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":7370:7442   */\n      tag_194\n        /* \"#utility.yul\":7438:7440   */\n      0x20\n        /* \"#utility.yul\":7427:7436   */\n      dup4\n        /* \"#utility.yul\":7423:7441   */\n      add\n        /* \"#utility.yul\":7414:7420   */\n      dup5\n        /* \"#utility.yul\":7370:7442   */\n      tag_100\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":7117:7449   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7455:7897   */\n    tag_51:\n        /* \"#utility.yul\":7604:7608   */\n      0x00\n        /* \"#utility.yul\":7642:7644   */\n      0x60\n        /* \"#utility.yul\":7631:7640   */\n      dup3\n        /* \"#utility.yul\":7627:7645   */\n      add\n        /* \"#utility.yul\":7619:7645   */\n      swap1\n      pop\n        /* \"#utility.yul\":7655:7726   */\n      tag_196\n        /* \"#utility.yul\":7723:7724   */\n      0x00\n        /* \"#utility.yul\":7712:7721   */\n      dup4\n        /* \"#utility.yul\":7708:7725   */\n      add\n        /* \"#utility.yul\":7699:7705   */\n      dup7\n        /* \"#utility.yul\":7655:7726   */\n      tag_109\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":7736:7808   */\n      tag_197\n        /* \"#utility.yul\":7804:7806   */\n      0x20\n        /* \"#utility.yul\":7793:7802   */\n      dup4\n        /* \"#utility.yul\":7789:7807   */\n      add\n        /* \"#utility.yul\":7780:7786   */\n      dup6\n        /* \"#utility.yul\":7736:7808   */\n      tag_109\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":7818:7890   */\n      tag_198\n        /* \"#utility.yul\":7886:7888   */\n      0x40\n        /* \"#utility.yul\":7875:7884   */\n      dup4\n        /* \"#utility.yul\":7871:7889   */\n      add\n        /* \"#utility.yul\":7862:7868   */\n      dup5\n        /* \"#utility.yul\":7818:7890   */\n      tag_100\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":7455:7897   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7903:7993   */\n    tag_110:\n        /* \"#utility.yul\":7937:7944   */\n      0x00\n        /* \"#utility.yul\":7980:7985   */\n      dup2\n        /* \"#utility.yul\":7973:7986   */\n      iszero\n        /* \"#utility.yul\":7966:7987   */\n      iszero\n        /* \"#utility.yul\":7955:7987   */\n      swap1\n      pop\n        /* \"#utility.yul\":7903:7993   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7999:8115   */\n    tag_111:\n        /* \"#utility.yul\":8069:8090   */\n      tag_201\n        /* \"#utility.yul\":8084:8089   */\n      dup2\n        /* \"#utility.yul\":8069:8090   */\n      tag_110\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":8062:8067   */\n      dup2\n        /* \"#utility.yul\":8059:8091   */\n      eq\n        /* \"#utility.yul\":8049:8109   */\n      tag_202\n      jumpi\n        /* \"#utility.yul\":8105:8106   */\n      0x00\n        /* \"#utility.yul\":8102:8103   */\n      dup1\n        /* \"#utility.yul\":8095:8107   */\n      revert\n        /* \"#utility.yul\":8049:8109   */\n    tag_202:\n        /* \"#utility.yul\":7999:8115   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8121:8258   */\n    tag_112:\n        /* \"#utility.yul\":8175:8180   */\n      0x00\n        /* \"#utility.yul\":8206:8212   */\n      dup2\n        /* \"#utility.yul\":8200:8213   */\n      mload\n        /* \"#utility.yul\":8191:8213   */\n      swap1\n      pop\n        /* \"#utility.yul\":8222:8252   */\n      tag_204\n        /* \"#utility.yul\":8246:8251   */\n      dup2\n        /* \"#utility.yul\":8222:8252   */\n      tag_111\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":8121:8258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8264:8609   */\n    tag_57:\n        /* \"#utility.yul\":8331:8337   */\n      0x00\n        /* \"#utility.yul\":8380:8382   */\n      0x20\n        /* \"#utility.yul\":8368:8377   */\n      dup3\n        /* \"#utility.yul\":8359:8366   */\n      dup5\n        /* \"#utility.yul\":8355:8378   */\n      sub\n        /* \"#utility.yul\":8351:8383   */\n      slt\n        /* \"#utility.yul\":8348:8467   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":8386:8465   */\n      tag_207\n      tag_86\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":8348:8467   */\n    tag_206:\n        /* \"#utility.yul\":8506:8507   */\n      0x00\n        /* \"#utility.yul\":8531:8592   */\n      tag_208\n        /* \"#utility.yul\":8584:8591   */\n      dup5\n        /* \"#utility.yul\":8575:8581   */\n      dup3\n        /* \"#utility.yul\":8564:8573   */\n      dup6\n        /* \"#utility.yul\":8560:8582   */\n      add\n        /* \"#utility.yul\":8531:8592   */\n      tag_112\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":8521:8592   */\n      swap2\n      pop\n        /* \"#utility.yul\":8477:8602   */\n      pop\n        /* \"#utility.yul\":8264:8609   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8615:8837   */\n    tag_60:\n        /* \"#utility.yul\":8708:8712   */\n      0x00\n        /* \"#utility.yul\":8746:8748   */\n      0x20\n        /* \"#utility.yul\":8735:8744   */\n      dup3\n        /* \"#utility.yul\":8731:8749   */\n      add\n        /* \"#utility.yul\":8723:8749   */\n      swap1\n      pop\n        /* \"#utility.yul\":8759:8830   */\n      tag_210\n        /* \"#utility.yul\":8827:8828   */\n      0x00\n        /* \"#utility.yul\":8816:8825   */\n      dup4\n        /* \"#utility.yul\":8812:8829   */\n      add\n        /* \"#utility.yul\":8803:8809   */\n      dup5\n        /* \"#utility.yul\":8759:8830   */\n      tag_109\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":8615:8837   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8843:8941   */\n    tag_113:\n        /* \"#utility.yul\":8894:8900   */\n      0x00\n        /* \"#utility.yul\":8928:8933   */\n      dup2\n        /* \"#utility.yul\":8922:8934   */\n      mload\n        /* \"#utility.yul\":8912:8934   */\n      swap1\n      pop\n        /* \"#utility.yul\":8843:8941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8947:9094   */\n    tag_114:\n        /* \"#utility.yul\":9048:9059   */\n      0x00\n        /* \"#utility.yul\":9085:9088   */\n      dup2\n        /* \"#utility.yul\":9070:9088   */\n      swap1\n      pop\n        /* \"#utility.yul\":8947:9094   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9100:9239   */\n    tag_115:\n        /* \"#utility.yul\":9189:9195   */\n      dup3\n        /* \"#utility.yul\":9184:9187   */\n      dup2\n        /* \"#utility.yul\":9179:9182   */\n      dup4\n        /* \"#utility.yul\":9173:9196   */\n      mcopy\n        /* \"#utility.yul\":9230:9231   */\n      0x00\n        /* \"#utility.yul\":9221:9227   */\n      dup4\n        /* \"#utility.yul\":9216:9219   */\n      dup4\n        /* \"#utility.yul\":9212:9228   */\n      add\n        /* \"#utility.yul\":9205:9232   */\n      mstore\n        /* \"#utility.yul\":9100:9239   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9245:9631   */\n    tag_116:\n        /* \"#utility.yul\":9349:9352   */\n      0x00\n        /* \"#utility.yul\":9377:9415   */\n      tag_215\n        /* \"#utility.yul\":9409:9414   */\n      dup3\n        /* \"#utility.yul\":9377:9415   */\n      tag_113\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":9431:9519   */\n      tag_216\n        /* \"#utility.yul\":9512:9518   */\n      dup2\n        /* \"#utility.yul\":9507:9510   */\n      dup6\n        /* \"#utility.yul\":9431:9519   */\n      tag_114\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":9424:9519   */\n      swap4\n      pop\n        /* \"#utility.yul\":9528:9593   */\n      tag_217\n        /* \"#utility.yul\":9586:9592   */\n      dup2\n        /* \"#utility.yul\":9581:9584   */\n      dup6\n        /* \"#utility.yul\":9574:9578   */\n      0x20\n        /* \"#utility.yul\":9567:9572   */\n      dup7\n        /* \"#utility.yul\":9563:9579   */\n      add\n        /* \"#utility.yul\":9528:9593   */\n      tag_115\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":9618:9624   */\n      dup1\n        /* \"#utility.yul\":9613:9616   */\n      dup5\n        /* \"#utility.yul\":9609:9625   */\n      add\n        /* \"#utility.yul\":9602:9625   */\n      swap2\n      pop\n        /* \"#utility.yul\":9353:9631   */\n      pop\n        /* \"#utility.yul\":9245:9631   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9637:9908   */\n    tag_68:\n        /* \"#utility.yul\":9767:9770   */\n      0x00\n        /* \"#utility.yul\":9789:9882   */\n      tag_219\n        /* \"#utility.yul\":9878:9881   */\n      dup3\n        /* \"#utility.yul\":9869:9875   */\n      dup5\n        /* \"#utility.yul\":9789:9882   */\n      tag_116\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":9782:9882   */\n      swap2\n      pop\n        /* \"#utility.yul\":9899:9902   */\n      dup2\n        /* \"#utility.yul\":9892:9902   */\n      swap1\n      pop\n        /* \"#utility.yul\":9637:9908   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f7a71d0d778be4215282ab64793d244b7c39daba753b9c6afd1ed1e3bbe4d52664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_684": {
									"entryPoint": null,
									"id": 684,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$77_fromMemory": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$77_fromMemory": {
									"entryPoint": 229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$77": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$77": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1392:5",
										"nodeType": "YulBlock",
										"src": "0:1392:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "626:51:5",
													"nodeType": "YulBlock",
													"src": "626:51:5",
													"statements": [
														{
															"nativeSrc": "636:35:5",
															"nodeType": "YulAssignment",
															"src": "636:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "665:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "665:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "647:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "647:17:5"
																},
																"nativeSrc": "647:24:5",
																"nodeType": "YulFunctionCall",
																"src": "647:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "636:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "636:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$77",
												"nativeSrc": "568:109:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "608:5:5",
														"nodeType": "YulTypedName",
														"src": "608:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "618:7:5",
														"nodeType": "YulTypedName",
														"src": "618:7:5",
														"type": ""
													}
												],
												"src": "568:109:5"
											},
											{
												"body": {
													"nativeSrc": "739:92:5",
													"nodeType": "YulBlock",
													"src": "739:92:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "809:16:5",
																"nodeType": "YulBlock",
																"src": "809:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "818:1:5",
																					"nodeType": "YulLiteral",
																					"src": "818:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:5",
																					"nodeType": "YulLiteral",
																					"src": "821:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "811:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "811:6:5"
																			},
																			"nativeSrc": "811:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "811:12:5"
																		},
																		"nativeSrc": "811:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "811:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "762:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "762:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "800:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "800:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$77",
																					"nativeSrc": "769:30:5",
																					"nodeType": "YulIdentifier",
																					"src": "769:30:5"
																				},
																				"nativeSrc": "769:37:5",
																				"nodeType": "YulFunctionCall",
																				"src": "769:37:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "759:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "759:2:5"
																		},
																		"nativeSrc": "759:48:5",
																		"nodeType": "YulFunctionCall",
																		"src": "759:48:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "752:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:5"
																},
																"nativeSrc": "752:56:5",
																"nodeType": "YulFunctionCall",
																"src": "752:56:5"
															},
															"nativeSrc": "749:76:5",
															"nodeType": "YulIf",
															"src": "749:76:5"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$77",
												"nativeSrc": "683:148:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "732:5:5",
														"nodeType": "YulTypedName",
														"src": "732:5:5",
														"type": ""
													}
												],
												"src": "683:148:5"
											},
											{
												"body": {
													"nativeSrc": "913:93:5",
													"nodeType": "YulBlock",
													"src": "913:93:5",
													"statements": [
														{
															"nativeSrc": "923:22:5",
															"nodeType": "YulAssignment",
															"src": "923:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "938:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "938:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "932:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "932:5:5"
																},
																"nativeSrc": "932:13:5",
																"nodeType": "YulFunctionCall",
																"src": "932:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "923:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "923:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "994:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "994:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$77",
																	"nativeSrc": "954:39:5",
																	"nodeType": "YulIdentifier",
																	"src": "954:39:5"
																},
																"nativeSrc": "954:46:5",
																"nodeType": "YulFunctionCall",
																"src": "954:46:5"
															},
															"nativeSrc": "954:46:5",
															"nodeType": "YulExpressionStatement",
															"src": "954:46:5"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
												"nativeSrc": "837:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "891:6:5",
														"nodeType": "YulTypedName",
														"src": "891:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "899:3:5",
														"nodeType": "YulTypedName",
														"src": "899:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "907:5:5",
														"nodeType": "YulTypedName",
														"src": "907:5:5",
														"type": ""
													}
												],
												"src": "837:169:5"
											},
											{
												"body": {
													"nativeSrc": "1102:287:5",
													"nodeType": "YulBlock",
													"src": "1102:287:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1148:83:5",
																"nodeType": "YulBlock",
																"src": "1148:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1150:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1150:77:5"
																			},
																			"nativeSrc": "1150:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1150:79:5"
																		},
																		"nativeSrc": "1150:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1150:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1123:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1123:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1132:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1132:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1119:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1119:3:5"
																		},
																		"nativeSrc": "1119:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1119:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1144:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1144:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1115:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1115:3:5"
																},
																"nativeSrc": "1115:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1115:32:5"
															},
															"nativeSrc": "1112:119:5",
															"nodeType": "YulIf",
															"src": "1112:119:5"
														},
														{
															"nativeSrc": "1241:141:5",
															"nodeType": "YulBlock",
															"src": "1241:141:5",
															"statements": [
																{
																	"nativeSrc": "1256:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1256:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1270:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1270:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1260:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1260:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1285:87:5",
																	"nodeType": "YulAssignment",
																	"src": "1285:87:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1344:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1344:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1355:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1355:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1340:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1340:3:5"
																				},
																				"nativeSrc": "1340:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1340:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1364:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1364:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
																			"nativeSrc": "1295:44:5",
																			"nodeType": "YulIdentifier",
																			"src": "1295:44:5"
																		},
																		"nativeSrc": "1295:77:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1295:77:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1285:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1285:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$77_fromMemory",
												"nativeSrc": "1012:377:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1072:9:5",
														"nodeType": "YulTypedName",
														"src": "1072:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1083:7:5",
														"nodeType": "YulTypedName",
														"src": "1083:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1095:6:5",
														"nodeType": "YulTypedName",
														"src": "1095:6:5",
														"type": ""
													}
												],
												"src": "1012:377:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$77(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$77(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$77(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$77_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$77(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$77_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$77_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610d06380380610d06833981810160405281019061003191906100e5565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610110565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a38261007a565b9050919050565b5f6100b482610099565b9050919050565b6100c4816100aa565b81146100ce575f80fd5b50565b5f815190506100df816100bb565b92915050565b5f602082840312156100fa576100f9610076565b5b5f610107848285016100d1565b91505092915050565b610be98061011d5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80632e1a7d4d1461004e578063785e9e861461006a578063b6b55f2514610088578063cc4db503146100a4575b5f80fd5b610068600480360381019061006391906106ce565b6100d4565b005b610072610236565b60405161007f9190610773565b60405180910390f35b6100a2600480360381019061009d91906106ce565b610259565b005b6100be60048036038101906100b991906107c7565b61033d565b6040516100cb9190610801565b60405180910390f35b5f8111610116576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010d9061089a565b60405180910390fd5b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054811115610196576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018d90610928565b60405180910390fd5b8060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546101e29190610973565b9250508190555061023333825f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166103529092919063ffffffff16565b50565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f811161029b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029290610a16565b60405180910390fd5b8060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546102e79190610a34565b9250508190555061033a3330835f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166103d1909392919063ffffffff16565b50565b6001602052805f5260405f205f915090505481565b6103cc838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610385929190610a76565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610453565b505050565b61044d848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161040693929190610a9d565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610453565b50505050565b5f61047d828473ffffffffffffffffffffffffffffffffffffffff166104e890919063ffffffff16565b90505f8151141580156104a157508080602001905181019061049f9190610b07565b155b156104e357826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016104da9190610b32565b60405180910390fd5b505050565b60606104f583835f6104fd565b905092915050565b60608147101561054457306040517fcd78605900000000000000000000000000000000000000000000000000000000815260040161053b9190610b32565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff16848660405161056c9190610b9d565b5f6040518083038185875af1925050503d805f81146105a6576040519150601f19603f3d011682016040523d82523d5f602084013e6105ab565b606091505b50915091506105bb8683836105c6565b925050509392505050565b6060826105db576105d682610653565b61064b565b5f825114801561060157505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561064357836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161063a9190610b32565b60405180910390fd5b81905061064c565b5b9392505050565b5f815111156106655780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f819050919050565b6106ad8161069b565b81146106b7575f80fd5b50565b5f813590506106c8816106a4565b92915050565b5f602082840312156106e3576106e2610697565b5b5f6106f0848285016106ba565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61073b610736610731846106f9565b610718565b6106f9565b9050919050565b5f61074c82610721565b9050919050565b5f61075d82610742565b9050919050565b61076d81610753565b82525050565b5f6020820190506107865f830184610764565b92915050565b5f610796826106f9565b9050919050565b6107a68161078c565b81146107b0575f80fd5b50565b5f813590506107c18161079d565b92915050565b5f602082840312156107dc576107db610697565b5b5f6107e9848285016107b3565b91505092915050565b6107fb8161069b565b82525050565b5f6020820190506108145f8301846107f2565b92915050565b5f82825260208201905092915050565b7f5661756c743a20776974686472617720616d6f756e74206d75737420626520675f8201527f726561746572207468616e203000000000000000000000000000000000000000602082015250565b5f610884602d8361081a565b915061088f8261082a565b604082019050919050565b5f6020820190508181035f8301526108b181610878565b9050919050565b7f5661756c743a20776974686472617720616d6f756e74206d757374206265203c5f8201527f3d206163636f756e742062616c616e6365000000000000000000000000000000602082015250565b5f61091260318361081a565b915061091d826108b8565b604082019050919050565b5f6020820190508181035f83015261093f81610906565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61097d8261069b565b91506109888361069b565b92508282039050818111156109a05761099f610946565b5b92915050565b7f5661756c743a206465706f73697420616d6f756e74206d7573742062652067725f8201527f6561746572207468616e20300000000000000000000000000000000000000000602082015250565b5f610a00602c8361081a565b9150610a0b826109a6565b604082019050919050565b5f6020820190508181035f830152610a2d816109f4565b9050919050565b5f610a3e8261069b565b9150610a498361069b565b9250828201905080821115610a6157610a60610946565b5b92915050565b610a708161078c565b82525050565b5f604082019050610a895f830185610a67565b610a9660208301846107f2565b9392505050565b5f606082019050610ab05f830186610a67565b610abd6020830185610a67565b610aca60408301846107f2565b949350505050565b5f8115159050919050565b610ae681610ad2565b8114610af0575f80fd5b50565b5f81519050610b0181610add565b92915050565b5f60208284031215610b1c57610b1b610697565b5b5f610b2984828501610af3565b91505092915050565b5f602082019050610b455f830184610a67565b92915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f610b7782610b4b565b610b818185610b55565b9350610b91818560208601610b5f565b80840191505092915050565b5f610ba88284610b6d565b91508190509291505056fea2646970667358221220f7a71d0d778be4215282ab64793d244b7c39daba753b9c6afd1ed1e3bbe4d52664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xD06 CODESIZE SUB DUP1 PUSH2 0xD06 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xE5 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x110 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA3 DUP3 PUSH2 0x7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB4 DUP3 PUSH2 0x99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC4 DUP2 PUSH2 0xAA JUMP JUMPDEST DUP2 EQ PUSH2 0xCE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xDF DUP2 PUSH2 0xBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA JUMPI PUSH2 0xF9 PUSH2 0x76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x107 DUP5 DUP3 DUP6 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBE9 DUP1 PUSH2 0x11D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x785E9E86 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xCC4DB503 EQ PUSH2 0xA4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x6CE JUMP JUMPDEST PUSH2 0xD4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x72 PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x259 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x33D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 GT PUSH2 0x116 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D SWAP1 PUSH2 0x89A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x196 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D SWAP1 PUSH2 0x928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x233 CALLER DUP3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x352 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x29B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x292 SWAP1 PUSH2 0xA16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0xA34 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x33A CALLER ADDRESS DUP4 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3D1 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3CC DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x385 SWAP3 SWAP2 SWAP1 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x453 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x44D DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x406 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x453 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47D DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x4A1 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x49F SWAP2 SWAP1 PUSH2 0xB07 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x4E3 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DA SWAP2 SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4F5 DUP4 DUP4 PUSH0 PUSH2 0x4FD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x544 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x56C SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x5BB DUP7 DUP4 DUP4 PUSH2 0x5C6 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x5DB JUMPI PUSH2 0x5D6 DUP3 PUSH2 0x653 JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x601 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x643 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63A SWAP2 SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x64C JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x665 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6AD DUP2 PUSH2 0x69B JUMP JUMPDEST DUP2 EQ PUSH2 0x6B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6C8 DUP2 PUSH2 0x6A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E3 JUMPI PUSH2 0x6E2 PUSH2 0x697 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6F0 DUP5 DUP3 DUP6 ADD PUSH2 0x6BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x73B PUSH2 0x736 PUSH2 0x731 DUP5 PUSH2 0x6F9 JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST PUSH2 0x6F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x74C DUP3 PUSH2 0x721 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x75D DUP3 PUSH2 0x742 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x76D DUP2 PUSH2 0x753 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x786 PUSH0 DUP4 ADD DUP5 PUSH2 0x764 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x796 DUP3 PUSH2 0x6F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A6 DUP2 PUSH2 0x78C JUMP JUMPDEST DUP2 EQ PUSH2 0x7B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7C1 DUP2 PUSH2 0x79D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DC JUMPI PUSH2 0x7DB PUSH2 0x697 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7E9 DUP5 DUP3 DUP6 ADD PUSH2 0x7B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7FB DUP2 PUSH2 0x69B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x814 PUSH0 DUP4 ADD DUP5 PUSH2 0x7F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5661756C743A20776974686472617720616D6F756E74206D7573742062652067 PUSH0 DUP3 ADD MSTORE PUSH32 0x726561746572207468616E203000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x884 PUSH1 0x2D DUP4 PUSH2 0x81A JUMP JUMPDEST SWAP2 POP PUSH2 0x88F DUP3 PUSH2 0x82A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8B1 DUP2 PUSH2 0x878 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5661756C743A20776974686472617720616D6F756E74206D757374206265203C PUSH0 DUP3 ADD MSTORE PUSH32 0x3D206163636F756E742062616C616E6365000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x912 PUSH1 0x31 DUP4 PUSH2 0x81A JUMP JUMPDEST SWAP2 POP PUSH2 0x91D DUP3 PUSH2 0x8B8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x93F DUP2 PUSH2 0x906 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x97D DUP3 PUSH2 0x69B JUMP JUMPDEST SWAP2 POP PUSH2 0x988 DUP4 PUSH2 0x69B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x9A0 JUMPI PUSH2 0x99F PUSH2 0x946 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5661756C743A206465706F73697420616D6F756E74206D757374206265206772 PUSH0 DUP3 ADD MSTORE PUSH32 0x6561746572207468616E20300000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA00 PUSH1 0x2C DUP4 PUSH2 0x81A JUMP JUMPDEST SWAP2 POP PUSH2 0xA0B DUP3 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA2D DUP2 PUSH2 0x9F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA3E DUP3 PUSH2 0x69B JUMP JUMPDEST SWAP2 POP PUSH2 0xA49 DUP4 PUSH2 0x69B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA61 JUMPI PUSH2 0xA60 PUSH2 0x946 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA70 DUP2 PUSH2 0x78C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA89 PUSH0 DUP4 ADD DUP6 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0xA96 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7F2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xAB0 PUSH0 DUP4 ADD DUP7 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0xABD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0xACA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x7F2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAE6 DUP2 PUSH2 0xAD2 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB01 DUP2 PUSH2 0xADD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB1C JUMPI PUSH2 0xB1B PUSH2 0x697 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB29 DUP5 DUP3 DUP6 ADD PUSH2 0xAF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB45 PUSH0 DUP4 ADD DUP5 PUSH2 0xA67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB77 DUP3 PUSH2 0xB4B JUMP JUMPDEST PUSH2 0xB81 DUP2 DUP6 PUSH2 0xB55 JUMP JUMPDEST SWAP4 POP PUSH2 0xB91 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB5F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBA8 DUP3 DUP5 PUSH2 0xB6D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xA7 SAR 0xD PUSH24 0x8BE4215282AB64793D244B7C39DABA753B9C6AFD1ED1E3BB 0xE4 0xD5 0x26 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "226:817:4:-:0;;;371:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;417:6;409:5;;:14;;;;;;;;;;;;;;;;;;371:60;226:817;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:109::-;618:7;647:24;665:5;647:24;:::i;:::-;636:35;;568:109;;;:::o;683:148::-;769:37;800:5;769:37;:::i;:::-;762:5;759:48;749:76;;821:1;818;811:12;749:76;683:148;:::o;837:169::-;907:5;938:6;932:13;923:22;;954:46;994:5;954:46;:::i;:::-;837:169;;;;:::o;1012:377::-;1095:6;1144:2;1132:9;1123:7;1119:23;1115:32;1112:119;;;1150:79;;:::i;:::-;1112:119;1270:1;1295:77;1364:7;1355:6;1344:9;1340:22;1295:77;:::i;:::-;1285:87;;1241:141;1012:377;;;;:::o;226:817:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_353": {
									"entryPoint": 1107,
									"id": 353,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_655": {
									"entryPoint": 1619,
									"id": 655,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@accountBalanceOf_673": {
									"entryPoint": 829,
									"id": 673,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_716": {
									"entryPoint": 601,
									"id": 716,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@erc20_669": {
									"entryPoint": 566,
									"id": 669,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_523": {
									"entryPoint": 1277,
									"id": 523,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_477": {
									"entryPoint": 1256,
									"id": 477,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@safeTransferFrom_190": {
									"entryPoint": 977,
									"id": 190,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_163": {
									"entryPoint": 850,
									"id": 163,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_615": {
									"entryPoint": 1478,
									"id": 615,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_754": {
									"entryPoint": 212,
									"id": 754,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 1892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_2683b0c090bd15174b99e03b4a5ba78f5fdb53dd9677bb0f5593c3959a8904fa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cf377e1cd57f3c218250c3aaefa03f4b185d0d8d155670289be6be2b2d1134cf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d5d46e1a8c8aa630b32d6247c07e5abac98c176fef37ac7053d0eb89db3b12c9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2717,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2678,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 1907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2683b0c090bd15174b99e03b4a5ba78f5fdb53dd9677bb0f5593c3959a8904fa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cf377e1cd57f3c218250c3aaefa03f4b185d0d8d155670289be6be2b2d1134cf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d5d46e1a8c8aa630b32d6247c07e5abac98c176fef37ac7053d0eb89db3b12c9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2911,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2374,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1687,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_2683b0c090bd15174b99e03b4a5ba78f5fdb53dd9677bb0f5593c3959a8904fa": {
									"entryPoint": 2232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cf377e1cd57f3c218250c3aaefa03f4b185d0d8d155670289be6be2b2d1134cf": {
									"entryPoint": 2470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d5d46e1a8c8aa630b32d6247c07e5abac98c176fef37ac7053d0eb89db3b12c9": {
									"entryPoint": 2090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9911:5",
										"nodeType": "YulBlock",
										"src": "0:9911:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:32:5",
													"nodeType": "YulBlock",
													"src": "379:32:5",
													"statements": [
														{
															"nativeSrc": "389:16:5",
															"nodeType": "YulAssignment",
															"src": "389:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:5",
																"nodeType": "YulIdentifier",
																"src": "400:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:77:5"
											},
											{
												"body": {
													"nativeSrc": "460:79:5",
													"nodeType": "YulBlock",
													"src": "460:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:5",
																"nodeType": "YulBlock",
																"src": "517:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:5",
																					"nodeType": "YulLiteral",
																					"src": "526:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:5",
																					"nodeType": "YulLiteral",
																					"src": "529:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:5"
																			},
																			"nativeSrc": "519:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:5"
																		},
																		"nativeSrc": "519:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:5"
																				},
																				"nativeSrc": "490:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:5"
																		},
																		"nativeSrc": "480:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:5"
																},
																"nativeSrc": "473:43:5",
																"nodeType": "YulFunctionCall",
																"src": "473:43:5"
															},
															"nativeSrc": "470:63:5",
															"nodeType": "YulIf",
															"src": "470:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:5",
														"nodeType": "YulTypedName",
														"src": "453:5:5",
														"type": ""
													}
												],
												"src": "417:122:5"
											},
											{
												"body": {
													"nativeSrc": "597:87:5",
													"nodeType": "YulBlock",
													"src": "597:87:5",
													"statements": [
														{
															"nativeSrc": "607:29:5",
															"nodeType": "YulAssignment",
															"src": "607:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:5"
																},
																"nativeSrc": "616:20:5",
																"nodeType": "YulFunctionCall",
																"src": "616:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:5"
																},
																"nativeSrc": "645:33:5",
																"nodeType": "YulFunctionCall",
																"src": "645:33:5"
															},
															"nativeSrc": "645:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:5",
														"nodeType": "YulTypedName",
														"src": "575:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:5",
														"nodeType": "YulTypedName",
														"src": "583:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:5",
														"nodeType": "YulTypedName",
														"src": "591:5:5",
														"type": ""
													}
												],
												"src": "545:139:5"
											},
											{
												"body": {
													"nativeSrc": "756:263:5",
													"nodeType": "YulBlock",
													"src": "756:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:5",
																"nodeType": "YulBlock",
																"src": "802:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:5"
																			},
																			"nativeSrc": "804:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:5"
																		},
																		"nativeSrc": "804:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:5"
																		},
																		"nativeSrc": "773:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:5",
																		"nodeType": "YulLiteral",
																		"src": "798:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:5"
																},
																"nativeSrc": "769:32:5",
																"nodeType": "YulFunctionCall",
																"src": "769:32:5"
															},
															"nativeSrc": "766:119:5",
															"nodeType": "YulIf",
															"src": "766:119:5"
														},
														{
															"nativeSrc": "895:117:5",
															"nodeType": "YulBlock",
															"src": "895:117:5",
															"statements": [
																{
																	"nativeSrc": "910:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:5",
																		"nodeType": "YulLiteral",
																		"src": "924:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:5",
																			"nodeType": "YulTypedName",
																			"src": "914:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:5",
																	"nodeType": "YulAssignment",
																	"src": "939:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:5"
																				},
																				"nativeSrc": "970:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:5"
																		},
																		"nativeSrc": "949:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:5",
														"nodeType": "YulTypedName",
														"src": "726:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:5",
														"nodeType": "YulTypedName",
														"src": "737:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:5",
														"nodeType": "YulTypedName",
														"src": "749:6:5",
														"type": ""
													}
												],
												"src": "690:329:5"
											},
											{
												"body": {
													"nativeSrc": "1070:81:5",
													"nodeType": "YulBlock",
													"src": "1070:81:5",
													"statements": [
														{
															"nativeSrc": "1080:65:5",
															"nodeType": "YulAssignment",
															"src": "1080:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1095:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:42:5",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:5"
																},
																"nativeSrc": "1091:54:5",
																"nodeType": "YulFunctionCall",
																"src": "1091:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1025:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:5",
														"nodeType": "YulTypedName",
														"src": "1052:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:5",
														"nodeType": "YulTypedName",
														"src": "1062:7:5",
														"type": ""
													}
												],
												"src": "1025:126:5"
											},
											{
												"body": {
													"nativeSrc": "1189:28:5",
													"nodeType": "YulBlock",
													"src": "1189:28:5",
													"statements": [
														{
															"nativeSrc": "1199:12:5",
															"nodeType": "YulAssignment",
															"src": "1199:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "1206:5:5",
																"nodeType": "YulIdentifier",
																"src": "1206:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1199:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1199:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1157:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1175:5:5",
														"nodeType": "YulTypedName",
														"src": "1175:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1185:3:5",
														"nodeType": "YulTypedName",
														"src": "1185:3:5",
														"type": ""
													}
												],
												"src": "1157:60:5"
											},
											{
												"body": {
													"nativeSrc": "1283:82:5",
													"nodeType": "YulBlock",
													"src": "1283:82:5",
													"statements": [
														{
															"nativeSrc": "1293:66:5",
															"nodeType": "YulAssignment",
															"src": "1293:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1351:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1351:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1333:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1333:17:5"
																				},
																				"nativeSrc": "1333:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1333:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1324:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "1324:8:5"
																		},
																		"nativeSrc": "1324:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1324:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1306:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1306:17:5"
																},
																"nativeSrc": "1306:53:5",
																"nodeType": "YulFunctionCall",
																"src": "1306:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1293:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1293:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1223:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1263:5:5",
														"nodeType": "YulTypedName",
														"src": "1263:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1273:9:5",
														"nodeType": "YulTypedName",
														"src": "1273:9:5",
														"type": ""
													}
												],
												"src": "1223:142:5"
											},
											{
												"body": {
													"nativeSrc": "1431:66:5",
													"nodeType": "YulBlock",
													"src": "1431:66:5",
													"statements": [
														{
															"nativeSrc": "1441:50:5",
															"nodeType": "YulAssignment",
															"src": "1441:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1485:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1485:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1454:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "1454:30:5"
																},
																"nativeSrc": "1454:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1454:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1441:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1441:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1371:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:5",
														"nodeType": "YulTypedName",
														"src": "1411:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1421:9:5",
														"nodeType": "YulTypedName",
														"src": "1421:9:5",
														"type": ""
													}
												],
												"src": "1371:126:5"
											},
											{
												"body": {
													"nativeSrc": "1576:66:5",
													"nodeType": "YulBlock",
													"src": "1576:66:5",
													"statements": [
														{
															"nativeSrc": "1586:50:5",
															"nodeType": "YulAssignment",
															"src": "1586:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1630:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1630:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1599:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "1599:30:5"
																},
																"nativeSrc": "1599:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1599:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1586:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1586:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nativeSrc": "1503:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1556:5:5",
														"nodeType": "YulTypedName",
														"src": "1556:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1566:9:5",
														"nodeType": "YulTypedName",
														"src": "1566:9:5",
														"type": ""
													}
												],
												"src": "1503:139:5"
											},
											{
												"body": {
													"nativeSrc": "1726:79:5",
													"nodeType": "YulBlock",
													"src": "1726:79:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1743:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1743:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1792:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1792:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nativeSrc": "1748:43:5",
																			"nodeType": "YulIdentifier",
																			"src": "1748:43:5"
																		},
																		"nativeSrc": "1748:50:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1748:50:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1736:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1736:6:5"
																},
																"nativeSrc": "1736:63:5",
																"nodeType": "YulFunctionCall",
																"src": "1736:63:5"
															},
															"nativeSrc": "1736:63:5",
															"nodeType": "YulExpressionStatement",
															"src": "1736:63:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nativeSrc": "1648:157:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1714:5:5",
														"nodeType": "YulTypedName",
														"src": "1714:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1721:3:5",
														"nodeType": "YulTypedName",
														"src": "1721:3:5",
														"type": ""
													}
												],
												"src": "1648:157:5"
											},
											{
												"body": {
													"nativeSrc": "1922:137:5",
													"nodeType": "YulBlock",
													"src": "1922:137:5",
													"statements": [
														{
															"nativeSrc": "1932:26:5",
															"nodeType": "YulAssignment",
															"src": "1932:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1944:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1944:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1955:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1955:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1940:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1940:3:5"
																},
																"nativeSrc": "1940:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1940:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1932:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1932:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2025:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2025:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2038:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2038:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2049:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2049:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2034:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2034:3:5"
																		},
																		"nativeSrc": "2034:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2034:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nativeSrc": "1968:56:5",
																	"nodeType": "YulIdentifier",
																	"src": "1968:56:5"
																},
																"nativeSrc": "1968:84:5",
																"nodeType": "YulFunctionCall",
																"src": "1968:84:5"
															},
															"nativeSrc": "1968:84:5",
															"nodeType": "YulExpressionStatement",
															"src": "1968:84:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nativeSrc": "1811:248:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1894:9:5",
														"nodeType": "YulTypedName",
														"src": "1894:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1906:6:5",
														"nodeType": "YulTypedName",
														"src": "1906:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1917:4:5",
														"nodeType": "YulTypedName",
														"src": "1917:4:5",
														"type": ""
													}
												],
												"src": "1811:248:5"
											},
											{
												"body": {
													"nativeSrc": "2110:51:5",
													"nodeType": "YulBlock",
													"src": "2110:51:5",
													"statements": [
														{
															"nativeSrc": "2120:35:5",
															"nodeType": "YulAssignment",
															"src": "2120:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2149:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2149:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2131:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2131:17:5"
																},
																"nativeSrc": "2131:24:5",
																"nodeType": "YulFunctionCall",
																"src": "2131:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2120:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2120:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2065:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2092:5:5",
														"nodeType": "YulTypedName",
														"src": "2092:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2102:7:5",
														"nodeType": "YulTypedName",
														"src": "2102:7:5",
														"type": ""
													}
												],
												"src": "2065:96:5"
											},
											{
												"body": {
													"nativeSrc": "2210:79:5",
													"nodeType": "YulBlock",
													"src": "2210:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2267:16:5",
																"nodeType": "YulBlock",
																"src": "2267:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2276:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2276:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2279:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2279:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2269:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2269:6:5"
																			},
																			"nativeSrc": "2269:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2269:12:5"
																		},
																		"nativeSrc": "2269:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2269:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2233:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2233:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2258:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2258:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2240:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2240:17:5"
																				},
																				"nativeSrc": "2240:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2240:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2230:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2230:2:5"
																		},
																		"nativeSrc": "2230:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2230:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2223:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2223:6:5"
																},
																"nativeSrc": "2223:43:5",
																"nodeType": "YulFunctionCall",
																"src": "2223:43:5"
															},
															"nativeSrc": "2220:63:5",
															"nodeType": "YulIf",
															"src": "2220:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2167:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2203:5:5",
														"nodeType": "YulTypedName",
														"src": "2203:5:5",
														"type": ""
													}
												],
												"src": "2167:122:5"
											},
											{
												"body": {
													"nativeSrc": "2347:87:5",
													"nodeType": "YulBlock",
													"src": "2347:87:5",
													"statements": [
														{
															"nativeSrc": "2357:29:5",
															"nodeType": "YulAssignment",
															"src": "2357:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2379:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2379:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2366:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2366:12:5"
																},
																"nativeSrc": "2366:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2366:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2357:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2357:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2422:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2422:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2395:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2395:26:5"
																},
																"nativeSrc": "2395:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2395:33:5"
															},
															"nativeSrc": "2395:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2395:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2295:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2325:6:5",
														"nodeType": "YulTypedName",
														"src": "2325:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2333:3:5",
														"nodeType": "YulTypedName",
														"src": "2333:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2341:5:5",
														"nodeType": "YulTypedName",
														"src": "2341:5:5",
														"type": ""
													}
												],
												"src": "2295:139:5"
											},
											{
												"body": {
													"nativeSrc": "2506:263:5",
													"nodeType": "YulBlock",
													"src": "2506:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2552:83:5",
																"nodeType": "YulBlock",
																"src": "2552:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2554:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2554:77:5"
																			},
																			"nativeSrc": "2554:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2554:79:5"
																		},
																		"nativeSrc": "2554:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2554:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2527:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2527:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2536:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2536:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2523:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2523:3:5"
																		},
																		"nativeSrc": "2523:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2523:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2548:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2548:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2519:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2519:3:5"
																},
																"nativeSrc": "2519:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2519:32:5"
															},
															"nativeSrc": "2516:119:5",
															"nodeType": "YulIf",
															"src": "2516:119:5"
														},
														{
															"nativeSrc": "2645:117:5",
															"nodeType": "YulBlock",
															"src": "2645:117:5",
															"statements": [
																{
																	"nativeSrc": "2660:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2660:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2674:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2674:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2664:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2664:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2689:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2689:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2724:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2724:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2735:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2735:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2720:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2720:3:5"
																				},
																				"nativeSrc": "2720:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2720:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2744:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2744:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2699:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2699:20:5"
																		},
																		"nativeSrc": "2699:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2699:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2689:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2689:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2440:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2476:9:5",
														"nodeType": "YulTypedName",
														"src": "2476:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2487:7:5",
														"nodeType": "YulTypedName",
														"src": "2487:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2499:6:5",
														"nodeType": "YulTypedName",
														"src": "2499:6:5",
														"type": ""
													}
												],
												"src": "2440:329:5"
											},
											{
												"body": {
													"nativeSrc": "2840:53:5",
													"nodeType": "YulBlock",
													"src": "2840:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2857:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2857:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2880:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2880:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2862:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2862:17:5"
																		},
																		"nativeSrc": "2862:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2862:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2850:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2850:6:5"
																},
																"nativeSrc": "2850:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2850:37:5"
															},
															"nativeSrc": "2850:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2850:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2775:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2828:5:5",
														"nodeType": "YulTypedName",
														"src": "2828:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2835:3:5",
														"nodeType": "YulTypedName",
														"src": "2835:3:5",
														"type": ""
													}
												],
												"src": "2775:118:5"
											},
											{
												"body": {
													"nativeSrc": "2997:124:5",
													"nodeType": "YulBlock",
													"src": "2997:124:5",
													"statements": [
														{
															"nativeSrc": "3007:26:5",
															"nodeType": "YulAssignment",
															"src": "3007:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3019:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3019:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3030:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3030:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3015:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3015:3:5"
																},
																"nativeSrc": "3015:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3015:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3007:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3007:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3087:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3087:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3100:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3100:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3111:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3111:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3096:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3096:3:5"
																		},
																		"nativeSrc": "3096:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3096:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3043:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3043:43:5"
																},
																"nativeSrc": "3043:71:5",
																"nodeType": "YulFunctionCall",
																"src": "3043:71:5"
															},
															"nativeSrc": "3043:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "3043:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2899:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2969:9:5",
														"nodeType": "YulTypedName",
														"src": "2969:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2981:6:5",
														"nodeType": "YulTypedName",
														"src": "2981:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2992:4:5",
														"nodeType": "YulTypedName",
														"src": "2992:4:5",
														"type": ""
													}
												],
												"src": "2899:222:5"
											},
											{
												"body": {
													"nativeSrc": "3223:73:5",
													"nodeType": "YulBlock",
													"src": "3223:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3240:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3240:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3245:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3245:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3233:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3233:6:5"
																},
																"nativeSrc": "3233:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3233:19:5"
															},
															"nativeSrc": "3233:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "3233:19:5"
														},
														{
															"nativeSrc": "3261:29:5",
															"nodeType": "YulAssignment",
															"src": "3261:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3280:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3280:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3285:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3285:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3276:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3276:3:5"
																},
																"nativeSrc": "3276:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3276:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3261:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "3261:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3127:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3195:3:5",
														"nodeType": "YulTypedName",
														"src": "3195:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3200:6:5",
														"nodeType": "YulTypedName",
														"src": "3200:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3211:11:5",
														"nodeType": "YulTypedName",
														"src": "3211:11:5",
														"type": ""
													}
												],
												"src": "3127:169:5"
											},
											{
												"body": {
													"nativeSrc": "3408:126:5",
													"nodeType": "YulBlock",
													"src": "3408:126:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3430:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3430:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3438:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3438:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3426:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3426:3:5"
																		},
																		"nativeSrc": "3426:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:14:5"
																	},
																	{
																		"hexValue": "5661756c743a20776974686472617720616d6f756e74206d7573742062652067",
																		"kind": "string",
																		"nativeSrc": "3442:34:5",
																		"nodeType": "YulLiteral",
																		"src": "3442:34:5",
																		"type": "",
																		"value": "Vault: withdraw amount must be g"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3419:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3419:6:5"
																},
																"nativeSrc": "3419:58:5",
																"nodeType": "YulFunctionCall",
																"src": "3419:58:5"
															},
															"nativeSrc": "3419:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "3419:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3498:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3498:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3506:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3506:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3494:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3494:3:5"
																		},
																		"nativeSrc": "3494:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3494:15:5"
																	},
																	{
																		"hexValue": "726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "3511:15:5",
																		"nodeType": "YulLiteral",
																		"src": "3511:15:5",
																		"type": "",
																		"value": "reater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3487:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3487:6:5"
																},
																"nativeSrc": "3487:40:5",
																"nodeType": "YulFunctionCall",
																"src": "3487:40:5"
															},
															"nativeSrc": "3487:40:5",
															"nodeType": "YulExpressionStatement",
															"src": "3487:40:5"
														}
													]
												},
												"name": "store_literal_in_memory_d5d46e1a8c8aa630b32d6247c07e5abac98c176fef37ac7053d0eb89db3b12c9",
												"nativeSrc": "3302:232:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3400:6:5",
														"nodeType": "YulTypedName",
														"src": "3400:6:5",
														"type": ""
													}
												],
												"src": "3302:232:5"
											},
											{
												"body": {
													"nativeSrc": "3686:220:5",
													"nodeType": "YulBlock",
													"src": "3686:220:5",
													"statements": [
														{
															"nativeSrc": "3696:74:5",
															"nodeType": "YulAssignment",
															"src": "3696:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3762:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3762:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3767:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3767:2:5",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3703:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "3703:58:5"
																},
																"nativeSrc": "3703:67:5",
																"nodeType": "YulFunctionCall",
																"src": "3703:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3696:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3696:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3868:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3868:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d5d46e1a8c8aa630b32d6247c07e5abac98c176fef37ac7053d0eb89db3b12c9",
																	"nativeSrc": "3779:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "3779:88:5"
																},
																"nativeSrc": "3779:93:5",
																"nodeType": "YulFunctionCall",
																"src": "3779:93:5"
															},
															"nativeSrc": "3779:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "3779:93:5"
														},
														{
															"nativeSrc": "3881:19:5",
															"nodeType": "YulAssignment",
															"src": "3881:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3892:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3892:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3897:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3897:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3888:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3888:3:5"
																},
																"nativeSrc": "3888:12:5",
																"nodeType": "YulFunctionCall",
																"src": "3888:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3881:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3881:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d5d46e1a8c8aa630b32d6247c07e5abac98c176fef37ac7053d0eb89db3b12c9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3540:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3674:3:5",
														"nodeType": "YulTypedName",
														"src": "3674:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3682:3:5",
														"nodeType": "YulTypedName",
														"src": "3682:3:5",
														"type": ""
													}
												],
												"src": "3540:366:5"
											},
											{
												"body": {
													"nativeSrc": "4083:248:5",
													"nodeType": "YulBlock",
													"src": "4083:248:5",
													"statements": [
														{
															"nativeSrc": "4093:26:5",
															"nodeType": "YulAssignment",
															"src": "4093:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4105:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4105:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4116:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4116:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4101:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4101:3:5"
																},
																"nativeSrc": "4101:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4101:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4093:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4093:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4140:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4140:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4151:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4151:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4136:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4136:3:5"
																		},
																		"nativeSrc": "4136:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4136:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4159:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "4159:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4165:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4165:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4155:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4155:3:5"
																		},
																		"nativeSrc": "4155:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4155:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4129:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4129:6:5"
																},
																"nativeSrc": "4129:47:5",
																"nodeType": "YulFunctionCall",
																"src": "4129:47:5"
															},
															"nativeSrc": "4129:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "4129:47:5"
														},
														{
															"nativeSrc": "4185:139:5",
															"nodeType": "YulAssignment",
															"src": "4185:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4319:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4319:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d5d46e1a8c8aa630b32d6247c07e5abac98c176fef37ac7053d0eb89db3b12c9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4193:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "4193:124:5"
																},
																"nativeSrc": "4193:131:5",
																"nodeType": "YulFunctionCall",
																"src": "4193:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4185:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4185:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d5d46e1a8c8aa630b32d6247c07e5abac98c176fef37ac7053d0eb89db3b12c9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3912:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4063:9:5",
														"nodeType": "YulTypedName",
														"src": "4063:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4078:4:5",
														"nodeType": "YulTypedName",
														"src": "4078:4:5",
														"type": ""
													}
												],
												"src": "3912:419:5"
											},
											{
												"body": {
													"nativeSrc": "4443:130:5",
													"nodeType": "YulBlock",
													"src": "4443:130:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4465:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4465:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4473:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4473:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4461:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4461:3:5"
																		},
																		"nativeSrc": "4461:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4461:14:5"
																	},
																	{
																		"hexValue": "5661756c743a20776974686472617720616d6f756e74206d757374206265203c",
																		"kind": "string",
																		"nativeSrc": "4477:34:5",
																		"nodeType": "YulLiteral",
																		"src": "4477:34:5",
																		"type": "",
																		"value": "Vault: withdraw amount must be <"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4454:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4454:6:5"
																},
																"nativeSrc": "4454:58:5",
																"nodeType": "YulFunctionCall",
																"src": "4454:58:5"
															},
															"nativeSrc": "4454:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "4454:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4533:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4533:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4541:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4541:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4529:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4529:3:5"
																		},
																		"nativeSrc": "4529:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4529:15:5"
																	},
																	{
																		"hexValue": "3d206163636f756e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "4546:19:5",
																		"nodeType": "YulLiteral",
																		"src": "4546:19:5",
																		"type": "",
																		"value": "= account balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4522:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4522:6:5"
																},
																"nativeSrc": "4522:44:5",
																"nodeType": "YulFunctionCall",
																"src": "4522:44:5"
															},
															"nativeSrc": "4522:44:5",
															"nodeType": "YulExpressionStatement",
															"src": "4522:44:5"
														}
													]
												},
												"name": "store_literal_in_memory_2683b0c090bd15174b99e03b4a5ba78f5fdb53dd9677bb0f5593c3959a8904fa",
												"nativeSrc": "4337:236:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4435:6:5",
														"nodeType": "YulTypedName",
														"src": "4435:6:5",
														"type": ""
													}
												],
												"src": "4337:236:5"
											},
											{
												"body": {
													"nativeSrc": "4725:220:5",
													"nodeType": "YulBlock",
													"src": "4725:220:5",
													"statements": [
														{
															"nativeSrc": "4735:74:5",
															"nodeType": "YulAssignment",
															"src": "4735:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4801:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4801:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4806:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4806:2:5",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4742:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "4742:58:5"
																},
																"nativeSrc": "4742:67:5",
																"nodeType": "YulFunctionCall",
																"src": "4742:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4735:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4907:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4907:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2683b0c090bd15174b99e03b4a5ba78f5fdb53dd9677bb0f5593c3959a8904fa",
																	"nativeSrc": "4818:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "4818:88:5"
																},
																"nativeSrc": "4818:93:5",
																"nodeType": "YulFunctionCall",
																"src": "4818:93:5"
															},
															"nativeSrc": "4818:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "4818:93:5"
														},
														{
															"nativeSrc": "4920:19:5",
															"nodeType": "YulAssignment",
															"src": "4920:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4931:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4931:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4936:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4936:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4927:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4927:3:5"
																},
																"nativeSrc": "4927:12:5",
																"nodeType": "YulFunctionCall",
																"src": "4927:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4920:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4920:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2683b0c090bd15174b99e03b4a5ba78f5fdb53dd9677bb0f5593c3959a8904fa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4579:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4713:3:5",
														"nodeType": "YulTypedName",
														"src": "4713:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4721:3:5",
														"nodeType": "YulTypedName",
														"src": "4721:3:5",
														"type": ""
													}
												],
												"src": "4579:366:5"
											},
											{
												"body": {
													"nativeSrc": "5122:248:5",
													"nodeType": "YulBlock",
													"src": "5122:248:5",
													"statements": [
														{
															"nativeSrc": "5132:26:5",
															"nodeType": "YulAssignment",
															"src": "5132:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5144:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5144:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5155:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5155:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5140:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5140:3:5"
																},
																"nativeSrc": "5140:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5140:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5132:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5132:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5179:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5179:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5190:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5190:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5175:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5175:3:5"
																		},
																		"nativeSrc": "5175:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5175:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5198:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "5198:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5204:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5204:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5194:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5194:3:5"
																		},
																		"nativeSrc": "5194:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5194:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5168:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5168:6:5"
																},
																"nativeSrc": "5168:47:5",
																"nodeType": "YulFunctionCall",
																"src": "5168:47:5"
															},
															"nativeSrc": "5168:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "5168:47:5"
														},
														{
															"nativeSrc": "5224:139:5",
															"nodeType": "YulAssignment",
															"src": "5224:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5358:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5358:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2683b0c090bd15174b99e03b4a5ba78f5fdb53dd9677bb0f5593c3959a8904fa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5232:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "5232:124:5"
																},
																"nativeSrc": "5232:131:5",
																"nodeType": "YulFunctionCall",
																"src": "5232:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5224:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5224:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2683b0c090bd15174b99e03b4a5ba78f5fdb53dd9677bb0f5593c3959a8904fa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4951:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5102:9:5",
														"nodeType": "YulTypedName",
														"src": "5102:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5117:4:5",
														"nodeType": "YulTypedName",
														"src": "5117:4:5",
														"type": ""
													}
												],
												"src": "4951:419:5"
											},
											{
												"body": {
													"nativeSrc": "5404:152:5",
													"nodeType": "YulBlock",
													"src": "5404:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5421:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5421:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5424:77:5",
																		"nodeType": "YulLiteral",
																		"src": "5424:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5414:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:5"
																},
																"nativeSrc": "5414:88:5",
																"nodeType": "YulFunctionCall",
																"src": "5414:88:5"
															},
															"nativeSrc": "5414:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "5414:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5518:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5518:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5521:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5521:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5511:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5511:6:5"
																},
																"nativeSrc": "5511:15:5",
																"nodeType": "YulFunctionCall",
																"src": "5511:15:5"
															},
															"nativeSrc": "5511:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "5511:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5542:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5542:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5545:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5545:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5535:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5535:6:5"
																},
																"nativeSrc": "5535:15:5",
																"nodeType": "YulFunctionCall",
																"src": "5535:15:5"
															},
															"nativeSrc": "5535:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "5535:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5376:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "5376:180:5"
											},
											{
												"body": {
													"nativeSrc": "5607:149:5",
													"nodeType": "YulBlock",
													"src": "5607:149:5",
													"statements": [
														{
															"nativeSrc": "5617:25:5",
															"nodeType": "YulAssignment",
															"src": "5617:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5640:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5640:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5622:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "5622:17:5"
																},
																"nativeSrc": "5622:20:5",
																"nodeType": "YulFunctionCall",
																"src": "5622:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5617:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "5617:1:5"
																}
															]
														},
														{
															"nativeSrc": "5651:25:5",
															"nodeType": "YulAssignment",
															"src": "5651:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5674:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5674:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5656:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "5656:17:5"
																},
																"nativeSrc": "5656:20:5",
																"nodeType": "YulFunctionCall",
																"src": "5656:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5651:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "5651:1:5"
																}
															]
														},
														{
															"nativeSrc": "5685:17:5",
															"nodeType": "YulAssignment",
															"src": "5685:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5697:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5697:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5700:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5700:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5693:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5693:3:5"
																},
																"nativeSrc": "5693:9:5",
																"nodeType": "YulFunctionCall",
																"src": "5693:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5685:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5685:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5727:22:5",
																"nodeType": "YulBlock",
																"src": "5727:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5729:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "5729:16:5"
																			},
																			"nativeSrc": "5729:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5729:18:5"
																		},
																		"nativeSrc": "5729:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5729:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5718:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5718:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5724:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5724:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5715:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "5715:2:5"
																},
																"nativeSrc": "5715:11:5",
																"nodeType": "YulFunctionCall",
																"src": "5715:11:5"
															},
															"nativeSrc": "5712:37:5",
															"nodeType": "YulIf",
															"src": "5712:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5562:194:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5593:1:5",
														"nodeType": "YulTypedName",
														"src": "5593:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5596:1:5",
														"nodeType": "YulTypedName",
														"src": "5596:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5602:4:5",
														"nodeType": "YulTypedName",
														"src": "5602:4:5",
														"type": ""
													}
												],
												"src": "5562:194:5"
											},
											{
												"body": {
													"nativeSrc": "5868:125:5",
													"nodeType": "YulBlock",
													"src": "5868:125:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5890:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5890:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5898:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5898:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5886:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5886:3:5"
																		},
																		"nativeSrc": "5886:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5886:14:5"
																	},
																	{
																		"hexValue": "5661756c743a206465706f73697420616d6f756e74206d757374206265206772",
																		"kind": "string",
																		"nativeSrc": "5902:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5902:34:5",
																		"type": "",
																		"value": "Vault: deposit amount must be gr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5879:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5879:6:5"
																},
																"nativeSrc": "5879:58:5",
																"nodeType": "YulFunctionCall",
																"src": "5879:58:5"
															},
															"nativeSrc": "5879:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "5879:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5958:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5958:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5966:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5966:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5954:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5954:3:5"
																		},
																		"nativeSrc": "5954:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5954:15:5"
																	},
																	{
																		"hexValue": "6561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "5971:14:5",
																		"nodeType": "YulLiteral",
																		"src": "5971:14:5",
																		"type": "",
																		"value": "eater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5947:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5947:6:5"
																},
																"nativeSrc": "5947:39:5",
																"nodeType": "YulFunctionCall",
																"src": "5947:39:5"
															},
															"nativeSrc": "5947:39:5",
															"nodeType": "YulExpressionStatement",
															"src": "5947:39:5"
														}
													]
												},
												"name": "store_literal_in_memory_cf377e1cd57f3c218250c3aaefa03f4b185d0d8d155670289be6be2b2d1134cf",
												"nativeSrc": "5762:231:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5860:6:5",
														"nodeType": "YulTypedName",
														"src": "5860:6:5",
														"type": ""
													}
												],
												"src": "5762:231:5"
											},
											{
												"body": {
													"nativeSrc": "6145:220:5",
													"nodeType": "YulBlock",
													"src": "6145:220:5",
													"statements": [
														{
															"nativeSrc": "6155:74:5",
															"nodeType": "YulAssignment",
															"src": "6155:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6221:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6221:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6226:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6226:2:5",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6162:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "6162:58:5"
																},
																"nativeSrc": "6162:67:5",
																"nodeType": "YulFunctionCall",
																"src": "6162:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6155:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6155:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6327:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6327:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cf377e1cd57f3c218250c3aaefa03f4b185d0d8d155670289be6be2b2d1134cf",
																	"nativeSrc": "6238:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "6238:88:5"
																},
																"nativeSrc": "6238:93:5",
																"nodeType": "YulFunctionCall",
																"src": "6238:93:5"
															},
															"nativeSrc": "6238:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "6238:93:5"
														},
														{
															"nativeSrc": "6340:19:5",
															"nodeType": "YulAssignment",
															"src": "6340:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6351:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6351:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6356:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6356:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6347:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6347:3:5"
																},
																"nativeSrc": "6347:12:5",
																"nodeType": "YulFunctionCall",
																"src": "6347:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6340:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6340:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cf377e1cd57f3c218250c3aaefa03f4b185d0d8d155670289be6be2b2d1134cf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5999:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6133:3:5",
														"nodeType": "YulTypedName",
														"src": "6133:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6141:3:5",
														"nodeType": "YulTypedName",
														"src": "6141:3:5",
														"type": ""
													}
												],
												"src": "5999:366:5"
											},
											{
												"body": {
													"nativeSrc": "6542:248:5",
													"nodeType": "YulBlock",
													"src": "6542:248:5",
													"statements": [
														{
															"nativeSrc": "6552:26:5",
															"nodeType": "YulAssignment",
															"src": "6552:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6564:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6564:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6575:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6575:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6560:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6560:3:5"
																},
																"nativeSrc": "6560:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6560:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6552:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6552:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6599:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6599:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6610:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6610:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6595:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6595:3:5"
																		},
																		"nativeSrc": "6595:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6595:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6618:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "6618:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6624:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6624:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6614:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6614:3:5"
																		},
																		"nativeSrc": "6614:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6614:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6588:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6588:6:5"
																},
																"nativeSrc": "6588:47:5",
																"nodeType": "YulFunctionCall",
																"src": "6588:47:5"
															},
															"nativeSrc": "6588:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "6588:47:5"
														},
														{
															"nativeSrc": "6644:139:5",
															"nodeType": "YulAssignment",
															"src": "6644:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6778:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6778:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cf377e1cd57f3c218250c3aaefa03f4b185d0d8d155670289be6be2b2d1134cf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6652:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "6652:124:5"
																},
																"nativeSrc": "6652:131:5",
																"nodeType": "YulFunctionCall",
																"src": "6652:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6644:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6644:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cf377e1cd57f3c218250c3aaefa03f4b185d0d8d155670289be6be2b2d1134cf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6371:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6522:9:5",
														"nodeType": "YulTypedName",
														"src": "6522:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6537:4:5",
														"nodeType": "YulTypedName",
														"src": "6537:4:5",
														"type": ""
													}
												],
												"src": "6371:419:5"
											},
											{
												"body": {
													"nativeSrc": "6840:147:5",
													"nodeType": "YulBlock",
													"src": "6840:147:5",
													"statements": [
														{
															"nativeSrc": "6850:25:5",
															"nodeType": "YulAssignment",
															"src": "6850:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6873:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6873:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6855:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6855:17:5"
																},
																"nativeSrc": "6855:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6855:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6850:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6850:1:5"
																}
															]
														},
														{
															"nativeSrc": "6884:25:5",
															"nodeType": "YulAssignment",
															"src": "6884:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6907:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6907:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6889:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6889:17:5"
																},
																"nativeSrc": "6889:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6889:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6884:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6884:1:5"
																}
															]
														},
														{
															"nativeSrc": "6918:16:5",
															"nodeType": "YulAssignment",
															"src": "6918:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6929:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6929:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6932:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6932:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6925:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6925:3:5"
																},
																"nativeSrc": "6925:9:5",
																"nodeType": "YulFunctionCall",
																"src": "6925:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6918:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6918:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6958:22:5",
																"nodeType": "YulBlock",
																"src": "6958:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6960:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "6960:16:5"
																			},
																			"nativeSrc": "6960:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6960:18:5"
																		},
																		"nativeSrc": "6960:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6960:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6950:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6950:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6953:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6953:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6947:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6947:2:5"
																},
																"nativeSrc": "6947:10:5",
																"nodeType": "YulFunctionCall",
																"src": "6947:10:5"
															},
															"nativeSrc": "6944:36:5",
															"nodeType": "YulIf",
															"src": "6944:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6796:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6827:1:5",
														"nodeType": "YulTypedName",
														"src": "6827:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6830:1:5",
														"nodeType": "YulTypedName",
														"src": "6830:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6836:3:5",
														"nodeType": "YulTypedName",
														"src": "6836:3:5",
														"type": ""
													}
												],
												"src": "6796:191:5"
											},
											{
												"body": {
													"nativeSrc": "7058:53:5",
													"nodeType": "YulBlock",
													"src": "7058:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7075:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7075:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7098:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7098:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7080:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "7080:17:5"
																		},
																		"nativeSrc": "7080:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7080:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7068:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7068:6:5"
																},
																"nativeSrc": "7068:37:5",
																"nodeType": "YulFunctionCall",
																"src": "7068:37:5"
															},
															"nativeSrc": "7068:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "7068:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6993:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7046:5:5",
														"nodeType": "YulTypedName",
														"src": "7046:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7053:3:5",
														"nodeType": "YulTypedName",
														"src": "7053:3:5",
														"type": ""
													}
												],
												"src": "6993:118:5"
											},
											{
												"body": {
													"nativeSrc": "7243:206:5",
													"nodeType": "YulBlock",
													"src": "7243:206:5",
													"statements": [
														{
															"nativeSrc": "7253:26:5",
															"nodeType": "YulAssignment",
															"src": "7253:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7265:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7265:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7276:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7276:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7261:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7261:3:5"
																},
																"nativeSrc": "7261:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7261:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7253:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7253:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7333:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7333:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7346:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7346:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7357:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7357:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7342:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7342:3:5"
																		},
																		"nativeSrc": "7342:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7342:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7289:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7289:43:5"
																},
																"nativeSrc": "7289:71:5",
																"nodeType": "YulFunctionCall",
																"src": "7289:71:5"
															},
															"nativeSrc": "7289:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "7289:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7414:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7414:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7427:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7427:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7438:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7438:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7423:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7423:3:5"
																		},
																		"nativeSrc": "7423:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7423:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7370:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7370:43:5"
																},
																"nativeSrc": "7370:72:5",
																"nodeType": "YulFunctionCall",
																"src": "7370:72:5"
															},
															"nativeSrc": "7370:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "7370:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7117:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7207:9:5",
														"nodeType": "YulTypedName",
														"src": "7207:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7219:6:5",
														"nodeType": "YulTypedName",
														"src": "7219:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7227:6:5",
														"nodeType": "YulTypedName",
														"src": "7227:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7238:4:5",
														"nodeType": "YulTypedName",
														"src": "7238:4:5",
														"type": ""
													}
												],
												"src": "7117:332:5"
											},
											{
												"body": {
													"nativeSrc": "7609:288:5",
													"nodeType": "YulBlock",
													"src": "7609:288:5",
													"statements": [
														{
															"nativeSrc": "7619:26:5",
															"nodeType": "YulAssignment",
															"src": "7619:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7631:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7631:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7642:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7642:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7627:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7627:3:5"
																},
																"nativeSrc": "7627:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7627:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7619:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7619:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7699:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7699:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7712:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7712:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7723:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7723:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7708:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7708:3:5"
																		},
																		"nativeSrc": "7708:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7708:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7655:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7655:43:5"
																},
																"nativeSrc": "7655:71:5",
																"nodeType": "YulFunctionCall",
																"src": "7655:71:5"
															},
															"nativeSrc": "7655:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "7655:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7780:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7780:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7793:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7793:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7804:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7804:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7789:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7789:3:5"
																		},
																		"nativeSrc": "7789:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7789:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7736:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7736:43:5"
																},
																"nativeSrc": "7736:72:5",
																"nodeType": "YulFunctionCall",
																"src": "7736:72:5"
															},
															"nativeSrc": "7736:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "7736:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7862:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7862:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7875:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7875:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7886:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7886:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7871:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7871:3:5"
																		},
																		"nativeSrc": "7871:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7871:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7818:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7818:43:5"
																},
																"nativeSrc": "7818:72:5",
																"nodeType": "YulFunctionCall",
																"src": "7818:72:5"
															},
															"nativeSrc": "7818:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "7818:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7455:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7565:9:5",
														"nodeType": "YulTypedName",
														"src": "7565:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7577:6:5",
														"nodeType": "YulTypedName",
														"src": "7577:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7585:6:5",
														"nodeType": "YulTypedName",
														"src": "7585:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7593:6:5",
														"nodeType": "YulTypedName",
														"src": "7593:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7604:4:5",
														"nodeType": "YulTypedName",
														"src": "7604:4:5",
														"type": ""
													}
												],
												"src": "7455:442:5"
											},
											{
												"body": {
													"nativeSrc": "7945:48:5",
													"nodeType": "YulBlock",
													"src": "7945:48:5",
													"statements": [
														{
															"nativeSrc": "7955:32:5",
															"nodeType": "YulAssignment",
															"src": "7955:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7980:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7980:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7973:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "7973:6:5"
																		},
																		"nativeSrc": "7973:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7973:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7966:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7966:6:5"
																},
																"nativeSrc": "7966:21:5",
																"nodeType": "YulFunctionCall",
																"src": "7966:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7955:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "7955:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7903:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7927:5:5",
														"nodeType": "YulTypedName",
														"src": "7927:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7937:7:5",
														"nodeType": "YulTypedName",
														"src": "7937:7:5",
														"type": ""
													}
												],
												"src": "7903:90:5"
											},
											{
												"body": {
													"nativeSrc": "8039:76:5",
													"nodeType": "YulBlock",
													"src": "8039:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "8093:16:5",
																"nodeType": "YulBlock",
																"src": "8093:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8102:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8102:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8105:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8105:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8095:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8095:6:5"
																			},
																			"nativeSrc": "8095:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8095:12:5"
																		},
																		"nativeSrc": "8095:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8095:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8062:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8062:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8084:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "8084:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8069:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "8069:14:5"
																				},
																				"nativeSrc": "8069:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8069:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8059:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "8059:2:5"
																		},
																		"nativeSrc": "8059:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8059:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8052:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8052:6:5"
																},
																"nativeSrc": "8052:40:5",
																"nodeType": "YulFunctionCall",
																"src": "8052:40:5"
															},
															"nativeSrc": "8049:60:5",
															"nodeType": "YulIf",
															"src": "8049:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7999:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8032:5:5",
														"nodeType": "YulTypedName",
														"src": "8032:5:5",
														"type": ""
													}
												],
												"src": "7999:116:5"
											},
											{
												"body": {
													"nativeSrc": "8181:77:5",
													"nodeType": "YulBlock",
													"src": "8181:77:5",
													"statements": [
														{
															"nativeSrc": "8191:22:5",
															"nodeType": "YulAssignment",
															"src": "8191:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8206:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8206:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8200:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8200:5:5"
																},
																"nativeSrc": "8200:13:5",
																"nodeType": "YulFunctionCall",
																"src": "8200:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8191:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8191:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8246:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8246:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "8222:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "8222:23:5"
																},
																"nativeSrc": "8222:30:5",
																"nodeType": "YulFunctionCall",
																"src": "8222:30:5"
															},
															"nativeSrc": "8222:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "8222:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "8121:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8159:6:5",
														"nodeType": "YulTypedName",
														"src": "8159:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8167:3:5",
														"nodeType": "YulTypedName",
														"src": "8167:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8175:5:5",
														"nodeType": "YulTypedName",
														"src": "8175:5:5",
														"type": ""
													}
												],
												"src": "8121:137:5"
											},
											{
												"body": {
													"nativeSrc": "8338:271:5",
													"nodeType": "YulBlock",
													"src": "8338:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "8384:83:5",
																"nodeType": "YulBlock",
																"src": "8384:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8386:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "8386:77:5"
																			},
																			"nativeSrc": "8386:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8386:79:5"
																		},
																		"nativeSrc": "8386:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8386:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8359:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8359:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8368:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8368:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8355:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8355:3:5"
																		},
																		"nativeSrc": "8355:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8355:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8380:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8380:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8351:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8351:3:5"
																},
																"nativeSrc": "8351:32:5",
																"nodeType": "YulFunctionCall",
																"src": "8351:32:5"
															},
															"nativeSrc": "8348:119:5",
															"nodeType": "YulIf",
															"src": "8348:119:5"
														},
														{
															"nativeSrc": "8477:125:5",
															"nodeType": "YulBlock",
															"src": "8477:125:5",
															"statements": [
																{
																	"nativeSrc": "8492:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8492:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8506:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8506:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8496:6:5",
																			"nodeType": "YulTypedName",
																			"src": "8496:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8521:71:5",
																	"nodeType": "YulAssignment",
																	"src": "8521:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8564:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "8564:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8575:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "8575:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8560:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8560:3:5"
																				},
																				"nativeSrc": "8560:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8560:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8584:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8584:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "8531:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "8531:28:5"
																		},
																		"nativeSrc": "8531:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8531:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8521:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "8521:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8264:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8308:9:5",
														"nodeType": "YulTypedName",
														"src": "8308:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8319:7:5",
														"nodeType": "YulTypedName",
														"src": "8319:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8331:6:5",
														"nodeType": "YulTypedName",
														"src": "8331:6:5",
														"type": ""
													}
												],
												"src": "8264:345:5"
											},
											{
												"body": {
													"nativeSrc": "8713:124:5",
													"nodeType": "YulBlock",
													"src": "8713:124:5",
													"statements": [
														{
															"nativeSrc": "8723:26:5",
															"nodeType": "YulAssignment",
															"src": "8723:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8735:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8735:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8746:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8746:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8731:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8731:3:5"
																},
																"nativeSrc": "8731:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8731:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8723:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8723:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8803:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8803:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8816:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8816:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8827:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8827:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8812:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8812:3:5"
																		},
																		"nativeSrc": "8812:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8812:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8759:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8759:43:5"
																},
																"nativeSrc": "8759:71:5",
																"nodeType": "YulFunctionCall",
																"src": "8759:71:5"
															},
															"nativeSrc": "8759:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "8759:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8615:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8685:9:5",
														"nodeType": "YulTypedName",
														"src": "8685:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8697:6:5",
														"nodeType": "YulTypedName",
														"src": "8697:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8708:4:5",
														"nodeType": "YulTypedName",
														"src": "8708:4:5",
														"type": ""
													}
												],
												"src": "8615:222:5"
											},
											{
												"body": {
													"nativeSrc": "8901:40:5",
													"nodeType": "YulBlock",
													"src": "8901:40:5",
													"statements": [
														{
															"nativeSrc": "8912:22:5",
															"nodeType": "YulAssignment",
															"src": "8912:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8928:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8928:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8922:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8922:5:5"
																},
																"nativeSrc": "8922:12:5",
																"nodeType": "YulFunctionCall",
																"src": "8922:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8912:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8912:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "8843:98:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8884:5:5",
														"nodeType": "YulTypedName",
														"src": "8884:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8894:6:5",
														"nodeType": "YulTypedName",
														"src": "8894:6:5",
														"type": ""
													}
												],
												"src": "8843:98:5"
											},
											{
												"body": {
													"nativeSrc": "9060:34:5",
													"nodeType": "YulBlock",
													"src": "9060:34:5",
													"statements": [
														{
															"nativeSrc": "9070:18:5",
															"nodeType": "YulAssignment",
															"src": "9070:18:5",
															"value": {
																"name": "pos",
																"nativeSrc": "9085:3:5",
																"nodeType": "YulIdentifier",
																"src": "9085:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9070:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9070:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "8947:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9032:3:5",
														"nodeType": "YulTypedName",
														"src": "9032:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9037:6:5",
														"nodeType": "YulTypedName",
														"src": "9037:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9048:11:5",
														"nodeType": "YulTypedName",
														"src": "9048:11:5",
														"type": ""
													}
												],
												"src": "8947:147:5"
											},
											{
												"body": {
													"nativeSrc": "9162:77:5",
													"nodeType": "YulBlock",
													"src": "9162:77:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "9179:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9179:3:5"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "9184:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9184:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9189:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9189:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "9173:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9173:5:5"
																},
																"nativeSrc": "9173:23:5",
																"nodeType": "YulFunctionCall",
																"src": "9173:23:5"
															},
															"nativeSrc": "9173:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "9173:23:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "9216:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "9216:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9221:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9221:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9212:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9212:3:5"
																		},
																		"nativeSrc": "9212:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9212:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9230:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9230:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9205:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9205:6:5"
																},
																"nativeSrc": "9205:27:5",
																"nodeType": "YulFunctionCall",
																"src": "9205:27:5"
															},
															"nativeSrc": "9205:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "9205:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "9100:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9144:3:5",
														"nodeType": "YulTypedName",
														"src": "9144:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "9149:3:5",
														"nodeType": "YulTypedName",
														"src": "9149:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9154:6:5",
														"nodeType": "YulTypedName",
														"src": "9154:6:5",
														"type": ""
													}
												],
												"src": "9100:139:5"
											},
											{
												"body": {
													"nativeSrc": "9353:278:5",
													"nodeType": "YulBlock",
													"src": "9353:278:5",
													"statements": [
														{
															"nativeSrc": "9363:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "9363:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9409:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9409:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "9377:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "9377:31:5"
																},
																"nativeSrc": "9377:38:5",
																"nodeType": "YulFunctionCall",
																"src": "9377:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9367:6:5",
																	"nodeType": "YulTypedName",
																	"src": "9367:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9424:95:5",
															"nodeType": "YulAssignment",
															"src": "9424:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9507:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9507:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9512:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9512:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "9431:75:5",
																	"nodeType": "YulIdentifier",
																	"src": "9431:75:5"
																},
																"nativeSrc": "9431:88:5",
																"nodeType": "YulFunctionCall",
																"src": "9431:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9424:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9424:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9567:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "9567:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9574:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9574:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9563:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9563:3:5"
																		},
																		"nativeSrc": "9563:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9563:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9581:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9581:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9586:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9586:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "9528:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "9528:34:5"
																},
																"nativeSrc": "9528:65:5",
																"nodeType": "YulFunctionCall",
																"src": "9528:65:5"
															},
															"nativeSrc": "9528:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "9528:65:5"
														},
														{
															"nativeSrc": "9602:23:5",
															"nodeType": "YulAssignment",
															"src": "9602:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9613:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9613:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9618:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9618:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9609:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9609:3:5"
																},
																"nativeSrc": "9609:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9609:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9602:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9602:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "9245:386:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9334:5:5",
														"nodeType": "YulTypedName",
														"src": "9334:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9341:3:5",
														"nodeType": "YulTypedName",
														"src": "9341:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9349:3:5",
														"nodeType": "YulTypedName",
														"src": "9349:3:5",
														"type": ""
													}
												],
												"src": "9245:386:5"
											},
											{
												"body": {
													"nativeSrc": "9771:137:5",
													"nodeType": "YulBlock",
													"src": "9771:137:5",
													"statements": [
														{
															"nativeSrc": "9782:100:5",
															"nodeType": "YulAssignment",
															"src": "9782:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9869:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9869:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9878:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9878:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "9789:79:5",
																	"nodeType": "YulIdentifier",
																	"src": "9789:79:5"
																},
																"nativeSrc": "9789:93:5",
																"nodeType": "YulFunctionCall",
																"src": "9789:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9782:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9782:3:5"
																}
															]
														},
														{
															"nativeSrc": "9892:10:5",
															"nodeType": "YulAssignment",
															"src": "9892:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "9899:3:5",
																"nodeType": "YulIdentifier",
																"src": "9899:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9892:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9892:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "9637:271:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9750:3:5",
														"nodeType": "YulTypedName",
														"src": "9750:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9756:6:5",
														"nodeType": "YulTypedName",
														"src": "9756:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9767:3:5",
														"nodeType": "YulTypedName",
														"src": "9767:3:5",
														"type": ""
													}
												],
												"src": "9637:271:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d5d46e1a8c8aa630b32d6247c07e5abac98c176fef37ac7053d0eb89db3b12c9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vault: withdraw amount must be g\")\n\n        mstore(add(memPtr, 32), \"reater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_d5d46e1a8c8aa630b32d6247c07e5abac98c176fef37ac7053d0eb89db3b12c9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_d5d46e1a8c8aa630b32d6247c07e5abac98c176fef37ac7053d0eb89db3b12c9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d5d46e1a8c8aa630b32d6247c07e5abac98c176fef37ac7053d0eb89db3b12c9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d5d46e1a8c8aa630b32d6247c07e5abac98c176fef37ac7053d0eb89db3b12c9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2683b0c090bd15174b99e03b4a5ba78f5fdb53dd9677bb0f5593c3959a8904fa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vault: withdraw amount must be <\")\n\n        mstore(add(memPtr, 32), \"= account balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_2683b0c090bd15174b99e03b4a5ba78f5fdb53dd9677bb0f5593c3959a8904fa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_2683b0c090bd15174b99e03b4a5ba78f5fdb53dd9677bb0f5593c3959a8904fa(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2683b0c090bd15174b99e03b4a5ba78f5fdb53dd9677bb0f5593c3959a8904fa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2683b0c090bd15174b99e03b4a5ba78f5fdb53dd9677bb0f5593c3959a8904fa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_cf377e1cd57f3c218250c3aaefa03f4b185d0d8d155670289be6be2b2d1134cf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vault: deposit amount must be gr\")\n\n        mstore(add(memPtr, 32), \"eater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_cf377e1cd57f3c218250c3aaefa03f4b185d0d8d155670289be6be2b2d1134cf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_cf377e1cd57f3c218250c3aaefa03f4b185d0d8d155670289be6be2b2d1134cf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cf377e1cd57f3c218250c3aaefa03f4b185d0d8d155670289be6be2b2d1134cf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cf377e1cd57f3c218250c3aaefa03f4b185d0d8d155670289be6be2b2d1134cf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c80632e1a7d4d1461004e578063785e9e861461006a578063b6b55f2514610088578063cc4db503146100a4575b5f80fd5b610068600480360381019061006391906106ce565b6100d4565b005b610072610236565b60405161007f9190610773565b60405180910390f35b6100a2600480360381019061009d91906106ce565b610259565b005b6100be60048036038101906100b991906107c7565b61033d565b6040516100cb9190610801565b60405180910390f35b5f8111610116576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010d9061089a565b60405180910390fd5b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054811115610196576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018d90610928565b60405180910390fd5b8060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546101e29190610973565b9250508190555061023333825f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166103529092919063ffffffff16565b50565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f811161029b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029290610a16565b60405180910390fd5b8060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546102e79190610a34565b9250508190555061033a3330835f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166103d1909392919063ffffffff16565b50565b6001602052805f5260405f205f915090505481565b6103cc838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610385929190610a76565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610453565b505050565b61044d848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161040693929190610a9d565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610453565b50505050565b5f61047d828473ffffffffffffffffffffffffffffffffffffffff166104e890919063ffffffff16565b90505f8151141580156104a157508080602001905181019061049f9190610b07565b155b156104e357826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016104da9190610b32565b60405180910390fd5b505050565b60606104f583835f6104fd565b905092915050565b60608147101561054457306040517fcd78605900000000000000000000000000000000000000000000000000000000815260040161053b9190610b32565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff16848660405161056c9190610b9d565b5f6040518083038185875af1925050503d805f81146105a6576040519150601f19603f3d011682016040523d82523d5f602084013e6105ab565b606091505b50915091506105bb8683836105c6565b925050509392505050565b6060826105db576105d682610653565b61064b565b5f825114801561060157505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561064357836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161063a9190610b32565b60405180910390fd5b81905061064c565b5b9392505050565b5f815111156106655780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f819050919050565b6106ad8161069b565b81146106b7575f80fd5b50565b5f813590506106c8816106a4565b92915050565b5f602082840312156106e3576106e2610697565b5b5f6106f0848285016106ba565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61073b610736610731846106f9565b610718565b6106f9565b9050919050565b5f61074c82610721565b9050919050565b5f61075d82610742565b9050919050565b61076d81610753565b82525050565b5f6020820190506107865f830184610764565b92915050565b5f610796826106f9565b9050919050565b6107a68161078c565b81146107b0575f80fd5b50565b5f813590506107c18161079d565b92915050565b5f602082840312156107dc576107db610697565b5b5f6107e9848285016107b3565b91505092915050565b6107fb8161069b565b82525050565b5f6020820190506108145f8301846107f2565b92915050565b5f82825260208201905092915050565b7f5661756c743a20776974686472617720616d6f756e74206d75737420626520675f8201527f726561746572207468616e203000000000000000000000000000000000000000602082015250565b5f610884602d8361081a565b915061088f8261082a565b604082019050919050565b5f6020820190508181035f8301526108b181610878565b9050919050565b7f5661756c743a20776974686472617720616d6f756e74206d757374206265203c5f8201527f3d206163636f756e742062616c616e6365000000000000000000000000000000602082015250565b5f61091260318361081a565b915061091d826108b8565b604082019050919050565b5f6020820190508181035f83015261093f81610906565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61097d8261069b565b91506109888361069b565b92508282039050818111156109a05761099f610946565b5b92915050565b7f5661756c743a206465706f73697420616d6f756e74206d7573742062652067725f8201527f6561746572207468616e20300000000000000000000000000000000000000000602082015250565b5f610a00602c8361081a565b9150610a0b826109a6565b604082019050919050565b5f6020820190508181035f830152610a2d816109f4565b9050919050565b5f610a3e8261069b565b9150610a498361069b565b9250828201905080821115610a6157610a60610946565b5b92915050565b610a708161078c565b82525050565b5f604082019050610a895f830185610a67565b610a9660208301846107f2565b9392505050565b5f606082019050610ab05f830186610a67565b610abd6020830185610a67565b610aca60408301846107f2565b949350505050565b5f8115159050919050565b610ae681610ad2565b8114610af0575f80fd5b50565b5f81519050610b0181610add565b92915050565b5f60208284031215610b1c57610b1b610697565b5b5f610b2984828501610af3565b91505092915050565b5f602082019050610b455f830184610a67565b92915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f610b7782610b4b565b610b818185610b55565b9350610b91818560208601610b5f565b80840191505092915050565b5f610ba88284610b6d565b91508190509291505056fea2646970667358221220f7a71d0d778be4215282ab64793d244b7c39daba753b9c6afd1ed1e3bbe4d52664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x785E9E86 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xCC4DB503 EQ PUSH2 0xA4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x6CE JUMP JUMPDEST PUSH2 0xD4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x72 PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x259 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x33D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 GT PUSH2 0x116 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D SWAP1 PUSH2 0x89A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x196 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D SWAP1 PUSH2 0x928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x233 CALLER DUP3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x352 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x29B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x292 SWAP1 PUSH2 0xA16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0xA34 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x33A CALLER ADDRESS DUP4 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3D1 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3CC DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x385 SWAP3 SWAP2 SWAP1 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x453 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x44D DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x406 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x453 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47D DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x4A1 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x49F SWAP2 SWAP1 PUSH2 0xB07 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x4E3 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DA SWAP2 SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4F5 DUP4 DUP4 PUSH0 PUSH2 0x4FD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x544 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x56C SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x5BB DUP7 DUP4 DUP4 PUSH2 0x5C6 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x5DB JUMPI PUSH2 0x5D6 DUP3 PUSH2 0x653 JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x601 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x643 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63A SWAP2 SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x64C JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x665 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6AD DUP2 PUSH2 0x69B JUMP JUMPDEST DUP2 EQ PUSH2 0x6B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6C8 DUP2 PUSH2 0x6A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E3 JUMPI PUSH2 0x6E2 PUSH2 0x697 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6F0 DUP5 DUP3 DUP6 ADD PUSH2 0x6BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x73B PUSH2 0x736 PUSH2 0x731 DUP5 PUSH2 0x6F9 JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST PUSH2 0x6F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x74C DUP3 PUSH2 0x721 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x75D DUP3 PUSH2 0x742 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x76D DUP2 PUSH2 0x753 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x786 PUSH0 DUP4 ADD DUP5 PUSH2 0x764 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x796 DUP3 PUSH2 0x6F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A6 DUP2 PUSH2 0x78C JUMP JUMPDEST DUP2 EQ PUSH2 0x7B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7C1 DUP2 PUSH2 0x79D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DC JUMPI PUSH2 0x7DB PUSH2 0x697 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7E9 DUP5 DUP3 DUP6 ADD PUSH2 0x7B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7FB DUP2 PUSH2 0x69B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x814 PUSH0 DUP4 ADD DUP5 PUSH2 0x7F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5661756C743A20776974686472617720616D6F756E74206D7573742062652067 PUSH0 DUP3 ADD MSTORE PUSH32 0x726561746572207468616E203000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x884 PUSH1 0x2D DUP4 PUSH2 0x81A JUMP JUMPDEST SWAP2 POP PUSH2 0x88F DUP3 PUSH2 0x82A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8B1 DUP2 PUSH2 0x878 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5661756C743A20776974686472617720616D6F756E74206D757374206265203C PUSH0 DUP3 ADD MSTORE PUSH32 0x3D206163636F756E742062616C616E6365000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x912 PUSH1 0x31 DUP4 PUSH2 0x81A JUMP JUMPDEST SWAP2 POP PUSH2 0x91D DUP3 PUSH2 0x8B8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x93F DUP2 PUSH2 0x906 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x97D DUP3 PUSH2 0x69B JUMP JUMPDEST SWAP2 POP PUSH2 0x988 DUP4 PUSH2 0x69B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x9A0 JUMPI PUSH2 0x99F PUSH2 0x946 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5661756C743A206465706F73697420616D6F756E74206D757374206265206772 PUSH0 DUP3 ADD MSTORE PUSH32 0x6561746572207468616E20300000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA00 PUSH1 0x2C DUP4 PUSH2 0x81A JUMP JUMPDEST SWAP2 POP PUSH2 0xA0B DUP3 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA2D DUP2 PUSH2 0x9F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA3E DUP3 PUSH2 0x69B JUMP JUMPDEST SWAP2 POP PUSH2 0xA49 DUP4 PUSH2 0x69B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA61 JUMPI PUSH2 0xA60 PUSH2 0x946 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA70 DUP2 PUSH2 0x78C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA89 PUSH0 DUP4 ADD DUP6 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0xA96 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7F2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xAB0 PUSH0 DUP4 ADD DUP7 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0xABD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0xACA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x7F2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAE6 DUP2 PUSH2 0xAD2 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB01 DUP2 PUSH2 0xADD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB1C JUMPI PUSH2 0xB1B PUSH2 0x697 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB29 DUP5 DUP3 DUP6 ADD PUSH2 0xAF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB45 PUSH0 DUP4 ADD DUP5 PUSH2 0xA67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB77 DUP3 PUSH2 0xB4B JUMP JUMPDEST PUSH2 0xB81 DUP2 DUP6 PUSH2 0xB55 JUMP JUMPDEST SWAP4 POP PUSH2 0xB91 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB5F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBA8 DUP3 DUP5 PUSH2 0xB6D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xA7 SAR 0xD PUSH24 0x8BE4215282AB64793D244B7C39DABA753B9C6AFD1ED1E3BB 0xE4 0xD5 0x26 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "226:817:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;694:342;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;283:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;439:247;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;309:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;694:342;765:1;755:7;:11;747:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;846:16;:28;863:10;846:28;;;;;;;;;;;;;;;;835:7;:39;;827:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;971:7;939:16;:28;956:10;939:28;;;;;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;;;;;989;1008:10;1020:7;989:5;;;;;;;;;;:18;;;;:39;;;;;:::i;:::-;694:342;:::o;283:19::-;;;;;;;;;;;;:::o;439:247::-;509:1;499:7;:11;491:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;602:7;570:16;:28;587:10;570:28;;;;;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;;;;;620:58;643:10;663:4;670:7;620:5;;;;;;;;;;:22;;;;:58;;;;;;:::i;:::-;439:247;:::o;309:51::-;;;;;;;;;;;;;;;;;:::o;1303:160:2:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;1702:188::-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;4059:629::-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:3:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:5;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:60::-;1185:3;1206:5;1199:12;;1157:60;;;:::o;1223:142::-;1273:9;1306:53;1324:34;1333:24;1351:5;1333:24;:::i;:::-;1324:34;:::i;:::-;1306:53;:::i;:::-;1293:66;;1223:142;;;:::o;1371:126::-;1421:9;1454:37;1485:5;1454:37;:::i;:::-;1441:50;;1371:126;;;:::o;1503:139::-;1566:9;1599:37;1630:5;1599:37;:::i;:::-;1586:50;;1503:139;;;:::o;1648:157::-;1748:50;1792:5;1748:50;:::i;:::-;1743:3;1736:63;1648:157;;:::o;1811:248::-;1917:4;1955:2;1944:9;1940:18;1932:26;;1968:84;2049:1;2038:9;2034:17;2025:6;1968:84;:::i;:::-;1811:248;;;;:::o;2065:96::-;2102:7;2131:24;2149:5;2131:24;:::i;:::-;2120:35;;2065:96;;;:::o;2167:122::-;2240:24;2258:5;2240:24;:::i;:::-;2233:5;2230:35;2220:63;;2279:1;2276;2269:12;2220:63;2167:122;:::o;2295:139::-;2341:5;2379:6;2366:20;2357:29;;2395:33;2422:5;2395:33;:::i;:::-;2295:139;;;;:::o;2440:329::-;2499:6;2548:2;2536:9;2527:7;2523:23;2519:32;2516:119;;;2554:79;;:::i;:::-;2516:119;2674:1;2699:53;2744:7;2735:6;2724:9;2720:22;2699:53;:::i;:::-;2689:63;;2645:117;2440:329;;;;:::o;2775:118::-;2862:24;2880:5;2862:24;:::i;:::-;2857:3;2850:37;2775:118;;:::o;2899:222::-;2992:4;3030:2;3019:9;3015:18;3007:26;;3043:71;3111:1;3100:9;3096:17;3087:6;3043:71;:::i;:::-;2899:222;;;;:::o;3127:169::-;3211:11;3245:6;3240:3;3233:19;3285:4;3280:3;3276:14;3261:29;;3127:169;;;;:::o;3302:232::-;3442:34;3438:1;3430:6;3426:14;3419:58;3511:15;3506:2;3498:6;3494:15;3487:40;3302:232;:::o;3540:366::-;3682:3;3703:67;3767:2;3762:3;3703:67;:::i;:::-;3696:74;;3779:93;3868:3;3779:93;:::i;:::-;3897:2;3892:3;3888:12;3881:19;;3540:366;;;:::o;3912:419::-;4078:4;4116:2;4105:9;4101:18;4093:26;;4165:9;4159:4;4155:20;4151:1;4140:9;4136:17;4129:47;4193:131;4319:4;4193:131;:::i;:::-;4185:139;;3912:419;;;:::o;4337:236::-;4477:34;4473:1;4465:6;4461:14;4454:58;4546:19;4541:2;4533:6;4529:15;4522:44;4337:236;:::o;4579:366::-;4721:3;4742:67;4806:2;4801:3;4742:67;:::i;:::-;4735:74;;4818:93;4907:3;4818:93;:::i;:::-;4936:2;4931:3;4927:12;4920:19;;4579:366;;;:::o;4951:419::-;5117:4;5155:2;5144:9;5140:18;5132:26;;5204:9;5198:4;5194:20;5190:1;5179:9;5175:17;5168:47;5232:131;5358:4;5232:131;:::i;:::-;5224:139;;4951:419;;;:::o;5376:180::-;5424:77;5421:1;5414:88;5521:4;5518:1;5511:15;5545:4;5542:1;5535:15;5562:194;5602:4;5622:20;5640:1;5622:20;:::i;:::-;5617:25;;5656:20;5674:1;5656:20;:::i;:::-;5651:25;;5700:1;5697;5693:9;5685:17;;5724:1;5718:4;5715:11;5712:37;;;5729:18;;:::i;:::-;5712:37;5562:194;;;;:::o;5762:231::-;5902:34;5898:1;5890:6;5886:14;5879:58;5971:14;5966:2;5958:6;5954:15;5947:39;5762:231;:::o;5999:366::-;6141:3;6162:67;6226:2;6221:3;6162:67;:::i;:::-;6155:74;;6238:93;6327:3;6238:93;:::i;:::-;6356:2;6351:3;6347:12;6340:19;;5999:366;;;:::o;6371:419::-;6537:4;6575:2;6564:9;6560:18;6552:26;;6624:9;6618:4;6614:20;6610:1;6599:9;6595:17;6588:47;6652:131;6778:4;6652:131;:::i;:::-;6644:139;;6371:419;;;:::o;6796:191::-;6836:3;6855:20;6873:1;6855:20;:::i;:::-;6850:25;;6889:20;6907:1;6889:20;:::i;:::-;6884:25;;6932:1;6929;6925:9;6918:16;;6953:3;6950:1;6947:10;6944:36;;;6960:18;;:::i;:::-;6944:36;6796:191;;;;:::o;6993:118::-;7080:24;7098:5;7080:24;:::i;:::-;7075:3;7068:37;6993:118;;:::o;7117:332::-;7238:4;7276:2;7265:9;7261:18;7253:26;;7289:71;7357:1;7346:9;7342:17;7333:6;7289:71;:::i;:::-;7370:72;7438:2;7427:9;7423:18;7414:6;7370:72;:::i;:::-;7117:332;;;;;:::o;7455:442::-;7604:4;7642:2;7631:9;7627:18;7619:26;;7655:71;7723:1;7712:9;7708:17;7699:6;7655:71;:::i;:::-;7736:72;7804:2;7793:9;7789:18;7780:6;7736:72;:::i;:::-;7818;7886:2;7875:9;7871:18;7862:6;7818:72;:::i;:::-;7455:442;;;;;;:::o;7903:90::-;7937:7;7980:5;7973:13;7966:21;7955:32;;7903:90;;;:::o;7999:116::-;8069:21;8084:5;8069:21;:::i;:::-;8062:5;8059:32;8049:60;;8105:1;8102;8095:12;8049:60;7999:116;:::o;8121:137::-;8175:5;8206:6;8200:13;8191:22;;8222:30;8246:5;8222:30;:::i;:::-;8121:137;;;;:::o;8264:345::-;8331:6;8380:2;8368:9;8359:7;8355:23;8351:32;8348:119;;;8386:79;;:::i;:::-;8348:119;8506:1;8531:61;8584:7;8575:6;8564:9;8560:22;8531:61;:::i;:::-;8521:71;;8477:125;8264:345;;;;:::o;8615:222::-;8708:4;8746:2;8735:9;8731:18;8723:26;;8759:71;8827:1;8816:9;8812:17;8803:6;8759:71;:::i;:::-;8615:222;;;;:::o;8843:98::-;8894:6;8928:5;8922:12;8912:22;;8843:98;;;:::o;8947:147::-;9048:11;9085:3;9070:18;;8947:147;;;;:::o;9100:139::-;9189:6;9184:3;9179;9173:23;9230:1;9221:6;9216:3;9212:16;9205:27;9100:139;;;:::o;9245:386::-;9349:3;9377:38;9409:5;9377:38;:::i;:::-;9431:88;9512:6;9507:3;9431:88;:::i;:::-;9424:95;;9528:65;9586:6;9581:3;9574:4;9567:5;9563:16;9528:65;:::i;:::-;9618:6;9613:3;9609:16;9602:23;;9353:278;9245:386;;;;:::o;9637:271::-;9767:3;9789:93;9878:3;9869:6;9789:93;:::i;:::-;9782:100;;9899:3;9892:10;;9637:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "609800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"accountBalanceOf(address)": "2846",
								"deposit(uint256)": "infinite",
								"erc20()": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 226,
									"end": 1043,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 226,
									"end": 1043,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 226,
									"end": 1043,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 371,
									"end": 431,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 431,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 371,
									"end": 431,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 371,
									"end": 431,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 371,
									"end": 431,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 371,
									"end": 431,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 371,
									"end": 431,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 371,
									"end": 431,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 417,
									"end": 423,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 409,
									"end": 414,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 414,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 409,
									"end": 423,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 409,
									"end": 423,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 409,
									"end": 423,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 409,
									"end": 423,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 409,
									"end": 423,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 409,
									"end": 423,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 409,
									"end": 423,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 409,
									"end": 423,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 409,
									"end": 423,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 409,
									"end": 423,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 409,
									"end": 423,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 409,
									"end": 423,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 409,
									"end": 423,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 409,
									"end": 423,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 409,
									"end": 423,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 409,
									"end": 423,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 409,
									"end": 423,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 409,
									"end": 423,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 371,
									"end": 431,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 226,
									"end": 1043,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 226,
									"end": 1043,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 677,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 677,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 618,
									"end": 625,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 665,
									"end": 670,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 647,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 636,
									"end": 671,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 636,
									"end": 671,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 568,
									"end": 677,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 677,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 683,
									"end": 831,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 683,
									"end": 831,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 805,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 769,
									"end": 806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 769,
									"end": 806,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 769,
									"end": 806,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 762,
									"end": 767,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 759,
									"end": 807,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 749,
									"end": 825,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 821,
									"end": 822,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 818,
									"end": 819,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 811,
									"end": 823,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 749,
									"end": 825,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 683,
									"end": 831,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 683,
									"end": 831,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 907,
									"end": 912,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 932,
									"end": 945,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 923,
									"end": 945,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 923,
									"end": 945,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 954,
									"end": 1000,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 837,
									"end": 1006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1095,
									"end": 1101,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1146,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1132,
									"end": 1141,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1123,
									"end": 1130,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1119,
									"end": 1142,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1147,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1150,
									"end": 1229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1270,
									"end": 1271,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1364,
									"end": 1371,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1355,
									"end": 1361,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1344,
									"end": 1353,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1340,
									"end": 1362,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1295,
									"end": 1372,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1285,
									"end": 1372,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1285,
									"end": 1372,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1241,
									"end": 1382,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1012,
									"end": 1389,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 226,
									"end": 1043,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 226,
									"end": 1043,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 226,
									"end": 1043,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 226,
									"end": 1043,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 226,
									"end": 1043,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 226,
									"end": 1043,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 226,
									"end": 1043,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 226,
									"end": 1043,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 226,
									"end": 1043,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f7a71d0d778be4215282ab64793d244b7c39daba753b9c6afd1ed1e3bbe4d52664736f6c634300081a0033",
									".code": [
										{
											"begin": 226,
											"end": 1043,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "PUSH",
											"source": 4,
											"value": "2E1A7D4D"
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "PUSH",
											"source": 4,
											"value": "785E9E86"
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "PUSH",
											"source": 4,
											"value": "B6B55F25"
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "PUSH",
											"source": 4,
											"value": "CC4DB503"
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 226,
											"end": 1043,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 694,
											"end": 1036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 694,
											"end": 1036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 283,
											"end": 302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 283,
											"end": 302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 439,
											"end": 686,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 439,
											"end": 686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 439,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 439,
											"end": 686,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 439,
											"end": 686,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 439,
											"end": 686,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 439,
											"end": 686,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 439,
											"end": 686,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 439,
											"end": 686,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 439,
											"end": 686,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 439,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 439,
											"end": 686,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 439,
											"end": 686,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 439,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 439,
											"end": 686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 439,
											"end": 686,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 439,
											"end": 686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 439,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 439,
											"end": 686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 439,
											"end": 686,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 439,
											"end": 686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 439,
											"end": 686,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 309,
											"end": 360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 309,
											"end": 360,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 309,
											"end": 360,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 309,
											"end": 360,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 309,
											"end": 360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 309,
											"end": 360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 309,
											"end": 360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 360,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 309,
											"end": 360,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 309,
											"end": 360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 309,
											"end": 360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 360,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 765,
											"end": 766,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 755,
											"end": 766,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 747,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 747,
											"end": 816,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 747,
											"end": 816,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 816,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 747,
											"end": 816,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 747,
											"end": 816,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 747,
											"end": 816,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 747,
											"end": 816,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 747,
											"end": 816,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 747,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 747,
											"end": 816,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 747,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 747,
											"end": 816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 747,
											"end": 816,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 747,
											"end": 816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 747,
											"end": 816,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 816,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 747,
											"end": 816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 747,
											"end": 816,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 747,
											"end": 816,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 747,
											"end": 816,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 747,
											"end": 816,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 747,
											"end": 816,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 747,
											"end": 816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 846,
											"end": 862,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 846,
											"end": 874,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 873,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 846,
											"end": 874,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 846,
											"end": 874,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 846,
											"end": 874,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 846,
											"end": 874,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 846,
											"end": 874,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 846,
											"end": 874,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 846,
											"end": 874,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 846,
											"end": 874,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 846,
											"end": 874,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 846,
											"end": 874,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 846,
											"end": 874,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 846,
											"end": 874,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 846,
											"end": 874,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 846,
											"end": 874,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 874,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 846,
											"end": 874,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 835,
											"end": 842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 835,
											"end": 874,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 835,
											"end": 874,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 827,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 827,
											"end": 928,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 827,
											"end": 928,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 928,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 928,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 827,
											"end": 928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 827,
											"end": 928,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 827,
											"end": 928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 827,
											"end": 928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 827,
											"end": 928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 827,
											"end": 928,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 827,
											"end": 928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 827,
											"end": 928,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 928,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 928,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 827,
											"end": 928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 928,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 827,
											"end": 928,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 827,
											"end": 928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 971,
											"end": 978,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 939,
											"end": 955,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 939,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 956,
											"end": 966,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 939,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 939,
											"end": 967,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 939,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 939,
											"end": 967,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 939,
											"end": 967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 939,
											"end": 967,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 939,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 939,
											"end": 967,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 939,
											"end": 967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 939,
											"end": 967,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 939,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 939,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 967,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 939,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 978,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 939,
											"end": 978,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 939,
											"end": 978,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 939,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 939,
											"end": 978,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 939,
											"end": 978,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 939,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 939,
											"end": 978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 939,
											"end": 978,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 939,
											"end": 978,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 939,
											"end": 978,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 939,
											"end": 978,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 939,
											"end": 978,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 939,
											"end": 978,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 939,
											"end": 978,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 939,
											"end": 978,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 939,
											"end": 978,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 989,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1008,
											"end": 1018,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1027,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 989,
											"end": 994,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 994,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 989,
											"end": 994,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 989,
											"end": 994,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 989,
											"end": 994,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 989,
											"end": 994,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 989,
											"end": 994,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 989,
											"end": 994,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 989,
											"end": 994,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 989,
											"end": 994,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 989,
											"end": 1007,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 989,
											"end": 1007,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 989,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 989,
											"end": 1007,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 989,
											"end": 1028,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 989,
											"end": 1028,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 989,
											"end": 1028,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 989,
											"end": 1028,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 989,
											"end": 1028,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 989,
											"end": 1028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 989,
											"end": 1028,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 989,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 694,
											"end": 1036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 694,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 283,
											"end": 302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 439,
											"end": 686,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 439,
											"end": 686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 509,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 506,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 499,
											"end": 510,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 491,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 491,
											"end": 559,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 491,
											"end": 559,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 559,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 491,
											"end": 559,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 491,
											"end": 559,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 491,
											"end": 559,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 491,
											"end": 559,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 491,
											"end": 559,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 491,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 491,
											"end": 559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 491,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 491,
											"end": 559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 491,
											"end": 559,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 491,
											"end": 559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 491,
											"end": 559,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 559,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 491,
											"end": 559,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 491,
											"end": 559,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 491,
											"end": 559,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 491,
											"end": 559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 491,
											"end": 559,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 491,
											"end": 559,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 491,
											"end": 559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 602,
											"end": 609,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 570,
											"end": 586,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 598,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 597,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 570,
											"end": 598,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 570,
											"end": 598,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 570,
											"end": 598,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 570,
											"end": 598,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 570,
											"end": 598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 570,
											"end": 598,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 570,
											"end": 598,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 570,
											"end": 598,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 570,
											"end": 598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 570,
											"end": 598,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 570,
											"end": 598,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 570,
											"end": 598,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 598,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 570,
											"end": 598,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 609,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 570,
											"end": 609,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 570,
											"end": 609,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 570,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 570,
											"end": 609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 570,
											"end": 609,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 570,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 570,
											"end": 609,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 570,
											"end": 609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 570,
											"end": 609,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 570,
											"end": 609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 570,
											"end": 609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 570,
											"end": 609,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 570,
											"end": 609,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 570,
											"end": 609,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 570,
											"end": 609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 620,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 643,
											"end": 653,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 663,
											"end": 667,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 670,
											"end": 677,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 620,
											"end": 625,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 625,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 625,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 620,
											"end": 625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 625,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 620,
											"end": 625,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 620,
											"end": 625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 625,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 620,
											"end": 625,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 625,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 620,
											"end": 642,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 642,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 620,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 620,
											"end": 642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 678,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 620,
											"end": 678,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 620,
											"end": 678,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 620,
											"end": 678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 678,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 620,
											"end": 678,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 620,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 620,
											"end": 678,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 620,
											"end": 678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 439,
											"end": 686,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 439,
											"end": 686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 309,
											"end": 360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 309,
											"end": 360,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 360,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 360,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 360,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 360,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 360,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 309,
											"end": 360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1188,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1211,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1211,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1157,
											"end": 1217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1365,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1223,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1273,
											"end": 1282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1333,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1333,
											"end": 1357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1357,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1333,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1324,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1306,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1306,
											"end": 1359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1306,
											"end": 1359,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1306,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1365,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1365,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1365,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1497,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1371,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1485,
											"end": 1490,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1454,
											"end": 1491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1491,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1497,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1642,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1503,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1630,
											"end": 1635,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1599,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1599,
											"end": 1636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1599,
											"end": 1636,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1599,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1642,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1805,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1648,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1792,
											"end": 1797,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1748,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1798,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1748,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1743,
											"end": 1746,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1805,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1805,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 2059,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1811,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1921,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1957,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1944,
											"end": 1953,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1958,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1968,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2049,
											"end": 2050,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2051,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2031,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1968,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1968,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1968,
											"end": 2052,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1968,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 2059,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 2059,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 2059,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 2059,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 2059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2161,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2065,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2102,
											"end": 2109,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2149,
											"end": 2154,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2131,
											"end": 2155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2155,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2131,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2120,
											"end": 2155,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2120,
											"end": 2155,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2161,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2161,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2289,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2167,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2240,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2258,
											"end": 2263,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2240,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2240,
											"end": 2264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2240,
											"end": 2264,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2240,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2238,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2230,
											"end": 2265,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2220,
											"end": 2283,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2279,
											"end": 2280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2281,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2283,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2220,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2434,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2295,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2357,
											"end": 2386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2357,
											"end": 2386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2395,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2395,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2395,
											"end": 2428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2395,
											"end": 2428,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2395,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2769,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2440,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2548,
											"end": 2550,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2545,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2527,
											"end": 2534,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2523,
											"end": 2546,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2551,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2635,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2516,
											"end": 2635,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2554,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2554,
											"end": 2633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2633,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2554,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2635,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2516,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2744,
											"end": 2751,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2735,
											"end": 2741,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2724,
											"end": 2733,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2742,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2699,
											"end": 2752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2752,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2699,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2752,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2645,
											"end": 2762,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2769,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2769,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2769,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2769,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2893,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2775,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2862,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2880,
											"end": 2885,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2862,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2862,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2862,
											"end": 2886,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2862,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2887,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2899,
											"end": 3121,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2899,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2992,
											"end": 2996,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3032,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3007,
											"end": 3033,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3007,
											"end": 3033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 3111,
											"end": 3112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3109,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3113,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3093,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3043,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3114,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 3043,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2899,
											"end": 3121,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2899,
											"end": 3121,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2899,
											"end": 3121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2899,
											"end": 3121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2899,
											"end": 3121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3127,
											"end": 3296,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3127,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3222,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3251,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3240,
											"end": 3243,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3252,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3289,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3280,
											"end": 3283,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3276,
											"end": 3290,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3261,
											"end": 3290,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3261,
											"end": 3290,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3127,
											"end": 3296,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3127,
											"end": 3296,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3127,
											"end": 3296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3127,
											"end": 3296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3127,
											"end": 3296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3534,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3302,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3442,
											"end": 3476,
											"name": "PUSH",
											"source": 5,
											"value": "5661756C743A20776974686472617720616D6F756E74206D7573742062652067"
										},
										{
											"begin": 3438,
											"end": 3439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3419,
											"end": 3477,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3511,
											"end": 3526,
											"name": "PUSH",
											"source": 5,
											"value": "726561746572207468616E203000000000000000000000000000000000000000"
										},
										{
											"begin": 3506,
											"end": 3508,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3498,
											"end": 3504,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3487,
											"end": 3527,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3534,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3906,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3540,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3685,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3703,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3767,
											"end": 3769,
											"name": "PUSH",
											"source": 5,
											"value": "2D"
										},
										{
											"begin": 3762,
											"end": 3765,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3703,
											"end": 3770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3770,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3703,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3770,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3770,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3779,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 3868,
											"end": 3871,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3779,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3779,
											"end": 3872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3779,
											"end": 3872,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 3779,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3897,
											"end": 3899,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3895,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 3900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3881,
											"end": 3900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3881,
											"end": 3900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3906,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3906,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3906,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 4331,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3912,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4078,
											"end": 4082,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4116,
											"end": 4118,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4105,
											"end": 4114,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4119,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4119,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4119,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4165,
											"end": 4174,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4159,
											"end": 4163,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4155,
											"end": 4175,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4151,
											"end": 4152,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4149,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4136,
											"end": 4153,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4176,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4193,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 4319,
											"end": 4323,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4193,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4193,
											"end": 4324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4193,
											"end": 4324,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 4193,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4185,
											"end": 4324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4185,
											"end": 4324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 4331,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 4331,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 4331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 4331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4573,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4337,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4511,
											"name": "PUSH",
											"source": 5,
											"value": "5661756C743A20776974686472617720616D6F756E74206D757374206265203C"
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4471,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4475,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4454,
											"end": 4512,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4546,
											"end": 4565,
											"name": "PUSH",
											"source": 5,
											"value": "3D206163636F756E742062616C616E6365000000000000000000000000000000"
										},
										{
											"begin": 4541,
											"end": 4543,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4533,
											"end": 4539,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4529,
											"end": 4544,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4566,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4573,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4579,
											"end": 4945,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 4579,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4724,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4742,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 4806,
											"end": 4808,
											"name": "PUSH",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 4801,
											"end": 4804,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4742,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4742,
											"end": 4809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4742,
											"end": 4809,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 4742,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4809,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4809,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4818,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 4907,
											"end": 4910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4818,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4818,
											"end": 4911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4818,
											"end": 4911,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 4818,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4936,
											"end": 4938,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4931,
											"end": 4934,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4927,
											"end": 4939,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4579,
											"end": 4945,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4579,
											"end": 4945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4579,
											"end": 4945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4579,
											"end": 4945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 5370,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 4951,
											"end": 5370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5117,
											"end": 5121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5155,
											"end": 5157,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5144,
											"end": 5153,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5140,
											"end": 5158,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5132,
											"end": 5158,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5132,
											"end": 5158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5204,
											"end": 5213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5194,
											"end": 5214,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5190,
											"end": 5191,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5179,
											"end": 5188,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5175,
											"end": 5192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5168,
											"end": 5215,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5232,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 5358,
											"end": 5362,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5232,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 5232,
											"end": 5363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5232,
											"end": 5363,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 5232,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 5370,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 5370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 5370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 5370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5556,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 5376,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5424,
											"end": 5501,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5421,
											"end": 5422,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5502,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5521,
											"end": 5525,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 5518,
											"end": 5519,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5511,
											"end": 5526,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5545,
											"end": 5549,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5542,
											"end": 5543,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5550,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5562,
											"end": 5756,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 5562,
											"end": 5756,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5602,
											"end": 5606,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 5640,
											"end": 5641,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5622,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 5622,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5622,
											"end": 5642,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 5622,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5617,
											"end": 5642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5617,
											"end": 5642,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5656,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 5674,
											"end": 5675,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5656,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 5656,
											"end": 5676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5656,
											"end": 5676,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 5656,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5651,
											"end": 5676,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5651,
											"end": 5676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5700,
											"end": 5701,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 5698,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5693,
											"end": 5702,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5685,
											"end": 5702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5685,
											"end": 5702,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5724,
											"end": 5725,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5718,
											"end": 5722,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5715,
											"end": 5726,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5712,
											"end": 5749,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5712,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 5712,
											"end": 5749,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5729,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 5729,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 5729,
											"end": 5747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5729,
											"end": 5747,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 5729,
											"end": 5747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5712,
											"end": 5749,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 5712,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5562,
											"end": 5756,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5562,
											"end": 5756,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5562,
											"end": 5756,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5562,
											"end": 5756,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5562,
											"end": 5756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5762,
											"end": 5993,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 5762,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5902,
											"end": 5936,
											"name": "PUSH",
											"source": 5,
											"value": "5661756C743A206465706F73697420616D6F756E74206D757374206265206772"
										},
										{
											"begin": 5898,
											"end": 5899,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5890,
											"end": 5896,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5886,
											"end": 5900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5879,
											"end": 5937,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5971,
											"end": 5985,
											"name": "PUSH",
											"source": 5,
											"value": "6561746572207468616E20300000000000000000000000000000000000000000"
										},
										{
											"begin": 5966,
											"end": 5968,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5958,
											"end": 5964,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5954,
											"end": 5969,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5986,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5762,
											"end": 5993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5762,
											"end": 5993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5999,
											"end": 6365,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 5999,
											"end": 6365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6141,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6162,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 6226,
											"end": 6228,
											"name": "PUSH",
											"source": 5,
											"value": "2C"
										},
										{
											"begin": 6221,
											"end": 6224,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6162,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 6162,
											"end": 6229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6162,
											"end": 6229,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 6162,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6155,
											"end": 6229,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6155,
											"end": 6229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6238,
											"end": 6331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 6327,
											"end": 6330,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6238,
											"end": 6331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 6238,
											"end": 6331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6238,
											"end": 6331,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 6238,
											"end": 6331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6356,
											"end": 6358,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6351,
											"end": 6354,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6359,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5999,
											"end": 6365,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5999,
											"end": 6365,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5999,
											"end": 6365,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5999,
											"end": 6365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6371,
											"end": 6790,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 6371,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6537,
											"end": 6541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6575,
											"end": 6577,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6564,
											"end": 6573,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6578,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6624,
											"end": 6633,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6618,
											"end": 6622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6610,
											"end": 6611,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6599,
											"end": 6608,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6595,
											"end": 6612,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6635,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6652,
											"end": 6783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 6778,
											"end": 6782,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6652,
											"end": 6783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 6652,
											"end": 6783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6652,
											"end": 6783,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 6652,
											"end": 6783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6644,
											"end": 6783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6644,
											"end": 6783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6371,
											"end": 6790,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6371,
											"end": 6790,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6371,
											"end": 6790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6371,
											"end": 6790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6796,
											"end": 6987,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6796,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6836,
											"end": 6839,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6855,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 6873,
											"end": 6874,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6855,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 6855,
											"end": 6875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6855,
											"end": 6875,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 6855,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6850,
											"end": 6875,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6850,
											"end": 6875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6889,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 6907,
											"end": 6908,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6889,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 6889,
											"end": 6909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6889,
											"end": 6909,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 6889,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6884,
											"end": 6909,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6884,
											"end": 6909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6932,
											"end": 6933,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6929,
											"end": 6930,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6918,
											"end": 6934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6918,
											"end": 6934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6953,
											"end": 6956,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6950,
											"end": 6951,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6947,
											"end": 6957,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6944,
											"end": 6980,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6944,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 6944,
											"end": 6980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6960,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 6960,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 6960,
											"end": 6978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6960,
											"end": 6978,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 6960,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6944,
											"end": 6980,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 6944,
											"end": 6980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6796,
											"end": 6987,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6796,
											"end": 6987,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6796,
											"end": 6987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6796,
											"end": 6987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6796,
											"end": 6987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6993,
											"end": 7111,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 6993,
											"end": 7111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7080,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 7098,
											"end": 7103,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7080,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 7080,
											"end": 7104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7080,
											"end": 7104,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 7080,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7075,
											"end": 7078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7068,
											"end": 7105,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6993,
											"end": 7111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6993,
											"end": 7111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6993,
											"end": 7111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7117,
											"end": 7449,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 7117,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7238,
											"end": 7242,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7278,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7265,
											"end": 7274,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7261,
											"end": 7279,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7253,
											"end": 7279,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7253,
											"end": 7279,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7289,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 7357,
											"end": 7358,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7346,
											"end": 7355,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7342,
											"end": 7359,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7333,
											"end": 7339,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7289,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 7289,
											"end": 7360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7289,
											"end": 7360,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 7289,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7370,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 7438,
											"end": 7440,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7427,
											"end": 7436,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7423,
											"end": 7441,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7414,
											"end": 7420,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7370,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7370,
											"end": 7442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7370,
											"end": 7442,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 7370,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7117,
											"end": 7449,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7117,
											"end": 7449,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7117,
											"end": 7449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7117,
											"end": 7449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7117,
											"end": 7449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7117,
											"end": 7449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7455,
											"end": 7897,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 7455,
											"end": 7897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7604,
											"end": 7608,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7642,
											"end": 7644,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7631,
											"end": 7640,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7619,
											"end": 7645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7619,
											"end": 7645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7655,
											"end": 7726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 7723,
											"end": 7724,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7712,
											"end": 7721,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7708,
											"end": 7725,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7699,
											"end": 7705,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7655,
											"end": 7726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 7655,
											"end": 7726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7655,
											"end": 7726,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 7655,
											"end": 7726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7736,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 7804,
											"end": 7806,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7802,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7789,
											"end": 7807,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7780,
											"end": 7786,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7736,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 7736,
											"end": 7808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7736,
											"end": 7808,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 7736,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7818,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 7886,
											"end": 7888,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7875,
											"end": 7884,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7871,
											"end": 7889,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7862,
											"end": 7868,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7818,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7818,
											"end": 7890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7818,
											"end": 7890,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 7818,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7455,
											"end": 7897,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7455,
											"end": 7897,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7455,
											"end": 7897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7455,
											"end": 7897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7455,
											"end": 7897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7455,
											"end": 7897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7455,
											"end": 7897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7903,
											"end": 7993,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 7903,
											"end": 7993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7937,
											"end": 7944,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7980,
											"end": 7985,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7973,
											"end": 7986,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7966,
											"end": 7987,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7955,
											"end": 7987,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7955,
											"end": 7987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7903,
											"end": 7993,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7903,
											"end": 7993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7903,
											"end": 7993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7903,
											"end": 7993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7999,
											"end": 8115,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 7999,
											"end": 8115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8069,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 8084,
											"end": 8089,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8069,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 8069,
											"end": 8090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8069,
											"end": 8090,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 8069,
											"end": 8090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8062,
											"end": 8067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8059,
											"end": 8091,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8049,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 8049,
											"end": 8109,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8105,
											"end": 8106,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8102,
											"end": 8103,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8095,
											"end": 8107,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8049,
											"end": 8109,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 8049,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7999,
											"end": 8115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7999,
											"end": 8115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8258,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 8121,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8175,
											"end": 8180,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8206,
											"end": 8212,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8200,
											"end": 8213,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8191,
											"end": 8213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8191,
											"end": 8213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8222,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 8246,
											"end": 8251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8222,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 8222,
											"end": 8252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8222,
											"end": 8252,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 8222,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8258,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8258,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8258,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8258,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8264,
											"end": 8609,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 8264,
											"end": 8609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8380,
											"end": 8382,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8368,
											"end": 8377,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8359,
											"end": 8366,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8355,
											"end": 8378,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8351,
											"end": 8383,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 8348,
											"end": 8467,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8348,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 8348,
											"end": 8467,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8386,
											"end": 8465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 8386,
											"end": 8465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 8386,
											"end": 8465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8386,
											"end": 8465,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 8386,
											"end": 8465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8348,
											"end": 8467,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 8348,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8506,
											"end": 8507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8531,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 8584,
											"end": 8591,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8575,
											"end": 8581,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8564,
											"end": 8573,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8560,
											"end": 8582,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8531,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 8531,
											"end": 8592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8531,
											"end": 8592,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 8531,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8521,
											"end": 8592,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8521,
											"end": 8592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8477,
											"end": 8602,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8264,
											"end": 8609,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8264,
											"end": 8609,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8264,
											"end": 8609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8264,
											"end": 8609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8264,
											"end": 8609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8615,
											"end": 8837,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 8615,
											"end": 8837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8708,
											"end": 8712,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8746,
											"end": 8748,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8735,
											"end": 8744,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8731,
											"end": 8749,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8723,
											"end": 8749,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8723,
											"end": 8749,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 8827,
											"end": 8828,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8816,
											"end": 8825,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8812,
											"end": 8829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8809,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 8759,
											"end": 8830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8830,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 8759,
											"end": 8830,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8615,
											"end": 8837,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8615,
											"end": 8837,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8615,
											"end": 8837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8615,
											"end": 8837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8615,
											"end": 8837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8843,
											"end": 8941,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 8843,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8894,
											"end": 8900,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8928,
											"end": 8933,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8922,
											"end": 8934,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8912,
											"end": 8934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8912,
											"end": 8934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8843,
											"end": 8941,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8843,
											"end": 8941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8843,
											"end": 8941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8843,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8947,
											"end": 9094,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 8947,
											"end": 9094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9048,
											"end": 9059,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9085,
											"end": 9088,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9070,
											"end": 9088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9070,
											"end": 9088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8947,
											"end": 9094,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8947,
											"end": 9094,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8947,
											"end": 9094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8947,
											"end": 9094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8947,
											"end": 9094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9100,
											"end": 9239,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 9100,
											"end": 9239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9189,
											"end": 9195,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9184,
											"end": 9187,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9179,
											"end": 9182,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9173,
											"end": 9196,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 9230,
											"end": 9231,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9221,
											"end": 9227,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9216,
											"end": 9219,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9212,
											"end": 9228,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9205,
											"end": 9232,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9100,
											"end": 9239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9100,
											"end": 9239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9100,
											"end": 9239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9100,
											"end": 9239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9245,
											"end": 9631,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 9245,
											"end": 9631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9349,
											"end": 9352,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9377,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 9409,
											"end": 9414,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9377,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 9377,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9377,
											"end": 9415,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 9377,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9431,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 9512,
											"end": 9518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9507,
											"end": 9510,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9431,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 9431,
											"end": 9519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9431,
											"end": 9519,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 9431,
											"end": 9519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9424,
											"end": 9519,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9424,
											"end": 9519,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 9586,
											"end": 9592,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9581,
											"end": 9584,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9578,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9567,
											"end": 9572,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9563,
											"end": 9579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 9528,
											"end": 9593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9593,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 9528,
											"end": 9593,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9618,
											"end": 9624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9613,
											"end": 9616,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9609,
											"end": 9625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9602,
											"end": 9625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9602,
											"end": 9625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9245,
											"end": 9631,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9245,
											"end": 9631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9245,
											"end": 9631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9245,
											"end": 9631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9245,
											"end": 9631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9637,
											"end": 9908,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 9637,
											"end": 9908,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9767,
											"end": 9770,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9789,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 9878,
											"end": 9881,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9869,
											"end": 9875,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9789,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 9789,
											"end": 9882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9789,
											"end": 9882,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 9789,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9782,
											"end": 9882,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9782,
											"end": 9882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9899,
											"end": 9902,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9892,
											"end": 9902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9892,
											"end": 9902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9637,
											"end": 9908,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9637,
											"end": 9908,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9637,
											"end": 9908,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9637,
											"end": 9908,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9637,
											"end": 9908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"Vault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"accountBalanceOf(address)": "cc4db503",
							"deposit(uint256)": "b6b55f25",
							"erc20()": "785e9e86",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_erc20\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accountBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Vault.sol\":\"Vault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"Vault.sol\":{\"keccak256\":\"0x54c5f5812461f003b396ae78ac2236f64b156e0088b889afd4241c2e55a44b7c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://81f881e36c854bc526ca44e7ccbafce4e882ce5e28e9b2dc607cc184fa083e9b\",\"dweb:/ipfs/Qmdtt8ZfULPpvi3NfmREuNETttqPcAfTX7S6bQStJ2ynTS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 669,
								"contract": "Vault.sol:Vault",
								"label": "erc20",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 673,
								"contract": "Vault.sol:Vault",
								"label": "accountBalanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3022:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3045:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3070:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3093:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3119:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3155:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:1"
									},
									"scope": 113,
									"src": "2997:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3501:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3539:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:1"
									},
									"scope": 113,
									"src": "3485:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3791:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:1"
									},
									"scope": 113,
									"src": "3740:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "2113:1689:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						]
					},
					"id": 404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 78,
							"src": "141:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 116,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "149:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 114,
							"src": "179:60:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 118,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 113,
										"src": "187:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 657,
							"src": "240:51:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 120,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 656,
										"src": "248:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 403,
							"linearizedBaseContracts": [
								403
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 125,
									"libraryName": {
										"id": 123,
										"name": "Address",
										"nameLocations": [
											"781:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 656,
										"src": "781:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:2",
									"typeName": {
										"id": 124,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:2",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 130,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "907:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:2"
									},
									"src": "876:46:2"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:2",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 139,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1043:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1060:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1086:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:2"
									},
									"src": "1004:109:2"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1375:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1405:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 154,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "1427:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "1427:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 156,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 145,
																			"src": "1444:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 157,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "1448:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 158,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 152,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 150,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1385:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:2"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:2",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1325:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 141,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1325:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1325:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1339:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1351:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:2"
									},
									"scope": 403,
									"src": "1303:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1792:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 180,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "1844:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:2",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "1844:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 182,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 169,
																			"src": "1865:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 183,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "1871:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 184,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 173,
																			"src": "1875:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 185,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 178,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 176,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1802:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:2"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:2",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1728:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1728:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1728:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1742:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1756:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1768:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:2"
									},
									"scope": 403,
									"src": "1702:188:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2167:139:2",
										"statements": [
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "2177:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 207,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 205,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2231:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2200:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:2",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "2200:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2262:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2269:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "2278:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 216,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2293:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "2249:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:2"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:2",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2112:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 193,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 192,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2112:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2112:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2126:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2143:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:2"
									},
									"scope": 403,
									"src": "2081:225:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "2607:370:2",
										"statements": [
											{
												"id": 262,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:2",
												"statements": [
													{
														"assignments": [
															233
														],
														"declarations": [
															{
																"constant": false,
																"id": 233,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:2",
																"nodeType": "VariableDeclaration",
																"scope": 262,
																"src": "2641:24:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 232,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 242,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 238,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 236,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 240,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2699:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 234,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2668:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:2",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2668:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "2725:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 244,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2744:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 253,
														"nodeType": "IfStatement",
														"src": "2721:160:2",
														"trueBody": {
															"id": 252,
															"nodeType": "Block",
															"src": "2763:118:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 247,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "2821:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 248,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 233,
																				"src": "2830:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 249,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 229,
																				"src": "2848:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 246,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "2788:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 251,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 255,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2907:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 256,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2914:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 257,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "2923:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 258,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "2942:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 254,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2894:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 261,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:2",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2540:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 223,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2540:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2540:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2554:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2571:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:2"
									},
									"scope": 403,
									"src": "2509:468:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "3373:303:2",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "3383:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 275,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 279,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3426:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:2",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 64,
															"src": "3426:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 281,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "3442:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 282,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "3451:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 277,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:2",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:2"
											},
											{
												"condition": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:2",
													"subExpression": {
														"arguments": [
															{
																"id": 287,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3498:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 288,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "3505:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 286,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "3474:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "IfStatement",
												"src": "3469:201:2",
												"trueBody": {
													"id": 308,
													"nodeType": "Block",
													"src": "3520:150:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 292,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3554:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 295,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "3576:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:2",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "3576:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 297,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 270,
																						"src": "3592:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 299,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 293,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:2",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 291,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3534:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 304,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3639:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 305,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "3646:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 303,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3619:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:2",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3318:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 266,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3318:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3318:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3332:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3349:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:2"
									},
									"scope": 403,
									"src": "3296:380:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "4129:559:2",
										"statements": [
											{
												"assignments": [
													321
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "4478:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 320,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"arguments": [
														{
															"id": 327,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4532:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 324,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "4512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 322,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:2",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "4504:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 330,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4551:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 336,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4589:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 337,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:2",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 339,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 334,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:2",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "4547:135:2",
												"trueBody": {
													"id": 350,
													"nodeType": "Block",
													"src": "4610:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 346,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 315,
																				"src": "4664:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 344,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 343,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "4631:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 349,
															"nodeType": "RevertStatement",
															"src": "4624:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4088:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "4088:6:2"
													},
													"referencedDeclaration": 77,
													"src": "4088:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4102:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:2"
									},
									"scope": 403,
									"src": "4059:629:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "5278:489:2",
										"statements": [
											{
												"assignments": [
													365,
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5574:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 364,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5588:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 366,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"arguments": [
														{
															"id": 373,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5635:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 370,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "5623:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 368,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:2",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 376,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "5657:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 377,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5669:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:2",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 383,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5706:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 384,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 386,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 381,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:2",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 389,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 393,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "5738:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 391,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 363,
												"id": 400,
												"nodeType": "Return",
												"src": "5650:110:2"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5222:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 356,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 355,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "5222:6:2"
													},
													"referencedDeclaration": 77,
													"src": "5222:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5236:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5272:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:2"
									},
									"scope": 403,
									"src": "5189:578:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 404,
							"src": "751:5018:2",
							"usedErrors": [
								130,
								139
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							656
						]
					},
					"id": 657,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 406,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 656,
							"linearizedBaseContracts": [
								656
							],
							"name": "Address",
							"nameLocation": "203:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:3",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 411,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "349:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:3"
									},
									"src": "316:50:3"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:3",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 416,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "475:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:3"
									},
									"src": "452:39:3"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:3",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 419,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:3"
									},
									"src": "591:24:3"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1602:260:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 429,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 427,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 432,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "1640:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"nodeType": "IfStatement",
												"src": "1612:109:3",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "1648:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 437,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 435,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 434,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1669:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 440,
															"nodeType": "RevertStatement",
															"src": "1662:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													444,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "1732:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 443,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 451,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 445,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "1750:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "1772:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:3"
											},
											{
												"condition": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:3",
													"subExpression": {
														"id": 452,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "1798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "1793:63:3",
												"trueBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "1807:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 454,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "1828:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 456,
															"nodeType": "RevertStatement",
															"src": "1821:24:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1550:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1577:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:3"
									},
									"scope": 656,
									"src": "1531:331:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "2794:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2833:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2841:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 470,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2811:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 469,
												"id": 475,
												"nodeType": "Return",
												"src": "2804:45:3"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2727:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2743:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2780:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:3"
									},
									"scope": 656,
									"src": "2705:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3293:279:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 491,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "3331:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3303:108:3",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "3338:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 499,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 497,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 496,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "3359:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 502,
															"nodeType": "RevertStatement",
															"src": "3352:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													506,
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3421:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3435:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 507,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3488:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 509,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3462:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "3481:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3537:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3545:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 519,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3554:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 516,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3510:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 488,
												"id": 521,
												"nodeType": "Return",
												"src": "3503:62:3"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3211:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3227:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3246:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3279:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:3"
									},
									"scope": 656,
									"src": "3180:392:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3811:154:3",
										"statements": [
											{
												"assignments": [
													534,
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3822:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 533,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3836:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 535,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"id": 539,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3881:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3863:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3930:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "3938:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 545,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "3947:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3903:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 532,
												"id": 547,
												"nodeType": "Return",
												"src": "3896:62:3"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3739:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3755:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:3"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3797:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:3"
									},
									"scope": 656,
									"src": "3711:254:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4203:156:3",
										"statements": [
											{
												"assignments": [
													560,
													562
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4214:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 559,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 562,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4228:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 561,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"arguments": [
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4275:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 563,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4255:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4324:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4332:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 571,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4341:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 568,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4297:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 558,
												"id": 573,
												"nodeType": "Return",
												"src": "4290:62:3"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4136:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4152:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:3"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4189:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:3"
									},
									"scope": 656,
									"src": "4106:253:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "4783:424:3",
										"statements": [
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:3",
													"subExpression": {
														"id": 587,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "4798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "4857:344:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 594,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "5045:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 598,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "5071:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:3",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 609,
															"nodeType": "IfStatement",
															"src": "5041:119:3",
															"trueBody": {
																"id": 608,
																"nodeType": "Block",
																"src": "5096:64:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 605,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "5138:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 604,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "5121:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 607,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 610,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "5180:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 586,
															"id": 611,
															"nodeType": "Return",
															"src": "5173:17:3"
														}
													]
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "4793:408:3",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "4807:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 590,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "4829:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 589,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "4821:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4670:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4694:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4716:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4769:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:3"
									},
									"scope": 656,
									"src": "4625:582:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5509:122:3",
										"statements": [
											{
												"condition": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:3",
													"subExpression": {
														"id": 625,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5524:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "5583:42:3",
													"statements": [
														{
															"expression": {
																"id": 632,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "5604:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 624,
															"id": 633,
															"nodeType": "Return",
															"src": "5597:17:3"
														}
													]
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "5519:106:3",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "5533:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "5555:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 627,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "5547:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 630,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:3",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5433:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5447:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:3"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5495:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:3"
									},
									"scope": 656,
									"src": "5407:224:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "5798:461:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 643,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "5874:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "6204:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 649,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6225:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 651,
															"nodeType": "RevertStatement",
															"src": "6218:24:3"
														}
													]
												},
												"id": 653,
												"nodeType": "IfStatement",
												"src": "5870:383:3",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "5897:301:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:3",
																"nodeType": "YulBlock",
																"src": "6055:133:3",
																"statements": [
																	{
																		"nativeSrc": "6073:40:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:3"
																			},
																			"nativeSrc": "6096:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:3",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:3",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:3",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:3"
																					},
																					"nativeSrc": "6137:19:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:3"
																			},
																			"nativeSrc": "6130:44:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:3"
																		},
																		"nativeSrc": "6130:44:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:3",
																	"valueSize": 1
																}
															],
															"id": 647,
															"nodeType": "InlineAssembly",
															"src": "6046:142:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:3",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5760:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:3"
									},
									"scope": 656,
									"src": "5743:516:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 657,
							"src": "195:6066:3",
							"usedErrors": [
								411,
								416,
								419
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:3"
				},
				"id": 3
			},
			"Vault.sol": {
				"ast": {
					"absolutePath": "Vault.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"SafeERC20": [
							403
						],
						"Vault": [
							755
						]
					},
					"id": 756,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 658,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 660,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 78,
							"src": "68:70:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 659,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "76:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 662,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 404,
							"src": "140:82:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 661,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 403,
										"src": "148:9:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Vault",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 755,
							"linearizedBaseContracts": [
								755
							],
							"name": "Vault",
							"nameLocation": "235:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 666,
									"libraryName": {
										"id": 663,
										"name": "SafeERC20",
										"nameLocations": [
											"254:9:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 403,
										"src": "254:9:4"
									},
									"nodeType": "UsingForDirective",
									"src": "248:27:4",
									"typeName": {
										"id": 665,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 664,
											"name": "IERC20",
											"nameLocations": [
												"268:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "268:6:4"
										},
										"referencedDeclaration": 77,
										"src": "268:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "785e9e86",
									"id": 669,
									"mutability": "mutable",
									"name": "erc20",
									"nameLocation": "297:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 755,
									"src": "283:19:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 668,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 667,
											"name": "IERC20",
											"nameLocations": [
												"283:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "283:6:4"
										},
										"referencedDeclaration": 77,
										"src": "283:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc4db503",
									"id": 673,
									"mutability": "mutable",
									"name": "accountBalanceOf",
									"nameLocation": "344:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 755,
									"src": "309:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 672,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 670,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "317:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "309:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 671,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "328:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "398:33:4",
										"statements": [
											{
												"expression": {
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 679,
														"name": "erc20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "409:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 680,
														"name": "_erc20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "417:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "409:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "409:14:4"
											}
										]
									},
									"id": 684,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "_erc20",
												"nameLocation": "390:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "383:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 675,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 674,
														"name": "IERC20",
														"nameLocations": [
															"383:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "383:6:4"
													},
													"referencedDeclaration": 77,
													"src": "383:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "382:15:4"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "398:0:4"
									},
									"scope": 755,
									"src": "371:60:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "480:206:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 690,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "499:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "509:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "499:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5661756c743a206465706f73697420616d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "512:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cf377e1cd57f3c218250c3aaefa03f4b185d0d8d155670289be6be2b2d1134cf",
																"typeString": "literal_string \"Vault: deposit amount must be greater than 0\""
															},
															"value": "Vault: deposit amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cf377e1cd57f3c218250c3aaefa03f4b185d0d8d155670289be6be2b2d1134cf",
																"typeString": "literal_string \"Vault: deposit amount must be greater than 0\""
															}
														],
														"id": 689,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "491:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "491:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "491:68:4"
											},
											{
												"expression": {
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 696,
															"name": "accountBalanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "570:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 699,
														"indexExpression": {
															"expression": {
																"id": 697,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "587:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "591:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "587:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "570:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 700,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "602:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "570:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "570:39:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 706,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "643:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "647:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "643:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 710,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "663:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Vault_$755",
																		"typeString": "contract Vault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Vault_$755",
																		"typeString": "contract Vault"
																	}
																],
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "655:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 708,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "655:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "655:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "670:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 703,
															"name": "erc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "620:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "626:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "620:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "620:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "620:58:4"
											}
										]
									},
									"functionSelector": "b6b55f25",
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "448:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "464:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "456:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "455:17:4"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "480:0:4"
									},
									"scope": 755,
									"src": "439:247:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "736:300:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 722,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 718,
																"src": "755:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "765:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "755:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5661756c743a20776974686472617720616d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "768:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d5d46e1a8c8aa630b32d6247c07e5abac98c176fef37ac7053d0eb89db3b12c9",
																"typeString": "literal_string \"Vault: withdraw amount must be greater than 0\""
															},
															"value": "Vault: withdraw amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d5d46e1a8c8aa630b32d6247c07e5abac98c176fef37ac7053d0eb89db3b12c9",
																"typeString": "literal_string \"Vault: withdraw amount must be greater than 0\""
															}
														],
														"id": 721,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "747:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "747:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "747:69:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 729,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 718,
																"src": "835:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 730,
																	"name": "accountBalanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "846:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 733,
																"indexExpression": {
																	"expression": {
																		"id": 731,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "863:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "867:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "863:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "846:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "835:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5661756c743a20776974686472617720616d6f756e74206d757374206265203c3d206163636f756e742062616c616e6365",
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "876:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2683b0c090bd15174b99e03b4a5ba78f5fdb53dd9677bb0f5593c3959a8904fa",
																"typeString": "literal_string \"Vault: withdraw amount must be <= account balance\""
															},
															"value": "Vault: withdraw amount must be <= account balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2683b0c090bd15174b99e03b4a5ba78f5fdb53dd9677bb0f5593c3959a8904fa",
																"typeString": "literal_string \"Vault: withdraw amount must be <= account balance\""
															}
														],
														"id": 728,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "827:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "827:101:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "827:101:4"
											},
											{
												"expression": {
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 738,
															"name": "accountBalanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "939:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 741,
														"indexExpression": {
															"expression": {
																"id": 739,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "956:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "960:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "956:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "939:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 742,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "971:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "939:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "939:39:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 748,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1008:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1012:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1008:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "1020:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 745,
															"name": "erc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "989:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "995:12:4",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 163,
														"src": "989:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "989:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "989:39:4"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "703:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "720:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "712:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "712:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "711:17:4"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "736:0:4"
									},
									"scope": 755,
									"src": "694:342:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 756,
							"src": "226:817:4",
							"usedErrors": [
								130,
								411,
								416,
								419
							],
							"usedEvents": []
						}
					],
					"src": "40:1003:4"
				},
				"id": 4
			}
		}
	}
}