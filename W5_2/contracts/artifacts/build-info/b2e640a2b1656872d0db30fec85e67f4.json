{
	"id": "b2e640a2b1656872d0db30fec85e67f4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"MasterChef.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity  ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\ninterface ISushi is IERC20 {\r\n    function mint(address _to, uint256 _amount) external;\r\n}\r\n\r\n\r\n// MasterChef is the master of Sushi. He can make Sushi and he is a fair guy.\r\n//\r\n// Note that it's ownable and the owner wields tremendous power. The ownership\r\n// will be transferred to a governance smart contract once SUSHI is sufficiently\r\n// distributed and the community can show to govern itself.\r\n//\r\n// Have fun reading it. Hopefully it's bug-free. God bless.\r\ncontract MasterChef is Ownable(msg.sender) {\r\n    using SafeERC20 for IERC20;\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256 amount; // How many LP tokens the user has provided.\r\n        uint256 rewardDebt; // Reward debt. See explanation below.\r\n        //\r\n        // We do some fancy math here. Basically, any point in time, the amount of SUSHIs\r\n        // entitled to a user but is pending to be distributed is:\r\n        //\r\n        //   pending reward = (user.amount * pool.accSushiPerShare) - user.rewardDebt\r\n        //\r\n        // Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\r\n        //   1. The pool's `accSushiPerShare` (and `lastRewardBlock`) gets updated.\r\n        //   2. User receives the pending reward sent to his/her address.\r\n        //   3. User's `amount` gets updated.\r\n        //   4. User's `rewardDebt` gets updated.\r\n    }\r\n    // Info of each pool.\r\n    struct PoolInfo {\r\n        IERC20 lpToken; // Address of LP token contract.\r\n        uint256 allocPoint; // How many allocation points assigned to this pool. SUSHIs to distribute per block.\r\n        uint256 lastRewardBlock; // Last block number that SUSHIs distribution occurs.\r\n        uint256 accSushiPerShare; // Accumulated SUSHIs per share, times 1e12. See below.\r\n    }\r\n\r\n\r\n    // The SUSHI TOKEN!\r\n    ISushi public sushi;\r\n    // Block number when bonus SUSHI period ends.\r\n    uint256 public bonusEndBlock;\r\n    // SUSHI tokens created per block.\r\n    uint256 public sushiPerBlock; \r\n    // Bonus muliplier for early sushi makers.\r\n    uint256 public constant BONUS_MULTIPLIER = 10;\r\n\r\n    // Info of each pool.\r\n    PoolInfo[] public poolInfo;\r\n    // Info of each user that stakes LP tokens.\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n    // Total allocation poitns. Must be the sum of all allocation points in all pools.\r\n    uint256 public totalAllocPoint = 0;\r\n    // The block number when SUSHI mining starts.\r\n    uint256 public startBlock;\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(\r\n        address indexed user,\r\n        uint256 indexed pid,\r\n        uint256 amount\r\n    );\r\n\r\n    constructor(\r\n        ISushi _sushi,\r\n        uint256 _sushiPerBlock,\r\n        uint256 _startBlock\r\n    ) public {\r\n        sushi = _sushi;\r\n        sushiPerBlock = _sushiPerBlock;\r\n        startBlock = _startBlock;\r\n    }\r\n\r\n    function poolLength() external view returns (uint256) {\r\n        return poolInfo.length;\r\n    }\r\n\r\n    // Add a new lp to the pool. Can only be called by the owner.\r\n    // XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\r\n    function add(\r\n        uint256 _allocPoint,\r\n        IERC20 _lpToken,\r\n        bool _withUpdate\r\n    ) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        uint256 lastRewardBlock =\r\n            block.number > startBlock ? block.number : startBlock;\r\n        totalAllocPoint = totalAllocPoint + _allocPoint;\r\n        poolInfo.push(\r\n            PoolInfo({\r\n                lpToken: _lpToken,\r\n                allocPoint: _allocPoint,\r\n                lastRewardBlock: lastRewardBlock,\r\n                accSushiPerShare: 0\r\n            })\r\n        );\r\n    }\r\n\r\n    // Update the given pool's SUSHI allocation point. Can only be called by the owner.\r\n    function set(\r\n        uint256 _pid,\r\n        uint256 _allocPoint,\r\n        bool _withUpdate\r\n    ) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        totalAllocPoint = totalAllocPoint - poolInfo[_pid].allocPoint + \r\n            _allocPoint;\r\n        poolInfo[_pid].allocPoint = _allocPoint;\r\n    }\r\n\r\n\r\n    // Return reward multiplier over the given _from to _to block.\r\n    function getMultiplier(uint256 _from, uint256 _to)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return _to - _from;\r\n    }\r\n\r\n    // View function to see pending SUSHIs on frontend.\r\n    function pendingSushi(uint256 _pid, address _user)\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 accSushiPerShare = pool.accSushiPerShare;\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r\n            uint256 multiplier =\r\n                getMultiplier(pool.lastRewardBlock, block.number);\r\n            uint256 sushiReward =\r\n                multiplier * sushiPerBlock * pool.allocPoint /\r\n                    totalAllocPoint ;\r\n            accSushiPerShare = accSushiPerShare + ( \r\n                sushiReward * 1e12 /lpSupply\r\n            );\r\n        }\r\n        return user.amount * accSushiPerShare / 1e12 - user.rewardDebt;\r\n    }\r\n\r\n    // Update reward vairables for all pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            updatePool(pid);\r\n        }\r\n    }\r\n\r\n    // Update reward variables of the given pool to be up-to-date.\r\n    function updatePool(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (block.number <= pool.lastRewardBlock) {\r\n            return;\r\n        }\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (lpSupply == 0) {\r\n            pool.lastRewardBlock = block.number;\r\n            return;\r\n        }\r\n        uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n        uint256 sushiReward =\r\n            multiplier * sushiPerBlock * pool.allocPoint/\r\n                totalAllocPoint ;\r\n\r\n        sushi.mint(address(this), sushiReward);\r\n        \r\n        pool.accSushiPerShare = pool.accSushiPerShare + \r\n            ( sushiReward * 1e12 /lpSupply);\r\n\r\n        pool.lastRewardBlock = block.number;\r\n    }\r\n\r\n    // Deposit LP tokens to MasterChef for SUSHI allocation.\r\n    function deposit(uint256 _pid, uint256 _amount) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        updatePool(_pid);\r\n        if (user.amount > 0) {\r\n            uint256 pending =\r\n                user.amount * pool.accSushiPerShare /1e12 - \r\n                    user.rewardDebt ;\r\n            safeSushiTransfer(msg.sender, pending);\r\n        }\r\n        pool.lpToken.safeTransferFrom(\r\n            address(msg.sender),\r\n            address(this),\r\n            _amount\r\n        );\r\n        user.amount = user.amount + _amount;\r\n        user.rewardDebt = user.amount * pool.accSushiPerShare / 1e12 ;\r\n        emit Deposit(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw LP tokens from MasterChef.\r\n    function withdraw(uint256 _pid, uint256 _amount) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        require(user.amount >= _amount, \"withdraw: not good\");\r\n        updatePool(_pid);\r\n        uint256 pending =\r\n            user.amount * pool.accSushiPerShare /1e12  - \r\n                user.rewardDebt\r\n            ;\r\n        safeSushiTransfer(msg.sender, pending);\r\n        user.amount = user.amount - _amount;\r\n        user.rewardDebt = user.amount * pool.accSushiPerShare / 1e12 ;\r\n        pool.lpToken.safeTransfer(address(msg.sender), _amount);\r\n        emit Withdraw(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\r\n    function emergencyWithdraw(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        pool.lpToken.safeTransfer(address(msg.sender), user.amount);\r\n        emit EmergencyWithdraw(msg.sender, _pid, user.amount);\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n    }\r\n\r\n    // Safe sushi transfer function, just in case if rounding error causes pool to not have enough SUSHIs.\r\n    function safeSushiTransfer(address _to, uint256 _amount) internal {\r\n        uint256 sushiBal = sushi.balanceOf(address(this));\r\n        if (_amount > sushiBal) {\r\n            sushi.transfer(_to, sushiBal);\r\n        } else {\r\n            sushi.transfer(_to, _amount);\r\n        }\r\n    }\r\n\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212202e89665000d2f2e0b89ea3e6107edc27927db832c54466ce545ca6595e697fe164736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202e89665000d2f2e0b89ea3e6107edc27927db832c54466ce545ca6595e697fe164736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E DUP10 PUSH7 0x5000D2F2E0B89E LOG3 0xE6 LT PUSH31 0xDC27927DB832C54466CE545CA6595E697FE164736F6C634300081B00330000 ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202e89665000d2f2e0b89ea3e6107edc27927db832c54466ce545ca6595e697fe164736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E DUP10 PUSH7 0x5000D2F2E0B89E LOG3 0xE6 LT PUSH31 0xDC27927DB832C54466CE545CA6595E697FE164736F6C634300081B00330000 ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202e89665000d2f2e0b89ea3e6107edc27927db832c54466ce545ca6595e697fe164736f6c634300081b0033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"MasterChef.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220a2eaa130c2655451bf84a8c44df4cc23b25602b0a88b5a8087ef60ced0343c6d64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a2eaa130c2655451bf84a8c44df4cc23b25602b0a88b5a8087ef60ced0343c6d64736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xEA LOG1 ADDRESS 0xC2 PUSH6 0x5451BF84A8C4 0x4D DELEGATECALL 0xCC 0x23 0xB2 JUMP MUL 0xB0 0xA8 DUP12 GAS DUP1 DUP8 0xEF PUSH1 0xCE 0xD0 CALLVALUE EXTCODECOPY PUSH14 0x64736F6C634300081B0033000000 ",
							"sourceMap": "195:6066:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a2eaa130c2655451bf84a8c44df4cc23b25602b0a88b5a8087ef60ced0343c6d64736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xEA LOG1 ADDRESS 0xC2 PUSH6 0x5451BF84A8C4 0x4D DELEGATECALL 0xCC 0x23 0xB2 JUMP MUL 0xB0 0xA8 DUP12 GAS DUP1 DUP8 0xEF PUSH1 0xCE 0xD0 CALLVALUE EXTCODECOPY PUSH14 0x64736F6C634300081B0033000000 ",
							"sourceMap": "195:6066:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a2eaa130c2655451bf84a8c44df4cc23b25602b0a88b5a8087ef60ced0343c6d64736f6c634300081b0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"MasterChef.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MasterChef.sol": {
				"ISushi": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MasterChef.sol\":\"ISushi\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"MasterChef.sol\":{\"keccak256\":\"0xc7b7cd1b83a4fa57e81c5dce72d65058e537fff008143371b510b667dd61151c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b0455badad2b1c6cd86a8b16a79dd851fe19ab19fb6e5568ebfbcf4c76b113a\",\"dweb:/ipfs/QmVK7AABXNLQSCGDzn3ggeCnwqY2aVop2dyG3LaUAARXSa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MasterChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ISushi",
									"name": "_sushi",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_sushiPerBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BONUS_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_lpToken",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bonusEndBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_from",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_to",
									"type": "uint256"
								}
							],
							"name": "getMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingSushi",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accSushiPerShare",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sushi",
							"outputs": [
								{
									"internalType": "contract ISushi",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sushiPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MasterChef.sol\":713:9210  contract MasterChef is Ownable(msg.sender) {... */\n  mstore(0x40, 0x80)\n    /* \"MasterChef.sol\":2651:2652  0 */\n  0x00\n    /* \"MasterChef.sol\":2618:2652  uint256 public totalAllocPoint = 0 */\n  0x06\n  sstore\n    /* \"MasterChef.sol\":3026:3248  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"MasterChef.sol\":744:754  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"MasterChef.sol\":3158:3164  _sushi */\n  dup3\n    /* \"MasterChef.sol\":3150:3155  sushi */\n  0x01\n  0x00\n    /* \"MasterChef.sol\":3150:3164  sushi = _sushi */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"MasterChef.sol\":3191:3205  _sushiPerBlock */\n  dup2\n    /* \"MasterChef.sol\":3175:3188  sushiPerBlock */\n  0x03\n    /* \"MasterChef.sol\":3175:3205  sushiPerBlock = _sushiPerBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"MasterChef.sol\":3229:3240  _startBlock */\n  dup1\n    /* \"MasterChef.sol\":3216:3226  startBlock */\n  0x07\n    /* \"MasterChef.sol\":3216:3240  startBlock = _startBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"MasterChef.sol\":3026:3248  constructor(... */\n  pop\n  pop\n  pop\n    /* \"MasterChef.sol\":713:9210  contract MasterChef is Ownable(msg.sender) {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_33\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_20:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_35\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_19\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_21:\n    /* \"#utility.yul\":771:809   */\n  tag_37\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_20\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  0x00\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_38:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_22:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_40\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_21\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1094   */\ntag_23:\n    /* \"#utility.yul\":1054:1061   */\n  0x00\n    /* \"#utility.yul\":1083:1088   */\n  dup2\n    /* \"#utility.yul\":1072:1088   */\n  swap1\n  pop\n    /* \"#utility.yul\":1017:1094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1100:1222   */\ntag_24:\n    /* \"#utility.yul\":1173:1197   */\n  tag_43\n    /* \"#utility.yul\":1191:1196   */\n  dup2\n    /* \"#utility.yul\":1173:1197   */\n  tag_23\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1166:1171   */\n  dup2\n    /* \"#utility.yul\":1163:1198   */\n  eq\n    /* \"#utility.yul\":1153:1216   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  0x00\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1153:1216   */\ntag_44:\n    /* \"#utility.yul\":1100:1222   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1228:1371   */\ntag_25:\n    /* \"#utility.yul\":1285:1290   */\n  0x00\n    /* \"#utility.yul\":1316:1322   */\n  dup2\n    /* \"#utility.yul\":1310:1323   */\n  mload\n    /* \"#utility.yul\":1301:1323   */\n  swap1\n  pop\n    /* \"#utility.yul\":1332:1365   */\n  tag_46\n    /* \"#utility.yul\":1359:1364   */\n  dup2\n    /* \"#utility.yul\":1332:1365   */\n  tag_24\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1228:1371   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1377:2068   */\ntag_3:\n    /* \"#utility.yul\":1479:1485   */\n  0x00\n    /* \"#utility.yul\":1487:1493   */\n  0x00\n    /* \"#utility.yul\":1495:1501   */\n  0x00\n    /* \"#utility.yul\":1544:1546   */\n  0x60\n    /* \"#utility.yul\":1532:1541   */\n  dup5\n    /* \"#utility.yul\":1523:1530   */\n  dup7\n    /* \"#utility.yul\":1519:1542   */\n  sub\n    /* \"#utility.yul\":1515:1547   */\n  slt\n    /* \"#utility.yul\":1512:1631   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1550:1629   */\n  tag_49\n  tag_16\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1512:1631   */\ntag_48:\n    /* \"#utility.yul\":1670:1671   */\n  0x00\n    /* \"#utility.yul\":1695:1773   */\n  tag_50\n    /* \"#utility.yul\":1765:1772   */\n  dup7\n    /* \"#utility.yul\":1756:1762   */\n  dup3\n    /* \"#utility.yul\":1745:1754   */\n  dup8\n    /* \"#utility.yul\":1741:1763   */\n  add\n    /* \"#utility.yul\":1695:1773   */\n  tag_22\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1685:1773   */\n  swap4\n  pop\n    /* \"#utility.yul\":1641:1783   */\n  pop\n    /* \"#utility.yul\":1822:1824   */\n  0x20\n    /* \"#utility.yul\":1848:1912   */\n  tag_51\n    /* \"#utility.yul\":1904:1911   */\n  dup7\n    /* \"#utility.yul\":1895:1901   */\n  dup3\n    /* \"#utility.yul\":1884:1893   */\n  dup8\n    /* \"#utility.yul\":1880:1902   */\n  add\n    /* \"#utility.yul\":1848:1912   */\n  tag_25\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1838:1912   */\n  swap3\n  pop\n    /* \"#utility.yul\":1793:1922   */\n  pop\n    /* \"#utility.yul\":1961:1963   */\n  0x40\n    /* \"#utility.yul\":1987:2051   */\n  tag_52\n    /* \"#utility.yul\":2043:2050   */\n  dup7\n    /* \"#utility.yul\":2034:2040   */\n  dup3\n    /* \"#utility.yul\":2023:2032   */\n  dup8\n    /* \"#utility.yul\":2019:2041   */\n  add\n    /* \"#utility.yul\":1987:2051   */\n  tag_25\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1977:2051   */\n  swap2\n  pop\n    /* \"#utility.yul\":1932:2061   */\n  pop\n    /* \"#utility.yul\":1377:2068   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":2074:2192   */\ntag_26:\n    /* \"#utility.yul\":2161:2185   */\n  tag_54\n    /* \"#utility.yul\":2179:2184   */\n  dup2\n    /* \"#utility.yul\":2161:2185   */\n  tag_19\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2156:2159   */\n  dup3\n    /* \"#utility.yul\":2149:2186   */\n  mstore\n    /* \"#utility.yul\":2074:2192   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2198:2420   */\ntag_9:\n    /* \"#utility.yul\":2291:2295   */\n  0x00\n    /* \"#utility.yul\":2329:2331   */\n  0x20\n    /* \"#utility.yul\":2318:2327   */\n  dup3\n    /* \"#utility.yul\":2314:2332   */\n  add\n    /* \"#utility.yul\":2306:2332   */\n  swap1\n  pop\n    /* \"#utility.yul\":2342:2413   */\n  tag_56\n    /* \"#utility.yul\":2410:2411   */\n  0x00\n    /* \"#utility.yul\":2399:2408   */\n  dup4\n    /* \"#utility.yul\":2395:2412   */\n  add\n    /* \"#utility.yul\":2386:2392   */\n  dup5\n    /* \"#utility.yul\":2342:2413   */\n  tag_26\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2198:2420   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"MasterChef.sol\":713:9210  contract MasterChef is Ownable(msg.sender) {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MasterChef.sol\":713:9210  contract MasterChef is Ownable(msg.sender) {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5312ea8e\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8dbb1e3a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xb0bcf42a\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x5312ea8e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x64482f79\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8aa28550\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x1aed6553\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x1aed6553\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x1eaaa045\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x48cd4cb1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x081e3eda\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0a087903\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x195426ec\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"MasterChef.sol\":3256:3351  function poolLength() external view returns (uint256) {... */\n    tag_3:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterChef.sol\":2060:2079  ISushi public sushi */\n    tag_4:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterChef.sol\":2377:2403  PoolInfo[] public poolInfo */\n    tag_5:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterChef.sol\":2618:2652  uint256 public totalAllocPoint = 0 */\n    tag_6:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterChef.sol\":4858:5721  function pendingSushi(uint256 _pid, address _user)... */\n    tag_7:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterChef.sol\":2137:2165  uint256 public bonusEndBlock */\n    tag_8:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterChef.sol\":3520:4122  function add(... */\n    tag_9:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"MasterChef.sol\":7694:8377  function withdraw(uint256 _pid, uint256 _amount) public {... */\n    tag_10:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"MasterChef.sol\":2710:2735  uint256 public startBlock */\n    tag_11:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterChef.sol\":6060:6841  function updatePool(uint256 _pid) public {... */\n    tag_12:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"MasterChef.sol\":8448:8804  function emergencyWithdraw(uint256 _pid) public {... */\n    tag_13:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"MasterChef.sol\":5804:5984  function massUpdatePools() public {... */\n    tag_14:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      stop\n        /* \"MasterChef.sol\":4219:4565  function set(... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      stop\n        /* \"MasterChef.sol\":2296:2341  uint256 public constant BONUS_MULTIPLIER = 10 */\n    tag_17:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_18:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterChef.sol\":4643:4793  function getMultiplier(uint256 _from, uint256 _to)... */\n    tag_19:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterChef.sol\":2459:2523  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_20:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_91\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterChef.sol\":2212:2240  uint256 public sushiPerBlock */\n    tag_21:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterChef.sol\":6911:7642  function deposit(uint256 _pid, uint256 _amount) public {... */\n    tag_22:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n    tag_99:\n      stop\n        /* \"MasterChef.sol\":3256:3351  function poolLength() external view returns (uint256) {... */\n    tag_28:\n        /* \"MasterChef.sol\":3301:3308  uint256 */\n      0x00\n        /* \"MasterChef.sol\":3328:3336  poolInfo */\n      0x04\n        /* \"MasterChef.sol\":3328:3343  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"MasterChef.sol\":3321:3343  return poolInfo.length */\n      swap1\n      pop\n        /* \"MasterChef.sol\":3256:3351  function poolLength() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"MasterChef.sol\":2060:2079  ISushi public sushi */\n    tag_32:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"MasterChef.sol\":2377:2403  PoolInfo[] public poolInfo */\n    tag_38:\n      0x04\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"MasterChef.sol\":2618:2652  uint256 public totalAllocPoint = 0 */\n    tag_42:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"MasterChef.sol\":4858:5721  function pendingSushi(uint256 _pid, address _user)... */\n    tag_47:\n        /* \"MasterChef.sol\":4959:4966  uint256 */\n      0x00\n        /* \"MasterChef.sol\":4984:5005  PoolInfo storage pool */\n      0x00\n        /* \"MasterChef.sol\":5008:5016  poolInfo */\n      0x04\n        /* \"MasterChef.sol\":5017:5021  _pid */\n      dup5\n        /* \"MasterChef.sol\":5008:5022  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_107\n      jumpi\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n    tag_107:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"MasterChef.sol\":4984:5022  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"MasterChef.sol\":5033:5054  UserInfo storage user */\n      0x00\n        /* \"MasterChef.sol\":5057:5065  userInfo */\n      0x05\n        /* \"MasterChef.sol\":5057:5071  userInfo[_pid] */\n      0x00\n        /* \"MasterChef.sol\":5066:5070  _pid */\n      dup7\n        /* \"MasterChef.sol\":5057:5071  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MasterChef.sol\":5057:5078  userInfo[_pid][_user] */\n      0x00\n        /* \"MasterChef.sol\":5072:5077  _user */\n      dup6\n        /* \"MasterChef.sol\":5057:5078  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MasterChef.sol\":5033:5078  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"MasterChef.sol\":5089:5113  uint256 accSushiPerShare */\n      0x00\n        /* \"MasterChef.sol\":5116:5120  pool */\n      dup3\n        /* \"MasterChef.sol\":5116:5137  pool.accSushiPerShare */\n      0x03\n      add\n      sload\n        /* \"MasterChef.sol\":5089:5137  uint256 accSushiPerShare = pool.accSushiPerShare */\n      swap1\n      pop\n        /* \"MasterChef.sol\":5148:5164  uint256 lpSupply */\n      0x00\n        /* \"MasterChef.sol\":5167:5171  pool */\n      dup4\n        /* \"MasterChef.sol\":5167:5179  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MasterChef.sol\":5167:5189  pool.lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"MasterChef.sol\":5198:5202  this */\n      address\n        /* \"MasterChef.sol\":5167:5204  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_111:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"MasterChef.sol\":5148:5204  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"MasterChef.sol\":5234:5238  pool */\n      dup4\n        /* \"MasterChef.sol\":5234:5254  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"MasterChef.sol\":5219:5231  block.number */\n      number\n        /* \"MasterChef.sol\":5219:5254  block.number > pool.lastRewardBlock */\n      gt\n        /* \"MasterChef.sol\":5219:5271  block.number > pool.lastRewardBlock && lpSupply != 0 */\n      dup1\n      iszero\n      tag_116\n      jumpi\n      pop\n        /* \"MasterChef.sol\":5270:5271  0 */\n      0x00\n        /* \"MasterChef.sol\":5258:5266  lpSupply */\n      dup2\n        /* \"MasterChef.sol\":5258:5271  lpSupply != 0 */\n      eq\n      iszero\n        /* \"MasterChef.sol\":5219:5271  block.number > pool.lastRewardBlock && lpSupply != 0 */\n    tag_116:\n        /* \"MasterChef.sol\":5215:5641  if (block.number > pool.lastRewardBlock && lpSupply != 0) {... */\n      iszero\n      tag_117\n      jumpi\n        /* \"MasterChef.sol\":5288:5306  uint256 multiplier */\n      0x00\n        /* \"MasterChef.sol\":5326:5375  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_118\n        /* \"MasterChef.sol\":5340:5344  pool */\n      dup6\n        /* \"MasterChef.sol\":5340:5360  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"MasterChef.sol\":5362:5374  block.number */\n      number\n        /* \"MasterChef.sol\":5326:5339  getMultiplier */\n      tag_86\n        /* \"MasterChef.sol\":5326:5375  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_118:\n        /* \"MasterChef.sol\":5288:5375  uint256 multiplier =... */\n      swap1\n      pop\n        /* \"MasterChef.sol\":5390:5409  uint256 sushiReward */\n      0x00\n        /* \"MasterChef.sol\":5497:5512  totalAllocPoint */\n      sload(0x06)\n        /* \"MasterChef.sol\":5458:5462  pool */\n      dup7\n        /* \"MasterChef.sol\":5458:5473  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"MasterChef.sol\":5442:5455  sushiPerBlock */\n      sload(0x03)\n        /* \"MasterChef.sol\":5429:5439  multiplier */\n      dup5\n        /* \"MasterChef.sol\":5429:5455  multiplier * sushiPerBlock */\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"MasterChef.sol\":5429:5473  multiplier * sushiPerBlock * pool.allocPoint */\n      tag_121\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_121:\n        /* \"MasterChef.sol\":5429:5512  multiplier * sushiPerBlock * pool.allocPoint /... */\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"MasterChef.sol\":5390:5512  uint256 sushiReward =... */\n      swap1\n      pop\n        /* \"MasterChef.sol\":5606:5614  lpSupply */\n      dup3\n        /* \"MasterChef.sol\":5600:5604  1e12 */\n      0xe8d4a51000\n        /* \"MasterChef.sol\":5586:5597  sushiReward */\n      dup3\n        /* \"MasterChef.sol\":5586:5604  sushiReward * 1e12 */\n      tag_124\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_124:\n        /* \"MasterChef.sol\":5586:5614  sushiReward * 1e12 /lpSupply */\n      tag_125\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_125:\n        /* \"MasterChef.sol\":5547:5563  accSushiPerShare */\n      dup5\n        /* \"MasterChef.sol\":5547:5629  accSushiPerShare + ( ... */\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"MasterChef.sol\":5528:5629  accSushiPerShare = accSushiPerShare + ( ... */\n      swap4\n      pop\n        /* \"MasterChef.sol\":5273:5641  {... */\n      pop\n      pop\n        /* \"MasterChef.sol\":5215:5641  if (block.number > pool.lastRewardBlock && lpSupply != 0) {... */\n    tag_117:\n        /* \"MasterChef.sol\":5698:5702  user */\n      dup3\n        /* \"MasterChef.sol\":5698:5713  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"MasterChef.sol\":5691:5695  1e12 */\n      0xe8d4a51000\n        /* \"MasterChef.sol\":5672:5688  accSushiPerShare */\n      dup4\n        /* \"MasterChef.sol\":5658:5662  user */\n      dup6\n        /* \"MasterChef.sol\":5658:5669  user.amount */\n      0x00\n      add\n      sload\n        /* \"MasterChef.sol\":5658:5688  user.amount * accSushiPerShare */\n      tag_128\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_128:\n        /* \"MasterChef.sol\":5658:5695  user.amount * accSushiPerShare / 1e12 */\n      tag_129\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_129:\n        /* \"MasterChef.sol\":5658:5713  user.amount * accSushiPerShare / 1e12 - user.rewardDebt */\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"MasterChef.sol\":5651:5713  return user.amount * accSushiPerShare / 1e12 - user.rewardDebt */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"MasterChef.sol\":4858:5721  function pendingSushi(uint256 _pid, address _user)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MasterChef.sol\":2137:2165  uint256 public bonusEndBlock */\n    tag_50:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"MasterChef.sol\":3520:4122  function add(... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_133:\n        /* \"MasterChef.sol\":3655:3666  _withUpdate */\n      dup1\n        /* \"MasterChef.sol\":3651:3712  if (_withUpdate) {... */\n      iszero\n      tag_136\n      jumpi\n        /* \"MasterChef.sol\":3683:3700  massUpdatePools() */\n      tag_137\n        /* \"MasterChef.sol\":3683:3698  massUpdatePools */\n      tag_70\n        /* \"MasterChef.sol\":3683:3700  massUpdatePools() */\n      jump\t// in\n    tag_137:\n        /* \"MasterChef.sol\":3651:3712  if (_withUpdate) {... */\n    tag_136:\n        /* \"MasterChef.sol\":3722:3745  uint256 lastRewardBlock */\n      0x00\n        /* \"MasterChef.sol\":3776:3786  startBlock */\n      sload(0x07)\n        /* \"MasterChef.sol\":3761:3773  block.number */\n      number\n        /* \"MasterChef.sol\":3761:3786  block.number > startBlock */\n      gt\n        /* \"MasterChef.sol\":3761:3814  block.number > startBlock ? block.number : startBlock */\n      tag_138\n      jumpi\n        /* \"MasterChef.sol\":3804:3814  startBlock */\n      sload(0x07)\n        /* \"MasterChef.sol\":3761:3814  block.number > startBlock ? block.number : startBlock */\n      jump(tag_139)\n    tag_138:\n        /* \"MasterChef.sol\":3789:3801  block.number */\n      number\n        /* \"MasterChef.sol\":3761:3814  block.number > startBlock ? block.number : startBlock */\n    tag_139:\n        /* \"MasterChef.sol\":3722:3814  uint256 lastRewardBlock =... */\n      swap1\n      pop\n        /* \"MasterChef.sol\":3861:3872  _allocPoint */\n      dup4\n        /* \"MasterChef.sol\":3843:3858  totalAllocPoint */\n      sload(0x06)\n        /* \"MasterChef.sol\":3843:3872  totalAllocPoint + _allocPoint */\n      tag_140\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_140:\n        /* \"MasterChef.sol\":3825:3840  totalAllocPoint */\n      0x06\n        /* \"MasterChef.sol\":3825:3872  totalAllocPoint = totalAllocPoint + _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterChef.sol\":3883:3891  poolInfo */\n      0x04\n        /* \"MasterChef.sol\":3911:4103  PoolInfo({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"MasterChef.sol\":3948:3956  _lpToken */\n      dup6\n        /* \"MasterChef.sol\":3911:4103  PoolInfo({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"MasterChef.sol\":3987:3998  _allocPoint */\n      dup7\n        /* \"MasterChef.sol\":3911:4103  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"MasterChef.sol\":4034:4049  lastRewardBlock */\n      dup4\n        /* \"MasterChef.sol\":3911:4103  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"MasterChef.sol\":4086:4087  0 */\n      0x00\n        /* \"MasterChef.sol\":3911:4103  PoolInfo({... */\n      dup2\n      mstore\n      pop\n        /* \"MasterChef.sol\":3883:4114  poolInfo.push(... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      pop\n      pop\n        /* \"MasterChef.sol\":3640:4122  {... */\n      pop\n        /* \"MasterChef.sol\":3520:4122  function add(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MasterChef.sol\":7694:8377  function withdraw(uint256 _pid, uint256 _amount) public {... */\n    tag_59:\n        /* \"MasterChef.sol\":7761:7782  PoolInfo storage pool */\n      0x00\n        /* \"MasterChef.sol\":7785:7793  poolInfo */\n      0x04\n        /* \"MasterChef.sol\":7794:7798  _pid */\n      dup4\n        /* \"MasterChef.sol\":7785:7799  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_143\n      jumpi\n      tag_144\n      tag_109\n      jump\t// in\n    tag_144:\n    tag_143:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"MasterChef.sol\":7761:7799  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"MasterChef.sol\":7810:7831  UserInfo storage user */\n      0x00\n        /* \"MasterChef.sol\":7834:7842  userInfo */\n      0x05\n        /* \"MasterChef.sol\":7834:7848  userInfo[_pid] */\n      0x00\n        /* \"MasterChef.sol\":7843:7847  _pid */\n      dup6\n        /* \"MasterChef.sol\":7834:7848  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MasterChef.sol\":7834:7860  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"MasterChef.sol\":7849:7859  msg.sender */\n      caller\n        /* \"MasterChef.sol\":7834:7860  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MasterChef.sol\":7810:7860  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"MasterChef.sol\":7894:7901  _amount */\n      dup3\n        /* \"MasterChef.sol\":7879:7883  user */\n      dup2\n        /* \"MasterChef.sol\":7879:7890  user.amount */\n      0x00\n      add\n      sload\n        /* \"MasterChef.sol\":7879:7901  user.amount >= _amount */\n      lt\n      iszero\n        /* \"MasterChef.sol\":7871:7924  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"MasterChef.sol\":7935:7951  updatePool(_pid) */\n      tag_149\n        /* \"MasterChef.sol\":7946:7950  _pid */\n      dup5\n        /* \"MasterChef.sol\":7935:7945  updatePool */\n      tag_65\n        /* \"MasterChef.sol\":7935:7951  updatePool(_pid) */\n      jump\t// in\n    tag_149:\n        /* \"MasterChef.sol\":7962:7977  uint256 pending */\n      0x00\n        /* \"MasterChef.sol\":8056:8060  user */\n      dup2\n        /* \"MasterChef.sol\":8056:8071  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"MasterChef.sol\":8030:8034  1e12 */\n      0xe8d4a51000\n        /* \"MasterChef.sol\":8007:8011  pool */\n      dup5\n        /* \"MasterChef.sol\":8007:8028  pool.accSushiPerShare */\n      0x03\n      add\n      sload\n        /* \"MasterChef.sol\":7993:7997  user */\n      dup5\n        /* \"MasterChef.sol\":7993:8004  user.amount */\n      0x00\n      add\n      sload\n        /* \"MasterChef.sol\":7993:8028  user.amount * pool.accSushiPerShare */\n      tag_150\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_150:\n        /* \"MasterChef.sol\":7993:8034  user.amount * pool.accSushiPerShare /1e12 */\n      tag_151\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_151:\n        /* \"MasterChef.sol\":7993:8071  user.amount * pool.accSushiPerShare /1e12  - ... */\n      tag_152\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_152:\n        /* \"MasterChef.sol\":7962:8071  uint256 pending =... */\n      swap1\n      pop\n        /* \"MasterChef.sol\":8096:8134  safeSushiTransfer(msg.sender, pending) */\n      tag_153\n        /* \"MasterChef.sol\":8114:8124  msg.sender */\n      caller\n        /* \"MasterChef.sol\":8126:8133  pending */\n      dup3\n        /* \"MasterChef.sol\":8096:8113  safeSushiTransfer */\n      tag_154\n        /* \"MasterChef.sol\":8096:8134  safeSushiTransfer(msg.sender, pending) */\n      jump\t// in\n    tag_153:\n        /* \"MasterChef.sol\":8173:8180  _amount */\n      dup4\n        /* \"MasterChef.sol\":8159:8163  user */\n      dup3\n        /* \"MasterChef.sol\":8159:8170  user.amount */\n      0x00\n      add\n      sload\n        /* \"MasterChef.sol\":8159:8180  user.amount - _amount */\n      tag_155\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_155:\n        /* \"MasterChef.sol\":8145:8149  user */\n      dup3\n        /* \"MasterChef.sol\":8145:8156  user.amount */\n      0x00\n      add\n        /* \"MasterChef.sol\":8145:8180  user.amount = user.amount - _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterChef.sol\":8247:8251  1e12 */\n      0xe8d4a51000\n        /* \"MasterChef.sol\":8223:8227  pool */\n      dup4\n        /* \"MasterChef.sol\":8223:8244  pool.accSushiPerShare */\n      0x03\n      add\n      sload\n        /* \"MasterChef.sol\":8209:8213  user */\n      dup4\n        /* \"MasterChef.sol\":8209:8220  user.amount */\n      0x00\n      add\n      sload\n        /* \"MasterChef.sol\":8209:8244  user.amount * pool.accSushiPerShare */\n      tag_156\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_156:\n        /* \"MasterChef.sol\":8209:8251  user.amount * pool.accSushiPerShare / 1e12 */\n      tag_157\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_157:\n        /* \"MasterChef.sol\":8191:8195  user */\n      dup3\n        /* \"MasterChef.sol\":8191:8206  user.rewardDebt */\n      0x01\n      add\n        /* \"MasterChef.sol\":8191:8251  user.rewardDebt = user.amount * pool.accSushiPerShare / 1e12 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterChef.sol\":8263:8318  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      tag_158\n        /* \"MasterChef.sol\":8297:8307  msg.sender */\n      caller\n        /* \"MasterChef.sol\":8310:8317  _amount */\n      dup6\n        /* \"MasterChef.sol\":8263:8267  pool */\n      dup6\n        /* \"MasterChef.sol\":8263:8275  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MasterChef.sol\":8263:8288  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_159\n      swap1\n        /* \"MasterChef.sol\":8263:8318  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_158:\n        /* \"MasterChef.sol\":8355:8359  _pid */\n      dup5\n        /* \"MasterChef.sol\":8343:8353  msg.sender */\n      caller\n        /* \"MasterChef.sol\":8334:8369  Withdraw(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"MasterChef.sol\":8361:8368  _amount */\n      dup7\n        /* \"MasterChef.sol\":8334:8369  Withdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_160\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MasterChef.sol\":7750:8377  {... */\n      pop\n      pop\n      pop\n        /* \"MasterChef.sol\":7694:8377  function withdraw(uint256 _pid, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MasterChef.sol\":2710:2735  uint256 public startBlock */\n    tag_61:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"MasterChef.sol\":6060:6841  function updatePool(uint256 _pid) public {... */\n    tag_65:\n        /* \"MasterChef.sol\":6112:6133  PoolInfo storage pool */\n      0x00\n        /* \"MasterChef.sol\":6136:6144  poolInfo */\n      0x04\n        /* \"MasterChef.sol\":6145:6149  _pid */\n      dup3\n        /* \"MasterChef.sol\":6136:6150  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_162\n      jumpi\n      tag_163\n      tag_109\n      jump\t// in\n    tag_163:\n    tag_162:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"MasterChef.sol\":6112:6150  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"MasterChef.sol\":6181:6185  pool */\n      dup1\n        /* \"MasterChef.sol\":6181:6201  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"MasterChef.sol\":6165:6177  block.number */\n      number\n        /* \"MasterChef.sol\":6165:6201  block.number <= pool.lastRewardBlock */\n      gt\n        /* \"MasterChef.sol\":6161:6236  if (block.number <= pool.lastRewardBlock) {... */\n      tag_165\n      jumpi\n        /* \"MasterChef.sol\":6218:6225  return; */\n      pop\n      jump(tag_161)\n        /* \"MasterChef.sol\":6161:6236  if (block.number <= pool.lastRewardBlock) {... */\n    tag_165:\n        /* \"MasterChef.sol\":6246:6262  uint256 lpSupply */\n      0x00\n        /* \"MasterChef.sol\":6265:6269  pool */\n      dup2\n        /* \"MasterChef.sol\":6265:6277  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MasterChef.sol\":6265:6287  pool.lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"MasterChef.sol\":6296:6300  this */\n      address\n        /* \"MasterChef.sol\":6265:6302  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_166:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_169\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_169:\n        /* \"MasterChef.sol\":6246:6302  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"MasterChef.sol\":6329:6330  0 */\n      0x00\n        /* \"MasterChef.sol\":6317:6325  lpSupply */\n      dup2\n        /* \"MasterChef.sol\":6317:6330  lpSupply == 0 */\n      sub\n        /* \"MasterChef.sol\":6313:6415  if (lpSupply == 0) {... */\n      tag_170\n      jumpi\n        /* \"MasterChef.sol\":6370:6382  block.number */\n      number\n        /* \"MasterChef.sol\":6347:6351  pool */\n      dup3\n        /* \"MasterChef.sol\":6347:6367  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"MasterChef.sol\":6347:6382  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterChef.sol\":6397:6404  return; */\n      pop\n      pop\n      jump(tag_161)\n        /* \"MasterChef.sol\":6313:6415  if (lpSupply == 0) {... */\n    tag_170:\n        /* \"MasterChef.sol\":6425:6443  uint256 multiplier */\n      0x00\n        /* \"MasterChef.sol\":6446:6495  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_171\n        /* \"MasterChef.sol\":6460:6464  pool */\n      dup4\n        /* \"MasterChef.sol\":6460:6480  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"MasterChef.sol\":6482:6494  block.number */\n      number\n        /* \"MasterChef.sol\":6446:6459  getMultiplier */\n      tag_86\n        /* \"MasterChef.sol\":6446:6495  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_171:\n        /* \"MasterChef.sol\":6425:6495  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"MasterChef.sol\":6506:6525  uint256 sushiReward */\n      0x00\n        /* \"MasterChef.sol\":6604:6619  totalAllocPoint */\n      sload(0x06)\n        /* \"MasterChef.sol\":6570:6574  pool */\n      dup5\n        /* \"MasterChef.sol\":6570:6585  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"MasterChef.sol\":6554:6567  sushiPerBlock */\n      sload(0x03)\n        /* \"MasterChef.sol\":6541:6551  multiplier */\n      dup5\n        /* \"MasterChef.sol\":6541:6567  multiplier * sushiPerBlock */\n      tag_172\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_172:\n        /* \"MasterChef.sol\":6541:6585  multiplier * sushiPerBlock * pool.allocPoint */\n      tag_173\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_173:\n        /* \"MasterChef.sol\":6541:6619  multiplier * sushiPerBlock * pool.allocPoint/... */\n      tag_174\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_174:\n        /* \"MasterChef.sol\":6506:6619  uint256 sushiReward =... */\n      swap1\n      pop\n        /* \"MasterChef.sol\":6633:6638  sushi */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MasterChef.sol\":6633:6643  sushi.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"MasterChef.sol\":6652:6656  this */\n      address\n        /* \"MasterChef.sol\":6659:6670  sushiReward */\n      dup4\n        /* \"MasterChef.sol\":6633:6671  sushi.mint(address(this), sushiReward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap3\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_177\n      jumpi\n      revert(0x00, 0x00)\n    tag_177:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n        /* \"MasterChef.sol\":6776:6784  lpSupply */\n      dup3\n        /* \"MasterChef.sol\":6770:6774  1e12 */\n      0xe8d4a51000\n        /* \"MasterChef.sol\":6756:6767  sushiReward */\n      dup3\n        /* \"MasterChef.sol\":6756:6774  sushiReward * 1e12 */\n      tag_180\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_180:\n        /* \"MasterChef.sol\":6756:6784  sushiReward * 1e12 /lpSupply */\n      tag_181\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_181:\n        /* \"MasterChef.sol\":6716:6720  pool */\n      dup5\n        /* \"MasterChef.sol\":6716:6737  pool.accSushiPerShare */\n      0x03\n      add\n      sload\n        /* \"MasterChef.sol\":6716:6785  pool.accSushiPerShare + ... */\n      tag_182\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_182:\n        /* \"MasterChef.sol\":6692:6696  pool */\n      dup5\n        /* \"MasterChef.sol\":6692:6713  pool.accSushiPerShare */\n      0x03\n      add\n        /* \"MasterChef.sol\":6692:6785  pool.accSushiPerShare = pool.accSushiPerShare + ... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterChef.sol\":6821:6833  block.number */\n      number\n        /* \"MasterChef.sol\":6798:6802  pool */\n      dup5\n        /* \"MasterChef.sol\":6798:6818  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"MasterChef.sol\":6798:6833  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterChef.sol\":6101:6841  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"MasterChef.sol\":6060:6841  function updatePool(uint256 _pid) public {... */\n    tag_161:\n      pop\n      jump\t// out\n        /* \"MasterChef.sol\":8448:8804  function emergencyWithdraw(uint256 _pid) public {... */\n    tag_68:\n        /* \"MasterChef.sol\":8507:8528  PoolInfo storage pool */\n      0x00\n        /* \"MasterChef.sol\":8531:8539  poolInfo */\n      0x04\n        /* \"MasterChef.sol\":8540:8544  _pid */\n      dup3\n        /* \"MasterChef.sol\":8531:8545  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_184\n      jumpi\n      tag_185\n      tag_109\n      jump\t// in\n    tag_185:\n    tag_184:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"MasterChef.sol\":8507:8545  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"MasterChef.sol\":8556:8577  UserInfo storage user */\n      0x00\n        /* \"MasterChef.sol\":8580:8588  userInfo */\n      0x05\n        /* \"MasterChef.sol\":8580:8594  userInfo[_pid] */\n      0x00\n        /* \"MasterChef.sol\":8589:8593  _pid */\n      dup5\n        /* \"MasterChef.sol\":8580:8594  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MasterChef.sol\":8580:8606  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"MasterChef.sol\":8595:8605  msg.sender */\n      caller\n        /* \"MasterChef.sol\":8580:8606  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MasterChef.sol\":8556:8606  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"MasterChef.sol\":8617:8676  pool.lpToken.safeTransfer(address(msg.sender), user.amount) */\n      tag_187\n        /* \"MasterChef.sol\":8651:8661  msg.sender */\n      caller\n        /* \"MasterChef.sol\":8664:8668  user */\n      dup3\n        /* \"MasterChef.sol\":8664:8675  user.amount */\n      0x00\n      add\n      sload\n        /* \"MasterChef.sol\":8617:8621  pool */\n      dup5\n        /* \"MasterChef.sol\":8617:8629  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MasterChef.sol\":8617:8642  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_159\n      swap1\n        /* \"MasterChef.sol\":8617:8676  pool.lpToken.safeTransfer(address(msg.sender), user.amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_187:\n        /* \"MasterChef.sol\":8722:8726  _pid */\n      dup3\n        /* \"MasterChef.sol\":8710:8720  msg.sender */\n      caller\n        /* \"MasterChef.sol\":8692:8740  EmergencyWithdraw(msg.sender, _pid, user.amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n        /* \"MasterChef.sol\":8728:8732  user */\n      dup4\n        /* \"MasterChef.sol\":8728:8739  user.amount */\n      0x00\n      add\n      sload\n        /* \"MasterChef.sol\":8692:8740  EmergencyWithdraw(msg.sender, _pid, user.amount) */\n      mload(0x40)\n      tag_188\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MasterChef.sol\":8765:8766  0 */\n      0x00\n        /* \"MasterChef.sol\":8751:8755  user */\n      dup2\n        /* \"MasterChef.sol\":8751:8762  user.amount */\n      0x00\n      add\n        /* \"MasterChef.sol\":8751:8766  user.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterChef.sol\":8795:8796  0 */\n      0x00\n        /* \"MasterChef.sol\":8777:8781  user */\n      dup2\n        /* \"MasterChef.sol\":8777:8792  user.rewardDebt */\n      0x01\n      add\n        /* \"MasterChef.sol\":8777:8796  user.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterChef.sol\":8496:8804  {... */\n      pop\n      pop\n        /* \"MasterChef.sol\":8448:8804  function emergencyWithdraw(uint256 _pid) public {... */\n      pop\n      jump\t// out\n        /* \"MasterChef.sol\":5804:5984  function massUpdatePools() public {... */\n    tag_70:\n        /* \"MasterChef.sol\":5849:5863  uint256 length */\n      0x00\n        /* \"MasterChef.sol\":5866:5874  poolInfo */\n      0x04\n        /* \"MasterChef.sol\":5866:5881  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"MasterChef.sol\":5849:5881  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"MasterChef.sol\":5897:5908  uint256 pid */\n      0x00\n        /* \"MasterChef.sol\":5911:5912  0 */\n      0x00\n        /* \"MasterChef.sol\":5897:5912  uint256 pid = 0 */\n      swap1\n      pop\n        /* \"MasterChef.sol\":5892:5977  for (uint256 pid = 0; pid < length; ++pid) {... */\n    tag_190:\n        /* \"MasterChef.sol\":5920:5926  length */\n      dup2\n        /* \"MasterChef.sol\":5914:5917  pid */\n      dup2\n        /* \"MasterChef.sol\":5914:5926  pid < length */\n      lt\n        /* \"MasterChef.sol\":5892:5977  for (uint256 pid = 0; pid < length; ++pid) {... */\n      iszero\n      tag_191\n      jumpi\n        /* \"MasterChef.sol\":5950:5965  updatePool(pid) */\n      tag_193\n        /* \"MasterChef.sol\":5961:5964  pid */\n      dup2\n        /* \"MasterChef.sol\":5950:5960  updatePool */\n      tag_65\n        /* \"MasterChef.sol\":5950:5965  updatePool(pid) */\n      jump\t// in\n    tag_193:\n        /* \"MasterChef.sol\":5928:5933  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"MasterChef.sol\":5892:5977  for (uint256 pid = 0; pid < length; ++pid) {... */\n      jump(tag_190)\n    tag_191:\n      pop\n        /* \"MasterChef.sol\":5838:5984  {... */\n      pop\n        /* \"MasterChef.sol\":5804:5984  function massUpdatePools() public {... */\n      jump\t// out\n        /* \"MasterChef.sol\":4219:4565  function set(... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_195:\n        /* \"MasterChef.sol\":4351:4362  _withUpdate */\n      dup1\n        /* \"MasterChef.sol\":4347:4408  if (_withUpdate) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"MasterChef.sol\":4379:4396  massUpdatePools() */\n      tag_198\n        /* \"MasterChef.sol\":4379:4394  massUpdatePools */\n      tag_70\n        /* \"MasterChef.sol\":4379:4396  massUpdatePools() */\n      jump\t// in\n    tag_198:\n        /* \"MasterChef.sol\":4347:4408  if (_withUpdate) {... */\n    tag_197:\n        /* \"MasterChef.sol\":4496:4507  _allocPoint */\n      dup2\n        /* \"MasterChef.sol\":4454:4462  poolInfo */\n      0x04\n        /* \"MasterChef.sol\":4463:4467  _pid */\n      dup5\n        /* \"MasterChef.sol\":4454:4468  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_199\n      jumpi\n      tag_200\n      tag_109\n      jump\t// in\n    tag_200:\n    tag_199:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"MasterChef.sol\":4454:4479  poolInfo[_pid].allocPoint */\n      0x01\n      add\n      sload\n        /* \"MasterChef.sol\":4436:4451  totalAllocPoint */\n      sload(0x06)\n        /* \"MasterChef.sol\":4436:4479  totalAllocPoint - poolInfo[_pid].allocPoint */\n      tag_202\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_202:\n        /* \"MasterChef.sol\":4436:4507  totalAllocPoint - poolInfo[_pid].allocPoint + ... */\n      tag_203\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_203:\n        /* \"MasterChef.sol\":4418:4433  totalAllocPoint */\n      0x06\n        /* \"MasterChef.sol\":4418:4507  totalAllocPoint = totalAllocPoint - poolInfo[_pid].allocPoint + ... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterChef.sol\":4546:4557  _allocPoint */\n      dup2\n        /* \"MasterChef.sol\":4518:4526  poolInfo */\n      0x04\n        /* \"MasterChef.sol\":4527:4531  _pid */\n      dup5\n        /* \"MasterChef.sol\":4518:4532  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_204\n      jumpi\n      tag_205\n      tag_109\n      jump\t// in\n    tag_205:\n    tag_204:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"MasterChef.sol\":4518:4543  poolInfo[_pid].allocPoint */\n      0x01\n      add\n        /* \"MasterChef.sol\":4518:4557  poolInfo[_pid].allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterChef.sol\":4219:4565  function set(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_208\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_211\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"MasterChef.sol\":2296:2341  uint256 public constant BONUS_MULTIPLIER = 10 */\n    tag_78:\n        /* \"MasterChef.sol\":2339:2341  10 */\n      0x0a\n        /* \"MasterChef.sol\":2296:2341  uint256 public constant BONUS_MULTIPLIER = 10 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"MasterChef.sol\":4643:4793  function getMultiplier(uint256 _from, uint256 _to)... */\n    tag_86:\n        /* \"MasterChef.sol\":4742:4749  uint256 */\n      0x00\n        /* \"MasterChef.sol\":4780:4785  _from */\n      dup3\n        /* \"MasterChef.sol\":4774:4777  _to */\n      dup3\n        /* \"MasterChef.sol\":4774:4785  _to - _from */\n      tag_214\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_214:\n        /* \"MasterChef.sol\":4767:4785  return _to - _from */\n      swap1\n      pop\n        /* \"MasterChef.sol\":4643:4793  function getMultiplier(uint256 _from, uint256 _to)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MasterChef.sol\":2459:2523  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_90:\n      mstore(0x20, 0x05)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"MasterChef.sol\":2212:2240  uint256 public sushiPerBlock */\n    tag_94:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"MasterChef.sol\":6911:7642  function deposit(uint256 _pid, uint256 _amount) public {... */\n    tag_98:\n        /* \"MasterChef.sol\":6977:6998  PoolInfo storage pool */\n      0x00\n        /* \"MasterChef.sol\":7001:7009  poolInfo */\n      0x04\n        /* \"MasterChef.sol\":7010:7014  _pid */\n      dup4\n        /* \"MasterChef.sol\":7001:7015  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_216\n      jumpi\n      tag_217\n      tag_109\n      jump\t// in\n    tag_217:\n    tag_216:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"MasterChef.sol\":6977:7015  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"MasterChef.sol\":7026:7047  UserInfo storage user */\n      0x00\n        /* \"MasterChef.sol\":7050:7058  userInfo */\n      0x05\n        /* \"MasterChef.sol\":7050:7064  userInfo[_pid] */\n      0x00\n        /* \"MasterChef.sol\":7059:7063  _pid */\n      dup6\n        /* \"MasterChef.sol\":7050:7064  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MasterChef.sol\":7050:7076  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"MasterChef.sol\":7065:7075  msg.sender */\n      caller\n        /* \"MasterChef.sol\":7050:7076  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MasterChef.sol\":7026:7076  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"MasterChef.sol\":7087:7103  updatePool(_pid) */\n      tag_219\n        /* \"MasterChef.sol\":7098:7102  _pid */\n      dup5\n        /* \"MasterChef.sol\":7087:7097  updatePool */\n      tag_65\n        /* \"MasterChef.sol\":7087:7103  updatePool(_pid) */\n      jump\t// in\n    tag_219:\n        /* \"MasterChef.sol\":7132:7133  0 */\n      0x00\n        /* \"MasterChef.sol\":7118:7122  user */\n      dup2\n        /* \"MasterChef.sol\":7118:7129  user.amount */\n      0x00\n      add\n      sload\n        /* \"MasterChef.sol\":7118:7133  user.amount > 0 */\n      gt\n        /* \"MasterChef.sol\":7114:7332  if (user.amount > 0) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"MasterChef.sol\":7150:7165  uint256 pending */\n      0x00\n        /* \"MasterChef.sol\":7251:7255  user */\n      dup2\n        /* \"MasterChef.sol\":7251:7266  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"MasterChef.sol\":7222:7226  1e12 */\n      0xe8d4a51000\n        /* \"MasterChef.sol\":7199:7203  pool */\n      dup5\n        /* \"MasterChef.sol\":7199:7220  pool.accSushiPerShare */\n      0x03\n      add\n      sload\n        /* \"MasterChef.sol\":7185:7189  user */\n      dup5\n        /* \"MasterChef.sol\":7185:7196  user.amount */\n      0x00\n      add\n      sload\n        /* \"MasterChef.sol\":7185:7220  user.amount * pool.accSushiPerShare */\n      tag_221\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_221:\n        /* \"MasterChef.sol\":7185:7226  user.amount * pool.accSushiPerShare /1e12 */\n      tag_222\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_222:\n        /* \"MasterChef.sol\":7185:7266  user.amount * pool.accSushiPerShare /1e12 - ... */\n      tag_223\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_223:\n        /* \"MasterChef.sol\":7150:7266  uint256 pending =... */\n      swap1\n      pop\n        /* \"MasterChef.sol\":7282:7320  safeSushiTransfer(msg.sender, pending) */\n      tag_224\n        /* \"MasterChef.sol\":7300:7310  msg.sender */\n      caller\n        /* \"MasterChef.sol\":7312:7319  pending */\n      dup3\n        /* \"MasterChef.sol\":7282:7299  safeSushiTransfer */\n      tag_154\n        /* \"MasterChef.sol\":7282:7320  safeSushiTransfer(msg.sender, pending) */\n      jump\t// in\n    tag_224:\n        /* \"MasterChef.sol\":7135:7332  {... */\n      pop\n        /* \"MasterChef.sol\":7114:7332  if (user.amount > 0) {... */\n    tag_220:\n        /* \"MasterChef.sol\":7342:7466  pool.lpToken.safeTransferFrom(... */\n      tag_225\n        /* \"MasterChef.sol\":7394:7404  msg.sender */\n      caller\n        /* \"MasterChef.sol\":7428:7432  this */\n      address\n        /* \"MasterChef.sol\":7448:7455  _amount */\n      dup6\n        /* \"MasterChef.sol\":7342:7346  pool */\n      dup6\n        /* \"MasterChef.sol\":7342:7354  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MasterChef.sol\":7342:7371  pool.lpToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_226\n      swap1\n        /* \"MasterChef.sol\":7342:7466  pool.lpToken.safeTransferFrom(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_225:\n        /* \"MasterChef.sol\":7505:7512  _amount */\n      dup3\n        /* \"MasterChef.sol\":7491:7495  user */\n      dup2\n        /* \"MasterChef.sol\":7491:7502  user.amount */\n      0x00\n      add\n      sload\n        /* \"MasterChef.sol\":7491:7512  user.amount + _amount */\n      tag_227\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_227:\n        /* \"MasterChef.sol\":7477:7481  user */\n      dup2\n        /* \"MasterChef.sol\":7477:7488  user.amount */\n      0x00\n      add\n        /* \"MasterChef.sol\":7477:7512  user.amount = user.amount + _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterChef.sol\":7579:7583  1e12 */\n      0xe8d4a51000\n        /* \"MasterChef.sol\":7555:7559  pool */\n      dup3\n        /* \"MasterChef.sol\":7555:7576  pool.accSushiPerShare */\n      0x03\n      add\n      sload\n        /* \"MasterChef.sol\":7541:7545  user */\n      dup3\n        /* \"MasterChef.sol\":7541:7552  user.amount */\n      0x00\n      add\n      sload\n        /* \"MasterChef.sol\":7541:7576  user.amount * pool.accSushiPerShare */\n      tag_228\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_228:\n        /* \"MasterChef.sol\":7541:7583  user.amount * pool.accSushiPerShare / 1e12 */\n      tag_229\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_229:\n        /* \"MasterChef.sol\":7523:7527  user */\n      dup2\n        /* \"MasterChef.sol\":7523:7538  user.rewardDebt */\n      0x01\n      add\n        /* \"MasterChef.sol\":7523:7583  user.rewardDebt = user.amount * pool.accSushiPerShare / 1e12 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterChef.sol\":7620:7624  _pid */\n      dup4\n        /* \"MasterChef.sol\":7608:7618  msg.sender */\n      caller\n        /* \"MasterChef.sol\":7600:7634  Deposit(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"MasterChef.sol\":7626:7633  _amount */\n      dup6\n        /* \"MasterChef.sol\":7600:7634  Deposit(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_230\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MasterChef.sol\":6966:7642  {... */\n      pop\n      pop\n        /* \"MasterChef.sol\":6911:7642  function deposit(uint256 _pid, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_232\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_236\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_211\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_238\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_240\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_242\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"MasterChef.sol\":8920:9205  function safeSushiTransfer(address _to, uint256 _amount) internal {... */\n    tag_154:\n        /* \"MasterChef.sol\":8997:9013  uint256 sushiBal */\n      0x00\n        /* \"MasterChef.sol\":9016:9021  sushi */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MasterChef.sol\":9016:9031  sushi.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"MasterChef.sol\":9040:9044  this */\n      address\n        /* \"MasterChef.sol\":9016:9046  sushi.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_245:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_247\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_247:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_248\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_248:\n        /* \"MasterChef.sol\":8997:9046  uint256 sushiBal = sushi.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"MasterChef.sol\":9071:9079  sushiBal */\n      dup1\n        /* \"MasterChef.sol\":9061:9068  _amount */\n      dup3\n        /* \"MasterChef.sol\":9061:9079  _amount > sushiBal */\n      gt\n        /* \"MasterChef.sol\":9057:9198  if (_amount > sushiBal) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"MasterChef.sol\":9096:9101  sushi */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MasterChef.sol\":9096:9110  sushi.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"MasterChef.sol\":9111:9114  _to */\n      dup5\n        /* \"MasterChef.sol\":9116:9124  sushiBal */\n      dup4\n        /* \"MasterChef.sol\":9096:9125  sushi.transfer(_to, sushiBal) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap3\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_250:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_252\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_252:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_253\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n      pop\n        /* \"MasterChef.sol\":9057:9198  if (_amount > sushiBal) {... */\n      jump(tag_255)\n    tag_249:\n        /* \"MasterChef.sol\":9158:9163  sushi */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MasterChef.sol\":9158:9172  sushi.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"MasterChef.sol\":9173:9176  _to */\n      dup5\n        /* \"MasterChef.sol\":9178:9185  _amount */\n      dup5\n        /* \"MasterChef.sol\":9158:9186  sushi.transfer(_to, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap3\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_256:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_258\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_258:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_259\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_259:\n      pop\n        /* \"MasterChef.sol\":9057:9198  if (_amount > sushiBal) {... */\n    tag_255:\n        /* \"MasterChef.sol\":8986:9205  {... */\n      pop\n        /* \"MasterChef.sol\":8920:9205  function safeSushiTransfer(address _to, uint256 _amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_261\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_262\n      swap3\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_267\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_272\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_273\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_274\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_275\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_278\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_279\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_283\n      swap2\n      swap1\n      tag_284\n      jump\t// in\n    tag_283:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_287\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_286)\n    tag_287:\n      0x60\n      swap2\n      pop\n    tag_286:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_288\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_289\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_289:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_292\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_293\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_294)\n    tag_291:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_295\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_295:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_290)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_290:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_299\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:84   */\n    tag_301:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_302:\n        /* \"#utility.yul\":177:201   */\n      tag_340\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_301\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_30:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_342\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_302\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_303:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:634   */\n    tag_304:\n        /* \"#utility.yul\":602:605   */\n      0x00\n        /* \"#utility.yul\":623:628   */\n      dup2\n        /* \"#utility.yul\":616:628   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":640:782   */\n    tag_305:\n        /* \"#utility.yul\":690:699   */\n      0x00\n        /* \"#utility.yul\":723:776   */\n      tag_346\n        /* \"#utility.yul\":741:775   */\n      tag_347\n        /* \"#utility.yul\":750:774   */\n      tag_348\n        /* \"#utility.yul\":768:773   */\n      dup5\n        /* \"#utility.yul\":750:774   */\n      tag_303\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":741:775   */\n      tag_304\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":723:776   */\n      tag_303\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":710:776   */\n      swap1\n      pop\n        /* \"#utility.yul\":640:782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":788:914   */\n    tag_306:\n        /* \"#utility.yul\":838:847   */\n      0x00\n        /* \"#utility.yul\":871:908   */\n      tag_350\n        /* \"#utility.yul\":902:907   */\n      dup3\n        /* \"#utility.yul\":871:908   */\n      tag_305\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":858:908   */\n      swap1\n      pop\n        /* \"#utility.yul\":788:914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":920:1060   */\n    tag_307:\n        /* \"#utility.yul\":984:993   */\n      0x00\n        /* \"#utility.yul\":1017:1054   */\n      tag_352\n        /* \"#utility.yul\":1048:1053   */\n      dup3\n        /* \"#utility.yul\":1017:1054   */\n      tag_306\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":1004:1054   */\n      swap1\n      pop\n        /* \"#utility.yul\":920:1060   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1066:1225   */\n    tag_308:\n        /* \"#utility.yul\":1167:1218   */\n      tag_354\n        /* \"#utility.yul\":1212:1217   */\n      dup2\n        /* \"#utility.yul\":1167:1218   */\n      tag_307\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":1162:1165   */\n      dup3\n        /* \"#utility.yul\":1155:1219   */\n      mstore\n        /* \"#utility.yul\":1066:1225   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1231:1481   */\n    tag_34:\n        /* \"#utility.yul\":1338:1342   */\n      0x00\n        /* \"#utility.yul\":1376:1378   */\n      0x20\n        /* \"#utility.yul\":1365:1374   */\n      dup3\n        /* \"#utility.yul\":1361:1379   */\n      add\n        /* \"#utility.yul\":1353:1379   */\n      swap1\n      pop\n        /* \"#utility.yul\":1389:1474   */\n      tag_356\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1460:1469   */\n      dup4\n        /* \"#utility.yul\":1456:1473   */\n      add\n        /* \"#utility.yul\":1447:1453   */\n      dup5\n        /* \"#utility.yul\":1389:1474   */\n      tag_308\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":1231:1481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1568:1685   */\n    tag_310:\n        /* \"#utility.yul\":1677:1678   */\n      0x00\n        /* \"#utility.yul\":1674:1675   */\n      0x00\n        /* \"#utility.yul\":1667:1679   */\n      revert\n        /* \"#utility.yul\":1814:1936   */\n    tag_312:\n        /* \"#utility.yul\":1887:1911   */\n      tag_361\n        /* \"#utility.yul\":1905:1910   */\n      dup2\n        /* \"#utility.yul\":1887:1911   */\n      tag_301\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":1880:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1912   */\n      eq\n        /* \"#utility.yul\":1867:1930   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":1926:1927   */\n      0x00\n        /* \"#utility.yul\":1923:1924   */\n      0x00\n        /* \"#utility.yul\":1916:1928   */\n      revert\n        /* \"#utility.yul\":1867:1930   */\n    tag_362:\n        /* \"#utility.yul\":1814:1936   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1942:2081   */\n    tag_313:\n        /* \"#utility.yul\":1988:1993   */\n      0x00\n        /* \"#utility.yul\":2026:2032   */\n      dup2\n        /* \"#utility.yul\":2013:2033   */\n      calldataload\n        /* \"#utility.yul\":2004:2033   */\n      swap1\n      pop\n        /* \"#utility.yul\":2042:2075   */\n      tag_364\n        /* \"#utility.yul\":2069:2074   */\n      dup2\n        /* \"#utility.yul\":2042:2075   */\n      tag_312\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":1942:2081   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2087:2416   */\n    tag_37:\n        /* \"#utility.yul\":2146:2152   */\n      0x00\n        /* \"#utility.yul\":2195:2197   */\n      0x20\n        /* \"#utility.yul\":2183:2192   */\n      dup3\n        /* \"#utility.yul\":2174:2181   */\n      dup5\n        /* \"#utility.yul\":2170:2193   */\n      sub\n        /* \"#utility.yul\":2166:2198   */\n      slt\n        /* \"#utility.yul\":2163:2282   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":2201:2280   */\n      tag_367\n      tag_310\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":2163:2282   */\n    tag_366:\n        /* \"#utility.yul\":2321:2322   */\n      0x00\n        /* \"#utility.yul\":2346:2399   */\n      tag_368\n        /* \"#utility.yul\":2391:2398   */\n      dup5\n        /* \"#utility.yul\":2382:2388   */\n      dup3\n        /* \"#utility.yul\":2371:2380   */\n      dup6\n        /* \"#utility.yul\":2367:2389   */\n      add\n        /* \"#utility.yul\":2346:2399   */\n      tag_313\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":2336:2399   */\n      swap2\n      pop\n        /* \"#utility.yul\":2292:2409   */\n      pop\n        /* \"#utility.yul\":2087:2416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2422:2562   */\n    tag_314:\n        /* \"#utility.yul\":2486:2495   */\n      0x00\n        /* \"#utility.yul\":2519:2556   */\n      tag_370\n        /* \"#utility.yul\":2550:2555   */\n      dup3\n        /* \"#utility.yul\":2519:2556   */\n      tag_306\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":2506:2556   */\n      swap1\n      pop\n        /* \"#utility.yul\":2422:2562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2568:2727   */\n    tag_315:\n        /* \"#utility.yul\":2669:2720   */\n      tag_372\n        /* \"#utility.yul\":2714:2719   */\n      dup2\n        /* \"#utility.yul\":2669:2720   */\n      tag_314\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":2664:2667   */\n      dup3\n        /* \"#utility.yul\":2657:2721   */\n      mstore\n        /* \"#utility.yul\":2568:2727   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2733:3314   */\n    tag_40:\n        /* \"#utility.yul\":2924:2928   */\n      0x00\n        /* \"#utility.yul\":2962:2965   */\n      0x80\n        /* \"#utility.yul\":2951:2960   */\n      dup3\n        /* \"#utility.yul\":2947:2966   */\n      add\n        /* \"#utility.yul\":2939:2966   */\n      swap1\n      pop\n        /* \"#utility.yul\":2976:3061   */\n      tag_374\n        /* \"#utility.yul\":3058:3059   */\n      0x00\n        /* \"#utility.yul\":3047:3056   */\n      dup4\n        /* \"#utility.yul\":3043:3060   */\n      add\n        /* \"#utility.yul\":3034:3040   */\n      dup8\n        /* \"#utility.yul\":2976:3061   */\n      tag_315\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":3071:3143   */\n      tag_375\n        /* \"#utility.yul\":3139:3141   */\n      0x20\n        /* \"#utility.yul\":3128:3137   */\n      dup4\n        /* \"#utility.yul\":3124:3142   */\n      add\n        /* \"#utility.yul\":3115:3121   */\n      dup7\n        /* \"#utility.yul\":3071:3143   */\n      tag_302\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":3153:3225   */\n      tag_376\n        /* \"#utility.yul\":3221:3223   */\n      0x40\n        /* \"#utility.yul\":3210:3219   */\n      dup4\n        /* \"#utility.yul\":3206:3224   */\n      add\n        /* \"#utility.yul\":3197:3203   */\n      dup6\n        /* \"#utility.yul\":3153:3225   */\n      tag_302\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":3235:3307   */\n      tag_377\n        /* \"#utility.yul\":3303:3305   */\n      0x60\n        /* \"#utility.yul\":3292:3301   */\n      dup4\n        /* \"#utility.yul\":3288:3306   */\n      add\n        /* \"#utility.yul\":3279:3285   */\n      dup5\n        /* \"#utility.yul\":3235:3307   */\n      tag_302\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":2733:3314   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3320:3416   */\n    tag_316:\n        /* \"#utility.yul\":3357:3364   */\n      0x00\n        /* \"#utility.yul\":3386:3410   */\n      tag_379\n        /* \"#utility.yul\":3404:3409   */\n      dup3\n        /* \"#utility.yul\":3386:3410   */\n      tag_303\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":3375:3410   */\n      swap1\n      pop\n        /* \"#utility.yul\":3320:3416   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3422:3544   */\n    tag_317:\n        /* \"#utility.yul\":3495:3519   */\n      tag_381\n        /* \"#utility.yul\":3513:3518   */\n      dup2\n        /* \"#utility.yul\":3495:3519   */\n      tag_316\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":3488:3493   */\n      dup2\n        /* \"#utility.yul\":3485:3520   */\n      eq\n        /* \"#utility.yul\":3475:3538   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":3534:3535   */\n      0x00\n        /* \"#utility.yul\":3531:3532   */\n      0x00\n        /* \"#utility.yul\":3524:3536   */\n      revert\n        /* \"#utility.yul\":3475:3538   */\n    tag_382:\n        /* \"#utility.yul\":3422:3544   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3550:3689   */\n    tag_318:\n        /* \"#utility.yul\":3596:3601   */\n      0x00\n        /* \"#utility.yul\":3634:3640   */\n      dup2\n        /* \"#utility.yul\":3621:3641   */\n      calldataload\n        /* \"#utility.yul\":3612:3641   */\n      swap1\n      pop\n        /* \"#utility.yul\":3650:3683   */\n      tag_384\n        /* \"#utility.yul\":3677:3682   */\n      dup2\n        /* \"#utility.yul\":3650:3683   */\n      tag_317\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":3550:3689   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3695:4169   */\n    tag_46:\n        /* \"#utility.yul\":3763:3769   */\n      0x00\n        /* \"#utility.yul\":3771:3777   */\n      0x00\n        /* \"#utility.yul\":3820:3822   */\n      0x40\n        /* \"#utility.yul\":3808:3817   */\n      dup4\n        /* \"#utility.yul\":3799:3806   */\n      dup6\n        /* \"#utility.yul\":3795:3818   */\n      sub\n        /* \"#utility.yul\":3791:3823   */\n      slt\n        /* \"#utility.yul\":3788:3907   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":3826:3905   */\n      tag_387\n      tag_310\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":3788:3907   */\n    tag_386:\n        /* \"#utility.yul\":3946:3947   */\n      0x00\n        /* \"#utility.yul\":3971:4024   */\n      tag_388\n        /* \"#utility.yul\":4016:4023   */\n      dup6\n        /* \"#utility.yul\":4007:4013   */\n      dup3\n        /* \"#utility.yul\":3996:4005   */\n      dup7\n        /* \"#utility.yul\":3992:4014   */\n      add\n        /* \"#utility.yul\":3971:4024   */\n      tag_313\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":3961:4024   */\n      swap3\n      pop\n        /* \"#utility.yul\":3917:4034   */\n      pop\n        /* \"#utility.yul\":4073:4075   */\n      0x20\n        /* \"#utility.yul\":4099:4152   */\n      tag_389\n        /* \"#utility.yul\":4144:4151   */\n      dup6\n        /* \"#utility.yul\":4135:4141   */\n      dup3\n        /* \"#utility.yul\":4124:4133   */\n      dup7\n        /* \"#utility.yul\":4120:4142   */\n      add\n        /* \"#utility.yul\":4099:4152   */\n      tag_318\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":4089:4152   */\n      swap2\n      pop\n        /* \"#utility.yul\":4044:4162   */\n      pop\n        /* \"#utility.yul\":3695:4169   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4175:4285   */\n    tag_319:\n        /* \"#utility.yul\":4226:4233   */\n      0x00\n        /* \"#utility.yul\":4255:4279   */\n      tag_391\n        /* \"#utility.yul\":4273:4278   */\n      dup3\n        /* \"#utility.yul\":4255:4279   */\n      tag_316\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":4244:4279   */\n      swap1\n      pop\n        /* \"#utility.yul\":4175:4285   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4291:4441   */\n    tag_320:\n        /* \"#utility.yul\":4378:4416   */\n      tag_393\n        /* \"#utility.yul\":4410:4415   */\n      dup2\n        /* \"#utility.yul\":4378:4416   */\n      tag_319\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":4371:4376   */\n      dup2\n        /* \"#utility.yul\":4368:4417   */\n      eq\n        /* \"#utility.yul\":4358:4435   */\n      tag_394\n      jumpi\n        /* \"#utility.yul\":4431:4432   */\n      0x00\n        /* \"#utility.yul\":4428:4429   */\n      0x00\n        /* \"#utility.yul\":4421:4433   */\n      revert\n        /* \"#utility.yul\":4358:4435   */\n    tag_394:\n        /* \"#utility.yul\":4291:4441   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4447:4614   */\n    tag_321:\n        /* \"#utility.yul\":4507:4512   */\n      0x00\n        /* \"#utility.yul\":4545:4551   */\n      dup2\n        /* \"#utility.yul\":4532:4552   */\n      calldataload\n        /* \"#utility.yul\":4523:4552   */\n      swap1\n      pop\n        /* \"#utility.yul\":4561:4608   */\n      tag_396\n        /* \"#utility.yul\":4602:4607   */\n      dup2\n        /* \"#utility.yul\":4561:4608   */\n      tag_320\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":4447:4614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4620:4710   */\n    tag_322:\n        /* \"#utility.yul\":4654:4661   */\n      0x00\n        /* \"#utility.yul\":4697:4702   */\n      dup2\n        /* \"#utility.yul\":4690:4703   */\n      iszero\n        /* \"#utility.yul\":4683:4704   */\n      iszero\n        /* \"#utility.yul\":4672:4704   */\n      swap1\n      pop\n        /* \"#utility.yul\":4620:4710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4716:4832   */\n    tag_323:\n        /* \"#utility.yul\":4786:4807   */\n      tag_399\n        /* \"#utility.yul\":4801:4806   */\n      dup2\n        /* \"#utility.yul\":4786:4807   */\n      tag_322\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4779:4784   */\n      dup2\n        /* \"#utility.yul\":4776:4808   */\n      eq\n        /* \"#utility.yul\":4766:4826   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":4822:4823   */\n      0x00\n        /* \"#utility.yul\":4819:4820   */\n      0x00\n        /* \"#utility.yul\":4812:4824   */\n      revert\n        /* \"#utility.yul\":4766:4826   */\n    tag_400:\n        /* \"#utility.yul\":4716:4832   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4838:4971   */\n    tag_324:\n        /* \"#utility.yul\":4881:4886   */\n      0x00\n        /* \"#utility.yul\":4919:4925   */\n      dup2\n        /* \"#utility.yul\":4906:4926   */\n      calldataload\n        /* \"#utility.yul\":4897:4926   */\n      swap1\n      pop\n        /* \"#utility.yul\":4935:4965   */\n      tag_402\n        /* \"#utility.yul\":4959:4964   */\n      dup2\n        /* \"#utility.yul\":4935:4965   */\n      tag_323\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":4838:4971   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4977:5618   */\n    tag_54:\n        /* \"#utility.yul\":5065:5071   */\n      0x00\n        /* \"#utility.yul\":5073:5079   */\n      0x00\n        /* \"#utility.yul\":5081:5087   */\n      0x00\n        /* \"#utility.yul\":5130:5132   */\n      0x60\n        /* \"#utility.yul\":5118:5127   */\n      dup5\n        /* \"#utility.yul\":5109:5116   */\n      dup7\n        /* \"#utility.yul\":5105:5128   */\n      sub\n        /* \"#utility.yul\":5101:5133   */\n      slt\n        /* \"#utility.yul\":5098:5217   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":5136:5215   */\n      tag_405\n      tag_310\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":5098:5217   */\n    tag_404:\n        /* \"#utility.yul\":5256:5257   */\n      0x00\n        /* \"#utility.yul\":5281:5334   */\n      tag_406\n        /* \"#utility.yul\":5326:5333   */\n      dup7\n        /* \"#utility.yul\":5317:5323   */\n      dup3\n        /* \"#utility.yul\":5306:5315   */\n      dup8\n        /* \"#utility.yul\":5302:5324   */\n      add\n        /* \"#utility.yul\":5281:5334   */\n      tag_313\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":5271:5334   */\n      swap4\n      pop\n        /* \"#utility.yul\":5227:5344   */\n      pop\n        /* \"#utility.yul\":5383:5385   */\n      0x20\n        /* \"#utility.yul\":5409:5476   */\n      tag_407\n        /* \"#utility.yul\":5468:5475   */\n      dup7\n        /* \"#utility.yul\":5459:5465   */\n      dup3\n        /* \"#utility.yul\":5448:5457   */\n      dup8\n        /* \"#utility.yul\":5444:5466   */\n      add\n        /* \"#utility.yul\":5409:5476   */\n      tag_321\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":5399:5476   */\n      swap3\n      pop\n        /* \"#utility.yul\":5354:5486   */\n      pop\n        /* \"#utility.yul\":5525:5527   */\n      0x40\n        /* \"#utility.yul\":5551:5601   */\n      tag_408\n        /* \"#utility.yul\":5593:5600   */\n      dup7\n        /* \"#utility.yul\":5584:5590   */\n      dup3\n        /* \"#utility.yul\":5573:5582   */\n      dup8\n        /* \"#utility.yul\":5569:5591   */\n      add\n        /* \"#utility.yul\":5551:5601   */\n      tag_324\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":5541:5601   */\n      swap2\n      pop\n        /* \"#utility.yul\":5496:5611   */\n      pop\n        /* \"#utility.yul\":4977:5618   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5624:6098   */\n    tag_58:\n        /* \"#utility.yul\":5692:5698   */\n      0x00\n        /* \"#utility.yul\":5700:5706   */\n      0x00\n        /* \"#utility.yul\":5749:5751   */\n      0x40\n        /* \"#utility.yul\":5737:5746   */\n      dup4\n        /* \"#utility.yul\":5728:5735   */\n      dup6\n        /* \"#utility.yul\":5724:5747   */\n      sub\n        /* \"#utility.yul\":5720:5752   */\n      slt\n        /* \"#utility.yul\":5717:5836   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":5755:5834   */\n      tag_411\n      tag_310\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":5717:5836   */\n    tag_410:\n        /* \"#utility.yul\":5875:5876   */\n      0x00\n        /* \"#utility.yul\":5900:5953   */\n      tag_412\n        /* \"#utility.yul\":5945:5952   */\n      dup6\n        /* \"#utility.yul\":5936:5942   */\n      dup3\n        /* \"#utility.yul\":5925:5934   */\n      dup7\n        /* \"#utility.yul\":5921:5943   */\n      add\n        /* \"#utility.yul\":5900:5953   */\n      tag_313\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":5890:5953   */\n      swap3\n      pop\n        /* \"#utility.yul\":5846:5963   */\n      pop\n        /* \"#utility.yul\":6002:6004   */\n      0x20\n        /* \"#utility.yul\":6028:6081   */\n      tag_413\n        /* \"#utility.yul\":6073:6080   */\n      dup6\n        /* \"#utility.yul\":6064:6070   */\n      dup3\n        /* \"#utility.yul\":6053:6062   */\n      dup7\n        /* \"#utility.yul\":6049:6071   */\n      add\n        /* \"#utility.yul\":6028:6081   */\n      tag_313\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":6018:6081   */\n      swap2\n      pop\n        /* \"#utility.yul\":5973:6091   */\n      pop\n        /* \"#utility.yul\":5624:6098   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6104:6717   */\n    tag_73:\n        /* \"#utility.yul\":6178:6184   */\n      0x00\n        /* \"#utility.yul\":6186:6192   */\n      0x00\n        /* \"#utility.yul\":6194:6200   */\n      0x00\n        /* \"#utility.yul\":6243:6245   */\n      0x60\n        /* \"#utility.yul\":6231:6240   */\n      dup5\n        /* \"#utility.yul\":6222:6229   */\n      dup7\n        /* \"#utility.yul\":6218:6241   */\n      sub\n        /* \"#utility.yul\":6214:6246   */\n      slt\n        /* \"#utility.yul\":6211:6330   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":6249:6328   */\n      tag_416\n      tag_310\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":6211:6330   */\n    tag_415:\n        /* \"#utility.yul\":6369:6370   */\n      0x00\n        /* \"#utility.yul\":6394:6447   */\n      tag_417\n        /* \"#utility.yul\":6439:6446   */\n      dup7\n        /* \"#utility.yul\":6430:6436   */\n      dup3\n        /* \"#utility.yul\":6419:6428   */\n      dup8\n        /* \"#utility.yul\":6415:6437   */\n      add\n        /* \"#utility.yul\":6394:6447   */\n      tag_313\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":6384:6447   */\n      swap4\n      pop\n        /* \"#utility.yul\":6340:6457   */\n      pop\n        /* \"#utility.yul\":6496:6498   */\n      0x20\n        /* \"#utility.yul\":6522:6575   */\n      tag_418\n        /* \"#utility.yul\":6567:6574   */\n      dup7\n        /* \"#utility.yul\":6558:6564   */\n      dup3\n        /* \"#utility.yul\":6547:6556   */\n      dup8\n        /* \"#utility.yul\":6543:6565   */\n      add\n        /* \"#utility.yul\":6522:6575   */\n      tag_313\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":6512:6575   */\n      swap3\n      pop\n        /* \"#utility.yul\":6467:6585   */\n      pop\n        /* \"#utility.yul\":6624:6626   */\n      0x40\n        /* \"#utility.yul\":6650:6700   */\n      tag_419\n        /* \"#utility.yul\":6692:6699   */\n      dup7\n        /* \"#utility.yul\":6683:6689   */\n      dup3\n        /* \"#utility.yul\":6672:6681   */\n      dup8\n        /* \"#utility.yul\":6668:6690   */\n      add\n        /* \"#utility.yul\":6650:6700   */\n      tag_324\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":6640:6700   */\n      swap2\n      pop\n        /* \"#utility.yul\":6595:6710   */\n      pop\n        /* \"#utility.yul\":6104:6717   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6723:6841   */\n    tag_325:\n        /* \"#utility.yul\":6810:6834   */\n      tag_421\n        /* \"#utility.yul\":6828:6833   */\n      dup2\n        /* \"#utility.yul\":6810:6834   */\n      tag_316\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":6805:6808   */\n      dup3\n        /* \"#utility.yul\":6798:6835   */\n      mstore\n        /* \"#utility.yul\":6723:6841   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6847:7069   */\n    tag_83:\n        /* \"#utility.yul\":6940:6944   */\n      0x00\n        /* \"#utility.yul\":6978:6980   */\n      0x20\n        /* \"#utility.yul\":6967:6976   */\n      dup3\n        /* \"#utility.yul\":6963:6981   */\n      add\n        /* \"#utility.yul\":6955:6981   */\n      swap1\n      pop\n        /* \"#utility.yul\":6991:7062   */\n      tag_423\n        /* \"#utility.yul\":7059:7060   */\n      0x00\n        /* \"#utility.yul\":7048:7057   */\n      dup4\n        /* \"#utility.yul\":7044:7061   */\n      add\n        /* \"#utility.yul\":7035:7041   */\n      dup5\n        /* \"#utility.yul\":6991:7062   */\n      tag_325\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":6847:7069   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7075:7407   */\n    tag_92:\n        /* \"#utility.yul\":7196:7200   */\n      0x00\n        /* \"#utility.yul\":7234:7236   */\n      0x40\n        /* \"#utility.yul\":7223:7232   */\n      dup3\n        /* \"#utility.yul\":7219:7237   */\n      add\n        /* \"#utility.yul\":7211:7237   */\n      swap1\n      pop\n        /* \"#utility.yul\":7247:7318   */\n      tag_425\n        /* \"#utility.yul\":7315:7316   */\n      0x00\n        /* \"#utility.yul\":7304:7313   */\n      dup4\n        /* \"#utility.yul\":7300:7317   */\n      add\n        /* \"#utility.yul\":7291:7297   */\n      dup6\n        /* \"#utility.yul\":7247:7318   */\n      tag_302\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":7328:7400   */\n      tag_426\n        /* \"#utility.yul\":7396:7398   */\n      0x20\n        /* \"#utility.yul\":7385:7394   */\n      dup4\n        /* \"#utility.yul\":7381:7399   */\n      add\n        /* \"#utility.yul\":7372:7378   */\n      dup5\n        /* \"#utility.yul\":7328:7400   */\n      tag_302\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":7075:7407   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7413:7742   */\n    tag_101:\n        /* \"#utility.yul\":7472:7478   */\n      0x00\n        /* \"#utility.yul\":7521:7523   */\n      0x20\n        /* \"#utility.yul\":7509:7518   */\n      dup3\n        /* \"#utility.yul\":7500:7507   */\n      dup5\n        /* \"#utility.yul\":7496:7519   */\n      sub\n        /* \"#utility.yul\":7492:7524   */\n      slt\n        /* \"#utility.yul\":7489:7608   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":7527:7606   */\n      tag_429\n      tag_310\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":7489:7608   */\n    tag_428:\n        /* \"#utility.yul\":7647:7648   */\n      0x00\n        /* \"#utility.yul\":7672:7725   */\n      tag_430\n        /* \"#utility.yul\":7717:7724   */\n      dup5\n        /* \"#utility.yul\":7708:7714   */\n      dup3\n        /* \"#utility.yul\":7697:7706   */\n      dup6\n        /* \"#utility.yul\":7693:7715   */\n      add\n        /* \"#utility.yul\":7672:7725   */\n      tag_318\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":7662:7725   */\n      swap2\n      pop\n        /* \"#utility.yul\":7618:7735   */\n      pop\n        /* \"#utility.yul\":7413:7742   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7748:7928   */\n    tag_109:\n        /* \"#utility.yul\":7796:7873   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7793:7794   */\n      0x00\n        /* \"#utility.yul\":7786:7874   */\n      mstore\n        /* \"#utility.yul\":7893:7897   */\n      0x32\n        /* \"#utility.yul\":7890:7891   */\n      0x04\n        /* \"#utility.yul\":7883:7898   */\n      mstore\n        /* \"#utility.yul\":7917:7921   */\n      0x24\n        /* \"#utility.yul\":7914:7915   */\n      0x00\n        /* \"#utility.yul\":7907:7922   */\n      revert\n        /* \"#utility.yul\":7934:8077   */\n    tag_326:\n        /* \"#utility.yul\":7991:7996   */\n      0x00\n        /* \"#utility.yul\":8022:8028   */\n      dup2\n        /* \"#utility.yul\":8016:8029   */\n      mload\n        /* \"#utility.yul\":8007:8029   */\n      swap1\n      pop\n        /* \"#utility.yul\":8038:8071   */\n      tag_433\n        /* \"#utility.yul\":8065:8070   */\n      dup2\n        /* \"#utility.yul\":8038:8071   */\n      tag_312\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":7934:8077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8083:8434   */\n    tag_115:\n        /* \"#utility.yul\":8153:8159   */\n      0x00\n        /* \"#utility.yul\":8202:8204   */\n      0x20\n        /* \"#utility.yul\":8190:8199   */\n      dup3\n        /* \"#utility.yul\":8181:8188   */\n      dup5\n        /* \"#utility.yul\":8177:8200   */\n      sub\n        /* \"#utility.yul\":8173:8205   */\n      slt\n        /* \"#utility.yul\":8170:8289   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":8208:8287   */\n      tag_436\n      tag_310\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":8170:8289   */\n    tag_435:\n        /* \"#utility.yul\":8328:8329   */\n      0x00\n        /* \"#utility.yul\":8353:8417   */\n      tag_437\n        /* \"#utility.yul\":8409:8416   */\n      dup5\n        /* \"#utility.yul\":8400:8406   */\n      dup3\n        /* \"#utility.yul\":8389:8398   */\n      dup6\n        /* \"#utility.yul\":8385:8407   */\n      add\n        /* \"#utility.yul\":8353:8417   */\n      tag_326\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":8343:8417   */\n      swap2\n      pop\n        /* \"#utility.yul\":8299:8427   */\n      pop\n        /* \"#utility.yul\":8083:8434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8440:8620   */\n    tag_327:\n        /* \"#utility.yul\":8488:8565   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8485:8486   */\n      0x00\n        /* \"#utility.yul\":8478:8566   */\n      mstore\n        /* \"#utility.yul\":8585:8589   */\n      0x11\n        /* \"#utility.yul\":8582:8583   */\n      0x04\n        /* \"#utility.yul\":8575:8590   */\n      mstore\n        /* \"#utility.yul\":8609:8613   */\n      0x24\n        /* \"#utility.yul\":8606:8607   */\n      0x00\n        /* \"#utility.yul\":8599:8614   */\n      revert\n        /* \"#utility.yul\":8626:9036   */\n    tag_120:\n        /* \"#utility.yul\":8666:8673   */\n      0x00\n        /* \"#utility.yul\":8689:8709   */\n      tag_440\n        /* \"#utility.yul\":8707:8708   */\n      dup3\n        /* \"#utility.yul\":8689:8709   */\n      tag_301\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":8684:8709   */\n      swap2\n      pop\n        /* \"#utility.yul\":8723:8743   */\n      tag_441\n        /* \"#utility.yul\":8741:8742   */\n      dup4\n        /* \"#utility.yul\":8723:8743   */\n      tag_301\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":8718:8743   */\n      swap3\n      pop\n        /* \"#utility.yul\":8778:8779   */\n      dup3\n        /* \"#utility.yul\":8775:8776   */\n      dup3\n        /* \"#utility.yul\":8771:8780   */\n      mul\n        /* \"#utility.yul\":8800:8830   */\n      tag_442\n        /* \"#utility.yul\":8818:8829   */\n      dup2\n        /* \"#utility.yul\":8800:8830   */\n      tag_301\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":8789:8830   */\n      swap2\n      pop\n        /* \"#utility.yul\":8979:8980   */\n      dup3\n        /* \"#utility.yul\":8970:8977   */\n      dup3\n        /* \"#utility.yul\":8966:8981   */\n      div\n        /* \"#utility.yul\":8963:8964   */\n      dup5\n        /* \"#utility.yul\":8960:8982   */\n      eq\n        /* \"#utility.yul\":8940:8941   */\n      dup4\n        /* \"#utility.yul\":8933:8942   */\n      iszero\n        /* \"#utility.yul\":8913:8996   */\n      or\n        /* \"#utility.yul\":8890:9029   */\n      tag_443\n      jumpi\n        /* \"#utility.yul\":9009:9027   */\n      tag_444\n      tag_327\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":8890:9029   */\n    tag_443:\n        /* \"#utility.yul\":8674:9036   */\n      pop\n        /* \"#utility.yul\":8626:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9222   */\n    tag_328:\n        /* \"#utility.yul\":9090:9167   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9087:9088   */\n      0x00\n        /* \"#utility.yul\":9080:9168   */\n      mstore\n        /* \"#utility.yul\":9187:9191   */\n      0x12\n        /* \"#utility.yul\":9184:9185   */\n      0x04\n        /* \"#utility.yul\":9177:9192   */\n      mstore\n        /* \"#utility.yul\":9211:9215   */\n      0x24\n        /* \"#utility.yul\":9208:9209   */\n      0x00\n        /* \"#utility.yul\":9201:9216   */\n      revert\n        /* \"#utility.yul\":9228:9413   */\n    tag_123:\n        /* \"#utility.yul\":9268:9269   */\n      0x00\n        /* \"#utility.yul\":9285:9305   */\n      tag_447\n        /* \"#utility.yul\":9303:9304   */\n      dup3\n        /* \"#utility.yul\":9285:9305   */\n      tag_301\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":9280:9305   */\n      swap2\n      pop\n        /* \"#utility.yul\":9319:9339   */\n      tag_448\n        /* \"#utility.yul\":9337:9338   */\n      dup4\n        /* \"#utility.yul\":9319:9339   */\n      tag_301\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":9314:9339   */\n      swap3\n      pop\n        /* \"#utility.yul\":9358:9359   */\n      dup3\n        /* \"#utility.yul\":9348:9383   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":9363:9381   */\n      tag_450\n      tag_328\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":9348:9383   */\n    tag_449:\n        /* \"#utility.yul\":9405:9406   */\n      dup3\n        /* \"#utility.yul\":9402:9403   */\n      dup3\n        /* \"#utility.yul\":9398:9407   */\n      div\n        /* \"#utility.yul\":9393:9407   */\n      swap1\n      pop\n        /* \"#utility.yul\":9228:9413   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9419:9610   */\n    tag_127:\n        /* \"#utility.yul\":9459:9462   */\n      0x00\n        /* \"#utility.yul\":9478:9498   */\n      tag_452\n        /* \"#utility.yul\":9496:9497   */\n      dup3\n        /* \"#utility.yul\":9478:9498   */\n      tag_301\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":9473:9498   */\n      swap2\n      pop\n        /* \"#utility.yul\":9512:9532   */\n      tag_453\n        /* \"#utility.yul\":9530:9531   */\n      dup4\n        /* \"#utility.yul\":9512:9532   */\n      tag_301\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":9507:9532   */\n      swap3\n      pop\n        /* \"#utility.yul\":9555:9556   */\n      dup3\n        /* \"#utility.yul\":9552:9553   */\n      dup3\n        /* \"#utility.yul\":9548:9557   */\n      add\n        /* \"#utility.yul\":9541:9557   */\n      swap1\n      pop\n        /* \"#utility.yul\":9576:9579   */\n      dup1\n        /* \"#utility.yul\":9573:9574   */\n      dup3\n        /* \"#utility.yul\":9570:9580   */\n      gt\n        /* \"#utility.yul\":9567:9603   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":9583:9601   */\n      tag_455\n      tag_327\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":9567:9603   */\n    tag_454:\n        /* \"#utility.yul\":9419:9610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9616:9810   */\n    tag_131:\n        /* \"#utility.yul\":9656:9660   */\n      0x00\n        /* \"#utility.yul\":9676:9696   */\n      tag_457\n        /* \"#utility.yul\":9694:9695   */\n      dup3\n        /* \"#utility.yul\":9676:9696   */\n      tag_301\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":9671:9696   */\n      swap2\n      pop\n        /* \"#utility.yul\":9710:9730   */\n      tag_458\n        /* \"#utility.yul\":9728:9729   */\n      dup4\n        /* \"#utility.yul\":9710:9730   */\n      tag_301\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":9705:9730   */\n      swap3\n      pop\n        /* \"#utility.yul\":9754:9755   */\n      dup3\n        /* \"#utility.yul\":9751:9752   */\n      dup3\n        /* \"#utility.yul\":9747:9756   */\n      sub\n        /* \"#utility.yul\":9739:9756   */\n      swap1\n      pop\n        /* \"#utility.yul\":9778:9779   */\n      dup2\n        /* \"#utility.yul\":9772:9776   */\n      dup2\n        /* \"#utility.yul\":9769:9780   */\n      gt\n        /* \"#utility.yul\":9766:9803   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":9783:9801   */\n      tag_460\n      tag_327\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":9766:9803   */\n    tag_459:\n        /* \"#utility.yul\":9616:9810   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9816:9985   */\n    tag_329:\n        /* \"#utility.yul\":9900:9911   */\n      0x00\n        /* \"#utility.yul\":9934:9940   */\n      dup3\n        /* \"#utility.yul\":9929:9932   */\n      dup3\n        /* \"#utility.yul\":9922:9941   */\n      mstore\n        /* \"#utility.yul\":9974:9978   */\n      0x20\n        /* \"#utility.yul\":9969:9972   */\n      dup3\n        /* \"#utility.yul\":9965:9979   */\n      add\n        /* \"#utility.yul\":9950:9979   */\n      swap1\n      pop\n        /* \"#utility.yul\":9816:9985   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10159   */\n    tag_330:\n        /* \"#utility.yul\":10131:10151   */\n      0x77697468647261773a206e6f7420676f6f640000000000000000000000000000\n        /* \"#utility.yul\":10127:10128   */\n      0x00\n        /* \"#utility.yul\":10119:10125   */\n      dup3\n        /* \"#utility.yul\":10115:10129   */\n      add\n        /* \"#utility.yul\":10108:10152   */\n      mstore\n        /* \"#utility.yul\":9991:10159   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10165:10531   */\n    tag_331:\n        /* \"#utility.yul\":10307:10310   */\n      0x00\n        /* \"#utility.yul\":10328:10395   */\n      tag_464\n        /* \"#utility.yul\":10392:10394   */\n      0x12\n        /* \"#utility.yul\":10387:10390   */\n      dup4\n        /* \"#utility.yul\":10328:10395   */\n      tag_329\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":10321:10395   */\n      swap2\n      pop\n        /* \"#utility.yul\":10404:10497   */\n      tag_465\n        /* \"#utility.yul\":10493:10496   */\n      dup3\n        /* \"#utility.yul\":10404:10497   */\n      tag_330\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":10522:10524   */\n      0x20\n        /* \"#utility.yul\":10517:10520   */\n      dup3\n        /* \"#utility.yul\":10513:10525   */\n      add\n        /* \"#utility.yul\":10506:10525   */\n      swap1\n      pop\n        /* \"#utility.yul\":10165:10531   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10537:10956   */\n    tag_148:\n        /* \"#utility.yul\":10703:10707   */\n      0x00\n        /* \"#utility.yul\":10741:10743   */\n      0x20\n        /* \"#utility.yul\":10730:10739   */\n      dup3\n        /* \"#utility.yul\":10726:10744   */\n      add\n        /* \"#utility.yul\":10718:10744   */\n      swap1\n      pop\n        /* \"#utility.yul\":10790:10799   */\n      dup2\n        /* \"#utility.yul\":10784:10788   */\n      dup2\n        /* \"#utility.yul\":10780:10800   */\n      sub\n        /* \"#utility.yul\":10776:10777   */\n      0x00\n        /* \"#utility.yul\":10765:10774   */\n      dup4\n        /* \"#utility.yul\":10761:10778   */\n      add\n        /* \"#utility.yul\":10754:10801   */\n      mstore\n        /* \"#utility.yul\":10818:10949   */\n      tag_467\n        /* \"#utility.yul\":10944:10948   */\n      dup2\n        /* \"#utility.yul\":10818:10949   */\n      tag_331\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":10810:10949   */\n      swap1\n      pop\n        /* \"#utility.yul\":10537:10956   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10962:11294   */\n    tag_176:\n        /* \"#utility.yul\":11083:11087   */\n      0x00\n        /* \"#utility.yul\":11121:11123   */\n      0x40\n        /* \"#utility.yul\":11110:11119   */\n      dup3\n        /* \"#utility.yul\":11106:11124   */\n      add\n        /* \"#utility.yul\":11098:11124   */\n      swap1\n      pop\n        /* \"#utility.yul\":11134:11205   */\n      tag_469\n        /* \"#utility.yul\":11202:11203   */\n      0x00\n        /* \"#utility.yul\":11191:11200   */\n      dup4\n        /* \"#utility.yul\":11187:11204   */\n      add\n        /* \"#utility.yul\":11178:11184   */\n      dup6\n        /* \"#utility.yul\":11134:11205   */\n      tag_325\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":11215:11287   */\n      tag_470\n        /* \"#utility.yul\":11283:11285   */\n      0x20\n        /* \"#utility.yul\":11272:11281   */\n      dup4\n        /* \"#utility.yul\":11268:11286   */\n      add\n        /* \"#utility.yul\":11259:11265   */\n      dup5\n        /* \"#utility.yul\":11215:11287   */\n      tag_302\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":10962:11294   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11300:11437   */\n    tag_332:\n        /* \"#utility.yul\":11354:11359   */\n      0x00\n        /* \"#utility.yul\":11385:11391   */\n      dup2\n        /* \"#utility.yul\":11379:11392   */\n      mload\n        /* \"#utility.yul\":11370:11392   */\n      swap1\n      pop\n        /* \"#utility.yul\":11401:11431   */\n      tag_472\n        /* \"#utility.yul\":11425:11430   */\n      dup2\n        /* \"#utility.yul\":11401:11431   */\n      tag_323\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":11300:11437   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11443:11788   */\n    tag_254:\n        /* \"#utility.yul\":11510:11516   */\n      0x00\n        /* \"#utility.yul\":11559:11561   */\n      0x20\n        /* \"#utility.yul\":11547:11556   */\n      dup3\n        /* \"#utility.yul\":11538:11545   */\n      dup5\n        /* \"#utility.yul\":11534:11557   */\n      sub\n        /* \"#utility.yul\":11530:11562   */\n      slt\n        /* \"#utility.yul\":11527:11646   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":11565:11644   */\n      tag_475\n      tag_310\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":11527:11646   */\n    tag_474:\n        /* \"#utility.yul\":11685:11686   */\n      0x00\n        /* \"#utility.yul\":11710:11771   */\n      tag_476\n        /* \"#utility.yul\":11763:11770   */\n      dup5\n        /* \"#utility.yul\":11754:11760   */\n      dup3\n        /* \"#utility.yul\":11743:11752   */\n      dup6\n        /* \"#utility.yul\":11739:11761   */\n      add\n        /* \"#utility.yul\":11710:11771   */\n      tag_332\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":11700:11771   */\n      swap2\n      pop\n        /* \"#utility.yul\":11656:11781   */\n      pop\n        /* \"#utility.yul\":11443:11788   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11794:12236   */\n    tag_268:\n        /* \"#utility.yul\":11943:11947   */\n      0x00\n        /* \"#utility.yul\":11981:11983   */\n      0x60\n        /* \"#utility.yul\":11970:11979   */\n      dup3\n        /* \"#utility.yul\":11966:11984   */\n      add\n        /* \"#utility.yul\":11958:11984   */\n      swap1\n      pop\n        /* \"#utility.yul\":11994:12065   */\n      tag_478\n        /* \"#utility.yul\":12062:12063   */\n      0x00\n        /* \"#utility.yul\":12051:12060   */\n      dup4\n        /* \"#utility.yul\":12047:12064   */\n      add\n        /* \"#utility.yul\":12038:12044   */\n      dup7\n        /* \"#utility.yul\":11994:12065   */\n      tag_325\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":12075:12147   */\n      tag_479\n        /* \"#utility.yul\":12143:12145   */\n      0x20\n        /* \"#utility.yul\":12132:12141   */\n      dup4\n        /* \"#utility.yul\":12128:12146   */\n      add\n        /* \"#utility.yul\":12119:12125   */\n      dup6\n        /* \"#utility.yul\":12075:12147   */\n      tag_325\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":12157:12229   */\n      tag_480\n        /* \"#utility.yul\":12225:12227   */\n      0x40\n        /* \"#utility.yul\":12214:12223   */\n      dup4\n        /* \"#utility.yul\":12210:12228   */\n      add\n        /* \"#utility.yul\":12201:12207   */\n      dup5\n        /* \"#utility.yul\":12157:12229   */\n      tag_302\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":11794:12236   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12242:12340   */\n    tag_333:\n        /* \"#utility.yul\":12293:12299   */\n      0x00\n        /* \"#utility.yul\":12327:12332   */\n      dup2\n        /* \"#utility.yul\":12321:12333   */\n      mload\n        /* \"#utility.yul\":12311:12333   */\n      swap1\n      pop\n        /* \"#utility.yul\":12242:12340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12346:12493   */\n    tag_334:\n        /* \"#utility.yul\":12447:12458   */\n      0x00\n        /* \"#utility.yul\":12484:12487   */\n      dup2\n        /* \"#utility.yul\":12469:12487   */\n      swap1\n      pop\n        /* \"#utility.yul\":12346:12493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12499:12638   */\n    tag_335:\n        /* \"#utility.yul\":12588:12594   */\n      dup3\n        /* \"#utility.yul\":12583:12586   */\n      dup2\n        /* \"#utility.yul\":12578:12581   */\n      dup4\n        /* \"#utility.yul\":12572:12595   */\n      mcopy\n        /* \"#utility.yul\":12629:12630   */\n      0x00\n        /* \"#utility.yul\":12620:12626   */\n      dup4\n        /* \"#utility.yul\":12615:12618   */\n      dup4\n        /* \"#utility.yul\":12611:12627   */\n      add\n        /* \"#utility.yul\":12604:12631   */\n      mstore\n        /* \"#utility.yul\":12499:12638   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12644:13030   */\n    tag_336:\n        /* \"#utility.yul\":12748:12751   */\n      0x00\n        /* \"#utility.yul\":12776:12814   */\n      tag_485\n        /* \"#utility.yul\":12808:12813   */\n      dup3\n        /* \"#utility.yul\":12776:12814   */\n      tag_333\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":12830:12918   */\n      tag_486\n        /* \"#utility.yul\":12911:12917   */\n      dup2\n        /* \"#utility.yul\":12906:12909   */\n      dup6\n        /* \"#utility.yul\":12830:12918   */\n      tag_334\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":12823:12918   */\n      swap4\n      pop\n        /* \"#utility.yul\":12927:12992   */\n      tag_487\n        /* \"#utility.yul\":12985:12991   */\n      dup2\n        /* \"#utility.yul\":12980:12983   */\n      dup6\n        /* \"#utility.yul\":12973:12977   */\n      0x20\n        /* \"#utility.yul\":12966:12971   */\n      dup7\n        /* \"#utility.yul\":12962:12978   */\n      add\n        /* \"#utility.yul\":12927:12992   */\n      tag_335\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":13017:13023   */\n      dup1\n        /* \"#utility.yul\":13012:13015   */\n      dup5\n        /* \"#utility.yul\":13008:13024   */\n      add\n        /* \"#utility.yul\":13001:13024   */\n      swap2\n      pop\n        /* \"#utility.yul\":12752:13030   */\n      pop\n        /* \"#utility.yul\":12644:13030   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13036:13307   */\n    tag_284:\n        /* \"#utility.yul\":13166:13169   */\n      0x00\n        /* \"#utility.yul\":13188:13281   */\n      tag_489\n        /* \"#utility.yul\":13277:13280   */\n      dup3\n        /* \"#utility.yul\":13268:13274   */\n      dup5\n        /* \"#utility.yul\":13188:13281   */\n      tag_336\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":13181:13281   */\n      swap2\n      pop\n        /* \"#utility.yul\":13298:13301   */\n      dup2\n        /* \"#utility.yul\":13291:13301   */\n      swap1\n      pop\n        /* \"#utility.yul\":13036:13307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b8da0b748cdbac6e174bd8d941477dfe73b216621c116b62b9d457f16492762564736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_945": {
									"entryPoint": null,
									"id": 945,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 268,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_ISushi_$849_fromMemory": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ISushi_$849t_uint256t_uint256_fromMemory": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ISushi_$849": {
									"entryPoint": 513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ISushi_$849": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2423:7",
										"nodeType": "YulBlock",
										"src": "0:2423:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "627:51:7",
													"nodeType": "YulBlock",
													"src": "627:51:7",
													"statements": [
														{
															"nativeSrc": "637:35:7",
															"nodeType": "YulAssignment",
															"src": "637:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:7"
																},
																"nativeSrc": "648:24:7",
																"nodeType": "YulFunctionCall",
																"src": "648:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ISushi_$849",
												"nativeSrc": "568:110:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:7",
														"nodeType": "YulTypedName",
														"src": "609:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:7",
														"nodeType": "YulTypedName",
														"src": "619:7:7",
														"type": ""
													}
												],
												"src": "568:110:7"
											},
											{
												"body": {
													"nativeSrc": "741:93:7",
													"nodeType": "YulBlock",
													"src": "741:93:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:7",
																"nodeType": "YulBlock",
																"src": "812:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:7",
																					"nodeType": "YulLiteral",
																					"src": "821:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:7",
																					"nodeType": "YulLiteral",
																					"src": "824:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:7"
																			},
																			"nativeSrc": "814:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:7"
																		},
																		"nativeSrc": "814:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ISushi_$849",
																					"nativeSrc": "771:31:7",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:7"
																				},
																				"nativeSrc": "771:38:7",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:7"
																		},
																		"nativeSrc": "761:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:7"
																},
																"nativeSrc": "754:57:7",
																"nodeType": "YulFunctionCall",
																"src": "754:57:7"
															},
															"nativeSrc": "751:77:7",
															"nodeType": "YulIf",
															"src": "751:77:7"
														}
													]
												},
												"name": "validator_revert_t_contract$_ISushi_$849",
												"nativeSrc": "684:150:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:7",
														"nodeType": "YulTypedName",
														"src": "734:5:7",
														"type": ""
													}
												],
												"src": "684:150:7"
											},
											{
												"body": {
													"nativeSrc": "917:94:7",
													"nodeType": "YulBlock",
													"src": "917:94:7",
													"statements": [
														{
															"nativeSrc": "927:22:7",
															"nodeType": "YulAssignment",
															"src": "927:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:7"
																},
																"nativeSrc": "936:13:7",
																"nodeType": "YulFunctionCall",
																"src": "936:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ISushi_$849",
																	"nativeSrc": "958:40:7",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:7"
																},
																"nativeSrc": "958:47:7",
																"nodeType": "YulFunctionCall",
																"src": "958:47:7"
															},
															"nativeSrc": "958:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:7"
														}
													]
												},
												"name": "abi_decode_t_contract$_ISushi_$849_fromMemory",
												"nativeSrc": "840:171:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:7",
														"nodeType": "YulTypedName",
														"src": "895:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:7",
														"nodeType": "YulTypedName",
														"src": "903:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:7",
														"nodeType": "YulTypedName",
														"src": "911:5:7",
														"type": ""
													}
												],
												"src": "840:171:7"
											},
											{
												"body": {
													"nativeSrc": "1062:32:7",
													"nodeType": "YulBlock",
													"src": "1062:32:7",
													"statements": [
														{
															"nativeSrc": "1072:16:7",
															"nodeType": "YulAssignment",
															"src": "1072:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1083:5:7",
																"nodeType": "YulIdentifier",
																"src": "1083:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1072:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1072:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1017:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1044:5:7",
														"nodeType": "YulTypedName",
														"src": "1044:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1054:7:7",
														"nodeType": "YulTypedName",
														"src": "1054:7:7",
														"type": ""
													}
												],
												"src": "1017:77:7"
											},
											{
												"body": {
													"nativeSrc": "1143:79:7",
													"nodeType": "YulBlock",
													"src": "1143:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1200:16:7",
																"nodeType": "YulBlock",
																"src": "1200:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1209:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1212:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1202:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:7"
																			},
																			"nativeSrc": "1202:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:7"
																		},
																		"nativeSrc": "1202:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1166:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1166:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1191:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1191:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1173:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1173:17:7"
																				},
																				"nativeSrc": "1173:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1173:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1163:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1163:2:7"
																		},
																		"nativeSrc": "1163:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1156:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1156:6:7"
																},
																"nativeSrc": "1156:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1156:43:7"
															},
															"nativeSrc": "1153:63:7",
															"nodeType": "YulIf",
															"src": "1153:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1100:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1136:5:7",
														"nodeType": "YulTypedName",
														"src": "1136:5:7",
														"type": ""
													}
												],
												"src": "1100:122:7"
											},
											{
												"body": {
													"nativeSrc": "1291:80:7",
													"nodeType": "YulBlock",
													"src": "1291:80:7",
													"statements": [
														{
															"nativeSrc": "1301:22:7",
															"nodeType": "YulAssignment",
															"src": "1301:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1316:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1316:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1310:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1310:5:7"
																},
																"nativeSrc": "1310:13:7",
																"nodeType": "YulFunctionCall",
																"src": "1310:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1301:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1301:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1359:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1359:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1332:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1332:26:7"
																},
																"nativeSrc": "1332:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1332:33:7"
															},
															"nativeSrc": "1332:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1332:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1228:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1269:6:7",
														"nodeType": "YulTypedName",
														"src": "1269:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1277:3:7",
														"nodeType": "YulTypedName",
														"src": "1277:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1285:5:7",
														"nodeType": "YulTypedName",
														"src": "1285:5:7",
														"type": ""
													}
												],
												"src": "1228:143:7"
											},
											{
												"body": {
													"nativeSrc": "1502:566:7",
													"nodeType": "YulBlock",
													"src": "1502:566:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1548:83:7",
																"nodeType": "YulBlock",
																"src": "1548:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1550:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1550:77:7"
																			},
																			"nativeSrc": "1550:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1550:79:7"
																		},
																		"nativeSrc": "1550:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1550:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1523:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1523:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1532:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1532:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1519:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1519:3:7"
																		},
																		"nativeSrc": "1519:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1519:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1544:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1544:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1515:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1515:3:7"
																},
																"nativeSrc": "1515:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1515:32:7"
															},
															"nativeSrc": "1512:119:7",
															"nodeType": "YulIf",
															"src": "1512:119:7"
														},
														{
															"nativeSrc": "1641:142:7",
															"nodeType": "YulBlock",
															"src": "1641:142:7",
															"statements": [
																{
																	"nativeSrc": "1656:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1656:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1670:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1670:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1660:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1660:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1685:88:7",
																	"nodeType": "YulAssignment",
																	"src": "1685:88:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1745:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1745:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1756:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1756:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1741:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1741:3:7"
																				},
																				"nativeSrc": "1741:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1741:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1765:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1765:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ISushi_$849_fromMemory",
																			"nativeSrc": "1695:45:7",
																			"nodeType": "YulIdentifier",
																			"src": "1695:45:7"
																		},
																		"nativeSrc": "1695:78:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1695:78:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1685:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1685:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1793:129:7",
															"nodeType": "YulBlock",
															"src": "1793:129:7",
															"statements": [
																{
																	"nativeSrc": "1808:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1808:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1822:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1822:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1812:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1812:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1838:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1838:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1884:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1884:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1895:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1895:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1880:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1880:3:7"
																				},
																				"nativeSrc": "1880:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1880:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1904:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1904:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1848:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1848:31:7"
																		},
																		"nativeSrc": "1848:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1848:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1838:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1838:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1932:129:7",
															"nodeType": "YulBlock",
															"src": "1932:129:7",
															"statements": [
																{
																	"nativeSrc": "1947:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1947:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1961:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1961:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1951:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1951:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1977:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1977:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2023:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2023:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2034:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2034:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2019:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2019:3:7"
																				},
																				"nativeSrc": "2019:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2019:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2043:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2043:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1987:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1987:31:7"
																		},
																		"nativeSrc": "1987:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1977:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1977:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ISushi_$849t_uint256t_uint256_fromMemory",
												"nativeSrc": "1377:691:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1456:9:7",
														"nodeType": "YulTypedName",
														"src": "1456:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1467:7:7",
														"nodeType": "YulTypedName",
														"src": "1467:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1479:6:7",
														"nodeType": "YulTypedName",
														"src": "1479:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1487:6:7",
														"nodeType": "YulTypedName",
														"src": "1487:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1495:6:7",
														"nodeType": "YulTypedName",
														"src": "1495:6:7",
														"type": ""
													}
												],
												"src": "1377:691:7"
											},
											{
												"body": {
													"nativeSrc": "2139:53:7",
													"nodeType": "YulBlock",
													"src": "2139:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2156:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2156:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2179:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2179:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2161:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "2161:17:7"
																		},
																		"nativeSrc": "2161:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2161:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2149:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2149:6:7"
																},
																"nativeSrc": "2149:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2149:37:7"
															},
															"nativeSrc": "2149:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "2149:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2074:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2127:5:7",
														"nodeType": "YulTypedName",
														"src": "2127:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2134:3:7",
														"nodeType": "YulTypedName",
														"src": "2134:3:7",
														"type": ""
													}
												],
												"src": "2074:118:7"
											},
											{
												"body": {
													"nativeSrc": "2296:124:7",
													"nodeType": "YulBlock",
													"src": "2296:124:7",
													"statements": [
														{
															"nativeSrc": "2306:26:7",
															"nodeType": "YulAssignment",
															"src": "2306:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2318:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2318:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2329:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2329:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2314:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2314:3:7"
																},
																"nativeSrc": "2314:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2314:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2306:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2306:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2386:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2386:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2399:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2399:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2410:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2410:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2395:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2395:3:7"
																		},
																		"nativeSrc": "2395:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2395:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2342:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2342:43:7"
																},
																"nativeSrc": "2342:71:7",
																"nodeType": "YulFunctionCall",
																"src": "2342:71:7"
															},
															"nativeSrc": "2342:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "2342:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2198:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2268:9:7",
														"nodeType": "YulTypedName",
														"src": "2268:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2280:6:7",
														"nodeType": "YulTypedName",
														"src": "2280:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2291:4:7",
														"nodeType": "YulTypedName",
														"src": "2291:4:7",
														"type": ""
													}
												],
												"src": "2198:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ISushi_$849(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ISushi_$849(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISushi_$849(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ISushi_$849_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISushi_$849(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ISushi_$849t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISushi_$849_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f600655348015610013575f5ffd5b5060405161202a38038061202a8339818101604052810190610035919061026f565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a6575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009d91906102ce565b60405180910390fd5b6100b58161010c60201b60201c565b508260015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600381905550806007819055505050506102e7565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101fa826101d1565b9050919050565b5f61020b826101f0565b9050919050565b61021b81610201565b8114610225575f5ffd5b50565b5f8151905061023681610212565b92915050565b5f819050919050565b61024e8161023c565b8114610258575f5ffd5b50565b5f8151905061026981610245565b92915050565b5f5f5f60608486031215610286576102856101cd565b5b5f61029386828701610228565b93505060206102a48682870161025b565b92505060406102b58682870161025b565b9150509250925092565b6102c8816101f0565b82525050565b5f6020820190506102e15f8301846102bf565b92915050565b611d36806102f45f395ff3fe608060405234801561000f575f5ffd5b5060043610610135575f3560e01c80635312ea8e116100b65780638da5cb5b1161007a5780638da5cb5b146102f05780638dbb1e3a1461030e57806393f1a40b1461033e578063b0bcf42a1461036f578063e2bbb1581461038d578063f2fde38b146103a957610135565b80635312ea8e14610286578063630b5ba1146102a257806364482f79146102ac578063715018a6146102c85780638aa28550146102d257610135565b80631aed6553116100fd5780631aed6553146101f65780631eaaa04514610214578063441a3e701461023057806348cd4cb11461024c57806351eb05a61461026a57610135565b8063081e3eda146101395780630a087903146101575780631526fe271461017557806317caf6f1146101a8578063195426ec146101c6575b5f5ffd5b6101416103c5565b60405161014e919061163f565b60405180910390f35b61015f6103d1565b60405161016c91906116d2565b60405180910390f35b61018f600480360381019061018a9190611719565b6103f6565b60405161019f9493929190611764565b60405180910390f35b6101b0610450565b6040516101bd919061163f565b60405180910390f35b6101e060048036038101906101db91906117e2565b610456565b6040516101ed919061163f565b60405180910390f35b6101fe61062a565b60405161020b919061163f565b60405180910390f35b61022e60048036038101906102299190611890565b610630565b005b61024a600480360381019061024591906118e0565b61073a565b005b61025461091e565b604051610261919061163f565b60405180910390f35b610284600480360381019061027f9190611719565b610924565b005b6102a0600480360381019061029b9190611719565b610b17565b005b6102aa610c41565b005b6102c660048036038101906102c1919061191e565b610c6f565b005b6102d0610cf5565b005b6102da610d08565b6040516102e7919061163f565b60405180910390f35b6102f8610d0d565b604051610305919061197d565b60405180910390f35b610328600480360381019061032391906118e0565b610d34565b604051610335919061163f565b60405180910390f35b610358600480360381019061035391906117e2565b610d49565b604051610366929190611996565b60405180910390f35b610377610d74565b604051610384919061163f565b60405180910390f35b6103a760048036038101906103a291906118e0565b610d7a565b005b6103c360048036038101906103be91906119bd565b610f26565b005b5f600480549050905090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60048181548110610405575f80fd5b905f5260205f2090600402015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60065481565b5f5f6004848154811061046c5761046b6119e8565b5b905f5260205f20906004020190505f60055f8681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f826003015490505f835f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161052d919061197d565b602060405180830381865afa158015610548573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061056c9190611a29565b905083600201544311801561058157505f8114155b156105f0575f610595856002015443610d34565b90505f6006548660010154600354846105ae9190611a81565b6105b89190611a81565b6105c29190611aef565b90508264e8d4a51000826105d69190611a81565b6105e09190611aef565b846105eb9190611b1f565b935050505b826001015464e8d4a5100083855f015461060a9190611a81565b6106149190611aef565b61061e9190611b52565b94505050505092915050565b60025481565b610638610faa565b801561064757610646610c41565b5b5f60075443116106595760075461065b565b435b90508360065461066b9190611b1f565b600681905550600460405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018381526020015f815250908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155505050505050565b5f6004838154811061074f5761074e6119e8565b5b905f5260205f20906004020190505f60055f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905082815f015410156107f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e990611bdf565b60405180910390fd5b6107fb84610924565b5f816001015464e8d4a510008460030154845f015461081a9190611a81565b6108249190611aef565b61082e9190611b52565b905061083a3382611031565b83825f01546108499190611b52565b825f018190555064e8d4a510008360030154835f01546108699190611a81565b6108739190611aef565b82600101819055506108c83385855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661121a9092919063ffffffff16565b843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688660405161090f919061163f565b60405180910390a35050505050565b60075481565b5f60048281548110610939576109386119e8565b5b905f5260205f2090600402019050806002015443116109585750610b14565b5f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109b4919061197d565b602060405180830381865afa1580156109cf573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109f39190611a29565b90505f8103610a0c574382600201819055505050610b14565b5f610a1b836002015443610d34565b90505f600654846001015460035484610a349190611a81565b610a3e9190611a81565b610a489190611aef565b905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b8152600401610aa6929190611bfd565b5f604051808303815f87803b158015610abd575f5ffd5b505af1158015610acf573d5f5f3e3d5ffd5b505050508264e8d4a5100082610ae59190611a81565b610aef9190611aef565b8460030154610afe9190611b1f565b8460030181905550438460020181905550505050505b50565b5f60048281548110610b2c57610b2b6119e8565b5b905f5260205f20906004020190505f60055f8481526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050610bd933825f0154845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661121a9092919063ffffffff16565b823373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595835f0154604051610c23919061163f565b60405180910390a35f815f01819055505f8160010181905550505050565b5f60048054905090505f5f90505b81811015610c6b57610c6081610924565b806001019050610c4f565b5050565b610c77610faa565b8015610c8657610c85610c41565b5b8160048481548110610c9b57610c9a6119e8565b5b905f5260205f20906004020160010154600654610cb89190611b52565b610cc29190611b1f565b6006819055508160048481548110610cdd57610cdc6119e8565b5b905f5260205f20906004020160010181905550505050565b610cfd610faa565b610d065f611299565b565b600a81565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f8282610d419190611b52565b905092915050565b6005602052815f5260405f20602052805f5260405f205f9150915050805f0154908060010154905082565b60035481565b5f60048381548110610d8f57610d8e6119e8565b5b905f5260205f20906004020190505f60055f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050610df584610924565b5f815f01541115610e41575f816001015464e8d4a510008460030154845f0154610e1f9190611a81565b610e299190611aef565b610e339190611b52565b9050610e3f3382611031565b505b610e90333085855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661135a909392919063ffffffff16565b82815f0154610e9f9190611b1f565b815f018190555064e8d4a510008260030154825f0154610ebf9190611a81565b610ec99190611aef565b8160010181905550833373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1585604051610f18919061163f565b60405180910390a350505050565b610f2e610faa565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f9e575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f95919061197d565b60405180910390fd5b610fa781611299565b50565b610fb26113dc565b73ffffffffffffffffffffffffffffffffffffffff16610fd0610d0d565b73ffffffffffffffffffffffffffffffffffffffff161461102f57610ff36113dc565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611026919061197d565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161108c919061197d565b602060405180830381865afa1580156110a7573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110cb9190611a29565b9050808211156111775760015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b8152600401611131929190611bfd565b6020604051808303815f875af115801561114d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111719190611c38565b50611215565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b81526004016111d3929190611bfd565b6020604051808303815f875af11580156111ef573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112139190611c38565b505b505050565b611294838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161124d929190611bfd565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113e3565b505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113d6848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161138f93929190611c63565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113e3565b50505050565b5f33905090565b5f61140d828473ffffffffffffffffffffffffffffffffffffffff1661147890919063ffffffff16565b90505f81511415801561143157508080602001905181019061142f9190611c38565b155b1561147357826040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161146a919061197d565b60405180910390fd5b505050565b606061148583835f61148d565b905092915050565b6060814710156114d457306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016114cb919061197d565b60405180910390fd5b5f5f8573ffffffffffffffffffffffffffffffffffffffff1684866040516114fc9190611cea565b5f6040518083038185875af1925050503d805f8114611536576040519150601f19603f3d011682016040523d82523d5f602084013e61153b565b606091505b509150915061154b868383611556565b925050509392505050565b60608261156b57611566826115e3565b6115db565b5f825114801561159157505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156115d357836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016115ca919061197d565b60405180910390fd5b8190506115dc565b5b9392505050565b5f815111156115f55780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f819050919050565b61163981611627565b82525050565b5f6020820190506116525f830184611630565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61169a61169561169084611658565b611677565b611658565b9050919050565b5f6116ab82611680565b9050919050565b5f6116bc826116a1565b9050919050565b6116cc816116b2565b82525050565b5f6020820190506116e55f8301846116c3565b92915050565b5f5ffd5b6116f881611627565b8114611702575f5ffd5b50565b5f81359050611713816116ef565b92915050565b5f6020828403121561172e5761172d6116eb565b5b5f61173b84828501611705565b91505092915050565b5f61174e826116a1565b9050919050565b61175e81611744565b82525050565b5f6080820190506117775f830187611755565b6117846020830186611630565b6117916040830185611630565b61179e6060830184611630565b95945050505050565b5f6117b182611658565b9050919050565b6117c1816117a7565b81146117cb575f5ffd5b50565b5f813590506117dc816117b8565b92915050565b5f5f604083850312156117f8576117f76116eb565b5b5f61180585828601611705565b9250506020611816858286016117ce565b9150509250929050565b5f61182a826117a7565b9050919050565b61183a81611820565b8114611844575f5ffd5b50565b5f8135905061185581611831565b92915050565b5f8115159050919050565b61186f8161185b565b8114611879575f5ffd5b50565b5f8135905061188a81611866565b92915050565b5f5f5f606084860312156118a7576118a66116eb565b5b5f6118b486828701611705565b93505060206118c586828701611847565b92505060406118d68682870161187c565b9150509250925092565b5f5f604083850312156118f6576118f56116eb565b5b5f61190385828601611705565b925050602061191485828601611705565b9150509250929050565b5f5f5f60608486031215611935576119346116eb565b5b5f61194286828701611705565b935050602061195386828701611705565b92505060406119648682870161187c565b9150509250925092565b611977816117a7565b82525050565b5f6020820190506119905f83018461196e565b92915050565b5f6040820190506119a95f830185611630565b6119b66020830184611630565b9392505050565b5f602082840312156119d2576119d16116eb565b5b5f6119df848285016117ce565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050611a23816116ef565b92915050565b5f60208284031215611a3e57611a3d6116eb565b5b5f611a4b84828501611a15565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a8b82611627565b9150611a9683611627565b9250828202611aa481611627565b91508282048414831517611abb57611aba611a54565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611af982611627565b9150611b0483611627565b925082611b1457611b13611ac2565b5b828204905092915050565b5f611b2982611627565b9150611b3483611627565b9250828201905080821115611b4c57611b4b611a54565b5b92915050565b5f611b5c82611627565b9150611b6783611627565b9250828203905081811115611b7f57611b7e611a54565b5b92915050565b5f82825260208201905092915050565b7f77697468647261773a206e6f7420676f6f6400000000000000000000000000005f82015250565b5f611bc9601283611b85565b9150611bd482611b95565b602082019050919050565b5f6020820190508181035f830152611bf681611bbd565b9050919050565b5f604082019050611c105f83018561196e565b611c1d6020830184611630565b9392505050565b5f81519050611c3281611866565b92915050565b5f60208284031215611c4d57611c4c6116eb565b5b5f611c5a84828501611c24565b91505092915050565b5f606082019050611c765f83018661196e565b611c83602083018561196e565b611c906040830184611630565b949350505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f611cc482611c98565b611cce8185611ca2565b9350611cde818560208601611cac565b80840191505092915050565b5f611cf58284611cba565b91508190509291505056fea2646970667358221220b8da0b748cdbac6e174bd8d941477dfe73b216621c116b62b9d457f16492762564736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x202A CODESIZE SUB DUP1 PUSH2 0x202A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x35 SWAP2 SWAP1 PUSH2 0x26F JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB5 DUP2 PUSH2 0x10C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x2E7 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA DUP3 PUSH2 0x1D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20B DUP3 PUSH2 0x1F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21B DUP2 PUSH2 0x201 JUMP JUMPDEST DUP2 EQ PUSH2 0x225 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x236 DUP2 PUSH2 0x212 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24E DUP2 PUSH2 0x23C JUMP JUMPDEST DUP2 EQ PUSH2 0x258 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x269 DUP2 PUSH2 0x245 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x286 JUMPI PUSH2 0x285 PUSH2 0x1CD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x293 DUP7 DUP3 DUP8 ADD PUSH2 0x228 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2A4 DUP7 DUP3 DUP8 ADD PUSH2 0x25B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2B5 DUP7 DUP3 DUP8 ADD PUSH2 0x25B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2C8 DUP2 PUSH2 0x1F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x2BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D36 DUP1 PUSH2 0x2F4 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5312EA8E GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x7A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xB0BCF42A EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A9 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x2D2 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1AED6553 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x1AED6553 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x26A JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xA087903 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x195426EC EQ PUSH2 0x1C6 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x141 PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH2 0x450 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x17E2 JUMP JUMPDEST PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH2 0x62A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x630 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x73A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x254 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH2 0x924 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH2 0xB17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AA PUSH2 0xC41 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH2 0xC6F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D0 PUSH2 0xCF5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DA PUSH2 0xD08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x328 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x17E2 JUMP JUMPDEST PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP3 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x377 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0xD7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x19BD JUMP JUMPDEST PUSH2 0xF26 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x405 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x46C JUMPI PUSH2 0x46B PUSH2 0x19E8 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH0 PUSH1 0x5 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH0 DUP4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x548 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x56C SWAP2 SWAP1 PUSH2 0x1A29 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x581 JUMPI POP PUSH0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x5F0 JUMPI PUSH0 PUSH2 0x595 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xD34 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 SLOAD DUP7 PUSH1 0x1 ADD SLOAD PUSH1 0x3 SLOAD DUP5 PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0x5B8 SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST SWAP1 POP DUP3 PUSH5 0xE8D4A51000 DUP3 PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST DUP5 PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0x1B1F JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST DUP3 PUSH1 0x1 ADD SLOAD PUSH5 0xE8D4A51000 DUP4 DUP6 PUSH0 ADD SLOAD PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x638 PUSH2 0xFAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x647 JUMPI PUSH2 0x646 PUSH2 0xC41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0x7 SLOAD NUMBER GT PUSH2 0x659 JUMPI PUSH1 0x7 SLOAD PUSH2 0x65B JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP DUP4 PUSH1 0x6 SLOAD PUSH2 0x66B SWAP2 SWAP1 PUSH2 0x1B1F JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x74F JUMPI PUSH2 0x74E PUSH2 0x19E8 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x1BDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7FB DUP5 PUSH2 0x924 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH5 0xE8D4A51000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x81A SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0x824 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST PUSH2 0x82E SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST SWAP1 POP PUSH2 0x83A CALLER DUP3 PUSH2 0x1031 JUMP JUMPDEST DUP4 DUP3 PUSH0 ADD SLOAD PUSH2 0x849 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH5 0xE8D4A51000 DUP4 PUSH1 0x3 ADD SLOAD DUP4 PUSH0 ADD SLOAD PUSH2 0x869 SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0x873 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x8C8 CALLER DUP6 DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x121A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x90F SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x939 JUMPI PUSH2 0x938 PUSH2 0x19E8 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x958 JUMPI POP PUSH2 0xB14 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B4 SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9CF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F3 SWAP2 SWAP1 PUSH2 0x1A29 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xA0C JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0xB14 JUMP JUMPDEST PUSH0 PUSH2 0xA1B DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xD34 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH1 0x3 SLOAD DUP5 PUSH2 0xA34 SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0xA48 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA6 SWAP3 SWAP2 SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xABD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xACF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH5 0xE8D4A51000 DUP3 PUSH2 0xAE5 SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0xAEF SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST DUP5 PUSH1 0x3 ADD SLOAD PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0x1B1F JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB2C JUMPI PUSH2 0xB2B PUSH2 0x19E8 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0xBD9 CALLER DUP3 PUSH0 ADD SLOAD DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x121A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xC23 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC6B JUMPI PUSH2 0xC60 DUP2 PUSH2 0x924 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xC4F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC77 PUSH2 0xFAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC86 JUMPI PUSH2 0xC85 PUSH2 0xC41 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0x19E8 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x6 SLOAD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0xCC2 SWAP2 SWAP1 PUSH2 0x1B1F JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xCDD JUMPI PUSH2 0xCDC PUSH2 0x19E8 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xCFD PUSH2 0xFAA JUMP JUMPDEST PUSH2 0xD06 PUSH0 PUSH2 0x1299 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP3 DUP3 PUSH2 0xD41 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xD8F JUMPI PUSH2 0xD8E PUSH2 0x19E8 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0xDF5 DUP5 PUSH2 0x924 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD GT ISZERO PUSH2 0xE41 JUMPI PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH5 0xE8D4A51000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0xE1F SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0xE29 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST PUSH2 0xE33 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST SWAP1 POP PUSH2 0xE3F CALLER DUP3 PUSH2 0x1031 JUMP JUMPDEST POP JUMPDEST PUSH2 0xE90 CALLER ADDRESS DUP6 DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x135A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP2 PUSH0 ADD SLOAD PUSH2 0xE9F SWAP2 SWAP1 PUSH2 0x1B1F JUMP JUMPDEST DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH5 0xE8D4A51000 DUP3 PUSH1 0x3 ADD SLOAD DUP3 PUSH0 ADD SLOAD PUSH2 0xEBF SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0xEC9 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0xF18 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xF2E PUSH2 0xFAA JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF9E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF95 SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFA7 DUP2 PUSH2 0x1299 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xFB2 PUSH2 0x13DC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFD0 PUSH2 0xD0D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x102F JUMPI PUSH2 0xFF3 PUSH2 0x13DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1026 SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108C SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10A7 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10CB SWAP2 SWAP1 PUSH2 0x1A29 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1177 JUMPI PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1131 SWAP3 SWAP2 SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x114D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1171 SWAP2 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST POP PUSH2 0x1215 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D3 SWAP3 SWAP2 SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11EF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1213 SWAP2 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1294 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x124D SWAP3 SWAP2 SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x13E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x13D6 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x138F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x13E3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x140D DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1478 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x1431 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x142F SWAP2 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1473 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146A SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1485 DUP4 DUP4 PUSH0 PUSH2 0x148D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x14D4 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CB SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x14FC SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1536 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x153B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x154B DUP7 DUP4 DUP4 PUSH2 0x1556 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x156B JUMPI PUSH2 0x1566 DUP3 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x15DB JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1591 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x15D3 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15CA SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x15DC JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x15F5 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1639 DUP2 PUSH2 0x1627 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1652 PUSH0 DUP4 ADD DUP5 PUSH2 0x1630 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x169A PUSH2 0x1695 PUSH2 0x1690 DUP5 PUSH2 0x1658 JUMP JUMPDEST PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x1658 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16AB DUP3 PUSH2 0x1680 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16BC DUP3 PUSH2 0x16A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CC DUP2 PUSH2 0x16B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16E5 PUSH0 DUP4 ADD DUP5 PUSH2 0x16C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x16F8 DUP2 PUSH2 0x1627 JUMP JUMPDEST DUP2 EQ PUSH2 0x1702 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1713 DUP2 PUSH2 0x16EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x172E JUMPI PUSH2 0x172D PUSH2 0x16EB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x173B DUP5 DUP3 DUP6 ADD PUSH2 0x1705 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x174E DUP3 PUSH2 0x16A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175E DUP2 PUSH2 0x1744 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1777 PUSH0 DUP4 ADD DUP8 PUSH2 0x1755 JUMP JUMPDEST PUSH2 0x1784 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1630 JUMP JUMPDEST PUSH2 0x1791 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1630 JUMP JUMPDEST PUSH2 0x179E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1630 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17B1 DUP3 PUSH2 0x1658 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C1 DUP2 PUSH2 0x17A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x17CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17DC DUP2 PUSH2 0x17B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17F8 JUMPI PUSH2 0x17F7 PUSH2 0x16EB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1805 DUP6 DUP3 DUP7 ADD PUSH2 0x1705 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1816 DUP6 DUP3 DUP7 ADD PUSH2 0x17CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x182A DUP3 PUSH2 0x17A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x183A DUP2 PUSH2 0x1820 JUMP JUMPDEST DUP2 EQ PUSH2 0x1844 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1855 DUP2 PUSH2 0x1831 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x186F DUP2 PUSH2 0x185B JUMP JUMPDEST DUP2 EQ PUSH2 0x1879 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x188A DUP2 PUSH2 0x1866 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18A7 JUMPI PUSH2 0x18A6 PUSH2 0x16EB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18B4 DUP7 DUP3 DUP8 ADD PUSH2 0x1705 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18C5 DUP7 DUP3 DUP8 ADD PUSH2 0x1847 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18D6 DUP7 DUP3 DUP8 ADD PUSH2 0x187C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18F6 JUMPI PUSH2 0x18F5 PUSH2 0x16EB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1903 DUP6 DUP3 DUP7 ADD PUSH2 0x1705 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1914 DUP6 DUP3 DUP7 ADD PUSH2 0x1705 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1935 JUMPI PUSH2 0x1934 PUSH2 0x16EB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1942 DUP7 DUP3 DUP8 ADD PUSH2 0x1705 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1953 DUP7 DUP3 DUP8 ADD PUSH2 0x1705 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1964 DUP7 DUP3 DUP8 ADD PUSH2 0x187C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1977 DUP2 PUSH2 0x17A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1990 PUSH0 DUP4 ADD DUP5 PUSH2 0x196E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19A9 PUSH0 DUP4 ADD DUP6 PUSH2 0x1630 JUMP JUMPDEST PUSH2 0x19B6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1630 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D2 JUMPI PUSH2 0x19D1 PUSH2 0x16EB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19DF DUP5 DUP3 DUP6 ADD PUSH2 0x17CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A23 DUP2 PUSH2 0x16EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A3E JUMPI PUSH2 0x1A3D PUSH2 0x16EB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A4B DUP5 DUP3 DUP6 ADD PUSH2 0x1A15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A8B DUP3 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A96 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1AA4 DUP2 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1ABB JUMPI PUSH2 0x1ABA PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AF9 DUP3 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B04 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B14 JUMPI PUSH2 0x1B13 PUSH2 0x1AC2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B29 DUP3 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B34 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B4C JUMPI PUSH2 0x1B4B PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5C DUP3 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B67 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B7F JUMPI PUSH2 0x1B7E PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC9 PUSH1 0x12 DUP4 PUSH2 0x1B85 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD4 DUP3 PUSH2 0x1B95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BF6 DUP2 PUSH2 0x1BBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C10 PUSH0 DUP4 ADD DUP6 PUSH2 0x196E JUMP JUMPDEST PUSH2 0x1C1D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1630 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C32 DUP2 PUSH2 0x1866 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C4D JUMPI PUSH2 0x1C4C PUSH2 0x16EB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C5A DUP5 DUP3 DUP6 ADD PUSH2 0x1C24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C76 PUSH0 DUP4 ADD DUP7 PUSH2 0x196E JUMP JUMPDEST PUSH2 0x1C83 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x196E JUMP JUMPDEST PUSH2 0x1C90 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1630 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC4 DUP3 PUSH2 0x1C98 JUMP JUMPDEST PUSH2 0x1CCE DUP2 DUP6 PUSH2 0x1CA2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CDE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CF5 DUP3 DUP5 PUSH2 0x1CBA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 0xDA SIGNEXTEND PUSH21 0x8CDBAC6E174BD8D941477DFE73B216621C116B62B9 0xD4 JUMPI CALL PUSH5 0x9276256473 PUSH16 0x6C634300081B00330000000000000000 ",
							"sourceMap": "713:8497:6:-:0;;;2651:1;2618:34;;3026:222;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;744:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;3158:6:6;3150:5;;:14;;;;;;;;;;;;;;;;;;3191;3175:13;:30;;;;3229:11;3216:10;:24;;;;3026:222;;;713:8497;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:77::-;1054:7;1083:5;1072:16;;1017:77;;;:::o;1100:122::-;1173:24;1191:5;1173:24;:::i;:::-;1166:5;1163:35;1153:63;;1212:1;1209;1202:12;1153:63;1100:122;:::o;1228:143::-;1285:5;1316:6;1310:13;1301:22;;1332:33;1359:5;1332:33;:::i;:::-;1228:143;;;;:::o;1377:691::-;1479:6;1487;1495;1544:2;1532:9;1523:7;1519:23;1515:32;1512:119;;;1550:79;;:::i;:::-;1512:119;1670:1;1695:78;1765:7;1756:6;1745:9;1741:22;1695:78;:::i;:::-;1685:88;;1641:142;1822:2;1848:64;1904:7;1895:6;1884:9;1880:22;1848:64;:::i;:::-;1838:74;;1793:129;1961:2;1987:64;2043:7;2034:6;2023:9;2019:22;1987:64;:::i;:::-;1977:74;;1932:129;1377:691;;;;;:::o;2074:118::-;2161:24;2179:5;2161:24;:::i;:::-;2156:3;2149:37;2074:118;;:::o;2198:222::-;2291:4;2329:2;2318:9;2314:18;2306:26;;2342:71;2410:1;2399:9;2395:17;2386:6;2342:71;:::i;:::-;2198:222;;;;:::o;713:8497:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BONUS_MULTIPLIER_882": {
									"entryPoint": 3336,
									"id": 882,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_501": {
									"entryPoint": 5091,
									"id": 501,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4010,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_816": {
									"entryPoint": 5084,
									"id": 816,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_803": {
									"entryPoint": 5603,
									"id": 803,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4761,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1001": {
									"entryPoint": 1584,
									"id": 1001,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@bonusEndBlock_877": {
									"entryPoint": 1578,
									"id": 877,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_1365": {
									"entryPoint": 3450,
									"id": 1365,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@emergencyWithdraw_1519": {
									"entryPoint": 2839,
									"id": 1519,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_671": {
									"entryPoint": 5261,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_625": {
									"entryPoint": 5240,
									"id": 625,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getMultiplier_1051": {
									"entryPoint": 3380,
									"id": 1051,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@massUpdatePools_1170": {
									"entryPoint": 3137,
									"id": 1170,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 3341,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingSushi_1145": {
									"entryPoint": 1110,
									"id": 1145,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@poolInfo_886": {
									"entryPoint": 1014,
									"id": 886,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolLength_954": {
									"entryPoint": 965,
									"id": 954,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 3317,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeSushiTransfer_1557": {
									"entryPoint": 4145,
									"id": 1557,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_338": {
									"entryPoint": 4954,
									"id": 338,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_311": {
									"entryPoint": 4634,
									"id": 311,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@set_1037": {
									"entryPoint": 3183,
									"id": 1037,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@startBlock_898": {
									"entryPoint": 2334,
									"id": 898,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sushiPerBlock_879": {
									"entryPoint": 3444,
									"id": 879,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sushi_875": {
									"entryPoint": 977,
									"id": 875,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalAllocPoint_896": {
									"entryPoint": 1104,
									"id": 896,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3878,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePool_1266": {
									"entryPoint": 2340,
									"id": 1266,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userInfo_893": {
									"entryPoint": 3401,
									"id": 893,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_763": {
									"entryPoint": 5462,
									"id": 763,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1462": {
									"entryPoint": 1850,
									"id": 1462,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$225": {
									"entryPoint": 6215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 6114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC20_$225t_bool": {
									"entryPoint": 6288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bool": {
									"entryPoint": 6430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack": {
									"entryPoint": 5973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ISushi_$849_to_t_address_fromStack": {
									"entryPoint": 5827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7267,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7165,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5988,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISushi_$849__to_t_address__fromStack_reversed": {
									"entryPoint": 5842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6550,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$225": {
									"entryPoint": 6176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$225_to_t_address": {
									"entryPoint": 5956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISushi_$849_to_t_address": {
									"entryPoint": 5810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7340,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 5751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6740,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6850,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6632,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5867,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df": {
									"entryPoint": 7061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$225": {
									"entryPoint": 6193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13310:7",
										"nodeType": "YulBlock",
										"src": "0:13310:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:7",
													"nodeType": "YulBlock",
													"src": "52:32:7",
													"statements": [
														{
															"nativeSrc": "62:16:7",
															"nodeType": "YulAssignment",
															"src": "62:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:7",
																"nodeType": "YulIdentifier",
																"src": "73:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:7",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:7",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:77:7"
											},
											{
												"body": {
													"nativeSrc": "155:53:7",
													"nodeType": "YulBlock",
													"src": "155:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:7"
																		},
																		"nativeSrc": "177:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:7"
																},
																"nativeSrc": "165:37:7",
																"nodeType": "YulFunctionCall",
																"src": "165:37:7"
															},
															"nativeSrc": "165:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:7",
														"nodeType": "YulTypedName",
														"src": "143:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:7",
														"nodeType": "YulTypedName",
														"src": "150:3:7",
														"type": ""
													}
												],
												"src": "90:118:7"
											},
											{
												"body": {
													"nativeSrc": "312:124:7",
													"nodeType": "YulBlock",
													"src": "312:124:7",
													"statements": [
														{
															"nativeSrc": "322:26:7",
															"nodeType": "YulAssignment",
															"src": "322:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:7",
																		"nodeType": "YulLiteral",
																		"src": "345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:7"
																},
																"nativeSrc": "330:18:7",
																"nodeType": "YulFunctionCall",
																"src": "330:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:7",
																				"nodeType": "YulLiteral",
																				"src": "426:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:7"
																		},
																		"nativeSrc": "411:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:7"
																},
																"nativeSrc": "358:71:7",
																"nodeType": "YulFunctionCall",
																"src": "358:71:7"
															},
															"nativeSrc": "358:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:7",
														"nodeType": "YulTypedName",
														"src": "284:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:7",
														"nodeType": "YulTypedName",
														"src": "296:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:7",
														"nodeType": "YulTypedName",
														"src": "307:4:7",
														"type": ""
													}
												],
												"src": "214:222:7"
											},
											{
												"body": {
													"nativeSrc": "487:81:7",
													"nodeType": "YulBlock",
													"src": "487:81:7",
													"statements": [
														{
															"nativeSrc": "497:65:7",
															"nodeType": "YulAssignment",
															"src": "497:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "512:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "519:42:7",
																		"nodeType": "YulLiteral",
																		"src": "519:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "508:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:7"
																},
																"nativeSrc": "508:54:7",
																"nodeType": "YulFunctionCall",
																"src": "508:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "497:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "442:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "469:5:7",
														"nodeType": "YulTypedName",
														"src": "469:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "479:7:7",
														"nodeType": "YulTypedName",
														"src": "479:7:7",
														"type": ""
													}
												],
												"src": "442:126:7"
											},
											{
												"body": {
													"nativeSrc": "606:28:7",
													"nodeType": "YulBlock",
													"src": "606:28:7",
													"statements": [
														{
															"nativeSrc": "616:12:7",
															"nodeType": "YulAssignment",
															"src": "616:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "623:5:7",
																"nodeType": "YulIdentifier",
																"src": "623:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "616:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "616:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "574:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "592:5:7",
														"nodeType": "YulTypedName",
														"src": "592:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "602:3:7",
														"nodeType": "YulTypedName",
														"src": "602:3:7",
														"type": ""
													}
												],
												"src": "574:60:7"
											},
											{
												"body": {
													"nativeSrc": "700:82:7",
													"nodeType": "YulBlock",
													"src": "700:82:7",
													"statements": [
														{
															"nativeSrc": "710:66:7",
															"nodeType": "YulAssignment",
															"src": "710:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "768:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "768:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "750:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "750:17:7"
																				},
																				"nativeSrc": "750:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "750:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "741:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "741:8:7"
																		},
																		"nativeSrc": "741:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "741:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "723:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "723:17:7"
																},
																"nativeSrc": "723:53:7",
																"nodeType": "YulFunctionCall",
																"src": "723:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "710:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "710:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "640:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "680:5:7",
														"nodeType": "YulTypedName",
														"src": "680:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "690:9:7",
														"nodeType": "YulTypedName",
														"src": "690:9:7",
														"type": ""
													}
												],
												"src": "640:142:7"
											},
											{
												"body": {
													"nativeSrc": "848:66:7",
													"nodeType": "YulBlock",
													"src": "848:66:7",
													"statements": [
														{
															"nativeSrc": "858:50:7",
															"nodeType": "YulAssignment",
															"src": "858:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "902:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "902:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "871:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "871:30:7"
																},
																"nativeSrc": "871:37:7",
																"nodeType": "YulFunctionCall",
																"src": "871:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "858:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "858:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "788:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "828:5:7",
														"nodeType": "YulTypedName",
														"src": "828:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "838:9:7",
														"nodeType": "YulTypedName",
														"src": "838:9:7",
														"type": ""
													}
												],
												"src": "788:126:7"
											},
											{
												"body": {
													"nativeSrc": "994:66:7",
													"nodeType": "YulBlock",
													"src": "994:66:7",
													"statements": [
														{
															"nativeSrc": "1004:50:7",
															"nodeType": "YulAssignment",
															"src": "1004:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1048:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1048:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1017:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "1017:30:7"
																},
																"nativeSrc": "1017:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1017:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1004:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1004:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISushi_$849_to_t_address",
												"nativeSrc": "920:140:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "974:5:7",
														"nodeType": "YulTypedName",
														"src": "974:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "984:9:7",
														"nodeType": "YulTypedName",
														"src": "984:9:7",
														"type": ""
													}
												],
												"src": "920:140:7"
											},
											{
												"body": {
													"nativeSrc": "1145:80:7",
													"nodeType": "YulBlock",
													"src": "1145:80:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1162:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1162:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1212:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1212:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISushi_$849_to_t_address",
																			"nativeSrc": "1167:44:7",
																			"nodeType": "YulIdentifier",
																			"src": "1167:44:7"
																		},
																		"nativeSrc": "1167:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1167:51:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1155:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1155:6:7"
																},
																"nativeSrc": "1155:64:7",
																"nodeType": "YulFunctionCall",
																"src": "1155:64:7"
															},
															"nativeSrc": "1155:64:7",
															"nodeType": "YulExpressionStatement",
															"src": "1155:64:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISushi_$849_to_t_address_fromStack",
												"nativeSrc": "1066:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1133:5:7",
														"nodeType": "YulTypedName",
														"src": "1133:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1140:3:7",
														"nodeType": "YulTypedName",
														"src": "1140:3:7",
														"type": ""
													}
												],
												"src": "1066:159:7"
											},
											{
												"body": {
													"nativeSrc": "1343:138:7",
													"nodeType": "YulBlock",
													"src": "1343:138:7",
													"statements": [
														{
															"nativeSrc": "1353:26:7",
															"nodeType": "YulAssignment",
															"src": "1353:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1365:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1365:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1376:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1376:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1361:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1361:3:7"
																},
																"nativeSrc": "1361:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1361:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1353:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1353:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1447:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1447:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1460:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1460:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1471:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1471:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1456:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:7"
																		},
																		"nativeSrc": "1456:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1456:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISushi_$849_to_t_address_fromStack",
																	"nativeSrc": "1389:57:7",
																	"nodeType": "YulIdentifier",
																	"src": "1389:57:7"
																},
																"nativeSrc": "1389:85:7",
																"nodeType": "YulFunctionCall",
																"src": "1389:85:7"
															},
															"nativeSrc": "1389:85:7",
															"nodeType": "YulExpressionStatement",
															"src": "1389:85:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISushi_$849__to_t_address__fromStack_reversed",
												"nativeSrc": "1231:250:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1315:9:7",
														"nodeType": "YulTypedName",
														"src": "1315:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1327:6:7",
														"nodeType": "YulTypedName",
														"src": "1327:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1338:4:7",
														"nodeType": "YulTypedName",
														"src": "1338:4:7",
														"type": ""
													}
												],
												"src": "1231:250:7"
											},
											{
												"body": {
													"nativeSrc": "1527:35:7",
													"nodeType": "YulBlock",
													"src": "1527:35:7",
													"statements": [
														{
															"nativeSrc": "1537:19:7",
															"nodeType": "YulAssignment",
															"src": "1537:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1553:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1553:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1547:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1547:5:7"
																},
																"nativeSrc": "1547:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1547:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1537:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1537:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1487:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1520:6:7",
														"nodeType": "YulTypedName",
														"src": "1520:6:7",
														"type": ""
													}
												],
												"src": "1487:75:7"
											},
											{
												"body": {
													"nativeSrc": "1657:28:7",
													"nodeType": "YulBlock",
													"src": "1657:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1674:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1674:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1677:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1677:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1667:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:7"
																},
																"nativeSrc": "1667:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1667:12:7"
															},
															"nativeSrc": "1667:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1667:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1568:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1568:117:7"
											},
											{
												"body": {
													"nativeSrc": "1780:28:7",
													"nodeType": "YulBlock",
													"src": "1780:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1797:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1797:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1800:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1800:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1790:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1790:6:7"
																},
																"nativeSrc": "1790:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1790:12:7"
															},
															"nativeSrc": "1790:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1790:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1691:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1691:117:7"
											},
											{
												"body": {
													"nativeSrc": "1857:79:7",
													"nodeType": "YulBlock",
													"src": "1857:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1914:16:7",
																"nodeType": "YulBlock",
																"src": "1914:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1923:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1923:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1926:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1926:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1916:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1916:6:7"
																			},
																			"nativeSrc": "1916:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1916:12:7"
																		},
																		"nativeSrc": "1916:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1916:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1880:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1880:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1905:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1905:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1887:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1887:17:7"
																				},
																				"nativeSrc": "1887:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1887:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1877:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1877:2:7"
																		},
																		"nativeSrc": "1877:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1877:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1870:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1870:6:7"
																},
																"nativeSrc": "1870:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1870:43:7"
															},
															"nativeSrc": "1867:63:7",
															"nodeType": "YulIf",
															"src": "1867:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1814:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1850:5:7",
														"nodeType": "YulTypedName",
														"src": "1850:5:7",
														"type": ""
													}
												],
												"src": "1814:122:7"
											},
											{
												"body": {
													"nativeSrc": "1994:87:7",
													"nodeType": "YulBlock",
													"src": "1994:87:7",
													"statements": [
														{
															"nativeSrc": "2004:29:7",
															"nodeType": "YulAssignment",
															"src": "2004:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2026:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2026:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2013:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2013:12:7"
																},
																"nativeSrc": "2013:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2013:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2004:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2004:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2069:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2069:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2042:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2042:26:7"
																},
																"nativeSrc": "2042:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2042:33:7"
															},
															"nativeSrc": "2042:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2042:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1942:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1972:6:7",
														"nodeType": "YulTypedName",
														"src": "1972:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1980:3:7",
														"nodeType": "YulTypedName",
														"src": "1980:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1988:5:7",
														"nodeType": "YulTypedName",
														"src": "1988:5:7",
														"type": ""
													}
												],
												"src": "1942:139:7"
											},
											{
												"body": {
													"nativeSrc": "2153:263:7",
													"nodeType": "YulBlock",
													"src": "2153:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2199:83:7",
																"nodeType": "YulBlock",
																"src": "2199:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2201:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2201:77:7"
																			},
																			"nativeSrc": "2201:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2201:79:7"
																		},
																		"nativeSrc": "2201:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2201:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2174:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2174:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2183:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2183:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2170:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2170:3:7"
																		},
																		"nativeSrc": "2170:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2170:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2195:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2195:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2166:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2166:3:7"
																},
																"nativeSrc": "2166:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2166:32:7"
															},
															"nativeSrc": "2163:119:7",
															"nodeType": "YulIf",
															"src": "2163:119:7"
														},
														{
															"nativeSrc": "2292:117:7",
															"nodeType": "YulBlock",
															"src": "2292:117:7",
															"statements": [
																{
																	"nativeSrc": "2307:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2307:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2321:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2321:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2311:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2311:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2336:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2336:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2371:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2371:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2382:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2382:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2367:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2367:3:7"
																				},
																				"nativeSrc": "2367:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2367:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2391:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2391:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2346:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2346:20:7"
																		},
																		"nativeSrc": "2346:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2346:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2336:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2336:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2087:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2123:9:7",
														"nodeType": "YulTypedName",
														"src": "2123:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2134:7:7",
														"nodeType": "YulTypedName",
														"src": "2134:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2146:6:7",
														"nodeType": "YulTypedName",
														"src": "2146:6:7",
														"type": ""
													}
												],
												"src": "2087:329:7"
											},
											{
												"body": {
													"nativeSrc": "2496:66:7",
													"nodeType": "YulBlock",
													"src": "2496:66:7",
													"statements": [
														{
															"nativeSrc": "2506:50:7",
															"nodeType": "YulAssignment",
															"src": "2506:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2550:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2519:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2519:30:7"
																},
																"nativeSrc": "2519:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2519:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2506:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2506:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$225_to_t_address",
												"nativeSrc": "2422:140:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2476:5:7",
														"nodeType": "YulTypedName",
														"src": "2476:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2486:9:7",
														"nodeType": "YulTypedName",
														"src": "2486:9:7",
														"type": ""
													}
												],
												"src": "2422:140:7"
											},
											{
												"body": {
													"nativeSrc": "2647:80:7",
													"nodeType": "YulBlock",
													"src": "2647:80:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2664:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2664:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2714:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2714:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$225_to_t_address",
																			"nativeSrc": "2669:44:7",
																			"nodeType": "YulIdentifier",
																			"src": "2669:44:7"
																		},
																		"nativeSrc": "2669:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2669:51:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2657:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2657:6:7"
																},
																"nativeSrc": "2657:64:7",
																"nodeType": "YulFunctionCall",
																"src": "2657:64:7"
															},
															"nativeSrc": "2657:64:7",
															"nodeType": "YulExpressionStatement",
															"src": "2657:64:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
												"nativeSrc": "2568:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2635:5:7",
														"nodeType": "YulTypedName",
														"src": "2635:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2642:3:7",
														"nodeType": "YulTypedName",
														"src": "2642:3:7",
														"type": ""
													}
												],
												"src": "2568:159:7"
											},
											{
												"body": {
													"nativeSrc": "2929:385:7",
													"nodeType": "YulBlock",
													"src": "2929:385:7",
													"statements": [
														{
															"nativeSrc": "2939:27:7",
															"nodeType": "YulAssignment",
															"src": "2939:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2951:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2951:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2962:3:7",
																		"nodeType": "YulLiteral",
																		"src": "2962:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2947:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2947:3:7"
																},
																"nativeSrc": "2947:19:7",
																"nodeType": "YulFunctionCall",
																"src": "2947:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2939:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2939:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3034:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3034:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3047:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3047:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3058:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3058:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3043:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3043:3:7"
																		},
																		"nativeSrc": "3043:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3043:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
																	"nativeSrc": "2976:57:7",
																	"nodeType": "YulIdentifier",
																	"src": "2976:57:7"
																},
																"nativeSrc": "2976:85:7",
																"nodeType": "YulFunctionCall",
																"src": "2976:85:7"
															},
															"nativeSrc": "2976:85:7",
															"nodeType": "YulExpressionStatement",
															"src": "2976:85:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3115:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3115:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3128:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3128:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3139:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3139:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3124:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3124:3:7"
																		},
																		"nativeSrc": "3124:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3124:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3071:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3071:43:7"
																},
																"nativeSrc": "3071:72:7",
																"nodeType": "YulFunctionCall",
																"src": "3071:72:7"
															},
															"nativeSrc": "3071:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "3071:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3197:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3197:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3210:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3210:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3221:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3221:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3206:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3206:3:7"
																		},
																		"nativeSrc": "3206:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3206:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3153:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3153:43:7"
																},
																"nativeSrc": "3153:72:7",
																"nodeType": "YulFunctionCall",
																"src": "3153:72:7"
															},
															"nativeSrc": "3153:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "3153:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "3279:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3279:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3292:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3292:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3303:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3303:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3288:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:7"
																		},
																		"nativeSrc": "3288:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3288:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3235:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3235:43:7"
																},
																"nativeSrc": "3235:72:7",
																"nodeType": "YulFunctionCall",
																"src": "3235:72:7"
															},
															"nativeSrc": "3235:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "3235:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2733:581:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2877:9:7",
														"nodeType": "YulTypedName",
														"src": "2877:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2889:6:7",
														"nodeType": "YulTypedName",
														"src": "2889:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2897:6:7",
														"nodeType": "YulTypedName",
														"src": "2897:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2905:6:7",
														"nodeType": "YulTypedName",
														"src": "2905:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2913:6:7",
														"nodeType": "YulTypedName",
														"src": "2913:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2924:4:7",
														"nodeType": "YulTypedName",
														"src": "2924:4:7",
														"type": ""
													}
												],
												"src": "2733:581:7"
											},
											{
												"body": {
													"nativeSrc": "3365:51:7",
													"nodeType": "YulBlock",
													"src": "3365:51:7",
													"statements": [
														{
															"nativeSrc": "3375:35:7",
															"nodeType": "YulAssignment",
															"src": "3375:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3404:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3386:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3386:17:7"
																},
																"nativeSrc": "3386:24:7",
																"nodeType": "YulFunctionCall",
																"src": "3386:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3375:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3375:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3320:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3347:5:7",
														"nodeType": "YulTypedName",
														"src": "3347:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3357:7:7",
														"nodeType": "YulTypedName",
														"src": "3357:7:7",
														"type": ""
													}
												],
												"src": "3320:96:7"
											},
											{
												"body": {
													"nativeSrc": "3465:79:7",
													"nodeType": "YulBlock",
													"src": "3465:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3522:16:7",
																"nodeType": "YulBlock",
																"src": "3522:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3531:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3531:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3534:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3534:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3524:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3524:6:7"
																			},
																			"nativeSrc": "3524:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3524:12:7"
																		},
																		"nativeSrc": "3524:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3524:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3488:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3488:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3513:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3513:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3495:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3495:17:7"
																				},
																				"nativeSrc": "3495:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3495:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3485:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3485:2:7"
																		},
																		"nativeSrc": "3485:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3485:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3478:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3478:6:7"
																},
																"nativeSrc": "3478:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3478:43:7"
															},
															"nativeSrc": "3475:63:7",
															"nodeType": "YulIf",
															"src": "3475:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3422:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3458:5:7",
														"nodeType": "YulTypedName",
														"src": "3458:5:7",
														"type": ""
													}
												],
												"src": "3422:122:7"
											},
											{
												"body": {
													"nativeSrc": "3602:87:7",
													"nodeType": "YulBlock",
													"src": "3602:87:7",
													"statements": [
														{
															"nativeSrc": "3612:29:7",
															"nodeType": "YulAssignment",
															"src": "3612:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3634:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3634:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3621:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3621:12:7"
																},
																"nativeSrc": "3621:20:7",
																"nodeType": "YulFunctionCall",
																"src": "3621:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3612:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3612:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3677:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3677:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3650:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3650:26:7"
																},
																"nativeSrc": "3650:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3650:33:7"
															},
															"nativeSrc": "3650:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3650:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3550:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3580:6:7",
														"nodeType": "YulTypedName",
														"src": "3580:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3588:3:7",
														"nodeType": "YulTypedName",
														"src": "3588:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3596:5:7",
														"nodeType": "YulTypedName",
														"src": "3596:5:7",
														"type": ""
													}
												],
												"src": "3550:139:7"
											},
											{
												"body": {
													"nativeSrc": "3778:391:7",
													"nodeType": "YulBlock",
													"src": "3778:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3824:83:7",
																"nodeType": "YulBlock",
																"src": "3824:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3826:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3826:77:7"
																			},
																			"nativeSrc": "3826:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3826:79:7"
																		},
																		"nativeSrc": "3826:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3826:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3799:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3799:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3808:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3808:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3795:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3795:3:7"
																		},
																		"nativeSrc": "3795:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3795:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3820:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3820:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3791:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3791:3:7"
																},
																"nativeSrc": "3791:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3791:32:7"
															},
															"nativeSrc": "3788:119:7",
															"nodeType": "YulIf",
															"src": "3788:119:7"
														},
														{
															"nativeSrc": "3917:117:7",
															"nodeType": "YulBlock",
															"src": "3917:117:7",
															"statements": [
																{
																	"nativeSrc": "3932:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3932:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3946:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3946:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3936:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3936:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3961:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3961:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3996:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3996:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4007:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4007:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3992:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3992:3:7"
																				},
																				"nativeSrc": "3992:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3992:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4016:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4016:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3971:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3971:20:7"
																		},
																		"nativeSrc": "3971:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3971:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3961:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3961:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4044:118:7",
															"nodeType": "YulBlock",
															"src": "4044:118:7",
															"statements": [
																{
																	"nativeSrc": "4059:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4059:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4073:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4073:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4063:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4063:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4089:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4089:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4124:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4124:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4135:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4135:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4120:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4120:3:7"
																				},
																				"nativeSrc": "4120:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4120:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4144:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4144:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4099:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4099:20:7"
																		},
																		"nativeSrc": "4099:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4099:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4089:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4089:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "3695:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3740:9:7",
														"nodeType": "YulTypedName",
														"src": "3740:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3751:7:7",
														"nodeType": "YulTypedName",
														"src": "3751:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3763:6:7",
														"nodeType": "YulTypedName",
														"src": "3763:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3771:6:7",
														"nodeType": "YulTypedName",
														"src": "3771:6:7",
														"type": ""
													}
												],
												"src": "3695:474:7"
											},
											{
												"body": {
													"nativeSrc": "4234:51:7",
													"nodeType": "YulBlock",
													"src": "4234:51:7",
													"statements": [
														{
															"nativeSrc": "4244:35:7",
															"nodeType": "YulAssignment",
															"src": "4244:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4273:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4273:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "4255:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "4255:17:7"
																},
																"nativeSrc": "4255:24:7",
																"nodeType": "YulFunctionCall",
																"src": "4255:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4244:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4244:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$225",
												"nativeSrc": "4175:110:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4216:5:7",
														"nodeType": "YulTypedName",
														"src": "4216:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4226:7:7",
														"nodeType": "YulTypedName",
														"src": "4226:7:7",
														"type": ""
													}
												],
												"src": "4175:110:7"
											},
											{
												"body": {
													"nativeSrc": "4348:93:7",
													"nodeType": "YulBlock",
													"src": "4348:93:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4419:16:7",
																"nodeType": "YulBlock",
																"src": "4419:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4428:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4428:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4431:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4431:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4421:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4421:6:7"
																			},
																			"nativeSrc": "4421:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4421:12:7"
																		},
																		"nativeSrc": "4421:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4421:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4371:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4371:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4410:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4410:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$225",
																					"nativeSrc": "4378:31:7",
																					"nodeType": "YulIdentifier",
																					"src": "4378:31:7"
																				},
																				"nativeSrc": "4378:38:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4378:38:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4368:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4368:2:7"
																		},
																		"nativeSrc": "4368:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4368:49:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4361:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4361:6:7"
																},
																"nativeSrc": "4361:57:7",
																"nodeType": "YulFunctionCall",
																"src": "4361:57:7"
															},
															"nativeSrc": "4358:77:7",
															"nodeType": "YulIf",
															"src": "4358:77:7"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$225",
												"nativeSrc": "4291:150:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:7",
														"nodeType": "YulTypedName",
														"src": "4341:5:7",
														"type": ""
													}
												],
												"src": "4291:150:7"
											},
											{
												"body": {
													"nativeSrc": "4513:101:7",
													"nodeType": "YulBlock",
													"src": "4513:101:7",
													"statements": [
														{
															"nativeSrc": "4523:29:7",
															"nodeType": "YulAssignment",
															"src": "4523:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4545:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4545:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4532:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4532:12:7"
																},
																"nativeSrc": "4532:20:7",
																"nodeType": "YulFunctionCall",
																"src": "4532:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4523:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4523:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4602:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4602:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$225",
																	"nativeSrc": "4561:40:7",
																	"nodeType": "YulIdentifier",
																	"src": "4561:40:7"
																},
																"nativeSrc": "4561:47:7",
																"nodeType": "YulFunctionCall",
																"src": "4561:47:7"
															},
															"nativeSrc": "4561:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "4561:47:7"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$225",
												"nativeSrc": "4447:167:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4491:6:7",
														"nodeType": "YulTypedName",
														"src": "4491:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4499:3:7",
														"nodeType": "YulTypedName",
														"src": "4499:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4507:5:7",
														"nodeType": "YulTypedName",
														"src": "4507:5:7",
														"type": ""
													}
												],
												"src": "4447:167:7"
											},
											{
												"body": {
													"nativeSrc": "4662:48:7",
													"nodeType": "YulBlock",
													"src": "4662:48:7",
													"statements": [
														{
															"nativeSrc": "4672:32:7",
															"nodeType": "YulAssignment",
															"src": "4672:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4697:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4697:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4690:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4690:6:7"
																		},
																		"nativeSrc": "4690:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4690:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4683:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4683:6:7"
																},
																"nativeSrc": "4683:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4683:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4672:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4672:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4620:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4644:5:7",
														"nodeType": "YulTypedName",
														"src": "4644:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4654:7:7",
														"nodeType": "YulTypedName",
														"src": "4654:7:7",
														"type": ""
													}
												],
												"src": "4620:90:7"
											},
											{
												"body": {
													"nativeSrc": "4756:76:7",
													"nodeType": "YulBlock",
													"src": "4756:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4810:16:7",
																"nodeType": "YulBlock",
																"src": "4810:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4819:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4819:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4822:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4822:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4812:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4812:6:7"
																			},
																			"nativeSrc": "4812:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4812:12:7"
																		},
																		"nativeSrc": "4812:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4812:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4779:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4779:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4801:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4801:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4786:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "4786:14:7"
																				},
																				"nativeSrc": "4786:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4786:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4776:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4776:2:7"
																		},
																		"nativeSrc": "4776:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4776:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4769:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4769:6:7"
																},
																"nativeSrc": "4769:40:7",
																"nodeType": "YulFunctionCall",
																"src": "4769:40:7"
															},
															"nativeSrc": "4766:60:7",
															"nodeType": "YulIf",
															"src": "4766:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "4716:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4749:5:7",
														"nodeType": "YulTypedName",
														"src": "4749:5:7",
														"type": ""
													}
												],
												"src": "4716:116:7"
											},
											{
												"body": {
													"nativeSrc": "4887:84:7",
													"nodeType": "YulBlock",
													"src": "4887:84:7",
													"statements": [
														{
															"nativeSrc": "4897:29:7",
															"nodeType": "YulAssignment",
															"src": "4897:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4919:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4919:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4906:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4906:12:7"
																},
																"nativeSrc": "4906:20:7",
																"nodeType": "YulFunctionCall",
																"src": "4906:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4897:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4897:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4959:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4959:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "4935:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "4935:23:7"
																},
																"nativeSrc": "4935:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4935:30:7"
															},
															"nativeSrc": "4935:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4935:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "4838:133:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4865:6:7",
														"nodeType": "YulTypedName",
														"src": "4865:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4873:3:7",
														"nodeType": "YulTypedName",
														"src": "4873:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4881:5:7",
														"nodeType": "YulTypedName",
														"src": "4881:5:7",
														"type": ""
													}
												],
												"src": "4838:133:7"
											},
											{
												"body": {
													"nativeSrc": "5088:530:7",
													"nodeType": "YulBlock",
													"src": "5088:530:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5134:83:7",
																"nodeType": "YulBlock",
																"src": "5134:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5136:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5136:77:7"
																			},
																			"nativeSrc": "5136:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5136:79:7"
																		},
																		"nativeSrc": "5136:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5136:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5109:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5109:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5118:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5118:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5105:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5105:3:7"
																		},
																		"nativeSrc": "5105:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5105:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5130:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5130:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5101:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5101:3:7"
																},
																"nativeSrc": "5101:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5101:32:7"
															},
															"nativeSrc": "5098:119:7",
															"nodeType": "YulIf",
															"src": "5098:119:7"
														},
														{
															"nativeSrc": "5227:117:7",
															"nodeType": "YulBlock",
															"src": "5227:117:7",
															"statements": [
																{
																	"nativeSrc": "5242:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5242:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5256:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5256:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5246:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5246:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5271:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5271:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5306:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5306:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5317:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5317:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5302:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5302:3:7"
																				},
																				"nativeSrc": "5302:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5302:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5326:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5326:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5281:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5281:20:7"
																		},
																		"nativeSrc": "5281:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5281:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5271:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5271:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5354:132:7",
															"nodeType": "YulBlock",
															"src": "5354:132:7",
															"statements": [
																{
																	"nativeSrc": "5369:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5369:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5383:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5383:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5373:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5373:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5399:77:7",
																	"nodeType": "YulAssignment",
																	"src": "5399:77:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5448:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5448:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5459:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5459:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5444:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5444:3:7"
																				},
																				"nativeSrc": "5444:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5444:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5468:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5468:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$225",
																			"nativeSrc": "5409:34:7",
																			"nodeType": "YulIdentifier",
																			"src": "5409:34:7"
																		},
																		"nativeSrc": "5409:67:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5409:67:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5399:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5399:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5496:115:7",
															"nodeType": "YulBlock",
															"src": "5496:115:7",
															"statements": [
																{
																	"nativeSrc": "5511:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5511:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5525:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5525:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5515:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5515:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5541:60:7",
																	"nodeType": "YulAssignment",
																	"src": "5541:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5573:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5573:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5584:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5584:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5569:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5569:3:7"
																				},
																				"nativeSrc": "5569:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5569:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5593:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5593:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "5551:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5551:17:7"
																		},
																		"nativeSrc": "5551:50:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5551:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5541:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5541:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC20_$225t_bool",
												"nativeSrc": "4977:641:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5042:9:7",
														"nodeType": "YulTypedName",
														"src": "5042:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5053:7:7",
														"nodeType": "YulTypedName",
														"src": "5053:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5065:6:7",
														"nodeType": "YulTypedName",
														"src": "5065:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5073:6:7",
														"nodeType": "YulTypedName",
														"src": "5073:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5081:6:7",
														"nodeType": "YulTypedName",
														"src": "5081:6:7",
														"type": ""
													}
												],
												"src": "4977:641:7"
											},
											{
												"body": {
													"nativeSrc": "5707:391:7",
													"nodeType": "YulBlock",
													"src": "5707:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5753:83:7",
																"nodeType": "YulBlock",
																"src": "5753:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5755:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5755:77:7"
																			},
																			"nativeSrc": "5755:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5755:79:7"
																		},
																		"nativeSrc": "5755:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5755:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5728:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5728:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5737:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5724:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5724:3:7"
																		},
																		"nativeSrc": "5724:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5724:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5749:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5749:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5720:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5720:3:7"
																},
																"nativeSrc": "5720:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5720:32:7"
															},
															"nativeSrc": "5717:119:7",
															"nodeType": "YulIf",
															"src": "5717:119:7"
														},
														{
															"nativeSrc": "5846:117:7",
															"nodeType": "YulBlock",
															"src": "5846:117:7",
															"statements": [
																{
																	"nativeSrc": "5861:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5861:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5875:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5875:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5865:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5865:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5890:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5890:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5925:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5925:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5936:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5936:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5921:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5921:3:7"
																				},
																				"nativeSrc": "5921:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5921:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5945:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5945:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5900:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5900:20:7"
																		},
																		"nativeSrc": "5900:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5900:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5890:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5890:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5973:118:7",
															"nodeType": "YulBlock",
															"src": "5973:118:7",
															"statements": [
																{
																	"nativeSrc": "5988:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5988:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6002:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6002:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5992:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5992:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6018:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6018:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6053:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6053:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6064:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6064:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6049:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6049:3:7"
																				},
																				"nativeSrc": "6049:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6049:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6073:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6073:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6028:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6028:20:7"
																		},
																		"nativeSrc": "6028:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6028:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6018:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6018:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "5624:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5669:9:7",
														"nodeType": "YulTypedName",
														"src": "5669:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5680:7:7",
														"nodeType": "YulTypedName",
														"src": "5680:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5692:6:7",
														"nodeType": "YulTypedName",
														"src": "5692:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5700:6:7",
														"nodeType": "YulTypedName",
														"src": "5700:6:7",
														"type": ""
													}
												],
												"src": "5624:474:7"
											},
											{
												"body": {
													"nativeSrc": "6201:516:7",
													"nodeType": "YulBlock",
													"src": "6201:516:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6247:83:7",
																"nodeType": "YulBlock",
																"src": "6247:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6249:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6249:77:7"
																			},
																			"nativeSrc": "6249:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6249:79:7"
																		},
																		"nativeSrc": "6249:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6249:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6222:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6222:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6231:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6231:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6218:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6218:3:7"
																		},
																		"nativeSrc": "6218:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6218:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6243:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6243:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6214:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6214:3:7"
																},
																"nativeSrc": "6214:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6214:32:7"
															},
															"nativeSrc": "6211:119:7",
															"nodeType": "YulIf",
															"src": "6211:119:7"
														},
														{
															"nativeSrc": "6340:117:7",
															"nodeType": "YulBlock",
															"src": "6340:117:7",
															"statements": [
																{
																	"nativeSrc": "6355:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6355:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6369:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6369:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6359:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6359:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6384:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6384:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6419:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6419:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6430:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6430:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6415:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6415:3:7"
																				},
																				"nativeSrc": "6415:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6415:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6439:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6439:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6394:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6394:20:7"
																		},
																		"nativeSrc": "6394:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6394:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6384:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6384:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6467:118:7",
															"nodeType": "YulBlock",
															"src": "6467:118:7",
															"statements": [
																{
																	"nativeSrc": "6482:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6482:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6496:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6496:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6486:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6486:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6512:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6512:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6547:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6547:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6558:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6558:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6543:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6543:3:7"
																				},
																				"nativeSrc": "6543:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6543:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6567:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6567:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6522:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6522:20:7"
																		},
																		"nativeSrc": "6522:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6522:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6512:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6512:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6595:115:7",
															"nodeType": "YulBlock",
															"src": "6595:115:7",
															"statements": [
																{
																	"nativeSrc": "6610:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6610:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6624:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6624:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6614:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6614:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6640:60:7",
																	"nodeType": "YulAssignment",
																	"src": "6640:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6672:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6672:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6683:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6683:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6668:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6668:3:7"
																				},
																				"nativeSrc": "6668:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6668:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6692:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6692:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6650:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6650:17:7"
																		},
																		"nativeSrc": "6650:50:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6650:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6640:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6640:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nativeSrc": "6104:613:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6155:9:7",
														"nodeType": "YulTypedName",
														"src": "6155:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6166:7:7",
														"nodeType": "YulTypedName",
														"src": "6166:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6178:6:7",
														"nodeType": "YulTypedName",
														"src": "6178:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6186:6:7",
														"nodeType": "YulTypedName",
														"src": "6186:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6194:6:7",
														"nodeType": "YulTypedName",
														"src": "6194:6:7",
														"type": ""
													}
												],
												"src": "6104:613:7"
											},
											{
												"body": {
													"nativeSrc": "6788:53:7",
													"nodeType": "YulBlock",
													"src": "6788:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6805:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6805:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6828:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6828:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6810:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6810:17:7"
																		},
																		"nativeSrc": "6810:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6810:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6798:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6798:6:7"
																},
																"nativeSrc": "6798:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6798:37:7"
															},
															"nativeSrc": "6798:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6798:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6723:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6776:5:7",
														"nodeType": "YulTypedName",
														"src": "6776:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6783:3:7",
														"nodeType": "YulTypedName",
														"src": "6783:3:7",
														"type": ""
													}
												],
												"src": "6723:118:7"
											},
											{
												"body": {
													"nativeSrc": "6945:124:7",
													"nodeType": "YulBlock",
													"src": "6945:124:7",
													"statements": [
														{
															"nativeSrc": "6955:26:7",
															"nodeType": "YulAssignment",
															"src": "6955:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6967:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6967:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6978:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6978:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6963:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6963:3:7"
																},
																"nativeSrc": "6963:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6963:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6955:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6955:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7035:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7035:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7048:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7048:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7059:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7059:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7044:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7044:3:7"
																		},
																		"nativeSrc": "7044:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7044:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6991:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6991:43:7"
																},
																"nativeSrc": "6991:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6991:71:7"
															},
															"nativeSrc": "6991:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6991:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6847:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6917:9:7",
														"nodeType": "YulTypedName",
														"src": "6917:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6929:6:7",
														"nodeType": "YulTypedName",
														"src": "6929:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6940:4:7",
														"nodeType": "YulTypedName",
														"src": "6940:4:7",
														"type": ""
													}
												],
												"src": "6847:222:7"
											},
											{
												"body": {
													"nativeSrc": "7201:206:7",
													"nodeType": "YulBlock",
													"src": "7201:206:7",
													"statements": [
														{
															"nativeSrc": "7211:26:7",
															"nodeType": "YulAssignment",
															"src": "7211:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7223:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7223:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7234:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7234:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7219:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7219:3:7"
																},
																"nativeSrc": "7219:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7219:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7211:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7211:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7291:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7291:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7304:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7304:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7315:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7315:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7300:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7300:3:7"
																		},
																		"nativeSrc": "7300:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7300:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7247:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7247:43:7"
																},
																"nativeSrc": "7247:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7247:71:7"
															},
															"nativeSrc": "7247:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7247:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7372:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7372:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7385:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7385:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7396:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7396:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7381:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7381:3:7"
																		},
																		"nativeSrc": "7381:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7381:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7328:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7328:43:7"
																},
																"nativeSrc": "7328:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7328:72:7"
															},
															"nativeSrc": "7328:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7328:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7075:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7165:9:7",
														"nodeType": "YulTypedName",
														"src": "7165:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7177:6:7",
														"nodeType": "YulTypedName",
														"src": "7177:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7185:6:7",
														"nodeType": "YulTypedName",
														"src": "7185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7196:4:7",
														"nodeType": "YulTypedName",
														"src": "7196:4:7",
														"type": ""
													}
												],
												"src": "7075:332:7"
											},
											{
												"body": {
													"nativeSrc": "7479:263:7",
													"nodeType": "YulBlock",
													"src": "7479:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7525:83:7",
																"nodeType": "YulBlock",
																"src": "7525:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7527:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7527:77:7"
																			},
																			"nativeSrc": "7527:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7527:79:7"
																		},
																		"nativeSrc": "7527:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7527:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7500:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7500:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7509:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7509:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7496:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7496:3:7"
																		},
																		"nativeSrc": "7496:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7496:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7521:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7521:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7492:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7492:3:7"
																},
																"nativeSrc": "7492:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7492:32:7"
															},
															"nativeSrc": "7489:119:7",
															"nodeType": "YulIf",
															"src": "7489:119:7"
														},
														{
															"nativeSrc": "7618:117:7",
															"nodeType": "YulBlock",
															"src": "7618:117:7",
															"statements": [
																{
																	"nativeSrc": "7633:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7633:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7647:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7647:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7637:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7637:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7662:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7662:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7697:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7697:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7708:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7708:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7693:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7693:3:7"
																				},
																				"nativeSrc": "7693:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7693:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7717:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7717:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7672:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7672:20:7"
																		},
																		"nativeSrc": "7672:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7672:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7662:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7662:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7413:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7449:9:7",
														"nodeType": "YulTypedName",
														"src": "7449:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7460:7:7",
														"nodeType": "YulTypedName",
														"src": "7460:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7472:6:7",
														"nodeType": "YulTypedName",
														"src": "7472:6:7",
														"type": ""
													}
												],
												"src": "7413:329:7"
											},
											{
												"body": {
													"nativeSrc": "7776:152:7",
													"nodeType": "YulBlock",
													"src": "7776:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7793:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7793:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7796:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7796:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7786:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7786:6:7"
																},
																"nativeSrc": "7786:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7786:88:7"
															},
															"nativeSrc": "7786:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7786:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7890:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7890:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7893:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7893:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7883:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7883:6:7"
																},
																"nativeSrc": "7883:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7883:15:7"
															},
															"nativeSrc": "7883:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7883:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7914:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7914:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7917:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7917:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7907:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7907:6:7"
																},
																"nativeSrc": "7907:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7907:15:7"
															},
															"nativeSrc": "7907:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7907:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7748:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7748:180:7"
											},
											{
												"body": {
													"nativeSrc": "7997:80:7",
													"nodeType": "YulBlock",
													"src": "7997:80:7",
													"statements": [
														{
															"nativeSrc": "8007:22:7",
															"nodeType": "YulAssignment",
															"src": "8007:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8022:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8022:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8016:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8016:5:7"
																},
																"nativeSrc": "8016:13:7",
																"nodeType": "YulFunctionCall",
																"src": "8016:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8007:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8007:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8065:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8065:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8038:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "8038:26:7"
																},
																"nativeSrc": "8038:33:7",
																"nodeType": "YulFunctionCall",
																"src": "8038:33:7"
															},
															"nativeSrc": "8038:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "8038:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7934:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7975:6:7",
														"nodeType": "YulTypedName",
														"src": "7975:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7983:3:7",
														"nodeType": "YulTypedName",
														"src": "7983:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7991:5:7",
														"nodeType": "YulTypedName",
														"src": "7991:5:7",
														"type": ""
													}
												],
												"src": "7934:143:7"
											},
											{
												"body": {
													"nativeSrc": "8160:274:7",
													"nodeType": "YulBlock",
													"src": "8160:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8206:83:7",
																"nodeType": "YulBlock",
																"src": "8206:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8208:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "8208:77:7"
																			},
																			"nativeSrc": "8208:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8208:79:7"
																		},
																		"nativeSrc": "8208:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8208:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8181:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8181:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8190:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8190:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8177:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8177:3:7"
																		},
																		"nativeSrc": "8177:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8177:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8202:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8202:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8173:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8173:3:7"
																},
																"nativeSrc": "8173:32:7",
																"nodeType": "YulFunctionCall",
																"src": "8173:32:7"
															},
															"nativeSrc": "8170:119:7",
															"nodeType": "YulIf",
															"src": "8170:119:7"
														},
														{
															"nativeSrc": "8299:128:7",
															"nodeType": "YulBlock",
															"src": "8299:128:7",
															"statements": [
																{
																	"nativeSrc": "8314:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8314:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8328:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8328:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8318:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8318:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8343:74:7",
																	"nodeType": "YulAssignment",
																	"src": "8343:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8389:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8389:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8400:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8400:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8385:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8385:3:7"
																				},
																				"nativeSrc": "8385:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8385:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8409:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8409:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8353:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "8353:31:7"
																		},
																		"nativeSrc": "8353:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8353:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8343:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8343:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8083:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8130:9:7",
														"nodeType": "YulTypedName",
														"src": "8130:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8141:7:7",
														"nodeType": "YulTypedName",
														"src": "8141:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8153:6:7",
														"nodeType": "YulTypedName",
														"src": "8153:6:7",
														"type": ""
													}
												],
												"src": "8083:351:7"
											},
											{
												"body": {
													"nativeSrc": "8468:152:7",
													"nodeType": "YulBlock",
													"src": "8468:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8485:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8485:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8488:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8488:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8478:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8478:6:7"
																},
																"nativeSrc": "8478:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8478:88:7"
															},
															"nativeSrc": "8478:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8478:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8582:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8582:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8585:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8585:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8575:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8575:6:7"
																},
																"nativeSrc": "8575:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8575:15:7"
															},
															"nativeSrc": "8575:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8575:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8606:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8606:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8609:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8609:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8599:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8599:6:7"
																},
																"nativeSrc": "8599:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8599:15:7"
															},
															"nativeSrc": "8599:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8599:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8440:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8440:180:7"
											},
											{
												"body": {
													"nativeSrc": "8674:362:7",
													"nodeType": "YulBlock",
													"src": "8674:362:7",
													"statements": [
														{
															"nativeSrc": "8684:25:7",
															"nodeType": "YulAssignment",
															"src": "8684:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8707:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8707:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8689:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8689:17:7"
																},
																"nativeSrc": "8689:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8689:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8684:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8684:1:7"
																}
															]
														},
														{
															"nativeSrc": "8718:25:7",
															"nodeType": "YulAssignment",
															"src": "8718:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8741:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8741:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8723:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8723:17:7"
																},
																"nativeSrc": "8723:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8723:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8718:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8718:1:7"
																}
															]
														},
														{
															"nativeSrc": "8752:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8752:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8775:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8775:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8778:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8778:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8771:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8771:3:7"
																},
																"nativeSrc": "8771:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8771:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8756:11:7",
																	"nodeType": "YulTypedName",
																	"src": "8756:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8789:41:7",
															"nodeType": "YulAssignment",
															"src": "8789:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8818:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "8818:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8800:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8800:17:7"
																},
																"nativeSrc": "8800:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8800:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8789:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8789:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9007:22:7",
																"nodeType": "YulBlock",
																"src": "9007:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9009:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9009:16:7"
																			},
																			"nativeSrc": "9009:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9009:18:7"
																		},
																		"nativeSrc": "9009:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9009:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8940:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8940:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8933:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8933:6:7"
																				},
																				"nativeSrc": "8933:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8933:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8963:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8963:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8970:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "8970:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8979:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "8979:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8966:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8966:3:7"
																						},
																						"nativeSrc": "8966:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8966:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8960:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8960:2:7"
																				},
																				"nativeSrc": "8960:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8960:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8913:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8913:2:7"
																		},
																		"nativeSrc": "8913:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8913:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8893:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8893:6:7"
																},
																"nativeSrc": "8893:113:7",
																"nodeType": "YulFunctionCall",
																"src": "8893:113:7"
															},
															"nativeSrc": "8890:139:7",
															"nodeType": "YulIf",
															"src": "8890:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8626:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8657:1:7",
														"nodeType": "YulTypedName",
														"src": "8657:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8660:1:7",
														"nodeType": "YulTypedName",
														"src": "8660:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8666:7:7",
														"nodeType": "YulTypedName",
														"src": "8666:7:7",
														"type": ""
													}
												],
												"src": "8626:410:7"
											},
											{
												"body": {
													"nativeSrc": "9070:152:7",
													"nodeType": "YulBlock",
													"src": "9070:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9087:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9087:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9090:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9090:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9080:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9080:6:7"
																},
																"nativeSrc": "9080:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9080:88:7"
															},
															"nativeSrc": "9080:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9080:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9184:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9184:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9187:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9187:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9177:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9177:6:7"
																},
																"nativeSrc": "9177:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9177:15:7"
															},
															"nativeSrc": "9177:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9177:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9208:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9208:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9211:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9211:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9201:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9201:6:7"
																},
																"nativeSrc": "9201:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9201:15:7"
															},
															"nativeSrc": "9201:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9201:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9042:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9042:180:7"
											},
											{
												"body": {
													"nativeSrc": "9270:143:7",
													"nodeType": "YulBlock",
													"src": "9270:143:7",
													"statements": [
														{
															"nativeSrc": "9280:25:7",
															"nodeType": "YulAssignment",
															"src": "9280:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9303:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9303:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9285:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9285:17:7"
																},
																"nativeSrc": "9285:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9285:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9280:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9280:1:7"
																}
															]
														},
														{
															"nativeSrc": "9314:25:7",
															"nodeType": "YulAssignment",
															"src": "9314:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9337:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9337:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9319:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9319:17:7"
																},
																"nativeSrc": "9319:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9319:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9314:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9314:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9361:22:7",
																"nodeType": "YulBlock",
																"src": "9361:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9363:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9363:16:7"
																			},
																			"nativeSrc": "9363:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9363:18:7"
																		},
																		"nativeSrc": "9363:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9363:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9358:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9358:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9351:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9351:6:7"
																},
																"nativeSrc": "9351:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9351:9:7"
															},
															"nativeSrc": "9348:35:7",
															"nodeType": "YulIf",
															"src": "9348:35:7"
														},
														{
															"nativeSrc": "9393:14:7",
															"nodeType": "YulAssignment",
															"src": "9393:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9402:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9402:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9405:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9405:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9398:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9398:3:7"
																},
																"nativeSrc": "9398:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9398:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9393:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9393:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9228:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9259:1:7",
														"nodeType": "YulTypedName",
														"src": "9259:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9262:1:7",
														"nodeType": "YulTypedName",
														"src": "9262:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9268:1:7",
														"nodeType": "YulTypedName",
														"src": "9268:1:7",
														"type": ""
													}
												],
												"src": "9228:185:7"
											},
											{
												"body": {
													"nativeSrc": "9463:147:7",
													"nodeType": "YulBlock",
													"src": "9463:147:7",
													"statements": [
														{
															"nativeSrc": "9473:25:7",
															"nodeType": "YulAssignment",
															"src": "9473:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9496:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9496:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9478:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9478:17:7"
																},
																"nativeSrc": "9478:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9478:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9473:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9473:1:7"
																}
															]
														},
														{
															"nativeSrc": "9507:25:7",
															"nodeType": "YulAssignment",
															"src": "9507:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9530:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9530:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9512:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9512:17:7"
																},
																"nativeSrc": "9512:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9512:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9507:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9507:1:7"
																}
															]
														},
														{
															"nativeSrc": "9541:16:7",
															"nodeType": "YulAssignment",
															"src": "9541:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9552:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9552:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9555:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9555:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9548:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9548:3:7"
																},
																"nativeSrc": "9548:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9548:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9541:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9541:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9581:22:7",
																"nodeType": "YulBlock",
																"src": "9581:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9583:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9583:16:7"
																			},
																			"nativeSrc": "9583:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9583:18:7"
																		},
																		"nativeSrc": "9583:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9583:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9573:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9573:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9576:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9576:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9570:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9570:2:7"
																},
																"nativeSrc": "9570:10:7",
																"nodeType": "YulFunctionCall",
																"src": "9570:10:7"
															},
															"nativeSrc": "9567:36:7",
															"nodeType": "YulIf",
															"src": "9567:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9419:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9450:1:7",
														"nodeType": "YulTypedName",
														"src": "9450:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9453:1:7",
														"nodeType": "YulTypedName",
														"src": "9453:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9459:3:7",
														"nodeType": "YulTypedName",
														"src": "9459:3:7",
														"type": ""
													}
												],
												"src": "9419:191:7"
											},
											{
												"body": {
													"nativeSrc": "9661:149:7",
													"nodeType": "YulBlock",
													"src": "9661:149:7",
													"statements": [
														{
															"nativeSrc": "9671:25:7",
															"nodeType": "YulAssignment",
															"src": "9671:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9694:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9694:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9676:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9676:17:7"
																},
																"nativeSrc": "9676:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9676:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9671:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9671:1:7"
																}
															]
														},
														{
															"nativeSrc": "9705:25:7",
															"nodeType": "YulAssignment",
															"src": "9705:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9728:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9728:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9710:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9710:17:7"
																},
																"nativeSrc": "9710:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9710:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9705:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9705:1:7"
																}
															]
														},
														{
															"nativeSrc": "9739:17:7",
															"nodeType": "YulAssignment",
															"src": "9739:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9751:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9751:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9754:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9754:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9747:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9747:3:7"
																},
																"nativeSrc": "9747:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9747:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9739:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9739:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9781:22:7",
																"nodeType": "YulBlock",
																"src": "9781:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9783:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9783:16:7"
																			},
																			"nativeSrc": "9783:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9783:18:7"
																		},
																		"nativeSrc": "9783:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9783:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9772:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9772:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9778:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9778:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9769:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9769:2:7"
																},
																"nativeSrc": "9769:11:7",
																"nodeType": "YulFunctionCall",
																"src": "9769:11:7"
															},
															"nativeSrc": "9766:37:7",
															"nodeType": "YulIf",
															"src": "9766:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9616:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9647:1:7",
														"nodeType": "YulTypedName",
														"src": "9647:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9650:1:7",
														"nodeType": "YulTypedName",
														"src": "9650:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9656:4:7",
														"nodeType": "YulTypedName",
														"src": "9656:4:7",
														"type": ""
													}
												],
												"src": "9616:194:7"
											},
											{
												"body": {
													"nativeSrc": "9912:73:7",
													"nodeType": "YulBlock",
													"src": "9912:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9929:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9929:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9934:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9934:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9922:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9922:6:7"
																},
																"nativeSrc": "9922:19:7",
																"nodeType": "YulFunctionCall",
																"src": "9922:19:7"
															},
															"nativeSrc": "9922:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "9922:19:7"
														},
														{
															"nativeSrc": "9950:29:7",
															"nodeType": "YulAssignment",
															"src": "9950:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9969:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9969:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9974:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9974:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9965:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9965:3:7"
																},
																"nativeSrc": "9965:14:7",
																"nodeType": "YulFunctionCall",
																"src": "9965:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9950:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9950:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9816:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9884:3:7",
														"nodeType": "YulTypedName",
														"src": "9884:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9889:6:7",
														"nodeType": "YulTypedName",
														"src": "9889:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9900:11:7",
														"nodeType": "YulTypedName",
														"src": "9900:11:7",
														"type": ""
													}
												],
												"src": "9816:169:7"
											},
											{
												"body": {
													"nativeSrc": "10097:62:7",
													"nodeType": "YulBlock",
													"src": "10097:62:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10119:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10119:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10127:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10127:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10115:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10115:3:7"
																		},
																		"nativeSrc": "10115:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10115:14:7"
																	},
																	{
																		"hexValue": "77697468647261773a206e6f7420676f6f64",
																		"kind": "string",
																		"nativeSrc": "10131:20:7",
																		"nodeType": "YulLiteral",
																		"src": "10131:20:7",
																		"type": "",
																		"value": "withdraw: not good"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10108:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10108:6:7"
																},
																"nativeSrc": "10108:44:7",
																"nodeType": "YulFunctionCall",
																"src": "10108:44:7"
															},
															"nativeSrc": "10108:44:7",
															"nodeType": "YulExpressionStatement",
															"src": "10108:44:7"
														}
													]
												},
												"name": "store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
												"nativeSrc": "9991:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10089:6:7",
														"nodeType": "YulTypedName",
														"src": "10089:6:7",
														"type": ""
													}
												],
												"src": "9991:168:7"
											},
											{
												"body": {
													"nativeSrc": "10311:220:7",
													"nodeType": "YulBlock",
													"src": "10311:220:7",
													"statements": [
														{
															"nativeSrc": "10321:74:7",
															"nodeType": "YulAssignment",
															"src": "10321:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10387:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10387:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10392:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10392:2:7",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10328:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10328:58:7"
																},
																"nativeSrc": "10328:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10328:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10321:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10321:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10493:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10493:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																	"nativeSrc": "10404:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10404:88:7"
																},
																"nativeSrc": "10404:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10404:93:7"
															},
															"nativeSrc": "10404:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10404:93:7"
														},
														{
															"nativeSrc": "10506:19:7",
															"nodeType": "YulAssignment",
															"src": "10506:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10517:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10517:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10522:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10522:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10513:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10513:3:7"
																},
																"nativeSrc": "10513:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10513:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10506:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10506:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10165:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10299:3:7",
														"nodeType": "YulTypedName",
														"src": "10299:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10307:3:7",
														"nodeType": "YulTypedName",
														"src": "10307:3:7",
														"type": ""
													}
												],
												"src": "10165:366:7"
											},
											{
												"body": {
													"nativeSrc": "10708:248:7",
													"nodeType": "YulBlock",
													"src": "10708:248:7",
													"statements": [
														{
															"nativeSrc": "10718:26:7",
															"nodeType": "YulAssignment",
															"src": "10718:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10730:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10730:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10741:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10741:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10726:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10726:3:7"
																},
																"nativeSrc": "10726:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10726:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10718:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10718:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10765:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10765:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10776:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10776:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10761:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10761:3:7"
																		},
																		"nativeSrc": "10761:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10761:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10784:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10784:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10790:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10790:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10780:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10780:3:7"
																		},
																		"nativeSrc": "10780:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10780:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10754:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10754:6:7"
																},
																"nativeSrc": "10754:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10754:47:7"
															},
															"nativeSrc": "10754:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10754:47:7"
														},
														{
															"nativeSrc": "10810:139:7",
															"nodeType": "YulAssignment",
															"src": "10810:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10944:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10944:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10818:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10818:124:7"
																},
																"nativeSrc": "10818:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10818:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10810:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10810:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10537:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10688:9:7",
														"nodeType": "YulTypedName",
														"src": "10688:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10703:4:7",
														"nodeType": "YulTypedName",
														"src": "10703:4:7",
														"type": ""
													}
												],
												"src": "10537:419:7"
											},
											{
												"body": {
													"nativeSrc": "11088:206:7",
													"nodeType": "YulBlock",
													"src": "11088:206:7",
													"statements": [
														{
															"nativeSrc": "11098:26:7",
															"nodeType": "YulAssignment",
															"src": "11098:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11110:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11110:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11121:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11121:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11106:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11106:3:7"
																},
																"nativeSrc": "11106:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11106:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11098:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11098:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11178:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11178:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11191:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11191:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11202:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11202:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11187:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11187:3:7"
																		},
																		"nativeSrc": "11187:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11187:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11134:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11134:43:7"
																},
																"nativeSrc": "11134:71:7",
																"nodeType": "YulFunctionCall",
																"src": "11134:71:7"
															},
															"nativeSrc": "11134:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "11134:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11259:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11259:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11272:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11272:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11283:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11283:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11268:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11268:3:7"
																		},
																		"nativeSrc": "11268:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11268:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11215:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11215:43:7"
																},
																"nativeSrc": "11215:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11215:72:7"
															},
															"nativeSrc": "11215:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11215:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10962:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11052:9:7",
														"nodeType": "YulTypedName",
														"src": "11052:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11064:6:7",
														"nodeType": "YulTypedName",
														"src": "11064:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11072:6:7",
														"nodeType": "YulTypedName",
														"src": "11072:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11083:4:7",
														"nodeType": "YulTypedName",
														"src": "11083:4:7",
														"type": ""
													}
												],
												"src": "10962:332:7"
											},
											{
												"body": {
													"nativeSrc": "11360:77:7",
													"nodeType": "YulBlock",
													"src": "11360:77:7",
													"statements": [
														{
															"nativeSrc": "11370:22:7",
															"nodeType": "YulAssignment",
															"src": "11370:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11385:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11385:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11379:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11379:5:7"
																},
																"nativeSrc": "11379:13:7",
																"nodeType": "YulFunctionCall",
																"src": "11379:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11370:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11370:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11425:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11425:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "11401:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "11401:23:7"
																},
																"nativeSrc": "11401:30:7",
																"nodeType": "YulFunctionCall",
																"src": "11401:30:7"
															},
															"nativeSrc": "11401:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "11401:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "11300:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11338:6:7",
														"nodeType": "YulTypedName",
														"src": "11338:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11346:3:7",
														"nodeType": "YulTypedName",
														"src": "11346:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11354:5:7",
														"nodeType": "YulTypedName",
														"src": "11354:5:7",
														"type": ""
													}
												],
												"src": "11300:137:7"
											},
											{
												"body": {
													"nativeSrc": "11517:271:7",
													"nodeType": "YulBlock",
													"src": "11517:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "11563:83:7",
																"nodeType": "YulBlock",
																"src": "11563:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11565:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "11565:77:7"
																			},
																			"nativeSrc": "11565:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11565:79:7"
																		},
																		"nativeSrc": "11565:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11565:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11538:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11538:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11547:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11547:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11534:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11534:3:7"
																		},
																		"nativeSrc": "11534:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11534:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11559:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11559:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11530:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11530:3:7"
																},
																"nativeSrc": "11530:32:7",
																"nodeType": "YulFunctionCall",
																"src": "11530:32:7"
															},
															"nativeSrc": "11527:119:7",
															"nodeType": "YulIf",
															"src": "11527:119:7"
														},
														{
															"nativeSrc": "11656:125:7",
															"nodeType": "YulBlock",
															"src": "11656:125:7",
															"statements": [
																{
																	"nativeSrc": "11671:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11671:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11685:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11685:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11675:6:7",
																			"nodeType": "YulTypedName",
																			"src": "11675:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11700:71:7",
																	"nodeType": "YulAssignment",
																	"src": "11700:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11743:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "11743:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11754:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "11754:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11739:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11739:3:7"
																				},
																				"nativeSrc": "11739:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11739:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11763:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11763:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "11710:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "11710:28:7"
																		},
																		"nativeSrc": "11710:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11710:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11700:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "11700:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "11443:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11487:9:7",
														"nodeType": "YulTypedName",
														"src": "11487:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11498:7:7",
														"nodeType": "YulTypedName",
														"src": "11498:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11510:6:7",
														"nodeType": "YulTypedName",
														"src": "11510:6:7",
														"type": ""
													}
												],
												"src": "11443:345:7"
											},
											{
												"body": {
													"nativeSrc": "11948:288:7",
													"nodeType": "YulBlock",
													"src": "11948:288:7",
													"statements": [
														{
															"nativeSrc": "11958:26:7",
															"nodeType": "YulAssignment",
															"src": "11958:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11970:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11970:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11981:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11981:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11966:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11966:3:7"
																},
																"nativeSrc": "11966:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11966:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11958:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11958:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12038:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12038:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12051:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12051:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12062:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12062:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12047:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12047:3:7"
																		},
																		"nativeSrc": "12047:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12047:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11994:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11994:43:7"
																},
																"nativeSrc": "11994:71:7",
																"nodeType": "YulFunctionCall",
																"src": "11994:71:7"
															},
															"nativeSrc": "11994:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "11994:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12119:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12119:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12132:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12132:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12143:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12143:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12128:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12128:3:7"
																		},
																		"nativeSrc": "12128:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12128:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12075:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "12075:43:7"
																},
																"nativeSrc": "12075:72:7",
																"nodeType": "YulFunctionCall",
																"src": "12075:72:7"
															},
															"nativeSrc": "12075:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "12075:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12201:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12201:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12214:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12214:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12225:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12225:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12210:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12210:3:7"
																		},
																		"nativeSrc": "12210:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12210:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12157:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "12157:43:7"
																},
																"nativeSrc": "12157:72:7",
																"nodeType": "YulFunctionCall",
																"src": "12157:72:7"
															},
															"nativeSrc": "12157:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "12157:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11794:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11904:9:7",
														"nodeType": "YulTypedName",
														"src": "11904:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11916:6:7",
														"nodeType": "YulTypedName",
														"src": "11916:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11924:6:7",
														"nodeType": "YulTypedName",
														"src": "11924:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11932:6:7",
														"nodeType": "YulTypedName",
														"src": "11932:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11943:4:7",
														"nodeType": "YulTypedName",
														"src": "11943:4:7",
														"type": ""
													}
												],
												"src": "11794:442:7"
											},
											{
												"body": {
													"nativeSrc": "12300:40:7",
													"nodeType": "YulBlock",
													"src": "12300:40:7",
													"statements": [
														{
															"nativeSrc": "12311:22:7",
															"nodeType": "YulAssignment",
															"src": "12311:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12327:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "12327:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12321:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "12321:5:7"
																},
																"nativeSrc": "12321:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12321:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12311:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12311:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "12242:98:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12283:5:7",
														"nodeType": "YulTypedName",
														"src": "12283:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12293:6:7",
														"nodeType": "YulTypedName",
														"src": "12293:6:7",
														"type": ""
													}
												],
												"src": "12242:98:7"
											},
											{
												"body": {
													"nativeSrc": "12459:34:7",
													"nodeType": "YulBlock",
													"src": "12459:34:7",
													"statements": [
														{
															"nativeSrc": "12469:18:7",
															"nodeType": "YulAssignment",
															"src": "12469:18:7",
															"value": {
																"name": "pos",
																"nativeSrc": "12484:3:7",
																"nodeType": "YulIdentifier",
																"src": "12484:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12469:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "12469:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12346:147:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12431:3:7",
														"nodeType": "YulTypedName",
														"src": "12431:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12436:6:7",
														"nodeType": "YulTypedName",
														"src": "12436:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12447:11:7",
														"nodeType": "YulTypedName",
														"src": "12447:11:7",
														"type": ""
													}
												],
												"src": "12346:147:7"
											},
											{
												"body": {
													"nativeSrc": "12561:77:7",
													"nodeType": "YulBlock",
													"src": "12561:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "12578:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12578:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "12583:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12583:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12588:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12588:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "12572:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "12572:5:7"
																},
																"nativeSrc": "12572:23:7",
																"nodeType": "YulFunctionCall",
																"src": "12572:23:7"
															},
															"nativeSrc": "12572:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "12572:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "12615:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "12615:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "12620:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12620:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12611:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12611:3:7"
																		},
																		"nativeSrc": "12611:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12611:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12629:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12629:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12604:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12604:6:7"
																},
																"nativeSrc": "12604:27:7",
																"nodeType": "YulFunctionCall",
																"src": "12604:27:7"
															},
															"nativeSrc": "12604:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "12604:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "12499:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "12543:3:7",
														"nodeType": "YulTypedName",
														"src": "12543:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "12548:3:7",
														"nodeType": "YulTypedName",
														"src": "12548:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12553:6:7",
														"nodeType": "YulTypedName",
														"src": "12553:6:7",
														"type": ""
													}
												],
												"src": "12499:139:7"
											},
											{
												"body": {
													"nativeSrc": "12752:278:7",
													"nodeType": "YulBlock",
													"src": "12752:278:7",
													"statements": [
														{
															"nativeSrc": "12762:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "12762:52:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12808:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "12808:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "12776:31:7",
																	"nodeType": "YulIdentifier",
																	"src": "12776:31:7"
																},
																"nativeSrc": "12776:38:7",
																"nodeType": "YulFunctionCall",
																"src": "12776:38:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12766:6:7",
																	"nodeType": "YulTypedName",
																	"src": "12766:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12823:95:7",
															"nodeType": "YulAssignment",
															"src": "12823:95:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12906:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12906:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12911:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12911:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12830:75:7",
																	"nodeType": "YulIdentifier",
																	"src": "12830:75:7"
																},
																"nativeSrc": "12830:88:7",
																"nodeType": "YulFunctionCall",
																"src": "12830:88:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12823:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12823:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12966:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "12966:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12973:4:7",
																				"nodeType": "YulLiteral",
																				"src": "12973:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12962:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12962:3:7"
																		},
																		"nativeSrc": "12962:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12962:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12980:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12980:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12985:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12985:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12927:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "12927:34:7"
																},
																"nativeSrc": "12927:65:7",
																"nodeType": "YulFunctionCall",
																"src": "12927:65:7"
															},
															"nativeSrc": "12927:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "12927:65:7"
														},
														{
															"nativeSrc": "13001:23:7",
															"nodeType": "YulAssignment",
															"src": "13001:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13012:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13012:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13017:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13017:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13008:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13008:3:7"
																},
																"nativeSrc": "13008:16:7",
																"nodeType": "YulFunctionCall",
																"src": "13008:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13001:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13001:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12644:386:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12733:5:7",
														"nodeType": "YulTypedName",
														"src": "12733:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12740:3:7",
														"nodeType": "YulTypedName",
														"src": "12740:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12748:3:7",
														"nodeType": "YulTypedName",
														"src": "12748:3:7",
														"type": ""
													}
												],
												"src": "12644:386:7"
											},
											{
												"body": {
													"nativeSrc": "13170:137:7",
													"nodeType": "YulBlock",
													"src": "13170:137:7",
													"statements": [
														{
															"nativeSrc": "13181:100:7",
															"nodeType": "YulAssignment",
															"src": "13181:100:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13268:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13268:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13277:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13277:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13188:79:7",
																	"nodeType": "YulIdentifier",
																	"src": "13188:79:7"
																},
																"nativeSrc": "13188:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13188:93:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13181:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13181:3:7"
																}
															]
														},
														{
															"nativeSrc": "13291:10:7",
															"nodeType": "YulAssignment",
															"src": "13291:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "13298:3:7",
																"nodeType": "YulIdentifier",
																"src": "13298:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13291:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13291:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13036:271:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13149:3:7",
														"nodeType": "YulTypedName",
														"src": "13149:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13155:6:7",
														"nodeType": "YulTypedName",
														"src": "13155:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13166:3:7",
														"nodeType": "YulTypedName",
														"src": "13166:3:7",
														"type": ""
													}
												],
												"src": "13036:271:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISushi_$849_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISushi_$849_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISushi_$849_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISushi_$849__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISushi_$849_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IERC20_$225_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$225_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$225_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_IERC20_$225(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$225(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$225(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$225(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$225(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_contract$_IERC20_$225t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$225(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw: not good\")\n\n    }\n\n    function abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610135575f3560e01c80635312ea8e116100b65780638da5cb5b1161007a5780638da5cb5b146102f05780638dbb1e3a1461030e57806393f1a40b1461033e578063b0bcf42a1461036f578063e2bbb1581461038d578063f2fde38b146103a957610135565b80635312ea8e14610286578063630b5ba1146102a257806364482f79146102ac578063715018a6146102c85780638aa28550146102d257610135565b80631aed6553116100fd5780631aed6553146101f65780631eaaa04514610214578063441a3e701461023057806348cd4cb11461024c57806351eb05a61461026a57610135565b8063081e3eda146101395780630a087903146101575780631526fe271461017557806317caf6f1146101a8578063195426ec146101c6575b5f5ffd5b6101416103c5565b60405161014e919061163f565b60405180910390f35b61015f6103d1565b60405161016c91906116d2565b60405180910390f35b61018f600480360381019061018a9190611719565b6103f6565b60405161019f9493929190611764565b60405180910390f35b6101b0610450565b6040516101bd919061163f565b60405180910390f35b6101e060048036038101906101db91906117e2565b610456565b6040516101ed919061163f565b60405180910390f35b6101fe61062a565b60405161020b919061163f565b60405180910390f35b61022e60048036038101906102299190611890565b610630565b005b61024a600480360381019061024591906118e0565b61073a565b005b61025461091e565b604051610261919061163f565b60405180910390f35b610284600480360381019061027f9190611719565b610924565b005b6102a0600480360381019061029b9190611719565b610b17565b005b6102aa610c41565b005b6102c660048036038101906102c1919061191e565b610c6f565b005b6102d0610cf5565b005b6102da610d08565b6040516102e7919061163f565b60405180910390f35b6102f8610d0d565b604051610305919061197d565b60405180910390f35b610328600480360381019061032391906118e0565b610d34565b604051610335919061163f565b60405180910390f35b610358600480360381019061035391906117e2565b610d49565b604051610366929190611996565b60405180910390f35b610377610d74565b604051610384919061163f565b60405180910390f35b6103a760048036038101906103a291906118e0565b610d7a565b005b6103c360048036038101906103be91906119bd565b610f26565b005b5f600480549050905090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60048181548110610405575f80fd5b905f5260205f2090600402015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60065481565b5f5f6004848154811061046c5761046b6119e8565b5b905f5260205f20906004020190505f60055f8681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f826003015490505f835f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161052d919061197d565b602060405180830381865afa158015610548573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061056c9190611a29565b905083600201544311801561058157505f8114155b156105f0575f610595856002015443610d34565b90505f6006548660010154600354846105ae9190611a81565b6105b89190611a81565b6105c29190611aef565b90508264e8d4a51000826105d69190611a81565b6105e09190611aef565b846105eb9190611b1f565b935050505b826001015464e8d4a5100083855f015461060a9190611a81565b6106149190611aef565b61061e9190611b52565b94505050505092915050565b60025481565b610638610faa565b801561064757610646610c41565b5b5f60075443116106595760075461065b565b435b90508360065461066b9190611b1f565b600681905550600460405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018381526020015f815250908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155505050505050565b5f6004838154811061074f5761074e6119e8565b5b905f5260205f20906004020190505f60055f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905082815f015410156107f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e990611bdf565b60405180910390fd5b6107fb84610924565b5f816001015464e8d4a510008460030154845f015461081a9190611a81565b6108249190611aef565b61082e9190611b52565b905061083a3382611031565b83825f01546108499190611b52565b825f018190555064e8d4a510008360030154835f01546108699190611a81565b6108739190611aef565b82600101819055506108c83385855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661121a9092919063ffffffff16565b843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688660405161090f919061163f565b60405180910390a35050505050565b60075481565b5f60048281548110610939576109386119e8565b5b905f5260205f2090600402019050806002015443116109585750610b14565b5f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109b4919061197d565b602060405180830381865afa1580156109cf573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109f39190611a29565b90505f8103610a0c574382600201819055505050610b14565b5f610a1b836002015443610d34565b90505f600654846001015460035484610a349190611a81565b610a3e9190611a81565b610a489190611aef565b905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b8152600401610aa6929190611bfd565b5f604051808303815f87803b158015610abd575f5ffd5b505af1158015610acf573d5f5f3e3d5ffd5b505050508264e8d4a5100082610ae59190611a81565b610aef9190611aef565b8460030154610afe9190611b1f565b8460030181905550438460020181905550505050505b50565b5f60048281548110610b2c57610b2b6119e8565b5b905f5260205f20906004020190505f60055f8481526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050610bd933825f0154845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661121a9092919063ffffffff16565b823373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595835f0154604051610c23919061163f565b60405180910390a35f815f01819055505f8160010181905550505050565b5f60048054905090505f5f90505b81811015610c6b57610c6081610924565b806001019050610c4f565b5050565b610c77610faa565b8015610c8657610c85610c41565b5b8160048481548110610c9b57610c9a6119e8565b5b905f5260205f20906004020160010154600654610cb89190611b52565b610cc29190611b1f565b6006819055508160048481548110610cdd57610cdc6119e8565b5b905f5260205f20906004020160010181905550505050565b610cfd610faa565b610d065f611299565b565b600a81565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f8282610d419190611b52565b905092915050565b6005602052815f5260405f20602052805f5260405f205f9150915050805f0154908060010154905082565b60035481565b5f60048381548110610d8f57610d8e6119e8565b5b905f5260205f20906004020190505f60055f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050610df584610924565b5f815f01541115610e41575f816001015464e8d4a510008460030154845f0154610e1f9190611a81565b610e299190611aef565b610e339190611b52565b9050610e3f3382611031565b505b610e90333085855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661135a909392919063ffffffff16565b82815f0154610e9f9190611b1f565b815f018190555064e8d4a510008260030154825f0154610ebf9190611a81565b610ec99190611aef565b8160010181905550833373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1585604051610f18919061163f565b60405180910390a350505050565b610f2e610faa565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f9e575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f95919061197d565b60405180910390fd5b610fa781611299565b50565b610fb26113dc565b73ffffffffffffffffffffffffffffffffffffffff16610fd0610d0d565b73ffffffffffffffffffffffffffffffffffffffff161461102f57610ff36113dc565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611026919061197d565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161108c919061197d565b602060405180830381865afa1580156110a7573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110cb9190611a29565b9050808211156111775760015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b8152600401611131929190611bfd565b6020604051808303815f875af115801561114d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111719190611c38565b50611215565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b81526004016111d3929190611bfd565b6020604051808303815f875af11580156111ef573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112139190611c38565b505b505050565b611294838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161124d929190611bfd565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113e3565b505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113d6848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161138f93929190611c63565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113e3565b50505050565b5f33905090565b5f61140d828473ffffffffffffffffffffffffffffffffffffffff1661147890919063ffffffff16565b90505f81511415801561143157508080602001905181019061142f9190611c38565b155b1561147357826040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161146a919061197d565b60405180910390fd5b505050565b606061148583835f61148d565b905092915050565b6060814710156114d457306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016114cb919061197d565b60405180910390fd5b5f5f8573ffffffffffffffffffffffffffffffffffffffff1684866040516114fc9190611cea565b5f6040518083038185875af1925050503d805f8114611536576040519150601f19603f3d011682016040523d82523d5f602084013e61153b565b606091505b509150915061154b868383611556565b925050509392505050565b60608261156b57611566826115e3565b6115db565b5f825114801561159157505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156115d357836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016115ca919061197d565b60405180910390fd5b8190506115dc565b5b9392505050565b5f815111156115f55780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f819050919050565b61163981611627565b82525050565b5f6020820190506116525f830184611630565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61169a61169561169084611658565b611677565b611658565b9050919050565b5f6116ab82611680565b9050919050565b5f6116bc826116a1565b9050919050565b6116cc816116b2565b82525050565b5f6020820190506116e55f8301846116c3565b92915050565b5f5ffd5b6116f881611627565b8114611702575f5ffd5b50565b5f81359050611713816116ef565b92915050565b5f6020828403121561172e5761172d6116eb565b5b5f61173b84828501611705565b91505092915050565b5f61174e826116a1565b9050919050565b61175e81611744565b82525050565b5f6080820190506117775f830187611755565b6117846020830186611630565b6117916040830185611630565b61179e6060830184611630565b95945050505050565b5f6117b182611658565b9050919050565b6117c1816117a7565b81146117cb575f5ffd5b50565b5f813590506117dc816117b8565b92915050565b5f5f604083850312156117f8576117f76116eb565b5b5f61180585828601611705565b9250506020611816858286016117ce565b9150509250929050565b5f61182a826117a7565b9050919050565b61183a81611820565b8114611844575f5ffd5b50565b5f8135905061185581611831565b92915050565b5f8115159050919050565b61186f8161185b565b8114611879575f5ffd5b50565b5f8135905061188a81611866565b92915050565b5f5f5f606084860312156118a7576118a66116eb565b5b5f6118b486828701611705565b93505060206118c586828701611847565b92505060406118d68682870161187c565b9150509250925092565b5f5f604083850312156118f6576118f56116eb565b5b5f61190385828601611705565b925050602061191485828601611705565b9150509250929050565b5f5f5f60608486031215611935576119346116eb565b5b5f61194286828701611705565b935050602061195386828701611705565b92505060406119648682870161187c565b9150509250925092565b611977816117a7565b82525050565b5f6020820190506119905f83018461196e565b92915050565b5f6040820190506119a95f830185611630565b6119b66020830184611630565b9392505050565b5f602082840312156119d2576119d16116eb565b5b5f6119df848285016117ce565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050611a23816116ef565b92915050565b5f60208284031215611a3e57611a3d6116eb565b5b5f611a4b84828501611a15565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a8b82611627565b9150611a9683611627565b9250828202611aa481611627565b91508282048414831517611abb57611aba611a54565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611af982611627565b9150611b0483611627565b925082611b1457611b13611ac2565b5b828204905092915050565b5f611b2982611627565b9150611b3483611627565b9250828201905080821115611b4c57611b4b611a54565b5b92915050565b5f611b5c82611627565b9150611b6783611627565b9250828203905081811115611b7f57611b7e611a54565b5b92915050565b5f82825260208201905092915050565b7f77697468647261773a206e6f7420676f6f6400000000000000000000000000005f82015250565b5f611bc9601283611b85565b9150611bd482611b95565b602082019050919050565b5f6020820190508181035f830152611bf681611bbd565b9050919050565b5f604082019050611c105f83018561196e565b611c1d6020830184611630565b9392505050565b5f81519050611c3281611866565b92915050565b5f60208284031215611c4d57611c4c6116eb565b5b5f611c5a84828501611c24565b91505092915050565b5f606082019050611c765f83018661196e565b611c83602083018561196e565b611c906040830184611630565b949350505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f611cc482611c98565b611cce8185611ca2565b9350611cde818560208601611cac565b80840191505092915050565b5f611cf58284611cba565b91508190509291505056fea2646970667358221220b8da0b748cdbac6e174bd8d941477dfe73b216621c116b62b9d457f16492762564736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5312EA8E GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x7A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xB0BCF42A EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A9 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x2D2 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1AED6553 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x1AED6553 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x26A JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xA087903 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x195426EC EQ PUSH2 0x1C6 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x141 PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH2 0x450 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x17E2 JUMP JUMPDEST PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH2 0x62A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x630 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x73A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x254 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH2 0x924 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH2 0xB17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AA PUSH2 0xC41 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH2 0xC6F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D0 PUSH2 0xCF5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DA PUSH2 0xD08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x328 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x17E2 JUMP JUMPDEST PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP3 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x377 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0xD7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x19BD JUMP JUMPDEST PUSH2 0xF26 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x405 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x46C JUMPI PUSH2 0x46B PUSH2 0x19E8 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH0 PUSH1 0x5 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH0 DUP4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x548 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x56C SWAP2 SWAP1 PUSH2 0x1A29 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x581 JUMPI POP PUSH0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x5F0 JUMPI PUSH0 PUSH2 0x595 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xD34 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 SLOAD DUP7 PUSH1 0x1 ADD SLOAD PUSH1 0x3 SLOAD DUP5 PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0x5B8 SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST SWAP1 POP DUP3 PUSH5 0xE8D4A51000 DUP3 PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST DUP5 PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0x1B1F JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST DUP3 PUSH1 0x1 ADD SLOAD PUSH5 0xE8D4A51000 DUP4 DUP6 PUSH0 ADD SLOAD PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x638 PUSH2 0xFAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x647 JUMPI PUSH2 0x646 PUSH2 0xC41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0x7 SLOAD NUMBER GT PUSH2 0x659 JUMPI PUSH1 0x7 SLOAD PUSH2 0x65B JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP DUP4 PUSH1 0x6 SLOAD PUSH2 0x66B SWAP2 SWAP1 PUSH2 0x1B1F JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x74F JUMPI PUSH2 0x74E PUSH2 0x19E8 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x1BDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7FB DUP5 PUSH2 0x924 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH5 0xE8D4A51000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x81A SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0x824 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST PUSH2 0x82E SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST SWAP1 POP PUSH2 0x83A CALLER DUP3 PUSH2 0x1031 JUMP JUMPDEST DUP4 DUP3 PUSH0 ADD SLOAD PUSH2 0x849 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH5 0xE8D4A51000 DUP4 PUSH1 0x3 ADD SLOAD DUP4 PUSH0 ADD SLOAD PUSH2 0x869 SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0x873 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x8C8 CALLER DUP6 DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x121A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x90F SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x939 JUMPI PUSH2 0x938 PUSH2 0x19E8 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x958 JUMPI POP PUSH2 0xB14 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B4 SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9CF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F3 SWAP2 SWAP1 PUSH2 0x1A29 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xA0C JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0xB14 JUMP JUMPDEST PUSH0 PUSH2 0xA1B DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xD34 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH1 0x3 SLOAD DUP5 PUSH2 0xA34 SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0xA48 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA6 SWAP3 SWAP2 SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xABD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xACF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH5 0xE8D4A51000 DUP3 PUSH2 0xAE5 SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0xAEF SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST DUP5 PUSH1 0x3 ADD SLOAD PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0x1B1F JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB2C JUMPI PUSH2 0xB2B PUSH2 0x19E8 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0xBD9 CALLER DUP3 PUSH0 ADD SLOAD DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x121A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xC23 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC6B JUMPI PUSH2 0xC60 DUP2 PUSH2 0x924 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xC4F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC77 PUSH2 0xFAA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC86 JUMPI PUSH2 0xC85 PUSH2 0xC41 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0x19E8 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x6 SLOAD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0xCC2 SWAP2 SWAP1 PUSH2 0x1B1F JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xCDD JUMPI PUSH2 0xCDC PUSH2 0x19E8 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xCFD PUSH2 0xFAA JUMP JUMPDEST PUSH2 0xD06 PUSH0 PUSH2 0x1299 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP3 DUP3 PUSH2 0xD41 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xD8F JUMPI PUSH2 0xD8E PUSH2 0x19E8 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0xDF5 DUP5 PUSH2 0x924 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD GT ISZERO PUSH2 0xE41 JUMPI PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH5 0xE8D4A51000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0xE1F SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0xE29 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST PUSH2 0xE33 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST SWAP1 POP PUSH2 0xE3F CALLER DUP3 PUSH2 0x1031 JUMP JUMPDEST POP JUMPDEST PUSH2 0xE90 CALLER ADDRESS DUP6 DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x135A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP2 PUSH0 ADD SLOAD PUSH2 0xE9F SWAP2 SWAP1 PUSH2 0x1B1F JUMP JUMPDEST DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH5 0xE8D4A51000 DUP3 PUSH1 0x3 ADD SLOAD DUP3 PUSH0 ADD SLOAD PUSH2 0xEBF SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0xEC9 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0xF18 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xF2E PUSH2 0xFAA JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF9E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF95 SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFA7 DUP2 PUSH2 0x1299 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xFB2 PUSH2 0x13DC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFD0 PUSH2 0xD0D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x102F JUMPI PUSH2 0xFF3 PUSH2 0x13DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1026 SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108C SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10A7 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10CB SWAP2 SWAP1 PUSH2 0x1A29 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1177 JUMPI PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1131 SWAP3 SWAP2 SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x114D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1171 SWAP2 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST POP PUSH2 0x1215 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D3 SWAP3 SWAP2 SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11EF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1213 SWAP2 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1294 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x124D SWAP3 SWAP2 SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x13E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x13D6 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x138F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x13E3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x140D DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1478 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x1431 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x142F SWAP2 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1473 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146A SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1485 DUP4 DUP4 PUSH0 PUSH2 0x148D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x14D4 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CB SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x14FC SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1536 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x153B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x154B DUP7 DUP4 DUP4 PUSH2 0x1556 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x156B JUMPI PUSH2 0x1566 DUP3 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x15DB JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1591 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x15D3 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15CA SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x15DC JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x15F5 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1639 DUP2 PUSH2 0x1627 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1652 PUSH0 DUP4 ADD DUP5 PUSH2 0x1630 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x169A PUSH2 0x1695 PUSH2 0x1690 DUP5 PUSH2 0x1658 JUMP JUMPDEST PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x1658 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16AB DUP3 PUSH2 0x1680 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16BC DUP3 PUSH2 0x16A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CC DUP2 PUSH2 0x16B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16E5 PUSH0 DUP4 ADD DUP5 PUSH2 0x16C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x16F8 DUP2 PUSH2 0x1627 JUMP JUMPDEST DUP2 EQ PUSH2 0x1702 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1713 DUP2 PUSH2 0x16EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x172E JUMPI PUSH2 0x172D PUSH2 0x16EB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x173B DUP5 DUP3 DUP6 ADD PUSH2 0x1705 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x174E DUP3 PUSH2 0x16A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175E DUP2 PUSH2 0x1744 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1777 PUSH0 DUP4 ADD DUP8 PUSH2 0x1755 JUMP JUMPDEST PUSH2 0x1784 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1630 JUMP JUMPDEST PUSH2 0x1791 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1630 JUMP JUMPDEST PUSH2 0x179E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1630 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17B1 DUP3 PUSH2 0x1658 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C1 DUP2 PUSH2 0x17A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x17CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17DC DUP2 PUSH2 0x17B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17F8 JUMPI PUSH2 0x17F7 PUSH2 0x16EB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1805 DUP6 DUP3 DUP7 ADD PUSH2 0x1705 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1816 DUP6 DUP3 DUP7 ADD PUSH2 0x17CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x182A DUP3 PUSH2 0x17A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x183A DUP2 PUSH2 0x1820 JUMP JUMPDEST DUP2 EQ PUSH2 0x1844 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1855 DUP2 PUSH2 0x1831 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x186F DUP2 PUSH2 0x185B JUMP JUMPDEST DUP2 EQ PUSH2 0x1879 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x188A DUP2 PUSH2 0x1866 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18A7 JUMPI PUSH2 0x18A6 PUSH2 0x16EB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18B4 DUP7 DUP3 DUP8 ADD PUSH2 0x1705 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18C5 DUP7 DUP3 DUP8 ADD PUSH2 0x1847 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18D6 DUP7 DUP3 DUP8 ADD PUSH2 0x187C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18F6 JUMPI PUSH2 0x18F5 PUSH2 0x16EB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1903 DUP6 DUP3 DUP7 ADD PUSH2 0x1705 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1914 DUP6 DUP3 DUP7 ADD PUSH2 0x1705 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1935 JUMPI PUSH2 0x1934 PUSH2 0x16EB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1942 DUP7 DUP3 DUP8 ADD PUSH2 0x1705 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1953 DUP7 DUP3 DUP8 ADD PUSH2 0x1705 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1964 DUP7 DUP3 DUP8 ADD PUSH2 0x187C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1977 DUP2 PUSH2 0x17A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1990 PUSH0 DUP4 ADD DUP5 PUSH2 0x196E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19A9 PUSH0 DUP4 ADD DUP6 PUSH2 0x1630 JUMP JUMPDEST PUSH2 0x19B6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1630 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D2 JUMPI PUSH2 0x19D1 PUSH2 0x16EB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19DF DUP5 DUP3 DUP6 ADD PUSH2 0x17CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A23 DUP2 PUSH2 0x16EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A3E JUMPI PUSH2 0x1A3D PUSH2 0x16EB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A4B DUP5 DUP3 DUP6 ADD PUSH2 0x1A15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A8B DUP3 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A96 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1AA4 DUP2 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1ABB JUMPI PUSH2 0x1ABA PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AF9 DUP3 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B04 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B14 JUMPI PUSH2 0x1B13 PUSH2 0x1AC2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B29 DUP3 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B34 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B4C JUMPI PUSH2 0x1B4B PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5C DUP3 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B67 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B7F JUMPI PUSH2 0x1B7E PUSH2 0x1A54 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC9 PUSH1 0x12 DUP4 PUSH2 0x1B85 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD4 DUP3 PUSH2 0x1B95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BF6 DUP2 PUSH2 0x1BBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C10 PUSH0 DUP4 ADD DUP6 PUSH2 0x196E JUMP JUMPDEST PUSH2 0x1C1D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1630 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C32 DUP2 PUSH2 0x1866 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C4D JUMPI PUSH2 0x1C4C PUSH2 0x16EB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C5A DUP5 DUP3 DUP6 ADD PUSH2 0x1C24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C76 PUSH0 DUP4 ADD DUP7 PUSH2 0x196E JUMP JUMPDEST PUSH2 0x1C83 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x196E JUMP JUMPDEST PUSH2 0x1C90 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1630 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC4 DUP3 PUSH2 0x1C98 JUMP JUMPDEST PUSH2 0x1CCE DUP2 DUP6 PUSH2 0x1CA2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CDE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CF5 DUP3 DUP5 PUSH2 0x1CBA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 0xDA SIGNEXTEND PUSH21 0x8CDBAC6E174BD8D941477DFE73B216621C116B62B9 0xD4 JUMPI CALL PUSH5 0x9276256473 PUSH16 0x6C634300081B00330000000000000000 ",
							"sourceMap": "713:8497:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3256:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2060:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2377:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2618:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4858:863;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2137:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3520:602;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7694:683;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2710:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6060:781;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8448:356;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5804:180;;;:::i;:::-;;4219:346;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;2296:45:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4643:150:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2459:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2212:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6911:731;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3256:95:6;3301:7;3328:8;:15;;;;3321:22;;3256:95;:::o;2060:19::-;;;;;;;;;;;;;:::o;2377:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2618:34::-;;;;:::o;4858:863::-;4959:7;4984:21;5008:8;5017:4;5008:14;;;;;;;;:::i;:::-;;;;;;;;;;;;4984:38;;5033:21;5057:8;:14;5066:4;5057:14;;;;;;;;;;;:21;5072:5;5057:21;;;;;;;;;;;;;;;5033:45;;5089:24;5116:4;:21;;;5089:48;;5148:16;5167:4;:12;;;;;;;;;;;;:22;;;5198:4;5167:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5148:56;;5234:4;:20;;;5219:12;:35;:52;;;;;5270:1;5258:8;:13;;5219:52;5215:426;;;5288:18;5326:49;5340:4;:20;;;5362:12;5326:13;:49::i;:::-;5288:87;;5390:19;5497:15;;5458:4;:15;;;5442:13;;5429:10;:26;;;;:::i;:::-;:44;;;;:::i;:::-;:83;;;;:::i;:::-;5390:122;;5606:8;5600:4;5586:11;:18;;;;:::i;:::-;:28;;;;:::i;:::-;5547:16;:82;;;;:::i;:::-;5528:101;;5273:368;;5215:426;5698:4;:15;;;5691:4;5672:16;5658:4;:11;;;:30;;;;:::i;:::-;:37;;;;:::i;:::-;:55;;;;:::i;:::-;5651:62;;;;;;4858:863;;;;:::o;2137:28::-;;;;:::o;3520:602::-;1531:13:0;:11;:13::i;:::-;3655:11:6::1;3651:61;;;3683:17;:15;:17::i;:::-;3651:61;3722:23;3776:10;;3761:12;:25;:53;;3804:10;;3761:53;;;3789:12;3761:53;3722:92;;3861:11;3843:15;;:29;;;;:::i;:::-;3825:15;:47;;;;3883:8;3911:192;;;;;;;;3948:8;3911:192;;;;;;3987:11;3911:192;;;;4034:15;3911:192;;;;4086:1;3911:192;;::::0;3883:231:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3640:482;3520:602:::0;;;:::o;7694:683::-;7761:21;7785:8;7794:4;7785:14;;;;;;;;:::i;:::-;;;;;;;;;;;;7761:38;;7810:21;7834:8;:14;7843:4;7834:14;;;;;;;;;;;:26;7849:10;7834:26;;;;;;;;;;;;;;;7810:50;;7894:7;7879:4;:11;;;:22;;7871:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;7935:16;7946:4;7935:10;:16::i;:::-;7962:15;8056:4;:15;;;8030:4;8007;:21;;;7993:4;:11;;;:35;;;;:::i;:::-;:41;;;;:::i;:::-;:78;;;;:::i;:::-;7962:109;;8096:38;8114:10;8126:7;8096:17;:38::i;:::-;8173:7;8159:4;:11;;;:21;;;;:::i;:::-;8145:4;:11;;:35;;;;8247:4;8223;:21;;;8209:4;:11;;;:35;;;;:::i;:::-;:42;;;;:::i;:::-;8191:4;:15;;:60;;;;8263:55;8297:10;8310:7;8263:4;:12;;;;;;;;;;;;:25;;;;:55;;;;;:::i;:::-;8355:4;8343:10;8334:35;;;8361:7;8334:35;;;;;;:::i;:::-;;;;;;;;7750:627;;;7694:683;;:::o;2710:25::-;;;;:::o;6060:781::-;6112:21;6136:8;6145:4;6136:14;;;;;;;;:::i;:::-;;;;;;;;;;;;6112:38;;6181:4;:20;;;6165:12;:36;6161:75;;6218:7;;;6161:75;6246:16;6265:4;:12;;;;;;;;;;;;:22;;;6296:4;6265:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6246:56;;6329:1;6317:8;:13;6313:102;;6370:12;6347:4;:20;;:35;;;;6397:7;;;;6313:102;6425:18;6446:49;6460:4;:20;;;6482:12;6446:13;:49::i;:::-;6425:70;;6506:19;6604:15;;6570:4;:15;;;6554:13;;6541:10;:26;;;;:::i;:::-;:44;;;;:::i;:::-;:78;;;;:::i;:::-;6506:113;;6633:5;;;;;;;;;;;:10;;;6652:4;6659:11;6633:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6776:8;6770:4;6756:11;:18;;;;:::i;:::-;:28;;;;:::i;:::-;6716:4;:21;;;:69;;;;:::i;:::-;6692:4;:21;;:93;;;;6821:12;6798:4;:20;;:35;;;;6101:740;;;;6060:781;;:::o;8448:356::-;8507:21;8531:8;8540:4;8531:14;;;;;;;;:::i;:::-;;;;;;;;;;;;8507:38;;8556:21;8580:8;:14;8589:4;8580:14;;;;;;;;;;;:26;8595:10;8580:26;;;;;;;;;;;;;;;8556:50;;8617:59;8651:10;8664:4;:11;;;8617:4;:12;;;;;;;;;;;;:25;;;;:59;;;;;:::i;:::-;8722:4;8710:10;8692:48;;;8728:4;:11;;;8692:48;;;;;;:::i;:::-;;;;;;;;8765:1;8751:4;:11;;:15;;;;8795:1;8777:4;:15;;:19;;;;8496:308;;8448:356;:::o;5804:180::-;5849:14;5866:8;:15;;;;5849:32;;5897:11;5911:1;5897:15;;5892:85;5920:6;5914:3;:12;5892:85;;;5950:15;5961:3;5950:10;:15::i;:::-;5928:5;;;;;5892:85;;;;5838:146;5804:180::o;4219:346::-;1531:13:0;:11;:13::i;:::-;4351:11:6::1;4347:61;;;4379:17;:15;:17::i;:::-;4347:61;4496:11;4454:8;4463:4;4454:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;4436:15;;:43;;;;:::i;:::-;:71;;;;:::i;:::-;4418:15;:89;;;;4546:11;4518:8;4527:4;4518:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;:39;;;;4219:346:::0;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2296:45:6:-;2339:2;2296:45;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;4643:150:6:-;4742:7;4780:5;4774:3;:11;;;;:::i;:::-;4767:18;;4643:150;;;;:::o;2459:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2212:28::-;;;;:::o;6911:731::-;6977:21;7001:8;7010:4;7001:14;;;;;;;;:::i;:::-;;;;;;;;;;;;6977:38;;7026:21;7050:8;:14;7059:4;7050:14;;;;;;;;;;;:26;7065:10;7050:26;;;;;;;;;;;;;;;7026:50;;7087:16;7098:4;7087:10;:16::i;:::-;7132:1;7118:4;:11;;;:15;7114:218;;;7150:15;7251:4;:15;;;7222:4;7199;:21;;;7185:4;:11;;;:35;;;;:::i;:::-;:41;;;;:::i;:::-;:81;;;;:::i;:::-;7150:116;;7282:38;7300:10;7312:7;7282:17;:38::i;:::-;7135:197;7114:218;7342:124;7394:10;7428:4;7448:7;7342:4;:12;;;;;;;;;;;;:29;;;;:124;;;;;;:::i;:::-;7505:7;7491:4;:11;;;:21;;;;:::i;:::-;7477:4;:11;;:35;;;;7579:4;7555;:21;;;7541:4;:11;;;:35;;;;:::i;:::-;:42;;;;:::i;:::-;7523:4;:15;;:60;;;;7620:4;7608:10;7600:34;;;7626:7;7600:34;;;;;;:::i;:::-;;;;;;;;6966:676;;6911:731;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;8920:285:6:-;8997:16;9016:5;;;;;;;;;;;:15;;;9040:4;9016:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8997:49;;9071:8;9061:7;:18;9057:141;;;9096:5;;;;;;;;;;;:14;;;9111:3;9116:8;9096:29;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9057:141;;;9158:5;;;;;;;;;;;:14;;;9173:3;9178:7;9158:28;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9057:141;8986:219;8920:285;;:::o;1303:160:3:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1702:188:3:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;4059:629:3:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:4:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:77:7;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:60::-;602:3;623:5;616:12;;574:60;;;:::o;640:142::-;690:9;723:53;741:34;750:24;768:5;750:24;:::i;:::-;741:34;:::i;:::-;723:53;:::i;:::-;710:66;;640:142;;;:::o;788:126::-;838:9;871:37;902:5;871:37;:::i;:::-;858:50;;788:126;;;:::o;920:140::-;984:9;1017:37;1048:5;1017:37;:::i;:::-;1004:50;;920:140;;;:::o;1066:159::-;1167:51;1212:5;1167:51;:::i;:::-;1162:3;1155:64;1066:159;;:::o;1231:250::-;1338:4;1376:2;1365:9;1361:18;1353:26;;1389:85;1471:1;1460:9;1456:17;1447:6;1389:85;:::i;:::-;1231:250;;;;:::o;1568:117::-;1677:1;1674;1667:12;1814:122;1887:24;1905:5;1887:24;:::i;:::-;1880:5;1877:35;1867:63;;1926:1;1923;1916:12;1867:63;1814:122;:::o;1942:139::-;1988:5;2026:6;2013:20;2004:29;;2042:33;2069:5;2042:33;:::i;:::-;1942:139;;;;:::o;2087:329::-;2146:6;2195:2;2183:9;2174:7;2170:23;2166:32;2163:119;;;2201:79;;:::i;:::-;2163:119;2321:1;2346:53;2391:7;2382:6;2371:9;2367:22;2346:53;:::i;:::-;2336:63;;2292:117;2087:329;;;;:::o;2422:140::-;2486:9;2519:37;2550:5;2519:37;:::i;:::-;2506:50;;2422:140;;;:::o;2568:159::-;2669:51;2714:5;2669:51;:::i;:::-;2664:3;2657:64;2568:159;;:::o;2733:581::-;2924:4;2962:3;2951:9;2947:19;2939:27;;2976:85;3058:1;3047:9;3043:17;3034:6;2976:85;:::i;:::-;3071:72;3139:2;3128:9;3124:18;3115:6;3071:72;:::i;:::-;3153;3221:2;3210:9;3206:18;3197:6;3153:72;:::i;:::-;3235;3303:2;3292:9;3288:18;3279:6;3235:72;:::i;:::-;2733:581;;;;;;;:::o;3320:96::-;3357:7;3386:24;3404:5;3386:24;:::i;:::-;3375:35;;3320:96;;;:::o;3422:122::-;3495:24;3513:5;3495:24;:::i;:::-;3488:5;3485:35;3475:63;;3534:1;3531;3524:12;3475:63;3422:122;:::o;3550:139::-;3596:5;3634:6;3621:20;3612:29;;3650:33;3677:5;3650:33;:::i;:::-;3550:139;;;;:::o;3695:474::-;3763:6;3771;3820:2;3808:9;3799:7;3795:23;3791:32;3788:119;;;3826:79;;:::i;:::-;3788:119;3946:1;3971:53;4016:7;4007:6;3996:9;3992:22;3971:53;:::i;:::-;3961:63;;3917:117;4073:2;4099:53;4144:7;4135:6;4124:9;4120:22;4099:53;:::i;:::-;4089:63;;4044:118;3695:474;;;;;:::o;4175:110::-;4226:7;4255:24;4273:5;4255:24;:::i;:::-;4244:35;;4175:110;;;:::o;4291:150::-;4378:38;4410:5;4378:38;:::i;:::-;4371:5;4368:49;4358:77;;4431:1;4428;4421:12;4358:77;4291:150;:::o;4447:167::-;4507:5;4545:6;4532:20;4523:29;;4561:47;4602:5;4561:47;:::i;:::-;4447:167;;;;:::o;4620:90::-;4654:7;4697:5;4690:13;4683:21;4672:32;;4620:90;;;:::o;4716:116::-;4786:21;4801:5;4786:21;:::i;:::-;4779:5;4776:32;4766:60;;4822:1;4819;4812:12;4766:60;4716:116;:::o;4838:133::-;4881:5;4919:6;4906:20;4897:29;;4935:30;4959:5;4935:30;:::i;:::-;4838:133;;;;:::o;4977:641::-;5065:6;5073;5081;5130:2;5118:9;5109:7;5105:23;5101:32;5098:119;;;5136:79;;:::i;:::-;5098:119;5256:1;5281:53;5326:7;5317:6;5306:9;5302:22;5281:53;:::i;:::-;5271:63;;5227:117;5383:2;5409:67;5468:7;5459:6;5448:9;5444:22;5409:67;:::i;:::-;5399:77;;5354:132;5525:2;5551:50;5593:7;5584:6;5573:9;5569:22;5551:50;:::i;:::-;5541:60;;5496:115;4977:641;;;;;:::o;5624:474::-;5692:6;5700;5749:2;5737:9;5728:7;5724:23;5720:32;5717:119;;;5755:79;;:::i;:::-;5717:119;5875:1;5900:53;5945:7;5936:6;5925:9;5921:22;5900:53;:::i;:::-;5890:63;;5846:117;6002:2;6028:53;6073:7;6064:6;6053:9;6049:22;6028:53;:::i;:::-;6018:63;;5973:118;5624:474;;;;;:::o;6104:613::-;6178:6;6186;6194;6243:2;6231:9;6222:7;6218:23;6214:32;6211:119;;;6249:79;;:::i;:::-;6211:119;6369:1;6394:53;6439:7;6430:6;6419:9;6415:22;6394:53;:::i;:::-;6384:63;;6340:117;6496:2;6522:53;6567:7;6558:6;6547:9;6543:22;6522:53;:::i;:::-;6512:63;;6467:118;6624:2;6650:50;6692:7;6683:6;6672:9;6668:22;6650:50;:::i;:::-;6640:60;;6595:115;6104:613;;;;;:::o;6723:118::-;6810:24;6828:5;6810:24;:::i;:::-;6805:3;6798:37;6723:118;;:::o;6847:222::-;6940:4;6978:2;6967:9;6963:18;6955:26;;6991:71;7059:1;7048:9;7044:17;7035:6;6991:71;:::i;:::-;6847:222;;;;:::o;7075:332::-;7196:4;7234:2;7223:9;7219:18;7211:26;;7247:71;7315:1;7304:9;7300:17;7291:6;7247:71;:::i;:::-;7328:72;7396:2;7385:9;7381:18;7372:6;7328:72;:::i;:::-;7075:332;;;;;:::o;7413:329::-;7472:6;7521:2;7509:9;7500:7;7496:23;7492:32;7489:119;;;7527:79;;:::i;:::-;7489:119;7647:1;7672:53;7717:7;7708:6;7697:9;7693:22;7672:53;:::i;:::-;7662:63;;7618:117;7413:329;;;;:::o;7748:180::-;7796:77;7793:1;7786:88;7893:4;7890:1;7883:15;7917:4;7914:1;7907:15;7934:143;7991:5;8022:6;8016:13;8007:22;;8038:33;8065:5;8038:33;:::i;:::-;7934:143;;;;:::o;8083:351::-;8153:6;8202:2;8190:9;8181:7;8177:23;8173:32;8170:119;;;8208:79;;:::i;:::-;8170:119;8328:1;8353:64;8409:7;8400:6;8389:9;8385:22;8353:64;:::i;:::-;8343:74;;8299:128;8083:351;;;;:::o;8440:180::-;8488:77;8485:1;8478:88;8585:4;8582:1;8575:15;8609:4;8606:1;8599:15;8626:410;8666:7;8689:20;8707:1;8689:20;:::i;:::-;8684:25;;8723:20;8741:1;8723:20;:::i;:::-;8718:25;;8778:1;8775;8771:9;8800:30;8818:11;8800:30;:::i;:::-;8789:41;;8979:1;8970:7;8966:15;8963:1;8960:22;8940:1;8933:9;8913:83;8890:139;;9009:18;;:::i;:::-;8890:139;8674:362;8626:410;;;;:::o;9042:180::-;9090:77;9087:1;9080:88;9187:4;9184:1;9177:15;9211:4;9208:1;9201:15;9228:185;9268:1;9285:20;9303:1;9285:20;:::i;:::-;9280:25;;9319:20;9337:1;9319:20;:::i;:::-;9314:25;;9358:1;9348:35;;9363:18;;:::i;:::-;9348:35;9405:1;9402;9398:9;9393:14;;9228:185;;;;:::o;9419:191::-;9459:3;9478:20;9496:1;9478:20;:::i;:::-;9473:25;;9512:20;9530:1;9512:20;:::i;:::-;9507:25;;9555:1;9552;9548:9;9541:16;;9576:3;9573:1;9570:10;9567:36;;;9583:18;;:::i;:::-;9567:36;9419:191;;;;:::o;9616:194::-;9656:4;9676:20;9694:1;9676:20;:::i;:::-;9671:25;;9710:20;9728:1;9710:20;:::i;:::-;9705:25;;9754:1;9751;9747:9;9739:17;;9778:1;9772:4;9769:11;9766:37;;;9783:18;;:::i;:::-;9766:37;9616:194;;;;:::o;9816:169::-;9900:11;9934:6;9929:3;9922:19;9974:4;9969:3;9965:14;9950:29;;9816:169;;;;:::o;9991:168::-;10131:20;10127:1;10119:6;10115:14;10108:44;9991:168;:::o;10165:366::-;10307:3;10328:67;10392:2;10387:3;10328:67;:::i;:::-;10321:74;;10404:93;10493:3;10404:93;:::i;:::-;10522:2;10517:3;10513:12;10506:19;;10165:366;;;:::o;10537:419::-;10703:4;10741:2;10730:9;10726:18;10718:26;;10790:9;10784:4;10780:20;10776:1;10765:9;10761:17;10754:47;10818:131;10944:4;10818:131;:::i;:::-;10810:139;;10537:419;;;:::o;10962:332::-;11083:4;11121:2;11110:9;11106:18;11098:26;;11134:71;11202:1;11191:9;11187:17;11178:6;11134:71;:::i;:::-;11215:72;11283:2;11272:9;11268:18;11259:6;11215:72;:::i;:::-;10962:332;;;;;:::o;11300:137::-;11354:5;11385:6;11379:13;11370:22;;11401:30;11425:5;11401:30;:::i;:::-;11300:137;;;;:::o;11443:345::-;11510:6;11559:2;11547:9;11538:7;11534:23;11530:32;11527:119;;;11565:79;;:::i;:::-;11527:119;11685:1;11710:61;11763:7;11754:6;11743:9;11739:22;11710:61;:::i;:::-;11700:71;;11656:125;11443:345;;;;:::o;11794:442::-;11943:4;11981:2;11970:9;11966:18;11958:26;;11994:71;12062:1;12051:9;12047:17;12038:6;11994:71;:::i;:::-;12075:72;12143:2;12132:9;12128:18;12119:6;12075:72;:::i;:::-;12157;12225:2;12214:9;12210:18;12201:6;12157:72;:::i;:::-;11794:442;;;;;;:::o;12242:98::-;12293:6;12327:5;12321:12;12311:22;;12242:98;;;:::o;12346:147::-;12447:11;12484:3;12469:18;;12346:147;;;;:::o;12499:139::-;12588:6;12583:3;12578;12572:23;12629:1;12620:6;12615:3;12611:16;12604:27;12499:139;;;:::o;12644:386::-;12748:3;12776:38;12808:5;12776:38;:::i;:::-;12830:88;12911:6;12906:3;12830:88;:::i;:::-;12823:95;;12927:65;12985:6;12980:3;12973:4;12966:5;12962:16;12927:65;:::i;:::-;13017:6;13012:3;13008:16;13001:23;;12752:278;12644:386;;;;:::o;13036:271::-;13166:3;13188:93;13277:3;13268:6;13188:93;:::i;:::-;13181:100;;13298:3;13291:10;;13036:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1495600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BONUS_MULTIPLIER()": "436",
								"add(uint256,address,bool)": "infinite",
								"bonusEndBlock()": "2448",
								"deposit(uint256,uint256)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"getMultiplier(uint256,uint256)": "infinite",
								"massUpdatePools()": "infinite",
								"owner()": "2536",
								"pendingSushi(uint256,address)": "infinite",
								"poolInfo(uint256)": "infinite",
								"poolLength()": "2464",
								"renounceOwnership()": "infinite",
								"set(uint256,uint256,bool)": "infinite",
								"startBlock()": "2514",
								"sushi()": "infinite",
								"sushiPerBlock()": "2513",
								"totalAllocPoint()": "2515",
								"transferOwnership(address)": "infinite",
								"updatePool(uint256)": "infinite",
								"userInfo(uint256,address)": "infinite",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"safeSushiTransfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 713,
									"end": 9210,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 713,
									"end": 9210,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 713,
									"end": 9210,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2651,
									"end": 2652,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2618,
									"end": 2652,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 2618,
									"end": 2652,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3026,
									"end": 3248,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 744,
									"end": 754,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3158,
									"end": 3164,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3150,
									"end": 3155,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3150,
									"end": 3155,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3150,
									"end": 3164,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3150,
									"end": 3164,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3150,
									"end": 3164,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3150,
									"end": 3164,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3150,
									"end": 3164,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3150,
									"end": 3164,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3150,
									"end": 3164,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3150,
									"end": 3164,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3150,
									"end": 3164,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3150,
									"end": 3164,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3150,
									"end": 3164,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3150,
									"end": 3164,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3150,
									"end": 3164,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3150,
									"end": 3164,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3150,
									"end": 3164,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3150,
									"end": 3164,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3150,
									"end": 3164,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3150,
									"end": 3164,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3191,
									"end": 3205,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3175,
									"end": 3188,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3175,
									"end": 3205,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3175,
									"end": 3205,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3175,
									"end": 3205,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3175,
									"end": 3205,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3229,
									"end": 3240,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3216,
									"end": 3226,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 3216,
									"end": 3240,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3216,
									"end": 3240,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3216,
									"end": 3240,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3216,
									"end": 3240,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3026,
									"end": 3248,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 713,
									"end": 9210,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 713,
									"end": 9210,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1054,
									"end": 1061,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1083,
									"end": 1088,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1072,
									"end": 1088,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1072,
									"end": 1088,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1222,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1100,
									"end": 1222,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1191,
									"end": 1196,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1173,
									"end": 1197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1166,
									"end": 1171,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1163,
									"end": 1198,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1222,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1285,
									"end": 1290,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1316,
									"end": 1322,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1310,
									"end": 1323,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1323,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1323,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1359,
									"end": 1364,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1332,
									"end": 1365,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1228,
									"end": 1371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1485,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1487,
									"end": 1493,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1495,
									"end": 1501,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1544,
									"end": 1546,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1532,
									"end": 1541,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1523,
									"end": 1530,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1542,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1515,
									"end": 1547,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1550,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 1550,
									"end": 1629,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1629,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1550,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1670,
									"end": 1671,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1695,
									"end": 1773,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1765,
									"end": 1772,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1756,
									"end": 1762,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1741,
									"end": 1763,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1773,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1695,
									"end": 1773,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1773,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1695,
									"end": 1773,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1685,
									"end": 1773,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1685,
									"end": 1773,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1641,
									"end": 1783,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1822,
									"end": 1824,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1848,
									"end": 1912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1904,
									"end": 1911,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1895,
									"end": 1901,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1884,
									"end": 1893,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1880,
									"end": 1902,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1848,
									"end": 1912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1848,
									"end": 1912,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1848,
									"end": 1912,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1848,
									"end": 1912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1838,
									"end": 1912,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1838,
									"end": 1912,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1793,
									"end": 1922,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1961,
									"end": 1963,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2051,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2043,
									"end": 2050,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2023,
									"end": 2032,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2019,
									"end": 2041,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1987,
									"end": 2051,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1987,
									"end": 2051,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1987,
									"end": 2051,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1987,
									"end": 2051,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1977,
									"end": 2051,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1977,
									"end": 2051,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1932,
									"end": 2061,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1377,
									"end": 2068,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2074,
									"end": 2192,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 2074,
									"end": 2192,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2161,
									"end": 2185,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2179,
									"end": 2184,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2161,
									"end": 2185,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 2161,
									"end": 2185,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2161,
									"end": 2185,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2161,
									"end": 2185,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2156,
									"end": 2159,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2186,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2074,
									"end": 2192,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2074,
									"end": 2192,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2074,
									"end": 2192,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2198,
									"end": 2420,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 2198,
									"end": 2420,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2291,
									"end": 2295,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2329,
									"end": 2331,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2318,
									"end": 2327,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2314,
									"end": 2332,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2306,
									"end": 2332,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2306,
									"end": 2332,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2342,
									"end": 2413,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2410,
									"end": 2411,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2399,
									"end": 2408,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2395,
									"end": 2412,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2386,
									"end": 2392,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2342,
									"end": 2413,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 2342,
									"end": 2413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2342,
									"end": 2413,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2342,
									"end": 2413,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2198,
									"end": 2420,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2198,
									"end": 2420,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2198,
									"end": 2420,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2198,
									"end": 2420,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2198,
									"end": 2420,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 713,
									"end": 9210,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 713,
									"end": 9210,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 713,
									"end": 9210,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 713,
									"end": 9210,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 713,
									"end": 9210,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 713,
									"end": 9210,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 713,
									"end": 9210,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 713,
									"end": 9210,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 713,
									"end": 9210,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b8da0b748cdbac6e174bd8d941477dfe73b216621c116b62b9d457f16492762564736f6c634300081b0033",
									".code": [
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "5312EA8E"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "8DBB1E3A"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "93F1A40B"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "B0BCF42A"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "E2BBB158"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "5312EA8E"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "630B5BA1"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "64482F79"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "8AA28550"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "1AED6553"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "1AED6553"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "1EAAA045"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "441A3E70"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "48CD4CB1"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "51EB05A6"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "81E3EDA"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "A087903"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "1526FE27"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "17CAF6F1"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "195426EC"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 9210,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3256,
											"end": 3351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3256,
											"end": 3351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2060,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2060,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2377,
											"end": 2403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2377,
											"end": 2403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2377,
											"end": 2403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2618,
											"end": 2652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2618,
											"end": 2652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4858,
											"end": 5721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 4858,
											"end": 5721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 4858,
											"end": 5721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2137,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2137,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3520,
											"end": 4122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 3520,
											"end": 4122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 7694,
											"end": 8377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 7694,
											"end": 8377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2710,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2710,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 6060,
											"end": 6841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 6060,
											"end": 6841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 8448,
											"end": 8804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 8448,
											"end": 8804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5984,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 5804,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5804,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 5804,
											"end": 5984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5984,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5804,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5984,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 4219,
											"end": 4565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4219,
											"end": 4565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2296,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2296,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4643,
											"end": 4793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 4643,
											"end": 4793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 4643,
											"end": 4793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2459,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2459,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2459,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2212,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2212,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 6911,
											"end": 7642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6911,
											"end": 7642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3308,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3328,
											"end": 3336,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3328,
											"end": 3343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3328,
											"end": 3343,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3328,
											"end": 3343,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3328,
											"end": 3343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3343,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4959,
											"end": 4966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4984,
											"end": 5005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5008,
											"end": 5016,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5017,
											"end": 5021,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 5008,
											"end": 5022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5022,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4984,
											"end": 5022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4984,
											"end": 5022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5054,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5057,
											"end": 5065,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5057,
											"end": 5071,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5066,
											"end": 5070,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5071,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5071,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5071,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5057,
											"end": 5071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5071,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5071,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5071,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5057,
											"end": 5071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5071,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5057,
											"end": 5071,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5072,
											"end": 5077,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5078,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5057,
											"end": 5078,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5078,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5057,
											"end": 5078,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5078,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5078,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5078,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5057,
											"end": 5078,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5078,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5078,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5078,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5057,
											"end": 5078,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5057,
											"end": 5078,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5089,
											"end": 5113,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5116,
											"end": 5120,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5137,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5116,
											"end": 5137,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5137,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5089,
											"end": 5137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5089,
											"end": 5137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5171,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5179,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5179,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5179,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5179,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5179,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5179,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5179,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5167,
											"end": 5179,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5179,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5179,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5179,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5167,
											"end": 5179,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5189,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5167,
											"end": 5189,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5189,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 5167,
											"end": 5204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5167,
											"end": 5204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 5167,
											"end": 5204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5234,
											"end": 5238,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5234,
											"end": 5254,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5234,
											"end": 5254,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5234,
											"end": 5254,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 5219,
											"end": 5254,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5258,
											"end": 5266,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5271,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5271,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5219,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5215,
											"end": 5641,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5215,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 5215,
											"end": 5641,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5306,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5326,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5340,
											"end": 5344,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5340,
											"end": 5360,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5340,
											"end": 5360,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5340,
											"end": 5360,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5362,
											"end": 5374,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 5326,
											"end": 5375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5375,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5326,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5375,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5390,
											"end": 5409,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5497,
											"end": 5512,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5497,
											"end": 5512,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5458,
											"end": 5462,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5458,
											"end": 5473,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5458,
											"end": 5473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5458,
											"end": 5473,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5442,
											"end": 5455,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5442,
											"end": 5455,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5439,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 5429,
											"end": 5455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5429,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5455,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 5429,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5429,
											"end": 5473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5429,
											"end": 5473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5473,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5429,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5429,
											"end": 5512,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5429,
											"end": 5512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5512,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5429,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5390,
											"end": 5512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5390,
											"end": 5512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5606,
											"end": 5614,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5600,
											"end": 5604,
											"name": "PUSH",
											"source": 6,
											"value": "E8D4A51000"
										},
										{
											"begin": 5586,
											"end": 5597,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5586,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5586,
											"end": 5604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5586,
											"end": 5604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5586,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5586,
											"end": 5604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5586,
											"end": 5604,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5586,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5586,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5586,
											"end": 5614,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5586,
											"end": 5614,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5586,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5586,
											"end": 5614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5586,
											"end": 5614,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5586,
											"end": 5614,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5547,
											"end": 5563,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5547,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5547,
											"end": 5629,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5547,
											"end": 5629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5547,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5547,
											"end": 5629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5547,
											"end": 5629,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5547,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5629,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5629,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5273,
											"end": 5641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5273,
											"end": 5641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5215,
											"end": 5641,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 5215,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5698,
											"end": 5702,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5698,
											"end": 5713,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5698,
											"end": 5713,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5698,
											"end": 5713,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5691,
											"end": 5695,
											"name": "PUSH",
											"source": 6,
											"value": "E8D4A51000"
										},
										{
											"begin": 5672,
											"end": 5688,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5658,
											"end": 5662,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5658,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5669,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5658,
											"end": 5669,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5658,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5658,
											"end": 5688,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5658,
											"end": 5688,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5658,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5658,
											"end": 5688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5658,
											"end": 5688,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5658,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5658,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5658,
											"end": 5695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5658,
											"end": 5695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5658,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5658,
											"end": 5695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5658,
											"end": 5695,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5658,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5658,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5658,
											"end": 5713,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5658,
											"end": 5713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5658,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5658,
											"end": 5713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5658,
											"end": 5713,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5658,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5713,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 5721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 3666,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3712,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3651,
											"end": 3712,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3700,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3683,
											"end": 3698,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3683,
											"end": 3700,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3700,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3683,
											"end": 3700,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3712,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3651,
											"end": 3712,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3776,
											"end": 3786,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3761,
											"end": 3773,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 3761,
											"end": 3786,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3761,
											"end": 3814,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3761,
											"end": 3814,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3804,
											"end": 3814,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3761,
											"end": 3814,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3761,
											"end": 3814,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3761,
											"end": 3814,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3761,
											"end": 3814,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3789,
											"end": 3801,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 3761,
											"end": 3814,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3761,
											"end": 3814,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3814,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3814,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 3872,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 3858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3843,
											"end": 3858,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3843,
											"end": 3872,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 3872,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3843,
											"end": 3872,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 3872,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3843,
											"end": 3872,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3825,
											"end": 3840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3825,
											"end": 3872,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3825,
											"end": 3872,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3825,
											"end": 3872,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3825,
											"end": 3872,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 3956,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3987,
											"end": 3998,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4034,
											"end": 4049,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 4103,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 4103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 4114,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 4122,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 4122,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 4122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7785,
											"end": 7793,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7794,
											"end": 7798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 7785,
											"end": 7799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7799,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7799,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7810,
											"end": 7831,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7842,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7834,
											"end": 7848,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7843,
											"end": 7847,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7848,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7848,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7848,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7834,
											"end": 7848,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7848,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7848,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7848,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7848,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7834,
											"end": 7848,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7848,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7848,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7849,
											"end": 7859,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7860,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7834,
											"end": 7860,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7860,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7834,
											"end": 7860,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7860,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7860,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7860,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7834,
											"end": 7860,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7860,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7860,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7860,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7834,
											"end": 7860,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7860,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7810,
											"end": 7860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7810,
											"end": 7860,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7894,
											"end": 7901,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7879,
											"end": 7883,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7879,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7879,
											"end": 7890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7879,
											"end": 7890,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7879,
											"end": 7901,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7879,
											"end": 7901,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 7871,
											"end": 7924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 7871,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 7946,
											"end": 7950,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 7935,
											"end": 7951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7951,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 7935,
											"end": 7951,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 7977,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8056,
											"end": 8060,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8056,
											"end": 8071,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8056,
											"end": 8071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8056,
											"end": 8071,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8030,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "E8D4A51000"
										},
										{
											"begin": 8007,
											"end": 8011,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8007,
											"end": 8028,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8007,
											"end": 8028,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8007,
											"end": 8028,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 7997,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8004,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7993,
											"end": 8004,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8004,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 7993,
											"end": 8028,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 7993,
											"end": 8028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8028,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 7993,
											"end": 8028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 7993,
											"end": 8034,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 7993,
											"end": 8034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8034,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 7993,
											"end": 8034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 7993,
											"end": 8071,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 7993,
											"end": 8071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8071,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 7993,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 8071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 8071,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8096,
											"end": 8134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 8114,
											"end": 8124,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8126,
											"end": 8133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8096,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 8096,
											"end": 8134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8096,
											"end": 8134,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 8096,
											"end": 8134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8173,
											"end": 8180,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8159,
											"end": 8163,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8159,
											"end": 8170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8159,
											"end": 8170,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8159,
											"end": 8170,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 8159,
											"end": 8180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 8159,
											"end": 8180,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8145,
											"end": 8149,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8145,
											"end": 8156,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8145,
											"end": 8156,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8145,
											"end": 8180,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8145,
											"end": 8180,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8145,
											"end": 8180,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8145,
											"end": 8180,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8247,
											"end": 8251,
											"name": "PUSH",
											"source": 6,
											"value": "E8D4A51000"
										},
										{
											"begin": 8223,
											"end": 8227,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8223,
											"end": 8244,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8223,
											"end": 8244,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8223,
											"end": 8244,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8209,
											"end": 8213,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8209,
											"end": 8244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 8209,
											"end": 8244,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8209,
											"end": 8244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8209,
											"end": 8244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 8209,
											"end": 8244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8209,
											"end": 8244,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 8209,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8209,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 8209,
											"end": 8251,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8209,
											"end": 8251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8209,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 8209,
											"end": 8251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8209,
											"end": 8251,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 8209,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8195,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8206,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8191,
											"end": 8206,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8251,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8251,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 8297,
											"end": 8307,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8317,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8267,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8275,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8263,
											"end": 8275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8275,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8263,
											"end": 8275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8275,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8275,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8263,
											"end": 8275,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8275,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8275,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8263,
											"end": 8275,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8288,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8263,
											"end": 8288,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 8263,
											"end": 8288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8318,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8318,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8318,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8318,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8263,
											"end": 8318,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8318,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 8263,
											"end": 8318,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8355,
											"end": 8359,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8343,
											"end": 8353,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8369,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8334,
											"end": 8369,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8369,
											"name": "PUSH",
											"source": 6,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 8361,
											"end": 8368,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8369,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8334,
											"end": 8369,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 8334,
											"end": 8369,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 8334,
											"end": 8369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8369,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 8334,
											"end": 8369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8369,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8334,
											"end": 8369,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8369,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8369,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8369,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 7750,
											"end": 8377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7750,
											"end": 8377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7750,
											"end": 8377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 8377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 8377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6133,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6136,
											"end": 6144,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6145,
											"end": 6149,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 6136,
											"end": 6150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6150,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6181,
											"end": 6185,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6181,
											"end": 6201,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6181,
											"end": 6201,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6181,
											"end": 6201,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6165,
											"end": 6177,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 6165,
											"end": 6201,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6161,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6161,
											"end": 6236,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6218,
											"end": 6225,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6218,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6218,
											"end": 6225,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6161,
											"end": 6236,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6161,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6246,
											"end": 6262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6265,
											"end": 6269,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6277,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6265,
											"end": 6277,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6277,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6265,
											"end": 6277,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6277,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6277,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6277,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6265,
											"end": 6277,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6277,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6277,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6277,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6265,
											"end": 6277,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6287,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6265,
											"end": 6287,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6287,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 6296,
											"end": 6300,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 6265,
											"end": 6302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 6265,
											"end": 6302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 6265,
											"end": 6302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6246,
											"end": 6302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6246,
											"end": 6302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6330,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6325,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6317,
											"end": 6330,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6313,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 6313,
											"end": 6415,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6370,
											"end": 6382,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6367,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6347,
											"end": 6367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6382,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6382,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6397,
											"end": 6404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6397,
											"end": 6404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6397,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6397,
											"end": 6404,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6313,
											"end": 6415,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 6313,
											"end": 6415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6443,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6446,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 6460,
											"end": 6464,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6494,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 6446,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 6446,
											"end": 6495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6446,
											"end": 6495,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 6446,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6525,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6604,
											"end": 6619,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 6604,
											"end": 6619,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6570,
											"end": 6574,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6554,
											"end": 6567,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6554,
											"end": 6567,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6551,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 6541,
											"end": 6567,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6567,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 6541,
											"end": 6567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6567,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 6541,
											"end": 6567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 6541,
											"end": 6585,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 6541,
											"end": 6585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6585,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 6541,
											"end": 6585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 6541,
											"end": 6619,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 6541,
											"end": 6619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6619,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 6541,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6619,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6633,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6633,
											"end": 6638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6638,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6633,
											"end": 6638,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6638,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6633,
											"end": 6638,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6643,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6633,
											"end": 6643,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6643,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 6652,
											"end": 6656,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6659,
											"end": 6670,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 6633,
											"end": 6671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6776,
											"end": 6784,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6770,
											"end": 6774,
											"name": "PUSH",
											"source": 6,
											"value": "E8D4A51000"
										},
										{
											"begin": 6756,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 6756,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 6756,
											"end": 6784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 6756,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6716,
											"end": 6720,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6716,
											"end": 6737,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6716,
											"end": 6737,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6716,
											"end": 6737,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6716,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 6716,
											"end": 6785,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6716,
											"end": 6785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6716,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 6716,
											"end": 6785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6716,
											"end": 6785,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 6716,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6692,
											"end": 6696,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6692,
											"end": 6713,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6692,
											"end": 6713,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6692,
											"end": 6785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6692,
											"end": 6785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6692,
											"end": 6785,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6692,
											"end": 6785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6821,
											"end": 6833,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 6798,
											"end": 6802,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6798,
											"end": 6818,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6798,
											"end": 6818,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6798,
											"end": 6833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6798,
											"end": 6833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6798,
											"end": 6833,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6798,
											"end": 6833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6101,
											"end": 6841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6101,
											"end": 6841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6101,
											"end": 6841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6101,
											"end": 6841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8528,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8531,
											"end": 8539,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8540,
											"end": 8544,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 8531,
											"end": 8545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8531,
											"end": 8545,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8556,
											"end": 8577,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8580,
											"end": 8588,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8580,
											"end": 8594,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8589,
											"end": 8593,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8594,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8594,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8594,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8580,
											"end": 8594,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8594,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8594,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8594,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8594,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8580,
											"end": 8594,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8594,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8580,
											"end": 8594,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8606,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8595,
											"end": 8605,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8606,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8580,
											"end": 8606,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8606,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8580,
											"end": 8606,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8606,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8606,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8606,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8580,
											"end": 8606,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8606,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8606,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8606,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8606,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8580,
											"end": 8606,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8606,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8580,
											"end": 8606,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8556,
											"end": 8606,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8556,
											"end": 8606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 8651,
											"end": 8661,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8668,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8675,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8664,
											"end": 8675,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8675,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8621,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8629,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8617,
											"end": 8629,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8629,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8617,
											"end": 8629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8629,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8629,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8617,
											"end": 8629,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8629,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8629,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8617,
											"end": 8629,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8642,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8617,
											"end": 8642,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 8617,
											"end": 8642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8676,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8676,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8676,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8676,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8617,
											"end": 8676,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8676,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 8617,
											"end": 8676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8726,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8710,
											"end": 8720,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8740,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8692,
											"end": 8740,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8740,
											"name": "PUSH",
											"source": 6,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 8728,
											"end": 8732,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8728,
											"end": 8739,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8728,
											"end": 8739,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8728,
											"end": 8739,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8740,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8692,
											"end": 8740,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 8692,
											"end": 8740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 8692,
											"end": 8740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8740,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 8692,
											"end": 8740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8740,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8692,
											"end": 8740,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8740,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8740,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 8765,
											"end": 8766,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8751,
											"end": 8755,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8751,
											"end": 8762,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8751,
											"end": 8762,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8751,
											"end": 8766,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8751,
											"end": 8766,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8751,
											"end": 8766,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8751,
											"end": 8766,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8795,
											"end": 8796,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8777,
											"end": 8781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8777,
											"end": 8792,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8777,
											"end": 8792,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8777,
											"end": 8796,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8777,
											"end": 8796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8777,
											"end": 8796,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8777,
											"end": 8796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8496,
											"end": 8804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8496,
											"end": 8804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8448,
											"end": 8804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8448,
											"end": 8804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5984,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 5804,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5849,
											"end": 5863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5866,
											"end": 5874,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5866,
											"end": 5881,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5866,
											"end": 5881,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5866,
											"end": 5881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5866,
											"end": 5881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5849,
											"end": 5881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5849,
											"end": 5881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5897,
											"end": 5908,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5911,
											"end": 5912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5897,
											"end": 5912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5897,
											"end": 5912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5892,
											"end": 5977,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 5892,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5920,
											"end": 5926,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5917,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5926,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5892,
											"end": 5977,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5892,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 5892,
											"end": 5977,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5950,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 5961,
											"end": 5964,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5950,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5950,
											"end": 5965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5950,
											"end": 5965,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 5950,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5928,
											"end": 5933,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5928,
											"end": 5933,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5928,
											"end": 5933,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5928,
											"end": 5933,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5928,
											"end": 5933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5892,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 5892,
											"end": 5977,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5892,
											"end": 5977,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 5892,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5892,
											"end": 5977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5838,
											"end": 5984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4362,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4408,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4347,
											"end": 4408,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4396,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4379,
											"end": 4394,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 4379,
											"end": 4396,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4396,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4379,
											"end": 4396,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4408,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4347,
											"end": 4408,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4496,
											"end": 4507,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4463,
											"end": 4467,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4454,
											"end": 4468,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4468,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4454,
											"end": 4479,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4479,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4436,
											"end": 4451,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4436,
											"end": 4479,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4479,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4436,
											"end": 4479,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4436,
											"end": 4479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4507,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 4436,
											"end": 4507,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4507,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4507,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 4436,
											"end": 4507,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4507,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 4436,
											"end": 4507,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4418,
											"end": 4507,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4507,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4507,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4507,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4546,
											"end": 4557,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4527,
											"end": 4531,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4518,
											"end": 4532,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4532,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4518,
											"end": 4543,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4557,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4557,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4557,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2341,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2296,
											"end": 2341,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4749,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4774,
											"end": 4777,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4774,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4774,
											"end": 4785,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4774,
											"end": 4785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4774,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4774,
											"end": 4785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4774,
											"end": 4785,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4774,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6977,
											"end": 6998,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7001,
											"end": 7009,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7010,
											"end": 7014,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 7001,
											"end": 7015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6977,
											"end": 7015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6977,
											"end": 7015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7047,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7050,
											"end": 7058,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7050,
											"end": 7064,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7059,
											"end": 7063,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7064,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7064,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7064,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7050,
											"end": 7064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7064,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7064,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7064,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7050,
											"end": 7064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7064,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7050,
											"end": 7064,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7065,
											"end": 7075,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7076,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7050,
											"end": 7076,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7076,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7050,
											"end": 7076,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7076,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7076,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7050,
											"end": 7076,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7076,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7076,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7076,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7050,
											"end": 7076,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7050,
											"end": 7076,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7076,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7076,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 7098,
											"end": 7102,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 7087,
											"end": 7103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7103,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 7087,
											"end": 7103,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7132,
											"end": 7133,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7118,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7118,
											"end": 7129,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7118,
											"end": 7133,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7114,
											"end": 7332,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7114,
											"end": 7332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 7114,
											"end": 7332,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7165,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7251,
											"end": 7255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7266,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7251,
											"end": 7266,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7266,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7222,
											"end": 7226,
											"name": "PUSH",
											"source": 6,
											"value": "E8D4A51000"
										},
										{
											"begin": 7199,
											"end": 7203,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7199,
											"end": 7220,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7199,
											"end": 7220,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7199,
											"end": 7220,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7189,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7196,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7185,
											"end": 7196,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7196,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 7185,
											"end": 7220,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7220,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 7185,
											"end": 7220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7220,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 7185,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 7185,
											"end": 7226,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 7185,
											"end": 7226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7226,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 7185,
											"end": 7226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 7185,
											"end": 7266,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 7185,
											"end": 7266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7266,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 7185,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7266,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7282,
											"end": 7320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 7300,
											"end": 7310,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7312,
											"end": 7319,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7282,
											"end": 7299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 7282,
											"end": 7320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7282,
											"end": 7320,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 7282,
											"end": 7320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7332,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7114,
											"end": 7332,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 7114,
											"end": 7332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 7394,
											"end": 7404,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7432,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 7448,
											"end": 7455,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7346,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7354,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7354,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7354,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7354,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7354,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7354,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7354,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7342,
											"end": 7354,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7354,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7354,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7354,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7342,
											"end": 7354,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7342,
											"end": 7371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 7342,
											"end": 7371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7466,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7466,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7466,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7342,
											"end": 7466,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7466,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 7342,
											"end": 7466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7505,
											"end": 7512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7491,
											"end": 7495,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7491,
											"end": 7502,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7491,
											"end": 7502,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7491,
											"end": 7502,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7491,
											"end": 7512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7491,
											"end": 7512,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7491,
											"end": 7512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7491,
											"end": 7512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 7491,
											"end": 7512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7491,
											"end": 7512,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7491,
											"end": 7512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7477,
											"end": 7481,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7477,
											"end": 7488,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7477,
											"end": 7488,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7477,
											"end": 7512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7477,
											"end": 7512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7477,
											"end": 7512,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7477,
											"end": 7512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7579,
											"end": 7583,
											"name": "PUSH",
											"source": 6,
											"value": "E8D4A51000"
										},
										{
											"begin": 7555,
											"end": 7559,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7555,
											"end": 7576,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7555,
											"end": 7576,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7555,
											"end": 7576,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7541,
											"end": 7545,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7541,
											"end": 7552,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7541,
											"end": 7552,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7541,
											"end": 7552,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7541,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 7541,
											"end": 7576,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7541,
											"end": 7576,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7541,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 7541,
											"end": 7576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7541,
											"end": 7576,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 7541,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7541,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 7541,
											"end": 7583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7541,
											"end": 7583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7541,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 7541,
											"end": 7583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7541,
											"end": 7583,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 7541,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7523,
											"end": 7527,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7523,
											"end": 7538,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7523,
											"end": 7538,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7523,
											"end": 7583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7523,
											"end": 7583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7523,
											"end": 7583,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7523,
											"end": 7583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7620,
											"end": 7624,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7608,
											"end": 7618,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7634,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7600,
											"end": 7634,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7634,
											"name": "PUSH",
											"source": 6,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 7626,
											"end": 7633,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7634,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7600,
											"end": 7634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 7600,
											"end": 7634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 7600,
											"end": 7634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7634,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 7600,
											"end": 7634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7634,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7600,
											"end": 7634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7634,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7634,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 6966,
											"end": 7642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6966,
											"end": 7642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 7642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 7642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8920,
											"end": 9205,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 8920,
											"end": 9205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8997,
											"end": 9013,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9016,
											"end": 9021,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9016,
											"end": 9021,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9016,
											"end": 9021,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9021,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9021,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9021,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9016,
											"end": 9021,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9021,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9021,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9021,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9016,
											"end": 9021,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9031,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9016,
											"end": 9031,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9031,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 9040,
											"end": 9044,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 9016,
											"end": 9046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 9016,
											"end": 9046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8997,
											"end": 9046,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8997,
											"end": 9046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9071,
											"end": 9079,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9061,
											"end": 9068,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9061,
											"end": 9079,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9057,
											"end": 9198,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9057,
											"end": 9198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 9057,
											"end": 9198,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9101,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9096,
											"end": 9101,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9096,
											"end": 9101,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9101,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9101,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9101,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9096,
											"end": 9101,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9101,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9101,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9101,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9096,
											"end": 9101,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9110,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9096,
											"end": 9110,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9110,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 9111,
											"end": 9114,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9116,
											"end": 9124,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 9096,
											"end": 9125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 9096,
											"end": 9125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9057,
											"end": 9198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 9057,
											"end": 9198,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9057,
											"end": 9198,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 9057,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9163,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9158,
											"end": 9163,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9158,
											"end": 9163,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9163,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9163,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9163,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9158,
											"end": 9163,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9163,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9163,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9163,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9158,
											"end": 9163,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9172,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9158,
											"end": 9172,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9172,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 9173,
											"end": 9176,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9178,
											"end": 9185,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 9158,
											"end": 9186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 9158,
											"end": 9186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9158,
											"end": 9186,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9057,
											"end": 9198,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 9057,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8986,
											"end": 9205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8920,
											"end": 9205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8920,
											"end": 9205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8920,
											"end": 9205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 574,
											"end": 634,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 574,
											"end": 634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 602,
											"end": 605,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 628,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 628,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 616,
											"end": 628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 574,
											"end": 634,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 574,
											"end": 634,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 574,
											"end": 634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 574,
											"end": 634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 640,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 640,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 690,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 750,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 750,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 750,
											"end": 774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 750,
											"end": 774,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 750,
											"end": 774,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 741,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 741,
											"end": 775,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 723,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 723,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 723,
											"end": 776,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 723,
											"end": 776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 710,
											"end": 776,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 710,
											"end": 776,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 640,
											"end": 782,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 640,
											"end": 782,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 640,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 640,
											"end": 782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 788,
											"end": 914,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 788,
											"end": 914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 838,
											"end": 847,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 902,
											"end": 907,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 871,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 871,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 871,
											"end": 908,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 871,
											"end": 908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 858,
											"end": 908,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 858,
											"end": 908,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 788,
											"end": 914,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 788,
											"end": 914,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 788,
											"end": 914,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 788,
											"end": 914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 984,
											"end": 993,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 1017,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1004,
											"end": 1054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1004,
											"end": 1054,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 1212,
											"end": 1217,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 1167,
											"end": 1218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1162,
											"end": 1165,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1155,
											"end": 1219,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1066,
											"end": 1225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1378,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1365,
											"end": 1374,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1361,
											"end": 1379,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1353,
											"end": 1379,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1353,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1456,
											"end": 1473,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 1389,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1568,
											"end": 1685,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 1568,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1679,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1814,
											"end": 1936,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 1814,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 1905,
											"end": 1910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 1887,
											"end": 1911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1885,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1877,
											"end": 1912,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1926,
											"end": 1927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1924,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1928,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1814,
											"end": 1936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1814,
											"end": 1936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 1993,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2032,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2033,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2033,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2033,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2042,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 2069,
											"end": 2074,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2042,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 2042,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2042,
											"end": 2075,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 2042,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1942,
											"end": 2081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2197,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2192,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2181,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2170,
											"end": 2193,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2166,
											"end": 2198,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2201,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 2201,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 2201,
											"end": 2280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2201,
											"end": 2280,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 2201,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2321,
											"end": 2322,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 2391,
											"end": 2398,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2382,
											"end": 2388,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2380,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2367,
											"end": 2389,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 2346,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2399,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 2346,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2399,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2292,
											"end": 2409,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2087,
											"end": 2416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2562,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 2422,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2495,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 2550,
											"end": 2555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2519,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 2519,
											"end": 2556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2519,
											"end": 2556,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 2519,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2568,
											"end": 2727,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 2568,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 2714,
											"end": 2719,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 2669,
											"end": 2720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2720,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 2669,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2664,
											"end": 2667,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2721,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2568,
											"end": 2727,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2568,
											"end": 2727,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2568,
											"end": 2727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 3314,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2733,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2924,
											"end": 2928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2951,
											"end": 2960,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2966,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3043,
											"end": 3060,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3034,
											"end": 3040,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 2976,
											"end": 3061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3061,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 2976,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 3139,
											"end": 3141,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3128,
											"end": 3137,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3121,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 3071,
											"end": 3143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3143,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 3071,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3153,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 3221,
											"end": 3223,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3210,
											"end": 3219,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3224,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3203,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3153,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 3153,
											"end": 3225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3153,
											"end": 3225,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 3153,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 3303,
											"end": 3305,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3292,
											"end": 3301,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3288,
											"end": 3306,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3279,
											"end": 3285,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 3235,
											"end": 3307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3307,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 3235,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 3314,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 3314,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 3314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 3314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 3314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 3314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 3314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 3314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3416,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 3320,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3364,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3386,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 3404,
											"end": 3409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3386,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 3386,
											"end": 3410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3386,
											"end": 3410,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 3386,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3410,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3416,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3544,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 3422,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3495,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 3513,
											"end": 3518,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3495,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 3495,
											"end": 3519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3495,
											"end": 3519,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 3495,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3488,
											"end": 3493,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3520,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 3475,
											"end": 3538,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3535,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3532,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3536,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3538,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 3475,
											"end": 3538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3544,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3550,
											"end": 3689,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 3550,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3601,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3621,
											"end": 3641,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 3677,
											"end": 3682,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 3650,
											"end": 3683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3683,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 3650,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3550,
											"end": 3689,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3550,
											"end": 3689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3550,
											"end": 3689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3550,
											"end": 3689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3550,
											"end": 3689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 4169,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3695,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3763,
											"end": 3769,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3808,
											"end": 3817,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3799,
											"end": 3806,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3795,
											"end": 3818,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3791,
											"end": 3823,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3907,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 3788,
											"end": 3907,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 3826,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 3826,
											"end": 3905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3905,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 3826,
											"end": 3905,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3907,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 3788,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 3947,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 4016,
											"end": 4023,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4007,
											"end": 4013,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4005,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3992,
											"end": 4014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 3971,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4024,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 3971,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3961,
											"end": 4024,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3961,
											"end": 4024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3917,
											"end": 4034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4073,
											"end": 4075,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4099,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 4144,
											"end": 4151,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4141,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4133,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4142,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4099,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 4099,
											"end": 4152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4099,
											"end": 4152,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 4099,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4089,
											"end": 4152,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4089,
											"end": 4152,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4044,
											"end": 4162,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 4169,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 4169,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 4169,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 4169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 4169,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4175,
											"end": 4285,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 4175,
											"end": 4285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4226,
											"end": 4233,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 4273,
											"end": 4278,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 4255,
											"end": 4279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4279,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 4255,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4279,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4279,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4175,
											"end": 4285,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4175,
											"end": 4285,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4175,
											"end": 4285,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4175,
											"end": 4285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4291,
											"end": 4441,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 4291,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 4410,
											"end": 4415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 4378,
											"end": 4416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4416,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 4378,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4371,
											"end": 4376,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4417,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 4358,
											"end": 4435,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4431,
											"end": 4432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4429,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4433,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4435,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 4358,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4291,
											"end": 4441,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4291,
											"end": 4441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4614,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 4447,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4551,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4552,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4552,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 4602,
											"end": 4607,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 4561,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4614,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4614,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4710,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 4620,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4661,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4702,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4683,
											"end": 4704,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4704,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4704,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4710,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4716,
											"end": 4832,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 4716,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4786,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 4801,
											"end": 4806,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4786,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 4786,
											"end": 4807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4786,
											"end": 4807,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 4786,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4779,
											"end": 4784,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 4808,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 4766,
											"end": 4826,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4823,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4819,
											"end": 4820,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4812,
											"end": 4824,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 4826,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 4766,
											"end": 4826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4716,
											"end": 4832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4716,
											"end": 4832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4971,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 4838,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4881,
											"end": 4886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4925,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4906,
											"end": 4926,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4926,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4935,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 4959,
											"end": 4964,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4935,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 4935,
											"end": 4965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4935,
											"end": 4965,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 4935,
											"end": 4965,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4971,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4971,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 5618,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 4977,
											"end": 5618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5065,
											"end": 5071,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5073,
											"end": 5079,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5081,
											"end": 5087,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5130,
											"end": 5132,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5118,
											"end": 5127,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5109,
											"end": 5116,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5105,
											"end": 5128,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5101,
											"end": 5133,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5217,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 5098,
											"end": 5217,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 5136,
											"end": 5215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 5136,
											"end": 5215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5215,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 5136,
											"end": 5215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5217,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 5098,
											"end": 5217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5256,
											"end": 5257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5281,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 5326,
											"end": 5333,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5317,
											"end": 5323,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5315,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5302,
											"end": 5324,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5281,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 5281,
											"end": 5334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5281,
											"end": 5334,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 5281,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5334,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5334,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5227,
											"end": 5344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5383,
											"end": 5385,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5409,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 5468,
											"end": 5475,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5459,
											"end": 5465,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5457,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5444,
											"end": 5466,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5409,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 5409,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5409,
											"end": 5476,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 5409,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5399,
											"end": 5476,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5399,
											"end": 5476,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5525,
											"end": 5527,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 5593,
											"end": 5600,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5584,
											"end": 5590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5582,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5569,
											"end": 5591,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 5551,
											"end": 5601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5541,
											"end": 5601,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5541,
											"end": 5601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5496,
											"end": 5611,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 5618,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 5618,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 5618,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 5618,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 5618,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 5618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5624,
											"end": 6098,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5624,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5692,
											"end": 5698,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5700,
											"end": 5706,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5749,
											"end": 5751,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5737,
											"end": 5746,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5728,
											"end": 5735,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5724,
											"end": 5747,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5720,
											"end": 5752,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5717,
											"end": 5836,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5717,
											"end": 5836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 5717,
											"end": 5836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5755,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 5755,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 5755,
											"end": 5834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5755,
											"end": 5834,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 5755,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5717,
											"end": 5836,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 5717,
											"end": 5836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 5876,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5900,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 5945,
											"end": 5952,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 5942,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5925,
											"end": 5934,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5921,
											"end": 5943,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5900,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 5900,
											"end": 5953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5900,
											"end": 5953,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 5900,
											"end": 5953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5890,
											"end": 5953,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5890,
											"end": 5953,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5846,
											"end": 5963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6002,
											"end": 6004,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6028,
											"end": 6081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 6073,
											"end": 6080,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6064,
											"end": 6070,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6053,
											"end": 6062,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6071,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6028,
											"end": 6081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 6028,
											"end": 6081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6028,
											"end": 6081,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 6028,
											"end": 6081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6081,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6081,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5973,
											"end": 6091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5624,
											"end": 6098,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5624,
											"end": 6098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5624,
											"end": 6098,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5624,
											"end": 6098,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5624,
											"end": 6098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5624,
											"end": 6098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6104,
											"end": 6717,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 6104,
											"end": 6717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6178,
											"end": 6184,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6186,
											"end": 6192,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6194,
											"end": 6200,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6243,
											"end": 6245,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6231,
											"end": 6240,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6229,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6218,
											"end": 6241,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6214,
											"end": 6246,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6330,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 6211,
											"end": 6330,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6249,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 6249,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 6249,
											"end": 6328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6249,
											"end": 6328,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 6249,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6330,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 6211,
											"end": 6330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6369,
											"end": 6370,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6394,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 6439,
											"end": 6446,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6430,
											"end": 6436,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6428,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6437,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6394,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 6394,
											"end": 6447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6394,
											"end": 6447,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 6394,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6384,
											"end": 6447,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6384,
											"end": 6447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6340,
											"end": 6457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6496,
											"end": 6498,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 6567,
											"end": 6574,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6564,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6547,
											"end": 6556,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 6565,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 6522,
											"end": 6575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6575,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6575,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6624,
											"end": 6626,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 6692,
											"end": 6699,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6668,
											"end": 6690,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 6650,
											"end": 6700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6640,
											"end": 6700,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6640,
											"end": 6700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6595,
											"end": 6710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6104,
											"end": 6717,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6104,
											"end": 6717,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6104,
											"end": 6717,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6104,
											"end": 6717,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6104,
											"end": 6717,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6104,
											"end": 6717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6723,
											"end": 6841,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 6723,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 6828,
											"end": 6833,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 6810,
											"end": 6834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 6834,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 6810,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 6808,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6798,
											"end": 6835,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6723,
											"end": 6841,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6723,
											"end": 6841,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6723,
											"end": 6841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 7069,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 6847,
											"end": 7069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6940,
											"end": 6944,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6978,
											"end": 6980,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6967,
											"end": 6976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6963,
											"end": 6981,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6955,
											"end": 6981,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6955,
											"end": 6981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6991,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 7059,
											"end": 7060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7048,
											"end": 7057,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7044,
											"end": 7061,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7035,
											"end": 7041,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6991,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 6991,
											"end": 7062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6991,
											"end": 7062,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 6991,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 7069,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 7069,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 7069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 7069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 7069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7075,
											"end": 7407,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 7075,
											"end": 7407,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7196,
											"end": 7200,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7234,
											"end": 7236,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7223,
											"end": 7232,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7219,
											"end": 7237,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7211,
											"end": 7237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7211,
											"end": 7237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7247,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 7315,
											"end": 7316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7304,
											"end": 7313,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7300,
											"end": 7317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7291,
											"end": 7297,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7247,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 7247,
											"end": 7318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7247,
											"end": 7318,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 7247,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7328,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 7396,
											"end": 7398,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7385,
											"end": 7394,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7381,
											"end": 7399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7372,
											"end": 7378,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7328,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 7328,
											"end": 7400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7328,
											"end": 7400,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 7328,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7075,
											"end": 7407,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7075,
											"end": 7407,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7075,
											"end": 7407,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7075,
											"end": 7407,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7075,
											"end": 7407,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7075,
											"end": 7407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7413,
											"end": 7742,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 7413,
											"end": 7742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7472,
											"end": 7478,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7521,
											"end": 7523,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7509,
											"end": 7518,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7500,
											"end": 7507,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7496,
											"end": 7519,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7492,
											"end": 7524,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7489,
											"end": 7608,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7489,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 7489,
											"end": 7608,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7527,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 7527,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 7527,
											"end": 7606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7527,
											"end": 7606,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 7527,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7489,
											"end": 7608,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 7489,
											"end": 7608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7647,
											"end": 7648,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7672,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 7717,
											"end": 7724,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7708,
											"end": 7714,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7697,
											"end": 7706,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7693,
											"end": 7715,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 7672,
											"end": 7725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7725,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 7672,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7662,
											"end": 7725,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7662,
											"end": 7725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7618,
											"end": 7735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7413,
											"end": 7742,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7413,
											"end": 7742,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7413,
											"end": 7742,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7413,
											"end": 7742,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7413,
											"end": 7742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7748,
											"end": 7928,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 7748,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7873,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7793,
											"end": 7794,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7786,
											"end": 7874,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7893,
											"end": 7897,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 7890,
											"end": 7891,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7883,
											"end": 7898,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7917,
											"end": 7921,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7914,
											"end": 7915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7922,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7934,
											"end": 8077,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 7934,
											"end": 8077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7991,
											"end": 7996,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8022,
											"end": 8028,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8029,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8007,
											"end": 8029,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8007,
											"end": 8029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8038,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 8065,
											"end": 8070,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8038,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 8038,
											"end": 8071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8038,
											"end": 8071,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 8038,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7934,
											"end": 8077,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7934,
											"end": 8077,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7934,
											"end": 8077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7934,
											"end": 8077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7934,
											"end": 8077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8083,
											"end": 8434,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 8083,
											"end": 8434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8153,
											"end": 8159,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8202,
											"end": 8204,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8190,
											"end": 8199,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8181,
											"end": 8188,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8177,
											"end": 8200,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8173,
											"end": 8205,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8170,
											"end": 8289,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8170,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 8170,
											"end": 8289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8208,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 8208,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 8208,
											"end": 8287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8208,
											"end": 8287,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 8208,
											"end": 8287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8170,
											"end": 8289,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 8170,
											"end": 8289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8328,
											"end": 8329,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8353,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 8409,
											"end": 8416,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8400,
											"end": 8406,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8389,
											"end": 8398,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8385,
											"end": 8407,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8353,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 8353,
											"end": 8417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8353,
											"end": 8417,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 8353,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8343,
											"end": 8417,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8343,
											"end": 8417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8299,
											"end": 8427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8083,
											"end": 8434,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8083,
											"end": 8434,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8083,
											"end": 8434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8083,
											"end": 8434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8083,
											"end": 8434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 8620,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 8440,
											"end": 8620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8488,
											"end": 8565,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8485,
											"end": 8486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8566,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8585,
											"end": 8589,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8582,
											"end": 8583,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8575,
											"end": 8590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8609,
											"end": 8613,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8606,
											"end": 8607,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8599,
											"end": 8614,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8626,
											"end": 9036,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 8626,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8666,
											"end": 8673,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8689,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 8707,
											"end": 8708,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8689,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 8689,
											"end": 8709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8689,
											"end": 8709,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 8689,
											"end": 8709,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8684,
											"end": 8709,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8684,
											"end": 8709,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8723,
											"end": 8743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 8741,
											"end": 8742,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8723,
											"end": 8743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 8723,
											"end": 8743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8723,
											"end": 8743,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 8723,
											"end": 8743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8718,
											"end": 8743,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8718,
											"end": 8743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8778,
											"end": 8779,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8775,
											"end": 8776,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8771,
											"end": 8780,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 8818,
											"end": 8829,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 8800,
											"end": 8830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8830,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 8800,
											"end": 8830,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8789,
											"end": 8830,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8789,
											"end": 8830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8979,
											"end": 8980,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8970,
											"end": 8977,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8966,
											"end": 8981,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8963,
											"end": 8964,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8982,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8940,
											"end": 8941,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8933,
											"end": 8942,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8913,
											"end": 8996,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 8890,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 8890,
											"end": 9029,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9009,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 9009,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 9009,
											"end": 9027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9009,
											"end": 9027,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 9009,
											"end": 9027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8890,
											"end": 9029,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 8890,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8674,
											"end": 9036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8626,
											"end": 9036,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8626,
											"end": 9036,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8626,
											"end": 9036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8626,
											"end": 9036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8626,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9042,
											"end": 9222,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 9042,
											"end": 9222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9090,
											"end": 9167,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9087,
											"end": 9088,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9080,
											"end": 9168,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9187,
											"end": 9191,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 9184,
											"end": 9185,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9177,
											"end": 9192,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9211,
											"end": 9215,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9208,
											"end": 9209,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9201,
											"end": 9216,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9413,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 9228,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9268,
											"end": 9269,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9285,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 9303,
											"end": 9304,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9285,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 9285,
											"end": 9305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9285,
											"end": 9305,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 9285,
											"end": 9305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9280,
											"end": 9305,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9280,
											"end": 9305,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9319,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9319,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 9319,
											"end": 9339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9319,
											"end": 9339,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 9319,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9339,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9358,
											"end": 9359,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9348,
											"end": 9383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 9348,
											"end": 9383,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 9363,
											"end": 9381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9348,
											"end": 9383,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 9348,
											"end": 9383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9405,
											"end": 9406,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9402,
											"end": 9403,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9398,
											"end": 9407,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9393,
											"end": 9407,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9393,
											"end": 9407,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9413,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9413,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9413,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9413,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9419,
											"end": 9610,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 9419,
											"end": 9610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9459,
											"end": 9462,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9478,
											"end": 9498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 9496,
											"end": 9497,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9478,
											"end": 9498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 9478,
											"end": 9498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9478,
											"end": 9498,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 9478,
											"end": 9498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9473,
											"end": 9498,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9473,
											"end": 9498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9512,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 9530,
											"end": 9531,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9512,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 9512,
											"end": 9532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9512,
											"end": 9532,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 9512,
											"end": 9532,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9507,
											"end": 9532,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9507,
											"end": 9532,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9555,
											"end": 9556,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9552,
											"end": 9553,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9541,
											"end": 9557,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9541,
											"end": 9557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9576,
											"end": 9579,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9573,
											"end": 9574,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9580,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9567,
											"end": 9603,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9567,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 9567,
											"end": 9603,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9583,
											"end": 9601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 9583,
											"end": 9601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 9583,
											"end": 9601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9583,
											"end": 9601,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 9583,
											"end": 9601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9567,
											"end": 9603,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 9567,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9419,
											"end": 9610,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9419,
											"end": 9610,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9419,
											"end": 9610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9419,
											"end": 9610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9419,
											"end": 9610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9616,
											"end": 9810,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 9616,
											"end": 9810,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9656,
											"end": 9660,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9676,
											"end": 9696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 9694,
											"end": 9695,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 9676,
											"end": 9696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9696,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 9676,
											"end": 9696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9671,
											"end": 9696,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9671,
											"end": 9696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9710,
											"end": 9730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 9728,
											"end": 9729,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9710,
											"end": 9730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 9710,
											"end": 9730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9710,
											"end": 9730,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 9710,
											"end": 9730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9705,
											"end": 9730,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9705,
											"end": 9730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9754,
											"end": 9755,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9751,
											"end": 9752,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9747,
											"end": 9756,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9739,
											"end": 9756,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9739,
											"end": 9756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 9779,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9772,
											"end": 9776,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9769,
											"end": 9780,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9803,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 9766,
											"end": 9803,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9783,
											"end": 9801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 9783,
											"end": 9801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 9783,
											"end": 9801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9783,
											"end": 9801,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 9783,
											"end": 9801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9803,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 9766,
											"end": 9803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9616,
											"end": 9810,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9616,
											"end": 9810,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9616,
											"end": 9810,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9616,
											"end": 9810,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9616,
											"end": 9810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9816,
											"end": 9985,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 9816,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9900,
											"end": 9911,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9934,
											"end": 9940,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9929,
											"end": 9932,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9922,
											"end": 9941,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9974,
											"end": 9978,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9969,
											"end": 9972,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9965,
											"end": 9979,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9950,
											"end": 9979,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9950,
											"end": 9979,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9816,
											"end": 9985,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9816,
											"end": 9985,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9816,
											"end": 9985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9816,
											"end": 9985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9816,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9991,
											"end": 10159,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 9991,
											"end": 10159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10131,
											"end": 10151,
											"name": "PUSH",
											"source": 7,
											"value": "77697468647261773A206E6F7420676F6F640000000000000000000000000000"
										},
										{
											"begin": 10127,
											"end": 10128,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10119,
											"end": 10125,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10115,
											"end": 10129,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10108,
											"end": 10152,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9991,
											"end": 10159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9991,
											"end": 10159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10165,
											"end": 10531,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 10165,
											"end": 10531,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10307,
											"end": 10310,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10328,
											"end": 10395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 10392,
											"end": 10394,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 10387,
											"end": 10390,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10328,
											"end": 10395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 10328,
											"end": 10395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10328,
											"end": 10395,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 10328,
											"end": 10395,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10321,
											"end": 10395,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10321,
											"end": 10395,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10404,
											"end": 10497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 10493,
											"end": 10496,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10404,
											"end": 10497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 10404,
											"end": 10497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10404,
											"end": 10497,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 10404,
											"end": 10497,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10522,
											"end": 10524,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10517,
											"end": 10520,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10525,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10506,
											"end": 10525,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10506,
											"end": 10525,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10165,
											"end": 10531,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10165,
											"end": 10531,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10165,
											"end": 10531,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10165,
											"end": 10531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10537,
											"end": 10956,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 10537,
											"end": 10956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10703,
											"end": 10707,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10741,
											"end": 10743,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10730,
											"end": 10739,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10726,
											"end": 10744,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10718,
											"end": 10744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10718,
											"end": 10744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10790,
											"end": 10799,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10784,
											"end": 10788,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10780,
											"end": 10800,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10776,
											"end": 10777,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10765,
											"end": 10774,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10761,
											"end": 10778,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10754,
											"end": 10801,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10818,
											"end": 10949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 10944,
											"end": 10948,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10818,
											"end": 10949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 10818,
											"end": 10949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10818,
											"end": 10949,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 10818,
											"end": 10949,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10810,
											"end": 10949,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10810,
											"end": 10949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10537,
											"end": 10956,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10537,
											"end": 10956,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10537,
											"end": 10956,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10537,
											"end": 10956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10962,
											"end": 11294,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 10962,
											"end": 11294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11083,
											"end": 11087,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11121,
											"end": 11123,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11110,
											"end": 11119,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11098,
											"end": 11124,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11098,
											"end": 11124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11134,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 11202,
											"end": 11203,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11191,
											"end": 11200,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11187,
											"end": 11204,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11178,
											"end": 11184,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11134,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 11134,
											"end": 11205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11134,
											"end": 11205,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 11134,
											"end": 11205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11215,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 11283,
											"end": 11285,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11272,
											"end": 11281,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11268,
											"end": 11286,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11259,
											"end": 11265,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11215,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 11215,
											"end": 11287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11215,
											"end": 11287,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 11215,
											"end": 11287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10962,
											"end": 11294,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10962,
											"end": 11294,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10962,
											"end": 11294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10962,
											"end": 11294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10962,
											"end": 11294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10962,
											"end": 11294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11300,
											"end": 11437,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 11300,
											"end": 11437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11385,
											"end": 11391,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11379,
											"end": 11392,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11370,
											"end": 11392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11370,
											"end": 11392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11401,
											"end": 11431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 11425,
											"end": 11430,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11401,
											"end": 11431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 11401,
											"end": 11431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11401,
											"end": 11431,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 11401,
											"end": 11431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11300,
											"end": 11437,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11300,
											"end": 11437,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11300,
											"end": 11437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11300,
											"end": 11437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11300,
											"end": 11437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11443,
											"end": 11788,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 11443,
											"end": 11788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11510,
											"end": 11516,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11559,
											"end": 11561,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11547,
											"end": 11556,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11538,
											"end": 11545,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11534,
											"end": 11557,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11530,
											"end": 11562,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 11527,
											"end": 11646,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11527,
											"end": 11646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 11527,
											"end": 11646,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11565,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 11565,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 11565,
											"end": 11644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11565,
											"end": 11644,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 11565,
											"end": 11644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11527,
											"end": 11646,
											"name": "tag",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 11527,
											"end": 11646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11685,
											"end": 11686,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 11771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 11763,
											"end": 11770,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11754,
											"end": 11760,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11743,
											"end": 11752,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11739,
											"end": 11761,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11710,
											"end": 11771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 11710,
											"end": 11771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11710,
											"end": 11771,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 11710,
											"end": 11771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11700,
											"end": 11771,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11700,
											"end": 11771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11656,
											"end": 11781,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11443,
											"end": 11788,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11443,
											"end": 11788,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11443,
											"end": 11788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11443,
											"end": 11788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11443,
											"end": 11788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11794,
											"end": 12236,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 11794,
											"end": 12236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11943,
											"end": 11947,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11981,
											"end": 11983,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 11970,
											"end": 11979,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11966,
											"end": 11984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11958,
											"end": 11984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11958,
											"end": 11984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11994,
											"end": 12065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 12062,
											"end": 12063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12051,
											"end": 12060,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12047,
											"end": 12064,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12038,
											"end": 12044,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11994,
											"end": 12065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 11994,
											"end": 12065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11994,
											"end": 12065,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 11994,
											"end": 12065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12075,
											"end": 12147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 12143,
											"end": 12145,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12132,
											"end": 12141,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12128,
											"end": 12146,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12119,
											"end": 12125,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12075,
											"end": 12147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 12075,
											"end": 12147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12075,
											"end": 12147,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 12075,
											"end": 12147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12157,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 12225,
											"end": 12227,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12214,
											"end": 12223,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12210,
											"end": 12228,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12201,
											"end": 12207,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12157,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 12157,
											"end": 12229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12157,
											"end": 12229,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 12157,
											"end": 12229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11794,
											"end": 12236,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 11794,
											"end": 12236,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 11794,
											"end": 12236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11794,
											"end": 12236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11794,
											"end": 12236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11794,
											"end": 12236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11794,
											"end": 12236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12242,
											"end": 12340,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 12242,
											"end": 12340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12293,
											"end": 12299,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12327,
											"end": 12332,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12321,
											"end": 12333,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12311,
											"end": 12333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12311,
											"end": 12333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12242,
											"end": 12340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12242,
											"end": 12340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12242,
											"end": 12340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12242,
											"end": 12340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12346,
											"end": 12493,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 12346,
											"end": 12493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12447,
											"end": 12458,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12484,
											"end": 12487,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12469,
											"end": 12487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12469,
											"end": 12487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12346,
											"end": 12493,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12346,
											"end": 12493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12346,
											"end": 12493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12346,
											"end": 12493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12346,
											"end": 12493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12499,
											"end": 12638,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 12499,
											"end": 12638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12588,
											"end": 12594,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12583,
											"end": 12586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12578,
											"end": 12581,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12572,
											"end": 12595,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 12629,
											"end": 12630,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12620,
											"end": 12626,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12615,
											"end": 12618,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12611,
											"end": 12627,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12604,
											"end": 12631,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12499,
											"end": 12638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12499,
											"end": 12638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12499,
											"end": 12638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12499,
											"end": 12638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12644,
											"end": 13030,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 12644,
											"end": 13030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12748,
											"end": 12751,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12776,
											"end": 12814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 12808,
											"end": 12813,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12776,
											"end": 12814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 12776,
											"end": 12814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12776,
											"end": 12814,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 12776,
											"end": 12814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12830,
											"end": 12918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 12911,
											"end": 12917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12906,
											"end": 12909,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12830,
											"end": 12918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 12830,
											"end": 12918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12830,
											"end": 12918,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 12830,
											"end": 12918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12823,
											"end": 12918,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 12823,
											"end": 12918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12927,
											"end": 12992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 12985,
											"end": 12991,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12980,
											"end": 12983,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12973,
											"end": 12977,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12966,
											"end": 12971,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12962,
											"end": 12978,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12927,
											"end": 12992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 12927,
											"end": 12992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12927,
											"end": 12992,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 12927,
											"end": 12992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13017,
											"end": 13023,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13012,
											"end": 13015,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13008,
											"end": 13024,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13001,
											"end": 13024,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13001,
											"end": 13024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12752,
											"end": 13030,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12644,
											"end": 13030,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12644,
											"end": 13030,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12644,
											"end": 13030,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12644,
											"end": 13030,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12644,
											"end": 13030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13036,
											"end": 13307,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 13036,
											"end": 13307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13166,
											"end": 13169,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13188,
											"end": 13281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 13277,
											"end": 13280,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13268,
											"end": 13274,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13188,
											"end": 13281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 13188,
											"end": 13281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13188,
											"end": 13281,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 13188,
											"end": 13281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13181,
											"end": 13281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13181,
											"end": 13281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13298,
											"end": 13301,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13291,
											"end": 13301,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13291,
											"end": 13301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13036,
											"end": 13307,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13036,
											"end": 13307,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13036,
											"end": 13307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13036,
											"end": 13307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13036,
											"end": 13307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"MasterChef.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BONUS_MULTIPLIER()": "8aa28550",
							"add(uint256,address,bool)": "1eaaa045",
							"bonusEndBlock()": "1aed6553",
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"getMultiplier(uint256,uint256)": "8dbb1e3a",
							"massUpdatePools()": "630b5ba1",
							"owner()": "8da5cb5b",
							"pendingSushi(uint256,address)": "195426ec",
							"poolInfo(uint256)": "1526fe27",
							"poolLength()": "081e3eda",
							"renounceOwnership()": "715018a6",
							"set(uint256,uint256,bool)": "64482f79",
							"startBlock()": "48cd4cb1",
							"sushi()": "0a087903",
							"sushiPerBlock()": "b0bcf42a",
							"totalAllocPoint()": "17caf6f1",
							"transferOwnership(address)": "f2fde38b",
							"updatePool(uint256)": "51eb05a6",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISushi\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contract ISushi\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MasterChef.sol\":\"MasterChef\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"MasterChef.sol\":{\"keccak256\":\"0xc7b7cd1b83a4fa57e81c5dce72d65058e537fff008143371b510b667dd61151c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b0455badad2b1c6cd86a8b16a79dd851fe19ab19fb6e5568ebfbcf4c76b113a\",\"dweb:/ipfs/QmVK7AABXNLQSCGDzn3ggeCnwqY2aVop2dyG3LaUAARXSa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "MasterChef.sol:MasterChef",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 875,
								"contract": "MasterChef.sol:MasterChef",
								"label": "sushi",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ISushi)849"
							},
							{
								"astId": 877,
								"contract": "MasterChef.sol:MasterChef",
								"label": "bonusEndBlock",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 879,
								"contract": "MasterChef.sol:MasterChef",
								"label": "sushiPerBlock",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 886,
								"contract": "MasterChef.sol:MasterChef",
								"label": "poolInfo",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_struct(PoolInfo)872_storage)dyn_storage"
							},
							{
								"astId": 893,
								"contract": "MasterChef.sol:MasterChef",
								"label": "userInfo",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)862_storage))"
							},
							{
								"astId": 896,
								"contract": "MasterChef.sol:MasterChef",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 898,
								"contract": "MasterChef.sol:MasterChef",
								"label": "startBlock",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PoolInfo)872_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)872_storage",
								"encoding": "dynamic_array",
								"label": "struct MasterChef.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)225": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(ISushi)849": {
								"encoding": "inplace",
								"label": "contract ISushi",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)862_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct MasterChef.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)862_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)862_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)862_storage)"
							},
							"t_struct(PoolInfo)872_storage": {
								"encoding": "inplace",
								"label": "struct MasterChef.PoolInfo",
								"members": [
									{
										"astId": 865,
										"contract": "MasterChef.sol:MasterChef",
										"label": "lpToken",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)225"
									},
									{
										"astId": 867,
										"contract": "MasterChef.sol:MasterChef",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 869,
										"contract": "MasterChef.sol:MasterChef",
										"label": "lastRewardBlock",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 871,
										"contract": "MasterChef.sol:MasterChef",
										"label": "accSushiPerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(UserInfo)862_storage": {
								"encoding": "inplace",
								"label": "struct MasterChef.UserInfo",
								"members": [
									{
										"astId": 859,
										"contract": "MasterChef.sol:MasterChef",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 861,
										"contract": "MasterChef.sol:MasterChef",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> MasterChef.sol:74:5:\n   |\n74 |     constructor(\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3248,
					"file": "MasterChef.sol",
					"start": 3026
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n   --> MasterChef.sol:127:5:\n    |\n127 |     function getMultiplier(uint256 _from, uint256 _to)\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 4793,
					"file": "MasterChef.sol",
					"start": 4643
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							834
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 835,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 834,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 834,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								834
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 225,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 225,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 225,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 225,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 225,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 225,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							261
						]
					},
					"id": 262,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:2",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 261,
							"linearizedBaseContracts": [
								261
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:2",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3022:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3045:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3070:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3093:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3119:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 238,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3136:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3155:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:2"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:2"
									},
									"scope": 261,
									"src": "2997:183:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:2",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3501:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:2"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3539:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:2"
									},
									"scope": 261,
									"src": "3485:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:2",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:2"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3791:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:2"
									},
									"scope": 261,
									"src": "3740:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 262,
							"src": "2113:1689:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							804
						],
						"IERC20": [
							225
						],
						"IERC20Permit": [
							261
						],
						"SafeERC20": [
							551
						]
					},
					"id": 552,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 263,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 265,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 226,
							"src": "141:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 264,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "149:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 267,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 262,
							"src": "179:60:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 266,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 261,
										"src": "187:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 805,
							"src": "240:51:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 268,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 804,
										"src": "248:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 551,
							"linearizedBaseContracts": [
								551
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 273,
									"libraryName": {
										"id": 271,
										"name": "Address",
										"nameLocations": [
											"781:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 804,
										"src": "781:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:3",
									"typeName": {
										"id": 272,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:3",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 278,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "907:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:3"
									},
									"src": "876:46:3"
								},
								{
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:3",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 287,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1043:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1060:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1086:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:3"
									},
									"src": "1004:109:3"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "1375:88:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 299,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "1405:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 302,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "1427:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:3",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 192,
																	"src": "1427:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 304,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 293,
																			"src": "1444:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 305,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 295,
																			"src": "1448:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 306,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 300,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 298,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1385:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:3"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:3",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1325:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 290,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 289,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "1325:6:3"
													},
													"referencedDeclaration": 225,
													"src": "1325:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1339:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1351:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:3"
									},
									"scope": 551,
									"src": "1303:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "1792:98:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 325,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1822:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 328,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "1844:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:3",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 224,
																	"src": "1844:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 330,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 317,
																			"src": "1865:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 331,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 319,
																			"src": "1871:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 332,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 321,
																			"src": "1875:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 333,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 326,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 324,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1802:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:3"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:3",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1728:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "1728:6:3"
													},
													"referencedDeclaration": 225,
													"src": "1728:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1742:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1756:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1768:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:3"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:3"
									},
									"scope": 551,
									"src": "1702:188:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "2167:139:3",
										"statements": [
											{
												"assignments": [
													350
												],
												"declarations": [
													{
														"constant": false,
														"id": 350,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 368,
														"src": "2177:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 359,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 355,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$551",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$551",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 353,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 357,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2231:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 351,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2200:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:3",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 202,
														"src": "2200:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2262:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 362,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2269:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 363,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 350,
																"src": "2278:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 364,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "2293:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 360,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "2249:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:3"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:3",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2112:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 340,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "2112:6:3"
													},
													"referencedDeclaration": 225,
													"src": "2112:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2126:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2143:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:3"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:3"
									},
									"scope": 551,
									"src": "2081:225:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "2607:370:3",
										"statements": [
											{
												"id": 410,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:3",
												"statements": [
													{
														"assignments": [
															381
														],
														"declarations": [
															{
																"constant": false,
																"id": 381,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:3",
																"nodeType": "VariableDeclaration",
																"scope": 410,
																"src": "2641:24:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 380,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 390,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 386,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$551",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$551",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 384,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 388,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2699:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 382,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "2668:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:3",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 202,
																"src": "2668:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 391,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "2725:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 392,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "2744:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 401,
														"nodeType": "IfStatement",
														"src": "2721:160:3",
														"trueBody": {
															"id": 400,
															"nodeType": "Block",
															"src": "2763:118:3",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 395,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 375,
																				"src": "2821:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 396,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 381,
																				"src": "2830:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 397,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 377,
																				"src": "2848:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 394,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "2788:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 399,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:3"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 403,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "2907:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 404,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2914:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 405,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "2923:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 406,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 377,
																		"src": "2942:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 402,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "2894:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 409,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:3",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2540:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 372,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 371,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "2540:6:3"
													},
													"referencedDeclaration": 225,
													"src": "2540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2554:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2571:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:3"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:3"
									},
									"scope": 551,
									"src": "2509:468:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "3373:303:3",
										"statements": [
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "3383:25:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 423,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 433,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 427,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3426:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:3",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 212,
															"src": "3426:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 429,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "3442:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 430,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "3451:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 431,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 425,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:3",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:3"
											},
											{
												"condition": {
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:3",
													"subExpression": {
														"arguments": [
															{
																"id": 435,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3498:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 436,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "3505:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 434,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "3474:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 457,
												"nodeType": "IfStatement",
												"src": "3469:201:3",
												"trueBody": {
													"id": 456,
													"nodeType": "Block",
													"src": "3520:150:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 440,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "3554:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 443,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 416,
																					"src": "3576:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$225",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:3",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 212,
																				"src": "3576:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 445,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 418,
																						"src": "3592:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 446,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 447,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 441,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:3",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 439,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "3534:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 450,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 452,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "3639:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 453,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "3646:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 451,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "3619:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 455,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:3",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3318:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 415,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 414,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "3318:6:3"
													},
													"referencedDeclaration": 225,
													"src": "3318:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3332:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3349:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:3"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:3"
									},
									"scope": 551,
									"src": "3296:380:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "4129:559:3",
										"statements": [
											{
												"assignments": [
													469
												],
												"declarations": [
													{
														"constant": false,
														"id": 469,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 500,
														"src": "4478:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 468,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 477,
												"initialValue": {
													"arguments": [
														{
															"id": 475,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "4532:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 472,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 463,
																	"src": "4512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 470,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:3",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 625,
														"src": "4504:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 478,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "4551:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 484,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "4589:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 485,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 482,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 499,
												"nodeType": "IfStatement",
												"src": "4547:135:3",
												"trueBody": {
													"id": 498,
													"nodeType": "Block",
													"src": "4610:72:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 494,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 463,
																				"src": "4664:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$225",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$225",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 492,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 491,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "4631:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 497,
															"nodeType": "RevertStatement",
															"src": "4624:47:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4088:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 462,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 461,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "4088:6:3"
													},
													"referencedDeclaration": 225,
													"src": "4088:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4102:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:3"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:3"
									},
									"scope": 551,
									"src": "4059:629:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "5278:489:3",
										"statements": [
											{
												"assignments": [
													513,
													515
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "5574:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 512,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 515,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "5588:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 514,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 523,
												"initialValue": {
													"arguments": [
														{
															"id": 521,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "5635:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 518,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "5623:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 524,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "5657:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 525,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "5669:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 531,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "5706:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 533,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 532,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 534,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 529,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:3",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 537,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 541,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 505,
																			"src": "5738:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 539,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:3",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 511,
												"id": 548,
												"nodeType": "Return",
												"src": "5650:110:3"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5222:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 504,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 503,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "5222:6:3"
													},
													"referencedDeclaration": 225,
													"src": "5222:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5236:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 506,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:3"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5272:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:3"
									},
									"scope": 551,
									"src": "5189:578:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 552,
							"src": "751:5018:3",
							"usedErrors": [
								278,
								287
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							804
						]
					},
					"id": 805,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 554,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 804,
							"linearizedBaseContracts": [
								804
							],
							"name": "Address",
							"nameLocation": "203:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:4",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 559,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "349:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:4"
									},
									"src": "316:50:4"
								},
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:4",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 564,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "475:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:4"
									},
									"src": "452:39:4"
								},
								{
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:4",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 567,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:4"
									},
									"src": "591:24:4"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "1602:260:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 577,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																],
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 575,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 580,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "1640:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 590,
												"nodeType": "IfStatement",
												"src": "1612:109:4",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "1648:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 585,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			],
																			"id": 584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 583,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 582,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "1669:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 588,
															"nodeType": "RevertStatement",
															"src": "1662:48:4"
														}
													]
												}
											},
											{
												"assignments": [
													592,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "1732:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 591,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 599,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 593,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "1750:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 595,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "1772:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:4"
											},
											{
												"condition": {
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:4",
													"subExpression": {
														"id": 600,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "1798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 606,
												"nodeType": "IfStatement",
												"src": "1793:63:4",
												"trueBody": {
													"id": 605,
													"nodeType": "Block",
													"src": "1807:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 602,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "1828:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 604,
															"nodeType": "RevertStatement",
															"src": "1821:24:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1550:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1577:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:4"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:4"
									},
									"scope": 804,
									"src": "1531:331:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "2794:62:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "2833:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "2841:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 618,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "2811:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 617,
												"id": 623,
												"nodeType": "Return",
												"src": "2804:45:4"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2727:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2743:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:4"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2780:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:4"
									},
									"scope": 804,
									"src": "2705:151:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "3293:279:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 639,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																],
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 637,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 642,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "3331:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "3303:108:4",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "3338:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 647,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			],
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 645,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 644,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "3359:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 650,
															"nodeType": "RevertStatement",
															"src": "3352:48:4"
														}
													]
												}
											},
											{
												"assignments": [
													654,
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 670,
														"src": "3421:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 653,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 670,
														"src": "3435:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 655,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 663,
												"initialValue": {
													"arguments": [
														{
															"id": 661,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "3488:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 657,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "3462:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 659,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "3481:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 665,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "3537:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "3545:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 667,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "3554:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 664,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "3510:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 636,
												"id": 669,
												"nodeType": "Return",
												"src": "3503:62:4"
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3211:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3227:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3246:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:4"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3279:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:4"
									},
									"scope": 804,
									"src": "3180:392:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "3811:154:4",
										"statements": [
											{
												"assignments": [
													682,
													684
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "3822:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 681,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 684,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "3836:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 683,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 689,
												"initialValue": {
													"arguments": [
														{
															"id": 687,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "3881:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 685,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "3863:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 691,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "3930:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "3938:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 693,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "3947:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 690,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "3903:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 680,
												"id": 695,
												"nodeType": "Return",
												"src": "3896:62:4"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3739:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3755:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:4"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3797:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:4"
									},
									"scope": 804,
									"src": "3711:254:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "4203:156:4",
										"statements": [
											{
												"assignments": [
													708,
													710
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "4214:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 707,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 710,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "4228:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 709,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 715,
												"initialValue": {
													"arguments": [
														{
															"id": 713,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "4275:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 711,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4255:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4324:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "4332:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 719,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "4341:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 716,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "4297:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 706,
												"id": 721,
												"nodeType": "Return",
												"src": "4290:62:4"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4136:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4152:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:4"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4189:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:4"
									},
									"scope": 804,
									"src": "4106:253:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "4783:424:4",
										"statements": [
											{
												"condition": {
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:4",
													"subExpression": {
														"id": 735,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "4798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 760,
													"nodeType": "Block",
													"src": "4857:344:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 742,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 730,
																			"src": "5045:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 746,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "5071:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 757,
															"nodeType": "IfStatement",
															"src": "5041:119:4",
															"trueBody": {
																"id": 756,
																"nodeType": "Block",
																"src": "5096:64:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 753,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 726,
																					"src": "5138:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 752,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 564,
																				"src": "5121:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 755,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 758,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "5180:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 734,
															"id": 759,
															"nodeType": "Return",
															"src": "5173:17:4"
														}
													]
												},
												"id": 761,
												"nodeType": "IfStatement",
												"src": "4793:408:4",
												"trueBody": {
													"id": 741,
													"nodeType": "Block",
													"src": "4807:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 738,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "4829:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 737,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "4821:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 740,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4670:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4694:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 727,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4716:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 729,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:4"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4769:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 732,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:4"
									},
									"scope": 804,
									"src": "4625:582:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "5509:122:4",
										"statements": [
											{
												"condition": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:4",
													"subExpression": {
														"id": 773,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "5524:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 782,
													"nodeType": "Block",
													"src": "5583:42:4",
													"statements": [
														{
															"expression": {
																"id": 780,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "5604:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 772,
															"id": 781,
															"nodeType": "Return",
															"src": "5597:17:4"
														}
													]
												},
												"id": 783,
												"nodeType": "IfStatement",
												"src": "5519:106:4",
												"trueBody": {
													"id": 779,
													"nodeType": "Block",
													"src": "5533:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 776,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "5555:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 775,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "5547:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 778,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:4",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5433:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 765,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5447:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 767,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:4"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5495:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 770,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:4"
									},
									"scope": 804,
									"src": "5407:224:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "5798:461:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 791,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "5874:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "6204:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 797,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6225:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 799,
															"nodeType": "RevertStatement",
															"src": "6218:24:4"
														}
													]
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "5870:383:4",
												"trueBody": {
													"id": 796,
													"nodeType": "Block",
													"src": "5897:301:4",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:4",
																"nodeType": "YulBlock",
																"src": "6055:133:4",
																"statements": [
																	{
																		"nativeSrc": "6073:40:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:4"
																			},
																			"nativeSrc": "6096:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:4",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:4",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:4",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:4"
																					},
																					"nativeSrc": "6137:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:4",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:4"
																			},
																			"nativeSrc": "6130:44:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:4"
																		},
																		"nativeSrc": "6130:44:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 788,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 788,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:4",
																	"valueSize": 1
																}
															],
															"id": 795,
															"nodeType": "InlineAssembly",
															"src": "6046:142:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:4",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "5760:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 787,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:4"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:4"
									},
									"scope": 804,
									"src": "5743:516:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 805,
							"src": "195:6066:4",
							"usedErrors": [
								559,
								564,
								567
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							834
						]
					},
					"id": 835,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 806,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 807,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 834,
							"linearizedBaseContracts": [
								834
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 812,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 811,
												"id": 814,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 834,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 821,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 820,
												"id": 823,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 834,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 832,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 829,
												"id": 831,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 834,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 835,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"MasterChef.sol": {
				"ast": {
					"absolutePath": "MasterChef.sol",
					"exportedSymbols": {
						"Address": [
							804
						],
						"Context": [
							834
						],
						"IERC20": [
							225
						],
						"IERC20Permit": [
							261
						],
						"ISushi": [
							849
						],
						"MasterChef": [
							1558
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							551
						]
					},
					"id": 1559,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 836,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 837,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1559,
							"sourceUnit": 226,
							"src": "63:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 838,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1559,
							"sourceUnit": 552,
							"src": "121:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 839,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1559,
							"sourceUnit": 148,
							"src": "188:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 840,
										"name": "IERC20",
										"nameLocations": [
											"266:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 225,
										"src": "266:6:6"
									},
									"id": 841,
									"nodeType": "InheritanceSpecifier",
									"src": "266:6:6"
								}
							],
							"canonicalName": "ISushi",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 849,
							"linearizedBaseContracts": [
								849,
								225
							],
							"name": "ISushi",
							"nameLocation": "256:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 848,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "289:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "302:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "294:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "315:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "307:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "293:30:6"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "332:0:6"
									},
									"scope": 849,
									"src": "280:53:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1559,
							"src": "246:90:6",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"expression": {
												"id": 851,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "744:3:6",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 852,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "748:6:6",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "744:10:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 850,
										"name": "Ownable",
										"nameLocations": [
											"736:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "736:7:6"
									},
									"id": 853,
									"nodeType": "InheritanceSpecifier",
									"src": "736:19:6"
								}
							],
							"canonicalName": "MasterChef",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1558,
							"linearizedBaseContracts": [
								1558,
								147,
								834
							],
							"name": "MasterChef",
							"nameLocation": "722:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 857,
									"libraryName": {
										"id": 854,
										"name": "SafeERC20",
										"nameLocations": [
											"769:9:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 551,
										"src": "769:9:6"
									},
									"nodeType": "UsingForDirective",
									"src": "763:27:6",
									"typeName": {
										"id": 856,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 855,
											"name": "IERC20",
											"nameLocations": [
												"783:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "783:6:6"
										},
										"referencedDeclaration": 225,
										"src": "783:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "MasterChef.UserInfo",
									"id": 862,
									"members": [
										{
											"constant": false,
											"id": 859,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "858:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 862,
											"src": "850:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 858,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "850:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 861,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "928:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 862,
											"src": "920:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 860,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "830:8:6",
									"nodeType": "StructDefinition",
									"scope": 1558,
									"src": "823:794:6",
									"visibility": "public"
								},
								{
									"canonicalName": "MasterChef.PoolInfo",
									"id": 872,
									"members": [
										{
											"constant": false,
											"id": 865,
											"mutability": "mutable",
											"name": "lpToken",
											"nameLocation": "1684:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 872,
											"src": "1677:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$225",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 864,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 863,
													"name": "IERC20",
													"nameLocations": [
														"1677:6:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 225,
													"src": "1677:6:6"
												},
												"referencedDeclaration": 225,
												"src": "1677:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 867,
											"mutability": "mutable",
											"name": "allocPoint",
											"nameLocation": "1743:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 872,
											"src": "1735:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 866,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1735:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 869,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nameLocation": "1857:15:6",
											"nodeType": "VariableDeclaration",
											"scope": 872,
											"src": "1849:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 868,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1849:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 871,
											"mutability": "mutable",
											"name": "accSushiPerShare",
											"nameLocation": "1945:16:6",
											"nodeType": "VariableDeclaration",
											"scope": 872,
											"src": "1937:24:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 870,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1937:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "1657:8:6",
									"nodeType": "StructDefinition",
									"scope": 1558,
									"src": "1650:375:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0a087903",
									"id": 875,
									"mutability": "mutable",
									"name": "sushi",
									"nameLocation": "2074:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1558,
									"src": "2060:19:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISushi_$849",
										"typeString": "contract ISushi"
									},
									"typeName": {
										"id": 874,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 873,
											"name": "ISushi",
											"nameLocations": [
												"2060:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 849,
											"src": "2060:6:6"
										},
										"referencedDeclaration": 849,
										"src": "2060:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISushi_$849",
											"typeString": "contract ISushi"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1aed6553",
									"id": 877,
									"mutability": "mutable",
									"name": "bonusEndBlock",
									"nameLocation": "2152:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1558,
									"src": "2137:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 876,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2137:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b0bcf42a",
									"id": 879,
									"mutability": "mutable",
									"name": "sushiPerBlock",
									"nameLocation": "2227:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1558,
									"src": "2212:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 878,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2212:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8aa28550",
									"id": 882,
									"mutability": "constant",
									"name": "BONUS_MULTIPLIER",
									"nameLocation": "2320:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1558,
									"src": "2296:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 880,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2296:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 881,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2339:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 886,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "2395:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1558,
									"src": "2377:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$872_storage_$dyn_storage",
										"typeString": "struct MasterChef.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 884,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 883,
												"name": "PoolInfo",
												"nameLocations": [
													"2377:8:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 872,
												"src": "2377:8:6"
											},
											"referencedDeclaration": 872,
											"src": "2377:8:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
												"typeString": "struct MasterChef.PoolInfo"
											}
										},
										"id": 885,
										"nodeType": "ArrayTypeName",
										"src": "2377:10:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$872_storage_$dyn_storage_ptr",
											"typeString": "struct MasterChef.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 893,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "2515:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1558,
									"src": "2459:64:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$862_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo))"
									},
									"typeName": {
										"id": 892,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 887,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2467:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2459:48:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$862_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 891,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 888,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2486:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2478:28:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$862_storage_$",
												"typeString": "mapping(address => struct MasterChef.UserInfo)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 890,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 889,
													"name": "UserInfo",
													"nameLocations": [
														"2497:8:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 862,
													"src": "2497:8:6"
												},
												"referencedDeclaration": 862,
												"src": "2497:8:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
													"typeString": "struct MasterChef.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 896,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nameLocation": "2633:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1558,
									"src": "2618:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 894,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2618:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 895,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2651:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48cd4cb1",
									"id": 898,
									"mutability": "mutable",
									"name": "startBlock",
									"nameLocation": "2725:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1558,
									"src": "2710:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 897,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2710:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15",
									"id": 906,
									"name": "Deposit",
									"nameLocation": "2748:7:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2772:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "2756:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2756:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "2794:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "2778:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2778:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2807:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "2799:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:59:6"
									},
									"src": "2742:73:6"
								},
								{
									"anonymous": false,
									"eventSelector": "f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568",
									"id": 914,
									"name": "Withdraw",
									"nameLocation": "2827:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2852:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "2836:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "2874:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "2858:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2887:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "2879:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2879:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:59:6"
									},
									"src": "2821:74:6"
								},
								{
									"anonymous": false,
									"eventSelector": "bb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595",
									"id": 922,
									"name": "EmergencyWithdraw",
									"nameLocation": "2907:17:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2951:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2935:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2935:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "2982:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2966:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2966:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3004:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2996:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2924:93:6"
									},
									"src": "2901:117:6"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "3139:109:6",
										"statements": [
											{
												"expression": {
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 932,
														"name": "sushi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "3150:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISushi_$849",
															"typeString": "contract ISushi"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 933,
														"name": "_sushi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "3158:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISushi_$849",
															"typeString": "contract ISushi"
														}
													},
													"src": "3150:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISushi_$849",
														"typeString": "contract ISushi"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "3150:14:6"
											},
											{
												"expression": {
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 936,
														"name": "sushiPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "3175:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 937,
														"name": "_sushiPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "3191:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3175:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "3175:30:6"
											},
											{
												"expression": {
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 940,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "3216:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 941,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "3229:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3216:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "3216:24:6"
											}
										]
									},
									"id": 945,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "_sushi",
												"nameLocation": "3055:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "3048:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISushi_$849",
													"typeString": "contract ISushi"
												},
												"typeName": {
													"id": 924,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 923,
														"name": "ISushi",
														"nameLocations": [
															"3048:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 849,
														"src": "3048:6:6"
													},
													"referencedDeclaration": 849,
													"src": "3048:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISushi_$849",
														"typeString": "contract ISushi"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "_sushiPerBlock",
												"nameLocation": "3080:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "3072:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3072:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "_startBlock",
												"nameLocation": "3113:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "3105:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3105:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3037:94:6"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3139:0:6"
									},
									"scope": 1558,
									"src": "3026:222:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "3310:41:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 950,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "3328:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$872_storage_$dyn_storage",
															"typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3337:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3328:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 949,
												"id": 952,
												"nodeType": "Return",
												"src": "3321:22:6"
											}
										]
									},
									"functionSelector": "081e3eda",
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nameLocation": "3265:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:2:6"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "3301:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3300:9:6"
									},
									"scope": 1558,
									"src": "3256:95:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "3640:482:6",
										"statements": [
											{
												"condition": {
													"id": 966,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 961,
													"src": "3655:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 971,
												"nodeType": "IfStatement",
												"src": "3651:61:6",
												"trueBody": {
													"id": 970,
													"nodeType": "Block",
													"src": "3668:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 967,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "3683:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3683:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 969,
															"nodeType": "ExpressionStatement",
															"src": "3683:17:6"
														}
													]
												}
											},
											{
												"assignments": [
													973
												],
												"declarations": [
													{
														"constant": false,
														"id": 973,
														"mutability": "mutable",
														"name": "lastRewardBlock",
														"nameLocation": "3730:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1000,
														"src": "3722:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 972,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3722:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 982,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 974,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3761:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3767:6:6",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "3761:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 976,
															"name": "startBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "3776:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3761:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 980,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "3804:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3761:53:6",
													"trueExpression": {
														"expression": {
															"id": 978,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3789:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3795:6:6",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "3789:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3722:92:6"
											},
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 983,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "3825:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 984,
															"name": "totalAllocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "3843:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 985,
															"name": "_allocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "3861:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3843:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3825:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "3825:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 993,
																	"name": "_lpToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "3948:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 994,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "3987:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 995,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 973,
																	"src": "4034:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4086:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 992,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "3911:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$872_storage_ptr_$",
																	"typeString": "type(struct MasterChef.PoolInfo storage pointer)"
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"3939:7:6",
																"3975:10:6",
																"4017:15:6",
																"4068:16:6"
															],
															"names": [
																"lpToken",
																"allocPoint",
																"lastRewardBlock",
																"accSushiPerShare"
															],
															"nodeType": "FunctionCall",
															"src": "3911:192:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$872_memory_ptr",
																"typeString": "struct MasterChef.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$872_memory_ptr",
																"typeString": "struct MasterChef.PoolInfo memory"
															}
														],
														"expression": {
															"id": 989,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "3883:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$872_storage_$dyn_storage",
																"typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3892:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3883:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$872_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$872_storage_$returns$__$attached_to$_t_array$_t_struct$_PoolInfo_$872_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct MasterChef.PoolInfo storage ref[] storage pointer,struct MasterChef.PoolInfo storage ref)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3883:231:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "3883:231:6"
											}
										]
									},
									"functionSelector": "1eaaa045",
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 964,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 963,
												"name": "onlyOwner",
												"nameLocations": [
													"3630:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3630:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3630:9:6"
										}
									],
									"name": "add",
									"nameLocation": "3529:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "3551:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "3543:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3543:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "_lpToken",
												"nameLocation": "3580:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "3573:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 958,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 957,
														"name": "IERC20",
														"nameLocations": [
															"3573:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "3573:6:6"
													},
													"referencedDeclaration": 225,
													"src": "3573:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "3604:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "3599:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 960,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3599:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:90:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3640:0:6"
									},
									"scope": 1558,
									"src": "3520:602:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "4336:229:6",
										"statements": [
											{
												"condition": {
													"id": 1012,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1007,
													"src": "4351:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1017,
												"nodeType": "IfStatement",
												"src": "4347:61:6",
												"trueBody": {
													"id": 1016,
													"nodeType": "Block",
													"src": "4364:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1013,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "4379:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4379:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1015,
															"nodeType": "ExpressionStatement",
															"src": "4379:17:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1018,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "4418:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1019,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "4436:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1020,
																		"name": "poolInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 886,
																		"src": "4454:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PoolInfo_$872_storage_$dyn_storage",
																			"typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
																		}
																	},
																	"id": 1022,
																	"indexExpression": {
																		"id": 1021,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1003,
																		"src": "4463:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4454:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$872_storage",
																		"typeString": "struct MasterChef.PoolInfo storage ref"
																	}
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4469:10:6",
																"memberName": "allocPoint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 867,
																"src": "4454:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4436:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1025,
															"name": "_allocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "4496:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4436:71:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4418:89:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "4418:89:6"
											},
											{
												"expression": {
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1029,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "4518:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$872_storage_$dyn_storage",
																	"typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 1031,
															"indexExpression": {
																"id": 1030,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1003,
																"src": "4527:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4518:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$872_storage",
																"typeString": "struct MasterChef.PoolInfo storage ref"
															}
														},
														"id": 1032,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4533:10:6",
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 867,
														"src": "4518:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1033,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "4546:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4518:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "4518:39:6"
											}
										]
									},
									"functionSelector": "64482f79",
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1010,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1009,
												"name": "onlyOwner",
												"nameLocations": [
													"4326:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4326:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4326:9:6"
										}
									],
									"name": "set",
									"nameLocation": "4228:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "4250:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "4242:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4242:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "4273:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "4265:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4265:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "4300:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "4295:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1006,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4295:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:87:6"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4336:0:6"
									},
									"scope": 1558,
									"src": "4219:346:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "4756:37:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1046,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "4774:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1047,
														"name": "_from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "4780:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4774:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1045,
												"id": 1049,
												"nodeType": "Return",
												"src": "4767:18:6"
											}
										]
									},
									"functionSelector": "8dbb1e3a",
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMultiplier",
									"nameLocation": "4652:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "4674:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "4666:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4689:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "4681:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4681:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4665:28:6"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "4742:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4742:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:9:6"
									},
									"scope": 1558,
									"src": "4643:150:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "4973:748:6",
										"statements": [
											{
												"assignments": [
													1062
												],
												"declarations": [
													{
														"constant": false,
														"id": 1062,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "5001:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1144,
														"src": "4984:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
															"typeString": "struct MasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1061,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1060,
																"name": "PoolInfo",
																"nameLocations": [
																	"4984:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 872,
																"src": "4984:8:6"
															},
															"referencedDeclaration": 872,
															"src": "4984:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																"typeString": "struct MasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1066,
												"initialValue": {
													"baseExpression": {
														"id": 1063,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "5008:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$872_storage_$dyn_storage",
															"typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1065,
													"indexExpression": {
														"id": 1064,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "5017:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5008:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$872_storage",
														"typeString": "struct MasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4984:38:6"
											},
											{
												"assignments": [
													1069
												],
												"declarations": [
													{
														"constant": false,
														"id": 1069,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "5050:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1144,
														"src": "5033:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
															"typeString": "struct MasterChef.UserInfo"
														},
														"typeName": {
															"id": 1068,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1067,
																"name": "UserInfo",
																"nameLocations": [
																	"5033:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 862,
																"src": "5033:8:6"
															},
															"referencedDeclaration": 862,
															"src": "5033:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																"typeString": "struct MasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1075,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1070,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "5057:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$862_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"
															}
														},
														"id": 1072,
														"indexExpression": {
															"id": 1071,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "5066:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5057:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$862_storage_$",
															"typeString": "mapping(address => struct MasterChef.UserInfo storage ref)"
														}
													},
													"id": 1074,
													"indexExpression": {
														"id": 1073,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "5072:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5057:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$862_storage",
														"typeString": "struct MasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5033:45:6"
											},
											{
												"assignments": [
													1077
												],
												"declarations": [
													{
														"constant": false,
														"id": 1077,
														"mutability": "mutable",
														"name": "accSushiPerShare",
														"nameLocation": "5097:16:6",
														"nodeType": "VariableDeclaration",
														"scope": 1144,
														"src": "5089:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1076,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5089:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1080,
												"initialValue": {
													"expression": {
														"id": 1078,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "5116:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
															"typeString": "struct MasterChef.PoolInfo storage pointer"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5121:16:6",
													"memberName": "accSushiPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 871,
													"src": "5116:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5089:48:6"
											},
											{
												"assignments": [
													1082
												],
												"declarations": [
													{
														"constant": false,
														"id": 1082,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "5156:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1144,
														"src": "5148:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1081,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5148:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1091,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1088,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5198:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MasterChef_$1558",
																		"typeString": "contract MasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MasterChef_$1558",
																		"typeString": "contract MasterChef"
																	}
																],
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5190:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1086,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5190:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5190:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1083,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "5167:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																	"typeString": "struct MasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5172:7:6",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 865,
															"src": "5167:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5180:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 182,
														"src": "5167:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5167:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5148:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1092,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5219:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5225:6:6",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "5219:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1094,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "5234:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																	"typeString": "struct MasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5239:15:6",
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 869,
															"src": "5234:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5219:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1097,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "5258:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5270:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5258:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5219:52:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1133,
												"nodeType": "IfStatement",
												"src": "5215:426:6",
												"trueBody": {
													"id": 1132,
													"nodeType": "Block",
													"src": "5273:368:6",
													"statements": [
														{
															"assignments": [
																1102
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1102,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "5296:10:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1132,
																	"src": "5288:18:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1101,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5288:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1109,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1104,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1062,
																			"src": "5340:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																				"typeString": "struct MasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5345:15:6",
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 869,
																		"src": "5340:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1106,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "5362:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5368:6:6",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "5362:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1103,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "5326:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5326:49:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5288:87:6"
														},
														{
															"assignments": [
																1111
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1111,
																	"mutability": "mutable",
																	"name": "sushiReward",
																	"nameLocation": "5398:11:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1132,
																	"src": "5390:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1110,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5390:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1120,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1112,
																			"name": "multiplier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1102,
																			"src": "5429:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1113,
																			"name": "sushiPerBlock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 879,
																			"src": "5442:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5429:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 1115,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1062,
																			"src": "5458:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																				"typeString": "struct MasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1116,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5463:10:6",
																		"memberName": "allocPoint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 867,
																		"src": "5458:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5429:44:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1118,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 896,
																	"src": "5497:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5429:83:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5390:122:6"
														},
														{
															"expression": {
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1121,
																	"name": "accSushiPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "5528:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1122,
																		"name": "accSushiPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "5547:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1127,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1123,
																						"name": "sushiReward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1111,
																						"src": "5586:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "31653132",
																						"id": 1124,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5600:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000_by_1",
																							"typeString": "int_const 1000000000000"
																						},
																						"value": "1e12"
																					},
																					"src": "5586:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1126,
																					"name": "lpSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1082,
																					"src": "5606:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5586:28:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1128,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5566:63:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5547:82:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5528:101:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1131,
															"nodeType": "ExpressionStatement",
															"src": "5528:101:6"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1134,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "5658:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																		"typeString": "struct MasterChef.UserInfo storage pointer"
																	}
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5663:6:6",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 859,
																"src": "5658:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1136,
																"name": "accSushiPerShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1077,
																"src": "5672:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5658:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653132",
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															},
															"value": "1e12"
														},
														"src": "5658:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1140,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "5698:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																"typeString": "struct MasterChef.UserInfo storage pointer"
															}
														},
														"id": 1141,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5703:10:6",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "5698:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5658:55:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1059,
												"id": 1143,
												"nodeType": "Return",
												"src": "5651:62:6"
											}
										]
									},
									"functionSelector": "195426ec",
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingSushi",
									"nameLocation": "4867:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "4888:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "4880:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4880:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "4902:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "4894:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4894:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4879:29:6"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "4959:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4959:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4958:9:6"
									},
									"scope": 1558,
									"src": "4858:863:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "5838:146:6",
										"statements": [
											{
												"assignments": [
													1149
												],
												"declarations": [
													{
														"constant": false,
														"id": 1149,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "5857:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1169,
														"src": "5849:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1148,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5849:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1152,
												"initialValue": {
													"expression": {
														"id": 1150,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "5866:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$872_storage_$dyn_storage",
															"typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5875:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "5866:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5849:32:6"
											},
											{
												"body": {
													"id": 1167,
													"nodeType": "Block",
													"src": "5935:42:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1164,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "5961:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1163,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "5950:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5950:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1166,
															"nodeType": "ExpressionStatement",
															"src": "5950:15:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1157,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "5914:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1158,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "5920:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5914:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1168,
												"initializationExpression": {
													"assignments": [
														1154
													],
													"declarations": [
														{
															"constant": false,
															"id": 1154,
															"mutability": "mutable",
															"name": "pid",
															"nameLocation": "5905:3:6",
															"nodeType": "VariableDeclaration",
															"scope": 1168,
															"src": "5897:11:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1153,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5897:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1156,
													"initialValue": {
														"hexValue": "30",
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5911:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5897:15:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5928:5:6",
														"subExpression": {
															"id": 1160,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "5930:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1162,
													"nodeType": "ExpressionStatement",
													"src": "5928:5:6"
												},
												"nodeType": "ForStatement",
												"src": "5892:85:6"
											}
										]
									},
									"functionSelector": "630b5ba1",
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nameLocation": "5813:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5828:2:6"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5838:0:6"
									},
									"scope": 1558,
									"src": "5804:180:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "6101:740:6",
										"statements": [
											{
												"assignments": [
													1177
												],
												"declarations": [
													{
														"constant": false,
														"id": 1177,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "6129:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "6112:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
															"typeString": "struct MasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1176,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1175,
																"name": "PoolInfo",
																"nameLocations": [
																	"6112:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 872,
																"src": "6112:8:6"
															},
															"referencedDeclaration": 872,
															"src": "6112:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																"typeString": "struct MasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1181,
												"initialValue": {
													"baseExpression": {
														"id": 1178,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "6136:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$872_storage_$dyn_storage",
															"typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1180,
													"indexExpression": {
														"id": 1179,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "6145:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6136:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$872_storage",
														"typeString": "struct MasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6112:38:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1182,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6165:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6171:6:6",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "6165:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 1184,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "6181:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																"typeString": "struct MasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6186:15:6",
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 869,
														"src": "6181:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6165:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1189,
												"nodeType": "IfStatement",
												"src": "6161:75:6",
												"trueBody": {
													"id": 1188,
													"nodeType": "Block",
													"src": "6203:33:6",
													"statements": [
														{
															"functionReturnParameters": 1174,
															"id": 1187,
															"nodeType": "Return",
															"src": "6218:7:6"
														}
													]
												}
											},
											{
												"assignments": [
													1191
												],
												"declarations": [
													{
														"constant": false,
														"id": 1191,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "6254:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "6246:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1190,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6246:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1200,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1197,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6296:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MasterChef_$1558",
																		"typeString": "contract MasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MasterChef_$1558",
																		"typeString": "contract MasterChef"
																	}
																],
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6288:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1195,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6288:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6288:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1192,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "6265:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																	"typeString": "struct MasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6270:7:6",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 865,
															"src": "6265:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6278:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 182,
														"src": "6265:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6265:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6246:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1201,
														"name": "lpSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "6317:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6329:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6317:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1213,
												"nodeType": "IfStatement",
												"src": "6313:102:6",
												"trueBody": {
													"id": 1212,
													"nodeType": "Block",
													"src": "6332:83:6",
													"statements": [
														{
															"expression": {
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1204,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1177,
																		"src": "6347:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																			"typeString": "struct MasterChef.PoolInfo storage pointer"
																		}
																	},
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6352:15:6",
																	"memberName": "lastRewardBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 869,
																	"src": "6347:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1207,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6370:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6376:6:6",
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "6370:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6347:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1210,
															"nodeType": "ExpressionStatement",
															"src": "6347:35:6"
														},
														{
															"functionReturnParameters": 1174,
															"id": 1211,
															"nodeType": "Return",
															"src": "6397:7:6"
														}
													]
												}
											},
											{
												"assignments": [
													1215
												],
												"declarations": [
													{
														"constant": false,
														"id": 1215,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "6433:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "6425:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1214,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6425:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1222,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1217,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "6460:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																	"typeString": "struct MasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6465:15:6",
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 869,
															"src": "6460:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1219,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6482:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6488:6:6",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "6482:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1216,
														"name": "getMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "6446:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6446:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6425:70:6"
											},
											{
												"assignments": [
													1224
												],
												"declarations": [
													{
														"constant": false,
														"id": 1224,
														"mutability": "mutable",
														"name": "sushiReward",
														"nameLocation": "6514:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "6506:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1223,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6506:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1233,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1225,
																"name": "multiplier",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "6541:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1226,
																"name": "sushiPerBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "6554:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6541:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"expression": {
																"id": 1228,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "6570:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																	"typeString": "struct MasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6575:10:6",
															"memberName": "allocPoint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 867,
															"src": "6570:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6541:44:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1231,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "6604:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6541:78:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6506:113:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1239,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6652:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MasterChef_$1558",
																		"typeString": "contract MasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MasterChef_$1558",
																		"typeString": "contract MasterChef"
																	}
																],
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6644:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1237,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6644:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6644:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1241,
															"name": "sushiReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "6659:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1234,
															"name": "sushi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "6633:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISushi_$849",
																"typeString": "contract ISushi"
															}
														},
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6639:4:6",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 848,
														"src": "6633:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6633:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "6633:38:6"
											},
											{
												"expression": {
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1244,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "6692:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																"typeString": "struct MasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1246,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6697:16:6",
														"memberName": "accSushiPerShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 871,
														"src": "6692:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1247,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "6716:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																	"typeString": "struct MasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6721:16:6",
															"memberName": "accSushiPerShare",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 871,
															"src": "6716:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1249,
																			"name": "sushiReward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1224,
																			"src": "6756:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "31653132",
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6770:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			},
																			"value": "1e12"
																		},
																		"src": "6756:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1252,
																		"name": "lpSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1191,
																		"src": "6776:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6756:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1254,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6754:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6716:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6692:93:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "6692:93:6"
											},
											{
												"expression": {
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1258,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "6798:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																"typeString": "struct MasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6803:15:6",
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 869,
														"src": "6798:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1261,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6821:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6827:6:6",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "6821:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6798:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "6798:35:6"
											}
										]
									},
									"functionSelector": "51eb05a6",
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nameLocation": "6069:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "6088:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "6080:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6080:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6079:14:6"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6101:0:6"
									},
									"scope": 1558,
									"src": "6060:781:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "6966:676:6",
										"statements": [
											{
												"assignments": [
													1275
												],
												"declarations": [
													{
														"constant": false,
														"id": 1275,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "6994:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1364,
														"src": "6977:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
															"typeString": "struct MasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1274,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1273,
																"name": "PoolInfo",
																"nameLocations": [
																	"6977:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 872,
																"src": "6977:8:6"
															},
															"referencedDeclaration": 872,
															"src": "6977:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																"typeString": "struct MasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1279,
												"initialValue": {
													"baseExpression": {
														"id": 1276,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "7001:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$872_storage_$dyn_storage",
															"typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1278,
													"indexExpression": {
														"id": 1277,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "7010:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7001:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$872_storage",
														"typeString": "struct MasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6977:38:6"
											},
											{
												"assignments": [
													1282
												],
												"declarations": [
													{
														"constant": false,
														"id": 1282,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "7043:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1364,
														"src": "7026:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
															"typeString": "struct MasterChef.UserInfo"
														},
														"typeName": {
															"id": 1281,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1280,
																"name": "UserInfo",
																"nameLocations": [
																	"7026:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 862,
																"src": "7026:8:6"
															},
															"referencedDeclaration": 862,
															"src": "7026:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																"typeString": "struct MasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1289,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1283,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "7050:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$862_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"
															}
														},
														"id": 1285,
														"indexExpression": {
															"id": 1284,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "7059:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7050:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$862_storage_$",
															"typeString": "mapping(address => struct MasterChef.UserInfo storage ref)"
														}
													},
													"id": 1288,
													"indexExpression": {
														"expression": {
															"id": 1286,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7065:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7069:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7065:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7050:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$862_storage",
														"typeString": "struct MasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7026:50:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1291,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "7098:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1290,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "7087:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7087:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "7087:16:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1294,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "7118:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																"typeString": "struct MasterChef.UserInfo storage pointer"
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7123:6:6",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 859,
														"src": "7118:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1296,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7132:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7118:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1318,
												"nodeType": "IfStatement",
												"src": "7114:218:6",
												"trueBody": {
													"id": 1317,
													"nodeType": "Block",
													"src": "7135:197:6",
													"statements": [
														{
															"assignments": [
																1299
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1299,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "7158:7:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1317,
																	"src": "7150:15:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1298,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7150:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1310,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1300,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1282,
																				"src": "7185:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																					"typeString": "struct MasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 1301,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7190:6:6",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 859,
																			"src": "7185:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"expression": {
																				"id": 1302,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1275,
																				"src": "7199:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																					"typeString": "struct MasterChef.PoolInfo storage pointer"
																				}
																			},
																			"id": 1303,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7204:16:6",
																			"memberName": "accSushiPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 871,
																			"src": "7199:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7185:35:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31653132",
																		"id": 1305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7222:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000_by_1",
																			"typeString": "int_const 1000000000000"
																		},
																		"value": "1e12"
																	},
																	"src": "7185:41:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1307,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1282,
																		"src": "7251:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																			"typeString": "struct MasterChef.UserInfo storage pointer"
																		}
																	},
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7256:10:6",
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 861,
																	"src": "7251:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7185:81:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7150:116:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1312,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7300:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7304:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7300:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1314,
																		"name": "pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1299,
																		"src": "7312:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1311,
																	"name": "safeSushiTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1557,
																	"src": "7282:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7282:38:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1316,
															"nodeType": "ExpressionStatement",
															"src": "7282:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1326,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7394:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7398:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7394:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7386:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1324,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7386:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7386:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1331,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7428:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MasterChef_$1558",
																		"typeString": "contract MasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MasterChef_$1558",
																		"typeString": "contract MasterChef"
																	}
																],
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7420:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1329,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7420:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7420:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1333,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "7448:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1319,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "7342:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																	"typeString": "struct MasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7347:7:6",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 865,
															"src": "7342:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7355:16:6",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "7342:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7342:124:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "7342:124:6"
											},
											{
												"expression": {
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1336,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "7477:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																"typeString": "struct MasterChef.UserInfo storage pointer"
															}
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7482:6:6",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 859,
														"src": "7477:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1339,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1282,
																"src": "7491:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																	"typeString": "struct MasterChef.UserInfo storage pointer"
																}
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7496:6:6",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 859,
															"src": "7491:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1341,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "7505:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7491:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7477:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "7477:35:6"
											},
											{
												"expression": {
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1345,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "7523:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																"typeString": "struct MasterChef.UserInfo storage pointer"
															}
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7528:10:6",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "7523:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1348,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "7541:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																		"typeString": "struct MasterChef.UserInfo storage pointer"
																	}
																},
																"id": 1349,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7546:6:6",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 859,
																"src": "7541:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"expression": {
																	"id": 1350,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1275,
																	"src": "7555:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																		"typeString": "struct MasterChef.PoolInfo storage pointer"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7560:16:6",
																"memberName": "accSushiPerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "7555:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7541:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653132",
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7579:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															},
															"value": "1e12"
														},
														"src": "7541:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7523:60:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "7523:60:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1358,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7608:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7612:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7608:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1360,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "7620:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1361,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "7626:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1357,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "7600:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7600:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1363,
												"nodeType": "EmitStatement",
												"src": "7595:39:6"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 1365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "6920:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "6936:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "6928:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6950:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "6942:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6942:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6927:31:6"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6966:0:6"
									},
									"scope": 1558,
									"src": "6911:731:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "7750:627:6",
										"statements": [
											{
												"assignments": [
													1374
												],
												"declarations": [
													{
														"constant": false,
														"id": 1374,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "7778:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1461,
														"src": "7761:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
															"typeString": "struct MasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1373,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1372,
																"name": "PoolInfo",
																"nameLocations": [
																	"7761:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 872,
																"src": "7761:8:6"
															},
															"referencedDeclaration": 872,
															"src": "7761:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																"typeString": "struct MasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1378,
												"initialValue": {
													"baseExpression": {
														"id": 1375,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "7785:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$872_storage_$dyn_storage",
															"typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1377,
													"indexExpression": {
														"id": 1376,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "7794:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7785:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$872_storage",
														"typeString": "struct MasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7761:38:6"
											},
											{
												"assignments": [
													1381
												],
												"declarations": [
													{
														"constant": false,
														"id": 1381,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "7827:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1461,
														"src": "7810:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
															"typeString": "struct MasterChef.UserInfo"
														},
														"typeName": {
															"id": 1380,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1379,
																"name": "UserInfo",
																"nameLocations": [
																	"7810:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 862,
																"src": "7810:8:6"
															},
															"referencedDeclaration": 862,
															"src": "7810:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																"typeString": "struct MasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1388,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1382,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "7834:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$862_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"
															}
														},
														"id": 1384,
														"indexExpression": {
															"id": 1383,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "7843:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7834:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$862_storage_$",
															"typeString": "mapping(address => struct MasterChef.UserInfo storage ref)"
														}
													},
													"id": 1387,
													"indexExpression": {
														"expression": {
															"id": 1385,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7849:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7853:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7849:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7834:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$862_storage",
														"typeString": "struct MasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7810:50:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1390,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "7879:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																		"typeString": "struct MasterChef.UserInfo storage pointer"
																	}
																},
																"id": 1391,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7884:6:6",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 859,
																"src": "7879:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1392,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "7894:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7879:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7903:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 1389,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7871:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7871:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1396,
												"nodeType": "ExpressionStatement",
												"src": "7871:53:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1398,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "7946:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1397,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "7935:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7935:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1400,
												"nodeType": "ExpressionStatement",
												"src": "7935:16:6"
											},
											{
												"assignments": [
													1402
												],
												"declarations": [
													{
														"constant": false,
														"id": 1402,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "7970:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1461,
														"src": "7962:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1401,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7962:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1413,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1403,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "7993:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																		"typeString": "struct MasterChef.UserInfo storage pointer"
																	}
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7998:6:6",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 859,
																"src": "7993:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"expression": {
																	"id": 1405,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1374,
																	"src": "8007:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																		"typeString": "struct MasterChef.PoolInfo storage pointer"
																	}
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8012:16:6",
																"memberName": "accSushiPerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "8007:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7993:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653132",
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8030:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															},
															"value": "1e12"
														},
														"src": "7993:41:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1410,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "8056:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																"typeString": "struct MasterChef.UserInfo storage pointer"
															}
														},
														"id": 1411,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8061:10:6",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "8056:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7993:78:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7962:109:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1415,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8114:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8118:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8114:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1417,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "8126:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1414,
														"name": "safeSushiTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "8096:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8096:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "8096:38:6"
											},
											{
												"expression": {
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1420,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "8145:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																"typeString": "struct MasterChef.UserInfo storage pointer"
															}
														},
														"id": 1422,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8150:6:6",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 859,
														"src": "8145:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1423,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "8159:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																	"typeString": "struct MasterChef.UserInfo storage pointer"
																}
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8164:6:6",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 859,
															"src": "8159:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1425,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "8173:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8159:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8145:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "8145:35:6"
											},
											{
												"expression": {
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1429,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "8191:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																"typeString": "struct MasterChef.UserInfo storage pointer"
															}
														},
														"id": 1431,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8196:10:6",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "8191:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1432,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "8209:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																		"typeString": "struct MasterChef.UserInfo storage pointer"
																	}
																},
																"id": 1433,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8214:6:6",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 859,
																"src": "8209:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"expression": {
																	"id": 1434,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1374,
																	"src": "8223:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																		"typeString": "struct MasterChef.PoolInfo storage pointer"
																	}
																},
																"id": 1435,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8228:16:6",
																"memberName": "accSushiPerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "8223:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8209:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653132",
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8247:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															},
															"value": "1e12"
														},
														"src": "8209:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8191:60:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1440,
												"nodeType": "ExpressionStatement",
												"src": "8191:60:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1448,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8297:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8301:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8297:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8289:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1446,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8289:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8289:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1451,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "8310:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1441,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "8263:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																	"typeString": "struct MasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1444,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8268:7:6",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 865,
															"src": "8263:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8276:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 311,
														"src": "8263:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8263:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "8263:55:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1455,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8343:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8347:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8343:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1457,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "8355:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1458,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "8361:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1454,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "8334:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8334:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1460,
												"nodeType": "EmitStatement",
												"src": "8329:40:6"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "7703:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "7720:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "7712:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7712:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7734:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "7726:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7726:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7711:31:6"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7750:0:6"
									},
									"scope": 1558,
									"src": "7694:683:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1518,
										"nodeType": "Block",
										"src": "8496:308:6",
										"statements": [
											{
												"assignments": [
													1469
												],
												"declarations": [
													{
														"constant": false,
														"id": 1469,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "8524:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1518,
														"src": "8507:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
															"typeString": "struct MasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1468,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1467,
																"name": "PoolInfo",
																"nameLocations": [
																	"8507:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 872,
																"src": "8507:8:6"
															},
															"referencedDeclaration": 872,
															"src": "8507:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																"typeString": "struct MasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1473,
												"initialValue": {
													"baseExpression": {
														"id": 1470,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "8531:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$872_storage_$dyn_storage",
															"typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1472,
													"indexExpression": {
														"id": 1471,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1464,
														"src": "8540:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8531:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$872_storage",
														"typeString": "struct MasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8507:38:6"
											},
											{
												"assignments": [
													1476
												],
												"declarations": [
													{
														"constant": false,
														"id": 1476,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "8573:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1518,
														"src": "8556:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
															"typeString": "struct MasterChef.UserInfo"
														},
														"typeName": {
															"id": 1475,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1474,
																"name": "UserInfo",
																"nameLocations": [
																	"8556:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 862,
																"src": "8556:8:6"
															},
															"referencedDeclaration": 862,
															"src": "8556:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																"typeString": "struct MasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1483,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1477,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "8580:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$862_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"
															}
														},
														"id": 1479,
														"indexExpression": {
															"id": 1478,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "8589:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8580:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$862_storage_$",
															"typeString": "mapping(address => struct MasterChef.UserInfo storage ref)"
														}
													},
													"id": 1482,
													"indexExpression": {
														"expression": {
															"id": 1480,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8595:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8599:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8595:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8580:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$862_storage",
														"typeString": "struct MasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8556:50:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1491,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8651:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8655:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8651:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8643:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8643:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8643:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1494,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "8664:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																	"typeString": "struct MasterChef.UserInfo storage pointer"
																}
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8669:6:6",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 859,
															"src": "8664:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1484,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "8617:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$872_storage_ptr",
																	"typeString": "struct MasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8622:7:6",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 865,
															"src": "8617:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8630:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 311,
														"src": "8617:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8617:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1497,
												"nodeType": "ExpressionStatement",
												"src": "8617:59:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1499,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8710:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8714:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8710:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1501,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "8722:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1502,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "8728:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																	"typeString": "struct MasterChef.UserInfo storage pointer"
																}
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8733:6:6",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 859,
															"src": "8728:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1498,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "8692:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8692:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1505,
												"nodeType": "EmitStatement",
												"src": "8687:53:6"
											},
											{
												"expression": {
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1506,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "8751:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																"typeString": "struct MasterChef.UserInfo storage pointer"
															}
														},
														"id": 1508,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8756:6:6",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 859,
														"src": "8751:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8765:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8751:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "8751:15:6"
											},
											{
												"expression": {
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1512,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "8777:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$862_storage_ptr",
																"typeString": "struct MasterChef.UserInfo storage pointer"
															}
														},
														"id": 1514,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8782:10:6",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "8777:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8777:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1517,
												"nodeType": "ExpressionStatement",
												"src": "8777:19:6"
											}
										]
									},
									"functionSelector": "5312ea8e",
									"id": 1519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nameLocation": "8457:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "8483:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "8475:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8475:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8474:14:6"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8496:0:6"
									},
									"scope": 1558,
									"src": "8448:356:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1556,
										"nodeType": "Block",
										"src": "8986:219:6",
										"statements": [
											{
												"assignments": [
													1527
												],
												"declarations": [
													{
														"constant": false,
														"id": 1527,
														"mutability": "mutable",
														"name": "sushiBal",
														"nameLocation": "9005:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1556,
														"src": "8997:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1526,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8997:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1535,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1532,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9040:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MasterChef_$1558",
																		"typeString": "contract MasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MasterChef_$1558",
																		"typeString": "contract MasterChef"
																	}
																],
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9032:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1530,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9032:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9032:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1528,
															"name": "sushi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "9016:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISushi_$849",
																"typeString": "contract ISushi"
															}
														},
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9022:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 182,
														"src": "9016:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9016:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8997:49:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1536,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "9061:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1537,
														"name": "sushiBal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1527,
														"src": "9071:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9061:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1554,
													"nodeType": "Block",
													"src": "9143:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1550,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1521,
																		"src": "9173:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1551,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "9178:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1547,
																		"name": "sushi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 875,
																		"src": "9158:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISushi_$849",
																			"typeString": "contract ISushi"
																		}
																	},
																	"id": 1549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9164:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 192,
																	"src": "9158:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9158:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1553,
															"nodeType": "ExpressionStatement",
															"src": "9158:28:6"
														}
													]
												},
												"id": 1555,
												"nodeType": "IfStatement",
												"src": "9057:141:6",
												"trueBody": {
													"id": 1546,
													"nodeType": "Block",
													"src": "9081:56:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1542,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1521,
																		"src": "9111:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1543,
																		"name": "sushiBal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1527,
																		"src": "9116:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1539,
																		"name": "sushi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 875,
																		"src": "9096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISushi_$849",
																			"typeString": "contract ISushi"
																		}
																	},
																	"id": 1541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 192,
																	"src": "9096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9096:29:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1545,
															"nodeType": "ExpressionStatement",
															"src": "9096:29:6"
														}
													]
												}
											}
										]
									},
									"id": 1557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeSushiTransfer",
									"nameLocation": "8929:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "8955:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "8947:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8947:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8968:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "8960:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8960:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8946:30:6"
									},
									"returnParameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8986:0:6"
									},
									"scope": 1558,
									"src": "8920:285:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1559,
							"src": "713:8497:6",
							"usedErrors": [
								13,
								18,
								278,
								559,
								564,
								567
							],
							"usedEvents": [
								24,
								906,
								914,
								922
							]
						}
					],
					"src": "35:9177:6"
				},
				"id": 6
			}
		}
	}
}