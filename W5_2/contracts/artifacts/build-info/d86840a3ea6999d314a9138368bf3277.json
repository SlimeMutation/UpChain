{
	"id": "d86840a3ea6999d314a9138368bf3277",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"MyCallOption.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.24;\r\n\r\n// Uncomment this line to use console.log\r\n// import \"hardhat/console.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract MyCallOption is ERC20, Ownable{\r\n\r\n    using SafeERC20 for IERC20;\r\n\r\n    IERC20 public usdc;\r\n    uint128 public price;\r\n    uint96 public exerciseTime;\r\n    uint32 public durationTime;\r\n\r\n    constructor(IERC20 _usdc, uint128 _price, uint96 _exerciseTime, uint32 _durationTime) ERC20(unicode\"我的测试看多期权Token\", \"CALLTOKEN\") Ownable(msg.sender){\r\n        price = _price;\r\n        exerciseTime = _exerciseTime;\r\n        durationTime = _durationTime;\r\n        usdc = _usdc;\r\n    }\r\n\r\n    function issueOption() onlyOwner public payable {\r\n        require(msg.value > 0, \"eth value cant be 0\");\r\n        _mint(msg.sender, msg.value);\r\n    }\r\n\r\n    function settleOption(uint256 _amount) public {\r\n        require(block.timestamp >= exerciseTime && block.timestamp < exerciseTime + durationTime, \"not in settle time range\");\r\n        require(balanceOf(msg.sender) >= _amount, \"amount must > balance\");\r\n        _burn(msg.sender, _amount);\r\n        usdc.safeTransferFrom(msg.sender, address(this), _amount * price);\r\n        safeTransferETH(address(msg.sender), _amount);\r\n    }\r\n\r\n    function safeTransferETH(address to, uint256 value) internal {\r\n        (bool success, ) = to.call{value: value}(new bytes(0));\r\n        require(success, 'TransferHelper::safeTransferETH: ETH transfer failed');\r\n    }\r\n\r\n    function destory() public onlyOwner {\r\n        require(block.timestamp >= exerciseTime + durationTime, \"not expire yet\");\r\n        usdc.safeTransfer(msg.sender, usdc.balanceOf(address(this)));\r\n        selfdestruct(payable(msg.sender));\r\n    }\r\n    \r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212202e89665000d2f2e0b89ea3e6107edc27927db832c54466ce545ca6595e697fe164736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202e89665000d2f2e0b89ea3e6107edc27927db832c54466ce545ca6595e697fe164736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E DUP10 PUSH7 0x5000D2F2E0B89E LOG3 0xE6 LT PUSH31 0xDC27927DB832C54466CE545CA6595E697FE164736F6C634300081B00330000 ",
							"sourceMap": "751:5018:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202e89665000d2f2e0b89ea3e6107edc27927db832c54466ce545ca6595e697fe164736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E DUP10 PUSH7 0x5000D2F2E0B89E LOG3 0xE6 LT PUSH31 0xDC27927DB832C54466CE545CA6595E697FE164736F6C634300081B00330000 ",
							"sourceMap": "751:5018:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202e89665000d2f2e0b89ea3e6107edc27927db832c54466ce545ca6595e697fe164736f6c634300081b0033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"MyCallOption.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220a2eaa130c2655451bf84a8c44df4cc23b25602b0a88b5a8087ef60ced0343c6d64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a2eaa130c2655451bf84a8c44df4cc23b25602b0a88b5a8087ef60ced0343c6d64736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xEA LOG1 ADDRESS 0xC2 PUSH6 0x5451BF84A8C4 0x4D DELEGATECALL 0xCC 0x23 0xB2 JUMP MUL 0xB0 0xA8 DUP12 GAS DUP1 DUP8 0xEF PUSH1 0xCE 0xD0 CALLVALUE EXTCODECOPY PUSH14 0x64736F6C634300081B0033000000 ",
							"sourceMap": "195:6066:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a2eaa130c2655451bf84a8c44df4cc23b25602b0a88b5a8087ef60ced0343c6d64736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xEA LOG1 ADDRESS 0xC2 PUSH6 0x5451BF84A8C4 0x4D DELEGATECALL 0xCC 0x23 0xB2 JUMP MUL 0xB0 0xA8 DUP12 GAS DUP1 DUP8 0xEF PUSH1 0xCE 0xD0 CALLVALUE EXTCODECOPY PUSH14 0x64736F6C634300081B0033000000 ",
							"sourceMap": "195:6066:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a2eaa130c2655451bf84a8c44df4cc23b25602b0a88b5a8087ef60ced0343c6d64736f6c634300081b0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"MyCallOption.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MyCallOption.sol": {
				"MyCallOption": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_usdc",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "_price",
									"type": "uint128"
								},
								{
									"internalType": "uint96",
									"name": "_exerciseTime",
									"type": "uint96"
								},
								{
									"internalType": "uint32",
									"name": "_durationTime",
									"type": "uint32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "destory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "durationTime",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exerciseTime",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "issueOption",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "settleOption",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdc",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MyCallOption.sol\":383:1964  contract MyCallOption is ERC20, Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"MyCallOption.sol\":586:884  constructor(IERC20 _usdc, uint128 _price, uint96 _exerciseTime, uint32 _durationTime) ERC20(unicode\"我的测试看多期权Token\", \"CALLTOKEN\") Ownable(msg.sender){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"MyCallOption.sol\":739:749  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x1d\n  dup2\n  mstore\n  0x20\n  add\n  0xe68891e79a84e6b58be8af95e79c8be5a49ae69c9fe69d83546f6b656e000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x43414c4c544f4b454e0000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"MyCallOption.sol\":769:775  _price */\n  dup3\n    /* \"MyCallOption.sol\":761:766  price */\n  0x07\n  0x00\n    /* \"MyCallOption.sol\":761:775  price = _price */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"MyCallOption.sol\":801:814  _exerciseTime */\n  dup2\n    /* \"MyCallOption.sol\":786:798  exerciseTime */\n  0x07\n  0x10\n    /* \"MyCallOption.sol\":786:814  exerciseTime = _exerciseTime */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"MyCallOption.sol\":840:853  _durationTime */\n  dup1\n    /* \"MyCallOption.sol\":825:837  durationTime */\n  0x07\n  0x1c\n    /* \"MyCallOption.sol\":825:853  durationTime = _durationTime */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"MyCallOption.sol\":871:876  _usdc */\n  dup4\n    /* \"MyCallOption.sol\":864:868  usdc */\n  0x06\n  0x00\n    /* \"MyCallOption.sol\":864:876  usdc = _usdc */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"MyCallOption.sol\":586:884  constructor(IERC20 _usdc, uint128 _price, uint96 _exerciseTime, uint32 _durationTime) ERC20(unicode\"我的测试看多期权Token\", \"CALLTOKEN\") Ownable(msg.sender){... */\n  pop\n  pop\n  pop\n  pop\n    /* \"MyCallOption.sol\":383:1964  contract MyCallOption is ERC20, Ownable{... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_64\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_25:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_66\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_24\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_26:\n    /* \"#utility.yul\":771:809   */\n  tag_68\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_25\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  0x00\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_69:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_27:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_71\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_26\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1135   */\ntag_28:\n    /* \"#utility.yul\":1054:1061   */\n  0x00\n    /* \"#utility.yul\":1094:1128   */\n  0xffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1087:1092   */\n  dup3\n    /* \"#utility.yul\":1083:1129   */\n  and\n    /* \"#utility.yul\":1072:1129   */\n  swap1\n  pop\n    /* \"#utility.yul\":1017:1135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1141:1263   */\ntag_29:\n    /* \"#utility.yul\":1214:1238   */\n  tag_74\n    /* \"#utility.yul\":1232:1237   */\n  dup2\n    /* \"#utility.yul\":1214:1238   */\n  tag_28\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1207:1212   */\n  dup2\n    /* \"#utility.yul\":1204:1239   */\n  eq\n    /* \"#utility.yul\":1194:1257   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":1253:1254   */\n  0x00\n    /* \"#utility.yul\":1250:1251   */\n  0x00\n    /* \"#utility.yul\":1243:1255   */\n  revert\n    /* \"#utility.yul\":1194:1257   */\ntag_75:\n    /* \"#utility.yul\":1141:1263   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1269:1412   */\ntag_30:\n    /* \"#utility.yul\":1326:1331   */\n  0x00\n    /* \"#utility.yul\":1357:1363   */\n  dup2\n    /* \"#utility.yul\":1351:1364   */\n  mload\n    /* \"#utility.yul\":1342:1364   */\n  swap1\n  pop\n    /* \"#utility.yul\":1373:1406   */\n  tag_77\n    /* \"#utility.yul\":1400:1405   */\n  dup2\n    /* \"#utility.yul\":1373:1406   */\n  tag_29\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1269:1412   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1418:1527   */\ntag_31:\n    /* \"#utility.yul\":1454:1461   */\n  0x00\n    /* \"#utility.yul\":1494:1520   */\n  0xffffffffffffffffffffffff\n    /* \"#utility.yul\":1487:1492   */\n  dup3\n    /* \"#utility.yul\":1483:1521   */\n  and\n    /* \"#utility.yul\":1472:1521   */\n  swap1\n  pop\n    /* \"#utility.yul\":1418:1527   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1533:1653   */\ntag_32:\n    /* \"#utility.yul\":1605:1628   */\n  tag_80\n    /* \"#utility.yul\":1622:1627   */\n  dup2\n    /* \"#utility.yul\":1605:1628   */\n  tag_31\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1598:1603   */\n  dup2\n    /* \"#utility.yul\":1595:1629   */\n  eq\n    /* \"#utility.yul\":1585:1647   */\n  tag_81\n  jumpi\n    /* \"#utility.yul\":1643:1644   */\n  0x00\n    /* \"#utility.yul\":1640:1641   */\n  0x00\n    /* \"#utility.yul\":1633:1645   */\n  revert\n    /* \"#utility.yul\":1585:1647   */\ntag_81:\n    /* \"#utility.yul\":1533:1653   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1659:1800   */\ntag_33:\n    /* \"#utility.yul\":1715:1720   */\n  0x00\n    /* \"#utility.yul\":1746:1752   */\n  dup2\n    /* \"#utility.yul\":1740:1753   */\n  mload\n    /* \"#utility.yul\":1731:1753   */\n  swap1\n  pop\n    /* \"#utility.yul\":1762:1794   */\n  tag_83\n    /* \"#utility.yul\":1788:1793   */\n  dup2\n    /* \"#utility.yul\":1762:1794   */\n  tag_32\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1659:1800   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1806:1899   */\ntag_34:\n    /* \"#utility.yul\":1842:1849   */\n  0x00\n    /* \"#utility.yul\":1882:1892   */\n  0xffffffff\n    /* \"#utility.yul\":1875:1880   */\n  dup3\n    /* \"#utility.yul\":1871:1893   */\n  and\n    /* \"#utility.yul\":1860:1893   */\n  swap1\n  pop\n    /* \"#utility.yul\":1806:1899   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1905:2025   */\ntag_35:\n    /* \"#utility.yul\":1977:2000   */\n  tag_86\n    /* \"#utility.yul\":1994:1999   */\n  dup2\n    /* \"#utility.yul\":1977:2000   */\n  tag_34\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":1970:1975   */\n  dup2\n    /* \"#utility.yul\":1967:2001   */\n  eq\n    /* \"#utility.yul\":1957:2019   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":2015:2016   */\n  0x00\n    /* \"#utility.yul\":2012:2013   */\n  0x00\n    /* \"#utility.yul\":2005:2017   */\n  revert\n    /* \"#utility.yul\":1957:2019   */\ntag_87:\n    /* \"#utility.yul\":1905:2025   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2031:2172   */\ntag_36:\n    /* \"#utility.yul\":2087:2092   */\n  0x00\n    /* \"#utility.yul\":2118:2124   */\n  dup2\n    /* \"#utility.yul\":2112:2125   */\n  mload\n    /* \"#utility.yul\":2103:2125   */\n  swap1\n  pop\n    /* \"#utility.yul\":2134:2166   */\n  tag_89\n    /* \"#utility.yul\":2160:2165   */\n  dup2\n    /* \"#utility.yul\":2134:2166   */\n  tag_35\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2031:2172   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2178:3022   */\ntag_3:\n    /* \"#utility.yul\":2287:2293   */\n  0x00\n    /* \"#utility.yul\":2295:2301   */\n  0x00\n    /* \"#utility.yul\":2303:2309   */\n  0x00\n    /* \"#utility.yul\":2311:2317   */\n  0x00\n    /* \"#utility.yul\":2360:2363   */\n  0x80\n    /* \"#utility.yul\":2348:2357   */\n  dup6\n    /* \"#utility.yul\":2339:2346   */\n  dup8\n    /* \"#utility.yul\":2335:2358   */\n  sub\n    /* \"#utility.yul\":2331:2364   */\n  slt\n    /* \"#utility.yul\":2328:2448   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":2367:2446   */\n  tag_92\n  tag_21\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2328:2448   */\ntag_91:\n    /* \"#utility.yul\":2487:2488   */\n  0x00\n    /* \"#utility.yul\":2512:2590   */\n  tag_93\n    /* \"#utility.yul\":2582:2589   */\n  dup8\n    /* \"#utility.yul\":2573:2579   */\n  dup3\n    /* \"#utility.yul\":2562:2571   */\n  dup9\n    /* \"#utility.yul\":2558:2580   */\n  add\n    /* \"#utility.yul\":2512:2590   */\n  tag_27\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2502:2590   */\n  swap5\n  pop\n    /* \"#utility.yul\":2458:2600   */\n  pop\n    /* \"#utility.yul\":2639:2641   */\n  0x20\n    /* \"#utility.yul\":2665:2729   */\n  tag_94\n    /* \"#utility.yul\":2721:2728   */\n  dup8\n    /* \"#utility.yul\":2712:2718   */\n  dup3\n    /* \"#utility.yul\":2701:2710   */\n  dup9\n    /* \"#utility.yul\":2697:2719   */\n  add\n    /* \"#utility.yul\":2665:2729   */\n  tag_30\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2655:2729   */\n  swap4\n  pop\n    /* \"#utility.yul\":2610:2739   */\n  pop\n    /* \"#utility.yul\":2778:2780   */\n  0x40\n    /* \"#utility.yul\":2804:2867   */\n  tag_95\n    /* \"#utility.yul\":2859:2866   */\n  dup8\n    /* \"#utility.yul\":2850:2856   */\n  dup3\n    /* \"#utility.yul\":2839:2848   */\n  dup9\n    /* \"#utility.yul\":2835:2857   */\n  add\n    /* \"#utility.yul\":2804:2867   */\n  tag_33\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2794:2867   */\n  swap3\n  pop\n    /* \"#utility.yul\":2749:2877   */\n  pop\n    /* \"#utility.yul\":2916:2918   */\n  0x60\n    /* \"#utility.yul\":2942:3005   */\n  tag_96\n    /* \"#utility.yul\":2997:3004   */\n  dup8\n    /* \"#utility.yul\":2988:2994   */\n  dup3\n    /* \"#utility.yul\":2977:2986   */\n  dup9\n    /* \"#utility.yul\":2973:2995   */\n  add\n    /* \"#utility.yul\":2942:3005   */\n  tag_36\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":2932:3005   */\n  swap2\n  pop\n    /* \"#utility.yul\":2887:3015   */\n  pop\n    /* \"#utility.yul\":2178:3022   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3028:3127   */\ntag_37:\n    /* \"#utility.yul\":3080:3086   */\n  0x00\n    /* \"#utility.yul\":3114:3119   */\n  dup2\n    /* \"#utility.yul\":3108:3120   */\n  mload\n    /* \"#utility.yul\":3098:3120   */\n  swap1\n  pop\n    /* \"#utility.yul\":3028:3127   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3133:3313   */\ntag_38:\n    /* \"#utility.yul\":3181:3258   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3178:3179   */\n  0x00\n    /* \"#utility.yul\":3171:3259   */\n  mstore\n    /* \"#utility.yul\":3278:3282   */\n  0x41\n    /* \"#utility.yul\":3275:3276   */\n  0x04\n    /* \"#utility.yul\":3268:3283   */\n  mstore\n    /* \"#utility.yul\":3302:3306   */\n  0x24\n    /* \"#utility.yul\":3299:3300   */\n  0x00\n    /* \"#utility.yul\":3292:3307   */\n  revert\n    /* \"#utility.yul\":3319:3499   */\ntag_39:\n    /* \"#utility.yul\":3367:3444   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3364:3365   */\n  0x00\n    /* \"#utility.yul\":3357:3445   */\n  mstore\n    /* \"#utility.yul\":3464:3468   */\n  0x22\n    /* \"#utility.yul\":3461:3462   */\n  0x04\n    /* \"#utility.yul\":3454:3469   */\n  mstore\n    /* \"#utility.yul\":3488:3492   */\n  0x24\n    /* \"#utility.yul\":3485:3486   */\n  0x00\n    /* \"#utility.yul\":3478:3493   */\n  revert\n    /* \"#utility.yul\":3505:3825   */\ntag_40:\n    /* \"#utility.yul\":3549:3555   */\n  0x00\n    /* \"#utility.yul\":3586:3587   */\n  0x02\n    /* \"#utility.yul\":3580:3584   */\n  dup3\n    /* \"#utility.yul\":3576:3588   */\n  div\n    /* \"#utility.yul\":3566:3588   */\n  swap1\n  pop\n    /* \"#utility.yul\":3633:3634   */\n  0x01\n    /* \"#utility.yul\":3627:3631   */\n  dup3\n    /* \"#utility.yul\":3623:3635   */\n  and\n    /* \"#utility.yul\":3654:3672   */\n  dup1\n    /* \"#utility.yul\":3644:3725   */\n  tag_101\n  jumpi\n    /* \"#utility.yul\":3710:3714   */\n  0x7f\n    /* \"#utility.yul\":3702:3708   */\n  dup3\n    /* \"#utility.yul\":3698:3715   */\n  and\n    /* \"#utility.yul\":3688:3715   */\n  swap2\n  pop\n    /* \"#utility.yul\":3644:3725   */\ntag_101:\n    /* \"#utility.yul\":3772:3774   */\n  0x20\n    /* \"#utility.yul\":3764:3770   */\n  dup3\n    /* \"#utility.yul\":3761:3775   */\n  lt\n    /* \"#utility.yul\":3741:3759   */\n  dup2\n    /* \"#utility.yul\":3738:3776   */\n  sub\n    /* \"#utility.yul\":3735:3819   */\n  tag_102\n  jumpi\n    /* \"#utility.yul\":3791:3809   */\n  tag_103\n  tag_39\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":3735:3819   */\ntag_102:\n    /* \"#utility.yul\":3556:3825   */\n  pop\n    /* \"#utility.yul\":3505:3825   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3831:3972   */\ntag_41:\n    /* \"#utility.yul\":3880:3884   */\n  0x00\n    /* \"#utility.yul\":3903:3906   */\n  dup2\n    /* \"#utility.yul\":3895:3906   */\n  swap1\n  pop\n    /* \"#utility.yul\":3926:3929   */\n  dup2\n    /* \"#utility.yul\":3923:3924   */\n  0x00\n    /* \"#utility.yul\":3916:3930   */\n  mstore\n    /* \"#utility.yul\":3960:3964   */\n  0x20\n    /* \"#utility.yul\":3957:3958   */\n  0x00\n    /* \"#utility.yul\":3947:3965   */\n  keccak256\n    /* \"#utility.yul\":3939:3965   */\n  swap1\n  pop\n    /* \"#utility.yul\":3831:3972   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3978:4071   */\ntag_42:\n    /* \"#utility.yul\":4015:4021   */\n  0x00\n    /* \"#utility.yul\":4062:4064   */\n  0x20\n    /* \"#utility.yul\":4057:4059   */\n  0x1f\n    /* \"#utility.yul\":4050:4055   */\n  dup4\n    /* \"#utility.yul\":4046:4060   */\n  add\n    /* \"#utility.yul\":4042:4065   */\n  div\n    /* \"#utility.yul\":4032:4065   */\n  swap1\n  pop\n    /* \"#utility.yul\":3978:4071   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4077:4184   */\ntag_43:\n    /* \"#utility.yul\":4121:4129   */\n  0x00\n    /* \"#utility.yul\":4171:4176   */\n  dup3\n    /* \"#utility.yul\":4165:4169   */\n  dup3\n    /* \"#utility.yul\":4161:4177   */\n  shl\n    /* \"#utility.yul\":4140:4177   */\n  swap1\n  pop\n    /* \"#utility.yul\":4077:4184   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4190:4583   */\ntag_44:\n    /* \"#utility.yul\":4259:4265   */\n  0x00\n    /* \"#utility.yul\":4309:4310   */\n  0x08\n    /* \"#utility.yul\":4297:4307   */\n  dup4\n    /* \"#utility.yul\":4293:4311   */\n  mul\n    /* \"#utility.yul\":4332:4429   */\n  tag_108\n    /* \"#utility.yul\":4362:4428   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4351:4360   */\n  dup3\n    /* \"#utility.yul\":4332:4429   */\n  tag_43\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4450:4489   */\n  tag_109\n    /* \"#utility.yul\":4480:4488   */\n  dup7\n    /* \"#utility.yul\":4469:4478   */\n  dup4\n    /* \"#utility.yul\":4450:4489   */\n  tag_43\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":4438:4489   */\n  swap6\n  pop\n    /* \"#utility.yul\":4522:4526   */\n  dup1\n    /* \"#utility.yul\":4518:4527   */\n  not\n    /* \"#utility.yul\":4511:4516   */\n  dup5\n    /* \"#utility.yul\":4507:4528   */\n  and\n    /* \"#utility.yul\":4498:4528   */\n  swap4\n  pop\n    /* \"#utility.yul\":4571:4575   */\n  dup1\n    /* \"#utility.yul\":4561:4569   */\n  dup7\n    /* \"#utility.yul\":4557:4576   */\n  and\n    /* \"#utility.yul\":4550:4555   */\n  dup5\n    /* \"#utility.yul\":4547:4577   */\n  or\n    /* \"#utility.yul\":4537:4577   */\n  swap3\n  pop\n    /* \"#utility.yul\":4266:4583   */\n  pop\n  pop\n    /* \"#utility.yul\":4190:4583   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4589:4666   */\ntag_45:\n    /* \"#utility.yul\":4626:4633   */\n  0x00\n    /* \"#utility.yul\":4655:4660   */\n  dup2\n    /* \"#utility.yul\":4644:4660   */\n  swap1\n  pop\n    /* \"#utility.yul\":4589:4666   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4672:4732   */\ntag_46:\n    /* \"#utility.yul\":4700:4703   */\n  0x00\n    /* \"#utility.yul\":4721:4726   */\n  dup2\n    /* \"#utility.yul\":4714:4726   */\n  swap1\n  pop\n    /* \"#utility.yul\":4672:4732   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4738:4880   */\ntag_47:\n    /* \"#utility.yul\":4788:4797   */\n  0x00\n    /* \"#utility.yul\":4821:4874   */\n  tag_113\n    /* \"#utility.yul\":4839:4873   */\n  tag_114\n    /* \"#utility.yul\":4848:4872   */\n  tag_115\n    /* \"#utility.yul\":4866:4871   */\n  dup5\n    /* \"#utility.yul\":4848:4872   */\n  tag_45\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":4839:4873   */\n  tag_46\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":4821:4874   */\n  tag_45\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4808:4874   */\n  swap1\n  pop\n    /* \"#utility.yul\":4738:4880   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4886:4961   */\ntag_48:\n    /* \"#utility.yul\":4929:4932   */\n  0x00\n    /* \"#utility.yul\":4950:4955   */\n  dup2\n    /* \"#utility.yul\":4943:4955   */\n  swap1\n  pop\n    /* \"#utility.yul\":4886:4961   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4967:5236   */\ntag_49:\n    /* \"#utility.yul\":5077:5116   */\n  tag_118\n    /* \"#utility.yul\":5108:5115   */\n  dup4\n    /* \"#utility.yul\":5077:5116   */\n  tag_47\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5138:5229   */\n  tag_119\n    /* \"#utility.yul\":5187:5228   */\n  tag_120\n    /* \"#utility.yul\":5211:5227   */\n  dup3\n    /* \"#utility.yul\":5187:5228   */\n  tag_48\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":5179:5185   */\n  dup5\n    /* \"#utility.yul\":5172:5176   */\n  dup5\n    /* \"#utility.yul\":5166:5177   */\n  sload\n    /* \"#utility.yul\":5138:5229   */\n  tag_44\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5132:5136   */\n  dup3\n    /* \"#utility.yul\":5125:5230   */\n  sstore\n    /* \"#utility.yul\":5043:5236   */\n  pop\n    /* \"#utility.yul\":4967:5236   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5242:5315   */\ntag_50:\n    /* \"#utility.yul\":5287:5290   */\n  0x00\n    /* \"#utility.yul\":5308:5309   */\n  0x00\n    /* \"#utility.yul\":5301:5309   */\n  swap1\n  pop\n    /* \"#utility.yul\":5242:5315   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5321:5510   */\ntag_51:\n    /* \"#utility.yul\":5398:5430   */\n  tag_123\n  tag_50\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":5439:5504   */\n  tag_124\n    /* \"#utility.yul\":5497:5503   */\n  dup2\n    /* \"#utility.yul\":5489:5495   */\n  dup5\n    /* \"#utility.yul\":5483:5487   */\n  dup5\n    /* \"#utility.yul\":5439:5504   */\n  tag_49\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":5374:5510   */\n  pop\n    /* \"#utility.yul\":5321:5510   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5516:5702   */\ntag_52:\n    /* \"#utility.yul\":5576:5696   */\ntag_126:\n    /* \"#utility.yul\":5593:5596   */\n  dup2\n    /* \"#utility.yul\":5586:5591   */\n  dup2\n    /* \"#utility.yul\":5583:5597   */\n  lt\n    /* \"#utility.yul\":5576:5696   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":5647:5686   */\n  tag_129\n    /* \"#utility.yul\":5684:5685   */\n  0x00\n    /* \"#utility.yul\":5677:5682   */\n  dup3\n    /* \"#utility.yul\":5647:5686   */\n  tag_51\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":5620:5621   */\n  0x01\n    /* \"#utility.yul\":5613:5618   */\n  dup2\n    /* \"#utility.yul\":5609:5622   */\n  add\n    /* \"#utility.yul\":5600:5622   */\n  swap1\n  pop\n    /* \"#utility.yul\":5576:5696   */\n  jump(tag_126)\ntag_128:\n    /* \"#utility.yul\":5516:5702   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5708:6251   */\ntag_53:\n    /* \"#utility.yul\":5809:5811   */\n  0x1f\n    /* \"#utility.yul\":5804:5807   */\n  dup3\n    /* \"#utility.yul\":5801:5812   */\n  gt\n    /* \"#utility.yul\":5798:6244   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":5843:5881   */\n  tag_132\n    /* \"#utility.yul\":5875:5880   */\n  dup2\n    /* \"#utility.yul\":5843:5881   */\n  tag_41\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5927:5956   */\n  tag_133\n    /* \"#utility.yul\":5945:5955   */\n  dup5\n    /* \"#utility.yul\":5927:5956   */\n  tag_42\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":5917:5925   */\n  dup2\n    /* \"#utility.yul\":5913:5957   */\n  add\n    /* \"#utility.yul\":6110:6112   */\n  0x20\n    /* \"#utility.yul\":6098:6108   */\n  dup6\n    /* \"#utility.yul\":6095:6113   */\n  lt\n    /* \"#utility.yul\":6092:6141   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":6131:6139   */\n  dup2\n    /* \"#utility.yul\":6116:6139   */\n  swap1\n  pop\n    /* \"#utility.yul\":6092:6141   */\ntag_134:\n    /* \"#utility.yul\":6154:6234   */\n  tag_135\n    /* \"#utility.yul\":6210:6232   */\n  tag_136\n    /* \"#utility.yul\":6228:6231   */\n  dup6\n    /* \"#utility.yul\":6210:6232   */\n  tag_42\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":6200:6208   */\n  dup4\n    /* \"#utility.yul\":6196:6233   */\n  add\n    /* \"#utility.yul\":6183:6194   */\n  dup3\n    /* \"#utility.yul\":6154:6234   */\n  tag_52\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5813:6244   */\n  pop\n  pop\n    /* \"#utility.yul\":5798:6244   */\ntag_131:\n    /* \"#utility.yul\":5708:6251   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6257:6374   */\ntag_54:\n    /* \"#utility.yul\":6311:6319   */\n  0x00\n    /* \"#utility.yul\":6361:6366   */\n  dup3\n    /* \"#utility.yul\":6355:6359   */\n  dup3\n    /* \"#utility.yul\":6351:6367   */\n  shr\n    /* \"#utility.yul\":6330:6367   */\n  swap1\n  pop\n    /* \"#utility.yul\":6257:6374   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6380:6549   */\ntag_55:\n    /* \"#utility.yul\":6424:6430   */\n  0x00\n    /* \"#utility.yul\":6457:6508   */\n  tag_139\n    /* \"#utility.yul\":6505:6506   */\n  0x00\n    /* \"#utility.yul\":6501:6507   */\n  not\n    /* \"#utility.yul\":6493:6498   */\n  dup5\n    /* \"#utility.yul\":6490:6491   */\n  0x08\n    /* \"#utility.yul\":6486:6499   */\n  mul\n    /* \"#utility.yul\":6457:6508   */\n  tag_54\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":6453:6509   */\n  not\n    /* \"#utility.yul\":6538:6542   */\n  dup1\n    /* \"#utility.yul\":6532:6536   */\n  dup4\n    /* \"#utility.yul\":6528:6543   */\n  and\n    /* \"#utility.yul\":6518:6543   */\n  swap2\n  pop\n    /* \"#utility.yul\":6431:6549   */\n  pop\n    /* \"#utility.yul\":6380:6549   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6554:6849   */\ntag_56:\n    /* \"#utility.yul\":6630:6634   */\n  0x00\n    /* \"#utility.yul\":6776:6805   */\n  tag_141\n    /* \"#utility.yul\":6801:6804   */\n  dup4\n    /* \"#utility.yul\":6795:6799   */\n  dup4\n    /* \"#utility.yul\":6776:6805   */\n  tag_55\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":6768:6805   */\n  swap2\n  pop\n    /* \"#utility.yul\":6838:6841   */\n  dup3\n    /* \"#utility.yul\":6835:6836   */\n  0x02\n    /* \"#utility.yul\":6831:6842   */\n  mul\n    /* \"#utility.yul\":6825:6829   */\n  dup3\n    /* \"#utility.yul\":6822:6843   */\n  or\n    /* \"#utility.yul\":6814:6843   */\n  swap1\n  pop\n    /* \"#utility.yul\":6554:6849   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6854:8249   */\ntag_9:\n    /* \"#utility.yul\":6971:7008   */\n  tag_143\n    /* \"#utility.yul\":7004:7007   */\n  dup3\n    /* \"#utility.yul\":6971:7008   */\n  tag_37\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":7073:7091   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7065:7071   */\n  dup2\n    /* \"#utility.yul\":7062:7092   */\n  gt\n    /* \"#utility.yul\":7059:7115   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":7095:7113   */\n  tag_145\n  tag_38\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":7059:7115   */\ntag_144:\n    /* \"#utility.yul\":7139:7177   */\n  tag_146\n    /* \"#utility.yul\":7171:7175   */\n  dup3\n    /* \"#utility.yul\":7165:7176   */\n  sload\n    /* \"#utility.yul\":7139:7177   */\n  tag_40\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":7224:7291   */\n  tag_147\n    /* \"#utility.yul\":7284:7290   */\n  dup3\n    /* \"#utility.yul\":7276:7282   */\n  dup3\n    /* \"#utility.yul\":7270:7274   */\n  dup6\n    /* \"#utility.yul\":7224:7291   */\n  tag_53\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":7318:7319   */\n  0x00\n    /* \"#utility.yul\":7342:7346   */\n  0x20\n    /* \"#utility.yul\":7329:7346   */\n  swap1\n  pop\n    /* \"#utility.yul\":7374:7376   */\n  0x1f\n    /* \"#utility.yul\":7366:7372   */\n  dup4\n    /* \"#utility.yul\":7363:7377   */\n  gt\n    /* \"#utility.yul\":7391:7392   */\n  0x01\n    /* \"#utility.yul\":7386:8004   */\n  dup2\n  eq\n  tag_149\n  jumpi\n    /* \"#utility.yul\":8048:8049   */\n  0x00\n    /* \"#utility.yul\":8065:8071   */\n  dup5\n    /* \"#utility.yul\":8062:8139   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":8114:8123   */\n  dup3\n    /* \"#utility.yul\":8109:8112   */\n  dup8\n    /* \"#utility.yul\":8105:8124   */\n  add\n    /* \"#utility.yul\":8099:8125   */\n  mload\n    /* \"#utility.yul\":8090:8125   */\n  swap1\n  pop\n    /* \"#utility.yul\":8062:8139   */\ntag_150:\n    /* \"#utility.yul\":8165:8232   */\n  tag_151\n    /* \"#utility.yul\":8225:8231   */\n  dup6\n    /* \"#utility.yul\":8218:8223   */\n  dup3\n    /* \"#utility.yul\":8165:8232   */\n  tag_56\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":8159:8163   */\n  dup7\n    /* \"#utility.yul\":8152:8233   */\n  sstore\n    /* \"#utility.yul\":8021:8243   */\n  pop\n    /* \"#utility.yul\":7356:8243   */\n  jump(tag_148)\n    /* \"#utility.yul\":7386:8004   */\ntag_149:\n    /* \"#utility.yul\":7438:7442   */\n  0x1f\n    /* \"#utility.yul\":7434:7443   */\n  not\n    /* \"#utility.yul\":7426:7432   */\n  dup5\n    /* \"#utility.yul\":7422:7444   */\n  and\n    /* \"#utility.yul\":7472:7509   */\n  tag_152\n    /* \"#utility.yul\":7504:7508   */\n  dup7\n    /* \"#utility.yul\":7472:7509   */\n  tag_41\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":7531:7532   */\n  0x00\n    /* \"#utility.yul\":7545:7753   */\ntag_153:\n    /* \"#utility.yul\":7559:7566   */\n  dup3\n    /* \"#utility.yul\":7556:7557   */\n  dup2\n    /* \"#utility.yul\":7553:7567   */\n  lt\n    /* \"#utility.yul\":7545:7753   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":7638:7647   */\n  dup5\n    /* \"#utility.yul\":7633:7636   */\n  dup10\n    /* \"#utility.yul\":7629:7648   */\n  add\n    /* \"#utility.yul\":7623:7649   */\n  mload\n    /* \"#utility.yul\":7615:7621   */\n  dup3\n    /* \"#utility.yul\":7608:7650   */\n  sstore\n    /* \"#utility.yul\":7689:7690   */\n  0x01\n    /* \"#utility.yul\":7681:7687   */\n  dup3\n    /* \"#utility.yul\":7677:7691   */\n  add\n    /* \"#utility.yul\":7667:7691   */\n  swap2\n  pop\n    /* \"#utility.yul\":7736:7738   */\n  0x20\n    /* \"#utility.yul\":7725:7734   */\n  dup6\n    /* \"#utility.yul\":7721:7739   */\n  add\n    /* \"#utility.yul\":7708:7739   */\n  swap5\n  pop\n    /* \"#utility.yul\":7582:7586   */\n  0x20\n    /* \"#utility.yul\":7579:7580   */\n  dup2\n    /* \"#utility.yul\":7575:7587   */\n  add\n    /* \"#utility.yul\":7570:7587   */\n  swap1\n  pop\n    /* \"#utility.yul\":7545:7753   */\n  jump(tag_153)\ntag_155:\n    /* \"#utility.yul\":7781:7787   */\n  dup7\n    /* \"#utility.yul\":7772:7779   */\n  dup4\n    /* \"#utility.yul\":7769:7788   */\n  lt\n    /* \"#utility.yul\":7766:7945   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":7839:7848   */\n  dup5\n    /* \"#utility.yul\":7834:7837   */\n  dup10\n    /* \"#utility.yul\":7830:7849   */\n  add\n    /* \"#utility.yul\":7824:7850   */\n  mload\n    /* \"#utility.yul\":7882:7930   */\n  tag_157\n    /* \"#utility.yul\":7924:7928   */\n  0x1f\n    /* \"#utility.yul\":7916:7922   */\n  dup10\n    /* \"#utility.yul\":7912:7929   */\n  and\n    /* \"#utility.yul\":7901:7910   */\n  dup3\n    /* \"#utility.yul\":7882:7930   */\n  tag_55\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":7874:7880   */\n  dup4\n    /* \"#utility.yul\":7867:7931   */\n  sstore\n    /* \"#utility.yul\":7789:7945   */\n  pop\n    /* \"#utility.yul\":7766:7945   */\ntag_156:\n    /* \"#utility.yul\":7991:7992   */\n  0x01\n    /* \"#utility.yul\":7987:7988   */\n  0x02\n    /* \"#utility.yul\":7979:7985   */\n  dup9\n    /* \"#utility.yul\":7975:7989   */\n  mul\n    /* \"#utility.yul\":7971:7993   */\n  add\n    /* \"#utility.yul\":7965:7969   */\n  dup9\n    /* \"#utility.yul\":7958:7994   */\n  sstore\n    /* \"#utility.yul\":7393:8004   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7356:8243   */\ntag_148:\n  pop\n    /* \"#utility.yul\":6946:8249   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6854:8249   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8255:8373   */\ntag_57:\n    /* \"#utility.yul\":8342:8366   */\n  tag_159\n    /* \"#utility.yul\":8360:8365   */\n  dup2\n    /* \"#utility.yul\":8342:8366   */\n  tag_24\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":8337:8340   */\n  dup3\n    /* \"#utility.yul\":8330:8367   */\n  mstore\n    /* \"#utility.yul\":8255:8373   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8379:8601   */\ntag_14:\n    /* \"#utility.yul\":8472:8476   */\n  0x00\n    /* \"#utility.yul\":8510:8512   */\n  0x20\n    /* \"#utility.yul\":8499:8508   */\n  dup3\n    /* \"#utility.yul\":8495:8513   */\n  add\n    /* \"#utility.yul\":8487:8513   */\n  swap1\n  pop\n    /* \"#utility.yul\":8523:8594   */\n  tag_161\n    /* \"#utility.yul\":8591:8592   */\n  0x00\n    /* \"#utility.yul\":8580:8589   */\n  dup4\n    /* \"#utility.yul\":8576:8593   */\n  add\n    /* \"#utility.yul\":8567:8573   */\n  dup5\n    /* \"#utility.yul\":8523:8594   */\n  tag_57\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":8379:8601   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"MyCallOption.sol\":383:1964  contract MyCallOption is ERC20, Ownable{... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MyCallOption.sol\":383:1964  contract MyCallOption is ERC20, Ownable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xec46c4ef\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf8b75fb5\n      eq\n      tag_20\n      jumpi\n      jump(tag_1)\n    tag_22:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x83b6fa98\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa035b1fe\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_21:\n      dup1\n      0x313ce567\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x384b2367\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3e413bee\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6bdebcc9\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_23:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      revert(0x00, 0x00)\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      revert(0x00, 0x00)\n    tag_29:\n      pop\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      revert(0x00, 0x00)\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      revert(0x00, 0x00)\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      revert(0x00, 0x00)\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MyCallOption.sol\":892:1043  function issueOption() onlyOwner public payable {... */\n    tag_7:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"MyCallOption.sol\":466:484  IERC20 public usdc */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      revert(0x00, 0x00)\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MyCallOption.sol\":1712:1955  function destory() public onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      revert(0x00, 0x00)\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      revert(0x00, 0x00)\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      revert(0x00, 0x00)\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      stop\n        /* \"MyCallOption.sol\":1051:1479  function settleOption(uint256 _amount) public {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      revert(0x00, 0x00)\n    tag_71:\n      pop\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      revert(0x00, 0x00)\n    tag_76:\n      pop\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      revert(0x00, 0x00)\n    tag_81:\n      pop\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MyCallOption.sol\":491:511  uint128 public price */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      revert(0x00, 0x00)\n    tag_85:\n      pop\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      revert(0x00, 0x00)\n    tag_90:\n      pop\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      revert(0x00, 0x00)\n    tag_95:\n      pop\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MyCallOption.sol\":518:544  uint96 public exerciseTime */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      revert(0x00, 0x00)\n    tag_101:\n      pop\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      revert(0x00, 0x00)\n    tag_106:\n      pop\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      stop\n        /* \"MyCallOption.sol\":551:577  uint32 public durationTime */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      revert(0x00, 0x00)\n    tag_110:\n      pop\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_118\n      swap1\n      tag_117\n      jump\t// in\n    tag_118:\n      dup1\n      iszero\n      tag_119\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_120\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_119)\n    tag_120:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_121:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_121\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"MyCallOption.sol\":892:1043  function issueOption() onlyOwner public payable {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_136:\n        /* \"MyCallOption.sol\":971:972  0 */\n      0x00\n        /* \"MyCallOption.sol\":959:968  msg.value */\n      callvalue\n        /* \"MyCallOption.sol\":959:972  msg.value > 0 */\n      gt\n        /* \"MyCallOption.sol\":951:996  require(msg.value > 0, \"eth value cant be 0\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"MyCallOption.sol\":1007:1035  _mint(msg.sender, msg.value) */\n      tag_142\n        /* \"MyCallOption.sol\":1013:1023  msg.sender */\n      caller\n        /* \"MyCallOption.sol\":1025:1034  msg.value */\n      callvalue\n        /* \"MyCallOption.sol\":1007:1012  _mint */\n      tag_143\n        /* \"MyCallOption.sol\":1007:1035  _mint(msg.sender, msg.value) */\n      jump\t// in\n    tag_142:\n        /* \"MyCallOption.sol\":892:1043  function issueOption() onlyOwner public payable {... */\n      jump\t// out\n        /* \"MyCallOption.sol\":466:484  IERC20 public usdc */\n    tag_56:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"MyCallOption.sol\":1712:1955  function destory() public onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_145:\n        /* \"MyCallOption.sol\":1801:1813  durationTime */\n      0x07\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"MyCallOption.sol\":1786:1813  exerciseTime + durationTime */\n      0xffffffff\n      and\n        /* \"MyCallOption.sol\":1786:1798  exerciseTime */\n      0x07\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"MyCallOption.sol\":1786:1813  exerciseTime + durationTime */\n      tag_147\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"MyCallOption.sol\":1767:1813  block.timestamp >= exerciseTime + durationTime */\n      0xffffffffffffffffffffffff\n      and\n        /* \"MyCallOption.sol\":1767:1782  block.timestamp */\n      timestamp\n        /* \"MyCallOption.sol\":1767:1813  block.timestamp >= exerciseTime + durationTime */\n      lt\n      iszero\n        /* \"MyCallOption.sol\":1759:1832  require(block.timestamp >= exerciseTime + durationTime, \"not expire yet\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"MyCallOption.sol\":1843:1903  usdc.safeTransfer(msg.sender, usdc.balanceOf(address(this))) */\n      tag_152\n        /* \"MyCallOption.sol\":1861:1871  msg.sender */\n      caller\n        /* \"MyCallOption.sol\":1873:1877  usdc */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MyCallOption.sol\":1873:1887  usdc.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"MyCallOption.sol\":1896:1900  this */\n      address\n        /* \"MyCallOption.sol\":1873:1902  usdc.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_153:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"MyCallOption.sol\":1843:1847  usdc */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MyCallOption.sol\":1843:1860  usdc.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_158\n      swap1\n        /* \"MyCallOption.sol\":1843:1903  usdc.safeTransfer(msg.sender, usdc.balanceOf(address(this))) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_152:\n        /* \"MyCallOption.sol\":1935:1945  msg.sender */\n      caller\n        /* \"MyCallOption.sol\":1914:1947  selfdestruct(payable(msg.sender)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"MyCallOption.sol\":1051:1479  function settleOption(uint256 _amount) public {... */\n    tag_75:\n        /* \"MyCallOption.sol\":1135:1147  exerciseTime */\n      0x07\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"MyCallOption.sol\":1116:1147  block.timestamp >= exerciseTime */\n      0xffffffffffffffffffffffff\n      and\n        /* \"MyCallOption.sol\":1116:1131  block.timestamp */\n      timestamp\n        /* \"MyCallOption.sol\":1116:1147  block.timestamp >= exerciseTime */\n      lt\n      iszero\n        /* \"MyCallOption.sol\":1116:1196  block.timestamp >= exerciseTime && block.timestamp < exerciseTime + durationTime */\n      dup1\n      iszero\n      tag_166\n      jumpi\n      pop\n        /* \"MyCallOption.sol\":1184:1196  durationTime */\n      0x07\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"MyCallOption.sol\":1169:1196  exerciseTime + durationTime */\n      0xffffffff\n      and\n        /* \"MyCallOption.sol\":1169:1181  exerciseTime */\n      0x07\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"MyCallOption.sol\":1169:1196  exerciseTime + durationTime */\n      tag_167\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_167:\n        /* \"MyCallOption.sol\":1151:1196  block.timestamp < exerciseTime + durationTime */\n      0xffffffffffffffffffffffff\n      and\n        /* \"MyCallOption.sol\":1151:1166  block.timestamp */\n      timestamp\n        /* \"MyCallOption.sol\":1151:1196  block.timestamp < exerciseTime + durationTime */\n      lt\n        /* \"MyCallOption.sol\":1116:1196  block.timestamp >= exerciseTime && block.timestamp < exerciseTime + durationTime */\n    tag_166:\n        /* \"MyCallOption.sol\":1108:1225  require(block.timestamp >= exerciseTime && block.timestamp < exerciseTime + durationTime, \"not in settle time range\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"MyCallOption.sol\":1269:1276  _amount */\n      dup1\n        /* \"MyCallOption.sol\":1244:1265  balanceOf(msg.sender) */\n      tag_171\n        /* \"MyCallOption.sol\":1254:1264  msg.sender */\n      caller\n        /* \"MyCallOption.sol\":1244:1253  balanceOf */\n      tag_66\n        /* \"MyCallOption.sol\":1244:1265  balanceOf(msg.sender) */\n      jump\t// in\n    tag_171:\n        /* \"MyCallOption.sol\":1244:1276  balanceOf(msg.sender) >= _amount */\n      lt\n      iszero\n        /* \"MyCallOption.sol\":1236:1302  require(balanceOf(msg.sender) >= _amount, \"amount must > balance\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"MyCallOption.sol\":1313:1339  _burn(msg.sender, _amount) */\n      tag_175\n        /* \"MyCallOption.sol\":1319:1329  msg.sender */\n      caller\n        /* \"MyCallOption.sol\":1331:1338  _amount */\n      dup3\n        /* \"MyCallOption.sol\":1313:1318  _burn */\n      tag_176\n        /* \"MyCallOption.sol\":1313:1339  _burn(msg.sender, _amount) */\n      jump\t// in\n    tag_175:\n        /* \"MyCallOption.sol\":1350:1415  usdc.safeTransferFrom(msg.sender, address(this), _amount * price) */\n      tag_177\n        /* \"MyCallOption.sol\":1372:1382  msg.sender */\n      caller\n        /* \"MyCallOption.sol\":1392:1396  this */\n      address\n        /* \"MyCallOption.sol\":1409:1414  price */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"MyCallOption.sol\":1399:1414  _amount * price */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"MyCallOption.sol\":1399:1406  _amount */\n      dup5\n        /* \"MyCallOption.sol\":1399:1414  _amount * price */\n      tag_178\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"MyCallOption.sol\":1350:1354  usdc */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MyCallOption.sol\":1350:1371  usdc.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_180\n      swap1\n        /* \"MyCallOption.sol\":1350:1415  usdc.safeTransferFrom(msg.sender, address(this), _amount * price) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_177:\n        /* \"MyCallOption.sol\":1426:1471  safeTransferETH(address(msg.sender), _amount) */\n      tag_181\n        /* \"MyCallOption.sol\":1450:1460  msg.sender */\n      caller\n        /* \"MyCallOption.sol\":1463:1470  _amount */\n      dup3\n        /* \"MyCallOption.sol\":1426:1441  safeTransferETH */\n      tag_182\n        /* \"MyCallOption.sol\":1426:1471  safeTransferETH(address(msg.sender), _amount) */\n      jump\t// in\n    tag_181:\n        /* \"MyCallOption.sol\":1051:1479  function settleOption(uint256 _amount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_185\n      swap1\n      tag_117\n      jump\t// in\n    tag_185:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_186\n      swap1\n      tag_117\n      jump\t// in\n    tag_186:\n      dup1\n      iszero\n      tag_187\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_188\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_187)\n    tag_188:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_189:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_189\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_187:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"MyCallOption.sol\":491:511  uint128 public price */\n    tag_87:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MyCallOption.sol\":518:544  uint96 public exerciseTime */\n    tag_103:\n      0x07\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"MyCallOption.sol\":551:577  uint32 public durationTime */\n    tag_112:\n      0x07\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_220\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_222\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_230\n      swap3\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_235\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_240\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MyCallOption.sol\":1487:1704  function safeTransferETH(address to, uint256 value) internal {... */\n    tag_182:\n        /* \"MyCallOption.sol\":1560:1572  bool success */\n      0x00\n        /* \"MyCallOption.sol\":1578:1580  to */\n      dup3\n        /* \"MyCallOption.sol\":1578:1585  to.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MyCallOption.sol\":1593:1598  value */\n      dup3\n        /* \"MyCallOption.sol\":1610:1611  0 */\n      0x00\n        /* \"MyCallOption.sol\":1600:1612  new bytes(0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_243\n      jumpi\n      tag_244\n      tag_245\n      jump\t// in\n    tag_244:\n    tag_243:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_246\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_246:\n      pop\n        /* \"MyCallOption.sol\":1578:1613  to.call{value: value}(new bytes(0)) */\n      mload(0x40)\n      tag_247\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_251\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_250)\n    tag_251:\n      0x60\n      swap2\n      pop\n    tag_250:\n      pop\n        /* \"MyCallOption.sol\":1559:1613  (bool success, ) = to.call{value: value}(new bytes(0)) */\n      pop\n      swap1\n      pop\n        /* \"MyCallOption.sol\":1632:1639  success */\n      dup1\n        /* \"MyCallOption.sol\":1624:1696  require(success, 'TransferHelper::safeTransferETH: ETH transfer failed') */\n      tag_252\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_252:\n        /* \"MyCallOption.sol\":1548:1704  {... */\n      pop\n        /* \"MyCallOption.sol\":1487:1704  function safeTransferETH(address to, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_261\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_264\n      swap2\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_266)\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_270)\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_271\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_274\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_275\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_276\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_281\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_282\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_286\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_286:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_289\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_288)\n    tag_289:\n      0x60\n      swap2\n      pop\n    tag_288:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_290\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_291\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_291:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_294\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_295\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_296)\n    tag_293:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_297\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_297:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_292)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_292:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:106   */\n    tag_303:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_304:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_305:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_306:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_307:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_359\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_303\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":711:782   */\n      tag_360\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_304\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_361\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_305\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":881:910   */\n      tag_362\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_306\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_28:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_364\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_307\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_309:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_311:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_312:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_370\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_311\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_313:\n        /* \"#utility.yul\":1876:1900   */\n      tag_372\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_312\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_373\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_373:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_314:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_375\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_313\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_315:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_316:\n        /* \"#utility.yul\":2232:2256   */\n      tag_378\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_315\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_379\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_379:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_317:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_381\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_316\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_32:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_384\n      tag_309\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":2525:2644   */\n    tag_383:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_385\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_314\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_386\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_317\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_318:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_319:\n        /* \"#utility.yul\":3089:3110   */\n      tag_389\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_318\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_35:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_391\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_319\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_320:\n        /* \"#utility.yul\":3426:3450   */\n      tag_393\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_315\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_40:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_395\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_320\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_44:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_398\n      tag_309\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":3801:3920   */\n    tag_397:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_399\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_314\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_400\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_314\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_401\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_317\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_321:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_322:\n        /* \"#utility.yul\":4491:4513   */\n      tag_404\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_321\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_51:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_406\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_322\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:4806   */\n    tag_323:\n        /* \"#utility.yul\":4774:4777   */\n      0x00\n        /* \"#utility.yul\":4795:4800   */\n      dup2\n        /* \"#utility.yul\":4788:4800   */\n      swap1\n      pop\n        /* \"#utility.yul\":4746:4806   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4812:4954   */\n    tag_324:\n        /* \"#utility.yul\":4862:4871   */\n      0x00\n        /* \"#utility.yul\":4895:4948   */\n      tag_409\n        /* \"#utility.yul\":4913:4947   */\n      tag_410\n        /* \"#utility.yul\":4922:4946   */\n      tag_411\n        /* \"#utility.yul\":4940:4945   */\n      dup5\n        /* \"#utility.yul\":4922:4946   */\n      tag_311\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":4913:4947   */\n      tag_323\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":4895:4948   */\n      tag_311\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":4882:4948   */\n      swap1\n      pop\n        /* \"#utility.yul\":4812:4954   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4960:5086   */\n    tag_325:\n        /* \"#utility.yul\":5010:5019   */\n      0x00\n        /* \"#utility.yul\":5043:5080   */\n      tag_413\n        /* \"#utility.yul\":5074:5079   */\n      dup3\n        /* \"#utility.yul\":5043:5080   */\n      tag_324\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":5030:5080   */\n      swap1\n      pop\n        /* \"#utility.yul\":4960:5086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5092:5232   */\n    tag_326:\n        /* \"#utility.yul\":5156:5165   */\n      0x00\n        /* \"#utility.yul\":5189:5226   */\n      tag_415\n        /* \"#utility.yul\":5220:5225   */\n      dup3\n        /* \"#utility.yul\":5189:5226   */\n      tag_325\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":5176:5226   */\n      swap1\n      pop\n        /* \"#utility.yul\":5092:5232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5238:5397   */\n    tag_327:\n        /* \"#utility.yul\":5339:5390   */\n      tag_417\n        /* \"#utility.yul\":5384:5389   */\n      dup2\n        /* \"#utility.yul\":5339:5390   */\n      tag_326\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":5334:5337   */\n      dup3\n        /* \"#utility.yul\":5327:5391   */\n      mstore\n        /* \"#utility.yul\":5238:5397   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5403:5653   */\n    tag_58:\n        /* \"#utility.yul\":5510:5514   */\n      0x00\n        /* \"#utility.yul\":5548:5550   */\n      0x20\n        /* \"#utility.yul\":5537:5546   */\n      dup3\n        /* \"#utility.yul\":5533:5551   */\n      add\n        /* \"#utility.yul\":5525:5551   */\n      swap1\n      pop\n        /* \"#utility.yul\":5561:5646   */\n      tag_419\n        /* \"#utility.yul\":5643:5644   */\n      0x00\n        /* \"#utility.yul\":5632:5641   */\n      dup4\n        /* \"#utility.yul\":5628:5645   */\n      add\n        /* \"#utility.yul\":5619:5625   */\n      dup5\n        /* \"#utility.yul\":5561:5646   */\n      tag_327\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":5403:5653   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5659:5988   */\n    tag_65:\n        /* \"#utility.yul\":5718:5724   */\n      0x00\n        /* \"#utility.yul\":5767:5769   */\n      0x20\n        /* \"#utility.yul\":5755:5764   */\n      dup3\n        /* \"#utility.yul\":5746:5753   */\n      dup5\n        /* \"#utility.yul\":5742:5765   */\n      sub\n        /* \"#utility.yul\":5738:5770   */\n      slt\n        /* \"#utility.yul\":5735:5854   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":5773:5852   */\n      tag_422\n      tag_309\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":5735:5854   */\n    tag_421:\n        /* \"#utility.yul\":5893:5894   */\n      0x00\n        /* \"#utility.yul\":5918:5971   */\n      tag_423\n        /* \"#utility.yul\":5963:5970   */\n      dup5\n        /* \"#utility.yul\":5954:5960   */\n      dup3\n        /* \"#utility.yul\":5943:5952   */\n      dup6\n        /* \"#utility.yul\":5939:5961   */\n      add\n        /* \"#utility.yul\":5918:5971   */\n      tag_314\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":5908:5971   */\n      swap2\n      pop\n        /* \"#utility.yul\":5864:5981   */\n      pop\n        /* \"#utility.yul\":5659:5988   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5994:6323   */\n    tag_74:\n        /* \"#utility.yul\":6053:6059   */\n      0x00\n        /* \"#utility.yul\":6102:6104   */\n      0x20\n        /* \"#utility.yul\":6090:6099   */\n      dup3\n        /* \"#utility.yul\":6081:6088   */\n      dup5\n        /* \"#utility.yul\":6077:6100   */\n      sub\n        /* \"#utility.yul\":6073:6105   */\n      slt\n        /* \"#utility.yul\":6070:6189   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":6108:6187   */\n      tag_426\n      tag_309\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":6070:6189   */\n    tag_425:\n        /* \"#utility.yul\":6228:6229   */\n      0x00\n        /* \"#utility.yul\":6253:6306   */\n      tag_427\n        /* \"#utility.yul\":6298:6305   */\n      dup5\n        /* \"#utility.yul\":6289:6295   */\n      dup3\n        /* \"#utility.yul\":6278:6287   */\n      dup6\n        /* \"#utility.yul\":6274:6296   */\n      add\n        /* \"#utility.yul\":6253:6306   */\n      tag_317\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":6243:6306   */\n      swap2\n      pop\n        /* \"#utility.yul\":6199:6316   */\n      pop\n        /* \"#utility.yul\":5994:6323   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6329:6447   */\n    tag_328:\n        /* \"#utility.yul\":6416:6440   */\n      tag_429\n        /* \"#utility.yul\":6434:6439   */\n      dup2\n        /* \"#utility.yul\":6416:6440   */\n      tag_312\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":6411:6414   */\n      dup3\n        /* \"#utility.yul\":6404:6441   */\n      mstore\n        /* \"#utility.yul\":6329:6447   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6453:6675   */\n    tag_80:\n        /* \"#utility.yul\":6546:6550   */\n      0x00\n        /* \"#utility.yul\":6584:6586   */\n      0x20\n        /* \"#utility.yul\":6573:6582   */\n      dup3\n        /* \"#utility.yul\":6569:6587   */\n      add\n        /* \"#utility.yul\":6561:6587   */\n      swap1\n      pop\n        /* \"#utility.yul\":6597:6668   */\n      tag_431\n        /* \"#utility.yul\":6665:6666   */\n      0x00\n        /* \"#utility.yul\":6654:6663   */\n      dup4\n        /* \"#utility.yul\":6650:6667   */\n      add\n        /* \"#utility.yul\":6641:6647   */\n      dup5\n        /* \"#utility.yul\":6597:6668   */\n      tag_328\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":6453:6675   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6681:6799   */\n    tag_329:\n        /* \"#utility.yul\":6718:6725   */\n      0x00\n        /* \"#utility.yul\":6758:6792   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6751:6756   */\n      dup3\n        /* \"#utility.yul\":6747:6793   */\n      and\n        /* \"#utility.yul\":6736:6793   */\n      swap1\n      pop\n        /* \"#utility.yul\":6681:6799   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6805:6923   */\n    tag_330:\n        /* \"#utility.yul\":6892:6916   */\n      tag_434\n        /* \"#utility.yul\":6910:6915   */\n      dup2\n        /* \"#utility.yul\":6892:6916   */\n      tag_329\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":6887:6890   */\n      dup3\n        /* \"#utility.yul\":6880:6917   */\n      mstore\n        /* \"#utility.yul\":6805:6923   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6929:7151   */\n    tag_89:\n        /* \"#utility.yul\":7022:7026   */\n      0x00\n        /* \"#utility.yul\":7060:7062   */\n      0x20\n        /* \"#utility.yul\":7049:7058   */\n      dup3\n        /* \"#utility.yul\":7045:7063   */\n      add\n        /* \"#utility.yul\":7037:7063   */\n      swap1\n      pop\n        /* \"#utility.yul\":7073:7144   */\n      tag_436\n        /* \"#utility.yul\":7141:7142   */\n      0x00\n        /* \"#utility.yul\":7130:7139   */\n      dup4\n        /* \"#utility.yul\":7126:7143   */\n      add\n        /* \"#utility.yul\":7117:7123   */\n      dup5\n        /* \"#utility.yul\":7073:7144   */\n      tag_330\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":6929:7151   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7157:7631   */\n    tag_98:\n        /* \"#utility.yul\":7225:7231   */\n      0x00\n        /* \"#utility.yul\":7233:7239   */\n      0x00\n        /* \"#utility.yul\":7282:7284   */\n      0x40\n        /* \"#utility.yul\":7270:7279   */\n      dup4\n        /* \"#utility.yul\":7261:7268   */\n      dup6\n        /* \"#utility.yul\":7257:7280   */\n      sub\n        /* \"#utility.yul\":7253:7285   */\n      slt\n        /* \"#utility.yul\":7250:7369   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":7288:7367   */\n      tag_439\n      tag_309\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":7250:7369   */\n    tag_438:\n        /* \"#utility.yul\":7408:7409   */\n      0x00\n        /* \"#utility.yul\":7433:7486   */\n      tag_440\n        /* \"#utility.yul\":7478:7485   */\n      dup6\n        /* \"#utility.yul\":7469:7475   */\n      dup3\n        /* \"#utility.yul\":7458:7467   */\n      dup7\n        /* \"#utility.yul\":7454:7476   */\n      add\n        /* \"#utility.yul\":7433:7486   */\n      tag_314\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":7423:7486   */\n      swap3\n      pop\n        /* \"#utility.yul\":7379:7496   */\n      pop\n        /* \"#utility.yul\":7535:7537   */\n      0x20\n        /* \"#utility.yul\":7561:7614   */\n      tag_441\n        /* \"#utility.yul\":7606:7613   */\n      dup6\n        /* \"#utility.yul\":7597:7603   */\n      dup3\n        /* \"#utility.yul\":7586:7595   */\n      dup7\n        /* \"#utility.yul\":7582:7604   */\n      add\n        /* \"#utility.yul\":7561:7614   */\n      tag_314\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":7551:7614   */\n      swap2\n      pop\n        /* \"#utility.yul\":7506:7624   */\n      pop\n        /* \"#utility.yul\":7157:7631   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7637:7746   */\n    tag_331:\n        /* \"#utility.yul\":7673:7680   */\n      0x00\n        /* \"#utility.yul\":7713:7739   */\n      0xffffffffffffffffffffffff\n        /* \"#utility.yul\":7706:7711   */\n      dup3\n        /* \"#utility.yul\":7702:7740   */\n      and\n        /* \"#utility.yul\":7691:7740   */\n      swap1\n      pop\n        /* \"#utility.yul\":7637:7746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7752:7867   */\n    tag_332:\n        /* \"#utility.yul\":7837:7860   */\n      tag_444\n        /* \"#utility.yul\":7854:7859   */\n      dup2\n        /* \"#utility.yul\":7837:7860   */\n      tag_331\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":7832:7835   */\n      dup3\n        /* \"#utility.yul\":7825:7861   */\n      mstore\n        /* \"#utility.yul\":7752:7867   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7873:8091   */\n    tag_105:\n        /* \"#utility.yul\":7964:7968   */\n      0x00\n        /* \"#utility.yul\":8002:8004   */\n      0x20\n        /* \"#utility.yul\":7991:8000   */\n      dup3\n        /* \"#utility.yul\":7987:8005   */\n      add\n        /* \"#utility.yul\":7979:8005   */\n      swap1\n      pop\n        /* \"#utility.yul\":8015:8084   */\n      tag_446\n        /* \"#utility.yul\":8081:8082   */\n      0x00\n        /* \"#utility.yul\":8070:8079   */\n      dup4\n        /* \"#utility.yul\":8066:8083   */\n      add\n        /* \"#utility.yul\":8057:8063   */\n      dup5\n        /* \"#utility.yul\":8015:8084   */\n      tag_332\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":7873:8091   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8097:8190   */\n    tag_333:\n        /* \"#utility.yul\":8133:8140   */\n      0x00\n        /* \"#utility.yul\":8173:8183   */\n      0xffffffff\n        /* \"#utility.yul\":8166:8171   */\n      dup3\n        /* \"#utility.yul\":8162:8184   */\n      and\n        /* \"#utility.yul\":8151:8184   */\n      swap1\n      pop\n        /* \"#utility.yul\":8097:8190   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8196:8311   */\n    tag_334:\n        /* \"#utility.yul\":8281:8304   */\n      tag_449\n        /* \"#utility.yul\":8298:8303   */\n      dup2\n        /* \"#utility.yul\":8281:8304   */\n      tag_333\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":8276:8279   */\n      dup3\n        /* \"#utility.yul\":8269:8305   */\n      mstore\n        /* \"#utility.yul\":8196:8311   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8317:8535   */\n    tag_114:\n        /* \"#utility.yul\":8408:8412   */\n      0x00\n        /* \"#utility.yul\":8446:8448   */\n      0x20\n        /* \"#utility.yul\":8435:8444   */\n      dup3\n        /* \"#utility.yul\":8431:8449   */\n      add\n        /* \"#utility.yul\":8423:8449   */\n      swap1\n      pop\n        /* \"#utility.yul\":8459:8528   */\n      tag_451\n        /* \"#utility.yul\":8525:8526   */\n      0x00\n        /* \"#utility.yul\":8514:8523   */\n      dup4\n        /* \"#utility.yul\":8510:8527   */\n      add\n        /* \"#utility.yul\":8501:8507   */\n      dup5\n        /* \"#utility.yul\":8459:8528   */\n      tag_334\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":8317:8535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8541:8721   */\n    tag_335:\n        /* \"#utility.yul\":8589:8666   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8586:8587   */\n      0x00\n        /* \"#utility.yul\":8579:8667   */\n      mstore\n        /* \"#utility.yul\":8686:8690   */\n      0x22\n        /* \"#utility.yul\":8683:8684   */\n      0x04\n        /* \"#utility.yul\":8676:8691   */\n      mstore\n        /* \"#utility.yul\":8710:8714   */\n      0x24\n        /* \"#utility.yul\":8707:8708   */\n      0x00\n        /* \"#utility.yul\":8700:8715   */\n      revert\n        /* \"#utility.yul\":8727:9047   */\n    tag_117:\n        /* \"#utility.yul\":8771:8777   */\n      0x00\n        /* \"#utility.yul\":8808:8809   */\n      0x02\n        /* \"#utility.yul\":8802:8806   */\n      dup3\n        /* \"#utility.yul\":8798:8810   */\n      div\n        /* \"#utility.yul\":8788:8810   */\n      swap1\n      pop\n        /* \"#utility.yul\":8855:8856   */\n      0x01\n        /* \"#utility.yul\":8849:8853   */\n      dup3\n        /* \"#utility.yul\":8845:8857   */\n      and\n        /* \"#utility.yul\":8876:8894   */\n      dup1\n        /* \"#utility.yul\":8866:8947   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":8932:8936   */\n      0x7f\n        /* \"#utility.yul\":8924:8930   */\n      dup3\n        /* \"#utility.yul\":8920:8937   */\n      and\n        /* \"#utility.yul\":8910:8937   */\n      swap2\n      pop\n        /* \"#utility.yul\":8866:8947   */\n    tag_454:\n        /* \"#utility.yul\":8994:8996   */\n      0x20\n        /* \"#utility.yul\":8986:8992   */\n      dup3\n        /* \"#utility.yul\":8983:8997   */\n      lt\n        /* \"#utility.yul\":8963:8981   */\n      dup2\n        /* \"#utility.yul\":8960:8998   */\n      sub\n        /* \"#utility.yul\":8957:9041   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":9013:9031   */\n      tag_456\n      tag_335\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":8957:9041   */\n    tag_455:\n        /* \"#utility.yul\":8778:9047   */\n      pop\n        /* \"#utility.yul\":8727:9047   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9053:9222   */\n    tag_336:\n        /* \"#utility.yul\":9193:9214   */\n      0x6574682076616c75652063616e74206265203000000000000000000000000000\n        /* \"#utility.yul\":9189:9190   */\n      0x00\n        /* \"#utility.yul\":9181:9187   */\n      dup3\n        /* \"#utility.yul\":9177:9191   */\n      add\n        /* \"#utility.yul\":9170:9215   */\n      mstore\n        /* \"#utility.yul\":9053:9222   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9228:9594   */\n    tag_337:\n        /* \"#utility.yul\":9370:9373   */\n      0x00\n        /* \"#utility.yul\":9391:9458   */\n      tag_459\n        /* \"#utility.yul\":9455:9457   */\n      0x13\n        /* \"#utility.yul\":9450:9453   */\n      dup4\n        /* \"#utility.yul\":9391:9458   */\n      tag_304\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":9384:9458   */\n      swap2\n      pop\n        /* \"#utility.yul\":9467:9560   */\n      tag_460\n        /* \"#utility.yul\":9556:9559   */\n      dup3\n        /* \"#utility.yul\":9467:9560   */\n      tag_336\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":9585:9587   */\n      0x20\n        /* \"#utility.yul\":9580:9583   */\n      dup3\n        /* \"#utility.yul\":9576:9588   */\n      add\n        /* \"#utility.yul\":9569:9588   */\n      swap1\n      pop\n        /* \"#utility.yul\":9228:9594   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9600:10019   */\n    tag_141:\n        /* \"#utility.yul\":9766:9770   */\n      0x00\n        /* \"#utility.yul\":9804:9806   */\n      0x20\n        /* \"#utility.yul\":9793:9802   */\n      dup3\n        /* \"#utility.yul\":9789:9807   */\n      add\n        /* \"#utility.yul\":9781:9807   */\n      swap1\n      pop\n        /* \"#utility.yul\":9853:9862   */\n      dup2\n        /* \"#utility.yul\":9847:9851   */\n      dup2\n        /* \"#utility.yul\":9843:9863   */\n      sub\n        /* \"#utility.yul\":9839:9840   */\n      0x00\n        /* \"#utility.yul\":9828:9837   */\n      dup4\n        /* \"#utility.yul\":9824:9841   */\n      add\n        /* \"#utility.yul\":9817:9864   */\n      mstore\n        /* \"#utility.yul\":9881:10012   */\n      tag_462\n        /* \"#utility.yul\":10007:10011   */\n      dup2\n        /* \"#utility.yul\":9881:10012   */\n      tag_337\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":9873:10012   */\n      swap1\n      pop\n        /* \"#utility.yul\":9600:10019   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10025:10205   */\n    tag_338:\n        /* \"#utility.yul\":10073:10150   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10070:10071   */\n      0x00\n        /* \"#utility.yul\":10063:10151   */\n      mstore\n        /* \"#utility.yul\":10170:10174   */\n      0x11\n        /* \"#utility.yul\":10167:10168   */\n      0x04\n        /* \"#utility.yul\":10160:10175   */\n      mstore\n        /* \"#utility.yul\":10194:10198   */\n      0x24\n        /* \"#utility.yul\":10191:10192   */\n      0x00\n        /* \"#utility.yul\":10184:10199   */\n      revert\n        /* \"#utility.yul\":10211:10424   */\n    tag_148:\n        /* \"#utility.yul\":10250:10253   */\n      0x00\n        /* \"#utility.yul\":10269:10288   */\n      tag_465\n        /* \"#utility.yul\":10286:10287   */\n      dup3\n        /* \"#utility.yul\":10269:10288   */\n      tag_331\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":10264:10288   */\n      swap2\n      pop\n        /* \"#utility.yul\":10302:10321   */\n      tag_466\n        /* \"#utility.yul\":10319:10320   */\n      dup4\n        /* \"#utility.yul\":10302:10321   */\n      tag_331\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":10297:10321   */\n      swap3\n      pop\n        /* \"#utility.yul\":10344:10345   */\n      dup3\n        /* \"#utility.yul\":10341:10342   */\n      dup3\n        /* \"#utility.yul\":10337:10346   */\n      add\n        /* \"#utility.yul\":10330:10346   */\n      swap1\n      pop\n        /* \"#utility.yul\":10367:10393   */\n      0xffffffffffffffffffffffff\n        /* \"#utility.yul\":10362:10365   */\n      dup2\n        /* \"#utility.yul\":10359:10394   */\n      gt\n        /* \"#utility.yul\":10356:10417   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":10397:10415   */\n      tag_468\n      tag_338\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":10356:10417   */\n    tag_467:\n        /* \"#utility.yul\":10211:10424   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10430:10594   */\n    tag_339:\n        /* \"#utility.yul\":10570:10586   */\n      0x6e6f742065787069726520796574000000000000000000000000000000000000\n        /* \"#utility.yul\":10566:10567   */\n      0x00\n        /* \"#utility.yul\":10558:10564   */\n      dup3\n        /* \"#utility.yul\":10554:10568   */\n      add\n        /* \"#utility.yul\":10547:10587   */\n      mstore\n        /* \"#utility.yul\":10430:10594   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10600:10966   */\n    tag_340:\n        /* \"#utility.yul\":10742:10745   */\n      0x00\n        /* \"#utility.yul\":10763:10830   */\n      tag_471\n        /* \"#utility.yul\":10827:10829   */\n      0x0e\n        /* \"#utility.yul\":10822:10825   */\n      dup4\n        /* \"#utility.yul\":10763:10830   */\n      tag_304\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":10756:10830   */\n      swap2\n      pop\n        /* \"#utility.yul\":10839:10932   */\n      tag_472\n        /* \"#utility.yul\":10928:10931   */\n      dup3\n        /* \"#utility.yul\":10839:10932   */\n      tag_339\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":10957:10959   */\n      0x20\n        /* \"#utility.yul\":10952:10955   */\n      dup3\n        /* \"#utility.yul\":10948:10960   */\n      add\n        /* \"#utility.yul\":10941:10960   */\n      swap1\n      pop\n        /* \"#utility.yul\":10600:10966   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10972:11391   */\n    tag_151:\n        /* \"#utility.yul\":11138:11142   */\n      0x00\n        /* \"#utility.yul\":11176:11178   */\n      0x20\n        /* \"#utility.yul\":11165:11174   */\n      dup3\n        /* \"#utility.yul\":11161:11179   */\n      add\n        /* \"#utility.yul\":11153:11179   */\n      swap1\n      pop\n        /* \"#utility.yul\":11225:11234   */\n      dup2\n        /* \"#utility.yul\":11219:11223   */\n      dup2\n        /* \"#utility.yul\":11215:11235   */\n      sub\n        /* \"#utility.yul\":11211:11212   */\n      0x00\n        /* \"#utility.yul\":11200:11209   */\n      dup4\n        /* \"#utility.yul\":11196:11213   */\n      add\n        /* \"#utility.yul\":11189:11236   */\n      mstore\n        /* \"#utility.yul\":11253:11384   */\n      tag_474\n        /* \"#utility.yul\":11379:11383   */\n      dup2\n        /* \"#utility.yul\":11253:11384   */\n      tag_340\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":11245:11384   */\n      swap1\n      pop\n        /* \"#utility.yul\":10972:11391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11397:11540   */\n    tag_341:\n        /* \"#utility.yul\":11454:11459   */\n      0x00\n        /* \"#utility.yul\":11485:11491   */\n      dup2\n        /* \"#utility.yul\":11479:11492   */\n      mload\n        /* \"#utility.yul\":11470:11492   */\n      swap1\n      pop\n        /* \"#utility.yul\":11501:11534   */\n      tag_476\n        /* \"#utility.yul\":11528:11533   */\n      dup2\n        /* \"#utility.yul\":11501:11534   */\n      tag_316\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":11397:11540   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11546:11897   */\n    tag_157:\n        /* \"#utility.yul\":11616:11622   */\n      0x00\n        /* \"#utility.yul\":11665:11667   */\n      0x20\n        /* \"#utility.yul\":11653:11662   */\n      dup3\n        /* \"#utility.yul\":11644:11651   */\n      dup5\n        /* \"#utility.yul\":11640:11663   */\n      sub\n        /* \"#utility.yul\":11636:11668   */\n      slt\n        /* \"#utility.yul\":11633:11752   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":11671:11750   */\n      tag_479\n      tag_309\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":11633:11752   */\n    tag_478:\n        /* \"#utility.yul\":11791:11792   */\n      0x00\n        /* \"#utility.yul\":11816:11880   */\n      tag_480\n        /* \"#utility.yul\":11872:11879   */\n      dup5\n        /* \"#utility.yul\":11863:11869   */\n      dup3\n        /* \"#utility.yul\":11852:11861   */\n      dup6\n        /* \"#utility.yul\":11848:11870   */\n      add\n        /* \"#utility.yul\":11816:11880   */\n      tag_341\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":11806:11880   */\n      swap2\n      pop\n        /* \"#utility.yul\":11762:11890   */\n      pop\n        /* \"#utility.yul\":11546:11897   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11903:12077   */\n    tag_342:\n        /* \"#utility.yul\":12043:12069   */\n      0x6e6f7420696e20736574746c652074696d652072616e67650000000000000000\n        /* \"#utility.yul\":12039:12040   */\n      0x00\n        /* \"#utility.yul\":12031:12037   */\n      dup3\n        /* \"#utility.yul\":12027:12041   */\n      add\n        /* \"#utility.yul\":12020:12070   */\n      mstore\n        /* \"#utility.yul\":11903:12077   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12083:12449   */\n    tag_343:\n        /* \"#utility.yul\":12225:12228   */\n      0x00\n        /* \"#utility.yul\":12246:12313   */\n      tag_483\n        /* \"#utility.yul\":12310:12312   */\n      0x18\n        /* \"#utility.yul\":12305:12308   */\n      dup4\n        /* \"#utility.yul\":12246:12313   */\n      tag_304\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":12239:12313   */\n      swap2\n      pop\n        /* \"#utility.yul\":12322:12415   */\n      tag_484\n        /* \"#utility.yul\":12411:12414   */\n      dup3\n        /* \"#utility.yul\":12322:12415   */\n      tag_342\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":12440:12442   */\n      0x20\n        /* \"#utility.yul\":12435:12438   */\n      dup3\n        /* \"#utility.yul\":12431:12443   */\n      add\n        /* \"#utility.yul\":12424:12443   */\n      swap1\n      pop\n        /* \"#utility.yul\":12083:12449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12455:12874   */\n    tag_170:\n        /* \"#utility.yul\":12621:12625   */\n      0x00\n        /* \"#utility.yul\":12659:12661   */\n      0x20\n        /* \"#utility.yul\":12648:12657   */\n      dup3\n        /* \"#utility.yul\":12644:12662   */\n      add\n        /* \"#utility.yul\":12636:12662   */\n      swap1\n      pop\n        /* \"#utility.yul\":12708:12717   */\n      dup2\n        /* \"#utility.yul\":12702:12706   */\n      dup2\n        /* \"#utility.yul\":12698:12718   */\n      sub\n        /* \"#utility.yul\":12694:12695   */\n      0x00\n        /* \"#utility.yul\":12683:12692   */\n      dup4\n        /* \"#utility.yul\":12679:12696   */\n      add\n        /* \"#utility.yul\":12672:12719   */\n      mstore\n        /* \"#utility.yul\":12736:12867   */\n      tag_486\n        /* \"#utility.yul\":12862:12866   */\n      dup2\n        /* \"#utility.yul\":12736:12867   */\n      tag_343\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":12728:12867   */\n      swap1\n      pop\n        /* \"#utility.yul\":12455:12874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12880:13051   */\n    tag_344:\n        /* \"#utility.yul\":13020:13043   */\n      0x616d6f756e74206d757374203e2062616c616e63650000000000000000000000\n        /* \"#utility.yul\":13016:13017   */\n      0x00\n        /* \"#utility.yul\":13008:13014   */\n      dup3\n        /* \"#utility.yul\":13004:13018   */\n      add\n        /* \"#utility.yul\":12997:13044   */\n      mstore\n        /* \"#utility.yul\":12880:13051   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13057:13423   */\n    tag_345:\n        /* \"#utility.yul\":13199:13202   */\n      0x00\n        /* \"#utility.yul\":13220:13287   */\n      tag_489\n        /* \"#utility.yul\":13284:13286   */\n      0x15\n        /* \"#utility.yul\":13279:13282   */\n      dup4\n        /* \"#utility.yul\":13220:13287   */\n      tag_304\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":13213:13287   */\n      swap2\n      pop\n        /* \"#utility.yul\":13296:13389   */\n      tag_490\n        /* \"#utility.yul\":13385:13388   */\n      dup3\n        /* \"#utility.yul\":13296:13389   */\n      tag_344\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":13414:13416   */\n      0x20\n        /* \"#utility.yul\":13409:13412   */\n      dup3\n        /* \"#utility.yul\":13405:13417   */\n      add\n        /* \"#utility.yul\":13398:13417   */\n      swap1\n      pop\n        /* \"#utility.yul\":13057:13423   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13429:13848   */\n    tag_174:\n        /* \"#utility.yul\":13595:13599   */\n      0x00\n        /* \"#utility.yul\":13633:13635   */\n      0x20\n        /* \"#utility.yul\":13622:13631   */\n      dup3\n        /* \"#utility.yul\":13618:13636   */\n      add\n        /* \"#utility.yul\":13610:13636   */\n      swap1\n      pop\n        /* \"#utility.yul\":13682:13691   */\n      dup2\n        /* \"#utility.yul\":13676:13680   */\n      dup2\n        /* \"#utility.yul\":13672:13692   */\n      sub\n        /* \"#utility.yul\":13668:13669   */\n      0x00\n        /* \"#utility.yul\":13657:13666   */\n      dup4\n        /* \"#utility.yul\":13653:13670   */\n      add\n        /* \"#utility.yul\":13646:13693   */\n      mstore\n        /* \"#utility.yul\":13710:13841   */\n      tag_492\n        /* \"#utility.yul\":13836:13840   */\n      dup2\n        /* \"#utility.yul\":13710:13841   */\n      tag_345\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":13702:13841   */\n      swap1\n      pop\n        /* \"#utility.yul\":13429:13848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13854:14264   */\n    tag_179:\n        /* \"#utility.yul\":13894:13901   */\n      0x00\n        /* \"#utility.yul\":13917:13937   */\n      tag_494\n        /* \"#utility.yul\":13935:13936   */\n      dup3\n        /* \"#utility.yul\":13917:13937   */\n      tag_315\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":13912:13937   */\n      swap2\n      pop\n        /* \"#utility.yul\":13951:13971   */\n      tag_495\n        /* \"#utility.yul\":13969:13970   */\n      dup4\n        /* \"#utility.yul\":13951:13971   */\n      tag_315\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":13946:13971   */\n      swap3\n      pop\n        /* \"#utility.yul\":14006:14007   */\n      dup3\n        /* \"#utility.yul\":14003:14004   */\n      dup3\n        /* \"#utility.yul\":13999:14008   */\n      mul\n        /* \"#utility.yul\":14028:14058   */\n      tag_496\n        /* \"#utility.yul\":14046:14057   */\n      dup2\n        /* \"#utility.yul\":14028:14058   */\n      tag_315\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":14017:14058   */\n      swap2\n      pop\n        /* \"#utility.yul\":14207:14208   */\n      dup3\n        /* \"#utility.yul\":14198:14205   */\n      dup3\n        /* \"#utility.yul\":14194:14209   */\n      div\n        /* \"#utility.yul\":14191:14192   */\n      dup5\n        /* \"#utility.yul\":14188:14210   */\n      eq\n        /* \"#utility.yul\":14168:14169   */\n      dup4\n        /* \"#utility.yul\":14161:14170   */\n      iszero\n        /* \"#utility.yul\":14141:14224   */\n      or\n        /* \"#utility.yul\":14118:14257   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":14237:14255   */\n      tag_498\n      tag_338\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":14118:14257   */\n    tag_497:\n        /* \"#utility.yul\":13902:14264   */\n      pop\n        /* \"#utility.yul\":13854:14264   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14270:14712   */\n    tag_209:\n        /* \"#utility.yul\":14419:14423   */\n      0x00\n        /* \"#utility.yul\":14457:14459   */\n      0x60\n        /* \"#utility.yul\":14446:14455   */\n      dup3\n        /* \"#utility.yul\":14442:14460   */\n      add\n        /* \"#utility.yul\":14434:14460   */\n      swap1\n      pop\n        /* \"#utility.yul\":14470:14541   */\n      tag_500\n        /* \"#utility.yul\":14538:14539   */\n      0x00\n        /* \"#utility.yul\":14527:14536   */\n      dup4\n        /* \"#utility.yul\":14523:14540   */\n      add\n        /* \"#utility.yul\":14514:14520   */\n      dup7\n        /* \"#utility.yul\":14470:14541   */\n      tag_328\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":14551:14623   */\n      tag_501\n        /* \"#utility.yul\":14619:14621   */\n      0x20\n        /* \"#utility.yul\":14608:14617   */\n      dup4\n        /* \"#utility.yul\":14604:14622   */\n      add\n        /* \"#utility.yul\":14595:14601   */\n      dup6\n        /* \"#utility.yul\":14551:14623   */\n      tag_320\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":14633:14705   */\n      tag_502\n        /* \"#utility.yul\":14701:14703   */\n      0x40\n        /* \"#utility.yul\":14690:14699   */\n      dup4\n        /* \"#utility.yul\":14686:14704   */\n      add\n        /* \"#utility.yul\":14677:14683   */\n      dup5\n        /* \"#utility.yul\":14633:14705   */\n      tag_320\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":14270:14712   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14718:15050   */\n    tag_231:\n        /* \"#utility.yul\":14839:14843   */\n      0x00\n        /* \"#utility.yul\":14877:14879   */\n      0x40\n        /* \"#utility.yul\":14866:14875   */\n      dup3\n        /* \"#utility.yul\":14862:14880   */\n      add\n        /* \"#utility.yul\":14854:14880   */\n      swap1\n      pop\n        /* \"#utility.yul\":14890:14961   */\n      tag_504\n        /* \"#utility.yul\":14958:14959   */\n      0x00\n        /* \"#utility.yul\":14947:14956   */\n      dup4\n        /* \"#utility.yul\":14943:14960   */\n      add\n        /* \"#utility.yul\":14934:14940   */\n      dup6\n        /* \"#utility.yul\":14890:14961   */\n      tag_328\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":14971:15043   */\n      tag_505\n        /* \"#utility.yul\":15039:15041   */\n      0x20\n        /* \"#utility.yul\":15028:15037   */\n      dup4\n        /* \"#utility.yul\":15024:15042   */\n      add\n        /* \"#utility.yul\":15015:15021   */\n      dup5\n        /* \"#utility.yul\":14971:15043   */\n      tag_320\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":14718:15050   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15056:15498   */\n    tag_241:\n        /* \"#utility.yul\":15205:15209   */\n      0x00\n        /* \"#utility.yul\":15243:15245   */\n      0x60\n        /* \"#utility.yul\":15232:15241   */\n      dup3\n        /* \"#utility.yul\":15228:15246   */\n      add\n        /* \"#utility.yul\":15220:15246   */\n      swap1\n      pop\n        /* \"#utility.yul\":15256:15327   */\n      tag_507\n        /* \"#utility.yul\":15324:15325   */\n      0x00\n        /* \"#utility.yul\":15313:15322   */\n      dup4\n        /* \"#utility.yul\":15309:15326   */\n      add\n        /* \"#utility.yul\":15300:15306   */\n      dup7\n        /* \"#utility.yul\":15256:15327   */\n      tag_328\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":15337:15409   */\n      tag_508\n        /* \"#utility.yul\":15405:15407   */\n      0x20\n        /* \"#utility.yul\":15394:15403   */\n      dup4\n        /* \"#utility.yul\":15390:15408   */\n      add\n        /* \"#utility.yul\":15381:15387   */\n      dup6\n        /* \"#utility.yul\":15337:15409   */\n      tag_328\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":15419:15491   */\n      tag_509\n        /* \"#utility.yul\":15487:15489   */\n      0x40\n        /* \"#utility.yul\":15476:15485   */\n      dup4\n        /* \"#utility.yul\":15472:15490   */\n      add\n        /* \"#utility.yul\":15463:15469   */\n      dup5\n        /* \"#utility.yul\":15419:15491   */\n      tag_320\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":15056:15498   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15504:15684   */\n    tag_245:\n        /* \"#utility.yul\":15552:15629   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15549:15550   */\n      0x00\n        /* \"#utility.yul\":15542:15630   */\n      mstore\n        /* \"#utility.yul\":15649:15653   */\n      0x41\n        /* \"#utility.yul\":15646:15647   */\n      0x04\n        /* \"#utility.yul\":15639:15654   */\n      mstore\n        /* \"#utility.yul\":15673:15677   */\n      0x24\n        /* \"#utility.yul\":15670:15671   */\n      0x00\n        /* \"#utility.yul\":15663:15678   */\n      revert\n        /* \"#utility.yul\":15690:15788   */\n    tag_346:\n        /* \"#utility.yul\":15741:15747   */\n      0x00\n        /* \"#utility.yul\":15775:15780   */\n      dup2\n        /* \"#utility.yul\":15769:15781   */\n      mload\n        /* \"#utility.yul\":15759:15781   */\n      swap1\n      pop\n        /* \"#utility.yul\":15690:15788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15794:15941   */\n    tag_347:\n        /* \"#utility.yul\":15895:15906   */\n      0x00\n        /* \"#utility.yul\":15932:15935   */\n      dup2\n        /* \"#utility.yul\":15917:15935   */\n      swap1\n      pop\n        /* \"#utility.yul\":15794:15941   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15947:16333   */\n    tag_348:\n        /* \"#utility.yul\":16051:16054   */\n      0x00\n        /* \"#utility.yul\":16079:16117   */\n      tag_514\n        /* \"#utility.yul\":16111:16116   */\n      dup3\n        /* \"#utility.yul\":16079:16117   */\n      tag_346\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":16133:16221   */\n      tag_515\n        /* \"#utility.yul\":16214:16220   */\n      dup2\n        /* \"#utility.yul\":16209:16212   */\n      dup6\n        /* \"#utility.yul\":16133:16221   */\n      tag_347\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":16126:16221   */\n      swap4\n      pop\n        /* \"#utility.yul\":16230:16295   */\n      tag_516\n        /* \"#utility.yul\":16288:16294   */\n      dup2\n        /* \"#utility.yul\":16283:16286   */\n      dup6\n        /* \"#utility.yul\":16276:16280   */\n      0x20\n        /* \"#utility.yul\":16269:16274   */\n      dup7\n        /* \"#utility.yul\":16265:16281   */\n      add\n        /* \"#utility.yul\":16230:16295   */\n      tag_305\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":16320:16326   */\n      dup1\n        /* \"#utility.yul\":16315:16318   */\n      dup5\n        /* \"#utility.yul\":16311:16327   */\n      add\n        /* \"#utility.yul\":16304:16327   */\n      swap2\n      pop\n        /* \"#utility.yul\":16055:16333   */\n      pop\n        /* \"#utility.yul\":15947:16333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16339:16610   */\n    tag_248:\n        /* \"#utility.yul\":16469:16472   */\n      0x00\n        /* \"#utility.yul\":16491:16584   */\n      tag_518\n        /* \"#utility.yul\":16580:16583   */\n      dup3\n        /* \"#utility.yul\":16571:16577   */\n      dup5\n        /* \"#utility.yul\":16491:16584   */\n      tag_348\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":16484:16584   */\n      swap2\n      pop\n        /* \"#utility.yul\":16601:16604   */\n      dup2\n        /* \"#utility.yul\":16594:16604   */\n      swap1\n      pop\n        /* \"#utility.yul\":16339:16610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16616:16855   */\n    tag_349:\n        /* \"#utility.yul\":16756:16790   */\n      0x5472616e7366657248656c7065723a3a736166655472616e736665724554483a\n        /* \"#utility.yul\":16752:16753   */\n      0x00\n        /* \"#utility.yul\":16744:16750   */\n      dup3\n        /* \"#utility.yul\":16740:16754   */\n      add\n        /* \"#utility.yul\":16733:16791   */\n      mstore\n        /* \"#utility.yul\":16825:16847   */\n      0x20455448207472616e73666572206661696c6564000000000000000000000000\n        /* \"#utility.yul\":16820:16822   */\n      0x20\n        /* \"#utility.yul\":16812:16818   */\n      dup3\n        /* \"#utility.yul\":16808:16823   */\n      add\n        /* \"#utility.yul\":16801:16848   */\n      mstore\n        /* \"#utility.yul\":16616:16855   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16861:17227   */\n    tag_350:\n        /* \"#utility.yul\":17003:17006   */\n      0x00\n        /* \"#utility.yul\":17024:17091   */\n      tag_521\n        /* \"#utility.yul\":17088:17090   */\n      0x34\n        /* \"#utility.yul\":17083:17086   */\n      dup4\n        /* \"#utility.yul\":17024:17091   */\n      tag_304\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":17017:17091   */\n      swap2\n      pop\n        /* \"#utility.yul\":17100:17193   */\n      tag_522\n        /* \"#utility.yul\":17189:17192   */\n      dup3\n        /* \"#utility.yul\":17100:17193   */\n      tag_349\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":17218:17220   */\n      0x40\n        /* \"#utility.yul\":17213:17216   */\n      dup3\n        /* \"#utility.yul\":17209:17221   */\n      add\n        /* \"#utility.yul\":17202:17221   */\n      swap1\n      pop\n        /* \"#utility.yul\":16861:17227   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17233:17652   */\n    tag_254:\n        /* \"#utility.yul\":17399:17403   */\n      0x00\n        /* \"#utility.yul\":17437:17439   */\n      0x20\n        /* \"#utility.yul\":17426:17435   */\n      dup3\n        /* \"#utility.yul\":17422:17440   */\n      add\n        /* \"#utility.yul\":17414:17440   */\n      swap1\n      pop\n        /* \"#utility.yul\":17486:17495   */\n      dup2\n        /* \"#utility.yul\":17480:17484   */\n      dup2\n        /* \"#utility.yul\":17476:17496   */\n      sub\n        /* \"#utility.yul\":17472:17473   */\n      0x00\n        /* \"#utility.yul\":17461:17470   */\n      dup4\n        /* \"#utility.yul\":17457:17474   */\n      add\n        /* \"#utility.yul\":17450:17497   */\n      mstore\n        /* \"#utility.yul\":17514:17645   */\n      tag_524\n        /* \"#utility.yul\":17640:17644   */\n      dup2\n        /* \"#utility.yul\":17514:17645   */\n      tag_350\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":17506:17645   */\n      swap1\n      pop\n        /* \"#utility.yul\":17233:17652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17658:17849   */\n    tag_265:\n        /* \"#utility.yul\":17698:17701   */\n      0x00\n        /* \"#utility.yul\":17717:17737   */\n      tag_526\n        /* \"#utility.yul\":17735:17736   */\n      dup3\n        /* \"#utility.yul\":17717:17737   */\n      tag_315\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":17712:17737   */\n      swap2\n      pop\n        /* \"#utility.yul\":17751:17771   */\n      tag_527\n        /* \"#utility.yul\":17769:17770   */\n      dup4\n        /* \"#utility.yul\":17751:17771   */\n      tag_315\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":17746:17771   */\n      swap3\n      pop\n        /* \"#utility.yul\":17794:17795   */\n      dup3\n        /* \"#utility.yul\":17791:17792   */\n      dup3\n        /* \"#utility.yul\":17787:17796   */\n      add\n        /* \"#utility.yul\":17780:17796   */\n      swap1\n      pop\n        /* \"#utility.yul\":17815:17818   */\n      dup1\n        /* \"#utility.yul\":17812:17813   */\n      dup3\n        /* \"#utility.yul\":17809:17819   */\n      gt\n        /* \"#utility.yul\":17806:17842   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":17822:17840   */\n      tag_529\n      tag_338\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":17806:17842   */\n    tag_528:\n        /* \"#utility.yul\":17658:17849   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17855:17971   */\n    tag_351:\n        /* \"#utility.yul\":17925:17946   */\n      tag_531\n        /* \"#utility.yul\":17940:17945   */\n      dup2\n        /* \"#utility.yul\":17925:17946   */\n      tag_318\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":17918:17923   */\n      dup2\n        /* \"#utility.yul\":17915:17947   */\n      eq\n        /* \"#utility.yul\":17905:17965   */\n      tag_532\n      jumpi\n        /* \"#utility.yul\":17961:17962   */\n      0x00\n        /* \"#utility.yul\":17958:17959   */\n      0x00\n        /* \"#utility.yul\":17951:17963   */\n      revert\n        /* \"#utility.yul\":17905:17965   */\n    tag_532:\n        /* \"#utility.yul\":17855:17971   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17977:18114   */\n    tag_352:\n        /* \"#utility.yul\":18031:18036   */\n      0x00\n        /* \"#utility.yul\":18062:18068   */\n      dup2\n        /* \"#utility.yul\":18056:18069   */\n      mload\n        /* \"#utility.yul\":18047:18069   */\n      swap1\n      pop\n        /* \"#utility.yul\":18078:18108   */\n      tag_534\n        /* \"#utility.yul\":18102:18107   */\n      dup2\n        /* \"#utility.yul\":18078:18108   */\n      tag_351\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":17977:18114   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18120:18465   */\n    tag_277:\n        /* \"#utility.yul\":18187:18193   */\n      0x00\n        /* \"#utility.yul\":18236:18238   */\n      0x20\n        /* \"#utility.yul\":18224:18233   */\n      dup3\n        /* \"#utility.yul\":18215:18222   */\n      dup5\n        /* \"#utility.yul\":18211:18234   */\n      sub\n        /* \"#utility.yul\":18207:18239   */\n      slt\n        /* \"#utility.yul\":18204:18323   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":18242:18321   */\n      tag_537\n      tag_309\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":18204:18323   */\n    tag_536:\n        /* \"#utility.yul\":18362:18363   */\n      0x00\n        /* \"#utility.yul\":18387:18448   */\n      tag_538\n        /* \"#utility.yul\":18440:18447   */\n      dup5\n        /* \"#utility.yul\":18431:18437   */\n      dup3\n        /* \"#utility.yul\":18420:18429   */\n      dup6\n        /* \"#utility.yul\":18416:18438   */\n      add\n        /* \"#utility.yul\":18387:18448   */\n      tag_352\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":18377:18448   */\n      swap2\n      pop\n        /* \"#utility.yul\":18333:18458   */\n      pop\n        /* \"#utility.yul\":18120:18465   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209a4f95c4b892dfe0197508d4f4588e3bab2911227899c52fe1881ceff65f3af264736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1572": {
									"entryPoint": null,
									"id": 1572,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 531,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$877_fromMemory": {
									"entryPoint": 817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint128_fromMemory": {
									"entryPoint": 886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32_fromMemory": {
									"entryPoint": 1008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint96_fromMemory": {
									"entryPoint": 951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$877t_uint128t_uint96t_uint32_fromMemory": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1564,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$877": {
									"entryPoint": 778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint128": {
									"entryPoint": 837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint96": {
									"entryPoint": 906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1183,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1138,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1321,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1462,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$877": {
									"entryPoint": 795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint128": {
									"entryPoint": 864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint96": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1499,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8604:10",
										"nodeType": "YulBlock",
										"src": "0:8604:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "627:51:10",
													"nodeType": "YulBlock",
													"src": "627:51:10",
													"statements": [
														{
															"nativeSrc": "637:35:10",
															"nodeType": "YulAssignment",
															"src": "637:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:10"
																},
																"nativeSrc": "648:24:10",
																"nodeType": "YulFunctionCall",
																"src": "648:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$877",
												"nativeSrc": "568:110:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:10",
														"nodeType": "YulTypedName",
														"src": "609:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:10",
														"nodeType": "YulTypedName",
														"src": "619:7:10",
														"type": ""
													}
												],
												"src": "568:110:10"
											},
											{
												"body": {
													"nativeSrc": "741:93:10",
													"nodeType": "YulBlock",
													"src": "741:93:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:10",
																"nodeType": "YulBlock",
																"src": "812:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:10",
																					"nodeType": "YulLiteral",
																					"src": "821:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:10",
																					"nodeType": "YulLiteral",
																					"src": "824:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:10"
																			},
																			"nativeSrc": "814:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:10"
																		},
																		"nativeSrc": "814:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$877",
																					"nativeSrc": "771:31:10",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:10"
																				},
																				"nativeSrc": "771:38:10",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:10"
																		},
																		"nativeSrc": "761:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:10"
																},
																"nativeSrc": "754:57:10",
																"nodeType": "YulFunctionCall",
																"src": "754:57:10"
															},
															"nativeSrc": "751:77:10",
															"nodeType": "YulIf",
															"src": "751:77:10"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$877",
												"nativeSrc": "684:150:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:10",
														"nodeType": "YulTypedName",
														"src": "734:5:10",
														"type": ""
													}
												],
												"src": "684:150:10"
											},
											{
												"body": {
													"nativeSrc": "917:94:10",
													"nodeType": "YulBlock",
													"src": "917:94:10",
													"statements": [
														{
															"nativeSrc": "927:22:10",
															"nodeType": "YulAssignment",
															"src": "927:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:10"
																},
																"nativeSrc": "936:13:10",
																"nodeType": "YulFunctionCall",
																"src": "936:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$877",
																	"nativeSrc": "958:40:10",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:10"
																},
																"nativeSrc": "958:47:10",
																"nodeType": "YulFunctionCall",
																"src": "958:47:10"
															},
															"nativeSrc": "958:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:10"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$877_fromMemory",
												"nativeSrc": "840:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:10",
														"nodeType": "YulTypedName",
														"src": "895:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:10",
														"nodeType": "YulTypedName",
														"src": "903:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:10",
														"nodeType": "YulTypedName",
														"src": "911:5:10",
														"type": ""
													}
												],
												"src": "840:171:10"
											},
											{
												"body": {
													"nativeSrc": "1062:73:10",
													"nodeType": "YulBlock",
													"src": "1062:73:10",
													"statements": [
														{
															"nativeSrc": "1072:57:10",
															"nodeType": "YulAssignment",
															"src": "1072:57:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1087:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1087:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1094:34:10",
																		"nodeType": "YulLiteral",
																		"src": "1094:34:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1083:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1083:3:10"
																},
																"nativeSrc": "1083:46:10",
																"nodeType": "YulFunctionCall",
																"src": "1083:46:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1072:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1072:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint128",
												"nativeSrc": "1017:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1044:5:10",
														"nodeType": "YulTypedName",
														"src": "1044:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1054:7:10",
														"nodeType": "YulTypedName",
														"src": "1054:7:10",
														"type": ""
													}
												],
												"src": "1017:118:10"
											},
											{
												"body": {
													"nativeSrc": "1184:79:10",
													"nodeType": "YulBlock",
													"src": "1184:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1241:16:10",
																"nodeType": "YulBlock",
																"src": "1241:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1250:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1250:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1253:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1253:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1243:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1243:6:10"
																			},
																			"nativeSrc": "1243:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1243:12:10"
																		},
																		"nativeSrc": "1243:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1243:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1207:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1207:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1232:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1232:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint128",
																					"nativeSrc": "1214:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1214:17:10"
																				},
																				"nativeSrc": "1214:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1214:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1204:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1204:2:10"
																		},
																		"nativeSrc": "1204:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1204:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1197:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1197:6:10"
																},
																"nativeSrc": "1197:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1197:43:10"
															},
															"nativeSrc": "1194:63:10",
															"nodeType": "YulIf",
															"src": "1194:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint128",
												"nativeSrc": "1141:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1177:5:10",
														"nodeType": "YulTypedName",
														"src": "1177:5:10",
														"type": ""
													}
												],
												"src": "1141:122:10"
											},
											{
												"body": {
													"nativeSrc": "1332:80:10",
													"nodeType": "YulBlock",
													"src": "1332:80:10",
													"statements": [
														{
															"nativeSrc": "1342:22:10",
															"nodeType": "YulAssignment",
															"src": "1342:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1357:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1357:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1351:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1351:5:10"
																},
																"nativeSrc": "1351:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1351:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1342:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1342:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1400:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1400:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint128",
																	"nativeSrc": "1373:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1373:26:10"
																},
																"nativeSrc": "1373:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1373:33:10"
															},
															"nativeSrc": "1373:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1373:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint128_fromMemory",
												"nativeSrc": "1269:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1310:6:10",
														"nodeType": "YulTypedName",
														"src": "1310:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1318:3:10",
														"nodeType": "YulTypedName",
														"src": "1318:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1326:5:10",
														"nodeType": "YulTypedName",
														"src": "1326:5:10",
														"type": ""
													}
												],
												"src": "1269:143:10"
											},
											{
												"body": {
													"nativeSrc": "1462:65:10",
													"nodeType": "YulBlock",
													"src": "1462:65:10",
													"statements": [
														{
															"nativeSrc": "1472:49:10",
															"nodeType": "YulAssignment",
															"src": "1472:49:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1487:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1487:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1494:26:10",
																		"nodeType": "YulLiteral",
																		"src": "1494:26:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1483:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1483:3:10"
																},
																"nativeSrc": "1483:38:10",
																"nodeType": "YulFunctionCall",
																"src": "1483:38:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1472:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1472:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint96",
												"nativeSrc": "1418:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1444:5:10",
														"nodeType": "YulTypedName",
														"src": "1444:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1454:7:10",
														"nodeType": "YulTypedName",
														"src": "1454:7:10",
														"type": ""
													}
												],
												"src": "1418:109:10"
											},
											{
												"body": {
													"nativeSrc": "1575:78:10",
													"nodeType": "YulBlock",
													"src": "1575:78:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1631:16:10",
																"nodeType": "YulBlock",
																"src": "1631:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1640:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1640:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1643:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1643:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1633:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1633:6:10"
																			},
																			"nativeSrc": "1633:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1633:12:10"
																		},
																		"nativeSrc": "1633:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1633:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1598:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1598:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1622:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1622:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint96",
																					"nativeSrc": "1605:16:10",
																					"nodeType": "YulIdentifier",
																					"src": "1605:16:10"
																				},
																				"nativeSrc": "1605:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1605:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1595:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1595:2:10"
																		},
																		"nativeSrc": "1595:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1595:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1588:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:10"
																},
																"nativeSrc": "1588:42:10",
																"nodeType": "YulFunctionCall",
																"src": "1588:42:10"
															},
															"nativeSrc": "1585:62:10",
															"nodeType": "YulIf",
															"src": "1585:62:10"
														}
													]
												},
												"name": "validator_revert_t_uint96",
												"nativeSrc": "1533:120:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1568:5:10",
														"nodeType": "YulTypedName",
														"src": "1568:5:10",
														"type": ""
													}
												],
												"src": "1533:120:10"
											},
											{
												"body": {
													"nativeSrc": "1721:79:10",
													"nodeType": "YulBlock",
													"src": "1721:79:10",
													"statements": [
														{
															"nativeSrc": "1731:22:10",
															"nodeType": "YulAssignment",
															"src": "1731:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1746:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1746:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1740:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1740:5:10"
																},
																"nativeSrc": "1740:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1740:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1731:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1731:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1788:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1788:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint96",
																	"nativeSrc": "1762:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "1762:25:10"
																},
																"nativeSrc": "1762:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1762:32:10"
															},
															"nativeSrc": "1762:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "1762:32:10"
														}
													]
												},
												"name": "abi_decode_t_uint96_fromMemory",
												"nativeSrc": "1659:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1699:6:10",
														"nodeType": "YulTypedName",
														"src": "1699:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1707:3:10",
														"nodeType": "YulTypedName",
														"src": "1707:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1715:5:10",
														"nodeType": "YulTypedName",
														"src": "1715:5:10",
														"type": ""
													}
												],
												"src": "1659:141:10"
											},
											{
												"body": {
													"nativeSrc": "1850:49:10",
													"nodeType": "YulBlock",
													"src": "1850:49:10",
													"statements": [
														{
															"nativeSrc": "1860:33:10",
															"nodeType": "YulAssignment",
															"src": "1860:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1875:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1875:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1882:10:10",
																		"nodeType": "YulLiteral",
																		"src": "1882:10:10",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1871:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1871:3:10"
																},
																"nativeSrc": "1871:22:10",
																"nodeType": "YulFunctionCall",
																"src": "1871:22:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1860:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1860:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nativeSrc": "1806:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1832:5:10",
														"nodeType": "YulTypedName",
														"src": "1832:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1842:7:10",
														"nodeType": "YulTypedName",
														"src": "1842:7:10",
														"type": ""
													}
												],
												"src": "1806:93:10"
											},
											{
												"body": {
													"nativeSrc": "1947:78:10",
													"nodeType": "YulBlock",
													"src": "1947:78:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2003:16:10",
																"nodeType": "YulBlock",
																"src": "2003:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2012:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2012:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2015:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2015:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2005:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2005:6:10"
																			},
																			"nativeSrc": "2005:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2005:12:10"
																		},
																		"nativeSrc": "2005:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2005:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1970:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1970:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1994:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1994:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nativeSrc": "1977:16:10",
																					"nodeType": "YulIdentifier",
																					"src": "1977:16:10"
																				},
																				"nativeSrc": "1977:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1977:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1967:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1967:2:10"
																		},
																		"nativeSrc": "1967:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1960:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1960:6:10"
																},
																"nativeSrc": "1960:42:10",
																"nodeType": "YulFunctionCall",
																"src": "1960:42:10"
															},
															"nativeSrc": "1957:62:10",
															"nodeType": "YulIf",
															"src": "1957:62:10"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nativeSrc": "1905:120:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1940:5:10",
														"nodeType": "YulTypedName",
														"src": "1940:5:10",
														"type": ""
													}
												],
												"src": "1905:120:10"
											},
											{
												"body": {
													"nativeSrc": "2093:79:10",
													"nodeType": "YulBlock",
													"src": "2093:79:10",
													"statements": [
														{
															"nativeSrc": "2103:22:10",
															"nodeType": "YulAssignment",
															"src": "2103:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2118:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2118:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2112:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2112:5:10"
																},
																"nativeSrc": "2112:13:10",
																"nodeType": "YulFunctionCall",
																"src": "2112:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2103:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2103:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2160:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2160:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nativeSrc": "2134:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "2134:25:10"
																},
																"nativeSrc": "2134:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2134:32:10"
															},
															"nativeSrc": "2134:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "2134:32:10"
														}
													]
												},
												"name": "abi_decode_t_uint32_fromMemory",
												"nativeSrc": "2031:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2071:6:10",
														"nodeType": "YulTypedName",
														"src": "2071:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2079:3:10",
														"nodeType": "YulTypedName",
														"src": "2079:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2087:5:10",
														"nodeType": "YulTypedName",
														"src": "2087:5:10",
														"type": ""
													}
												],
												"src": "2031:141:10"
											},
											{
												"body": {
													"nativeSrc": "2318:704:10",
													"nodeType": "YulBlock",
													"src": "2318:704:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2365:83:10",
																"nodeType": "YulBlock",
																"src": "2365:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2367:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2367:77:10"
																			},
																			"nativeSrc": "2367:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2367:79:10"
																		},
																		"nativeSrc": "2367:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2367:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2339:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2339:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2348:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2348:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2335:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2335:3:10"
																		},
																		"nativeSrc": "2335:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2335:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2360:3:10",
																		"nodeType": "YulLiteral",
																		"src": "2360:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2331:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2331:3:10"
																},
																"nativeSrc": "2331:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2331:33:10"
															},
															"nativeSrc": "2328:120:10",
															"nodeType": "YulIf",
															"src": "2328:120:10"
														},
														{
															"nativeSrc": "2458:142:10",
															"nodeType": "YulBlock",
															"src": "2458:142:10",
															"statements": [
																{
																	"nativeSrc": "2473:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2473:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2487:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2487:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2477:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2477:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2502:88:10",
																	"nodeType": "YulAssignment",
																	"src": "2502:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2562:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2562:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2573:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2573:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2558:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2558:3:10"
																				},
																				"nativeSrc": "2558:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2558:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2582:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2582:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$877_fromMemory",
																			"nativeSrc": "2512:45:10",
																			"nodeType": "YulIdentifier",
																			"src": "2512:45:10"
																		},
																		"nativeSrc": "2512:78:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2512:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2502:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2502:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2610:129:10",
															"nodeType": "YulBlock",
															"src": "2610:129:10",
															"statements": [
																{
																	"nativeSrc": "2625:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2625:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2639:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2639:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2629:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2629:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2655:74:10",
																	"nodeType": "YulAssignment",
																	"src": "2655:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2701:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2701:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2712:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2712:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2697:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2697:3:10"
																				},
																				"nativeSrc": "2697:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2697:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2721:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2721:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint128_fromMemory",
																			"nativeSrc": "2665:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "2665:31:10"
																		},
																		"nativeSrc": "2665:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2665:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2655:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2655:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2749:128:10",
															"nodeType": "YulBlock",
															"src": "2749:128:10",
															"statements": [
																{
																	"nativeSrc": "2764:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2764:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2778:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2778:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2768:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2768:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2794:73:10",
																	"nodeType": "YulAssignment",
																	"src": "2794:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2839:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2839:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2850:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2850:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2835:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2835:3:10"
																				},
																				"nativeSrc": "2835:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2835:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2859:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2859:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint96_fromMemory",
																			"nativeSrc": "2804:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "2804:30:10"
																		},
																		"nativeSrc": "2804:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2804:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2794:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2794:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2887:128:10",
															"nodeType": "YulBlock",
															"src": "2887:128:10",
															"statements": [
																{
																	"nativeSrc": "2902:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2902:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2916:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2916:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2906:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2906:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2932:73:10",
																	"nodeType": "YulAssignment",
																	"src": "2932:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2977:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2977:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2988:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2988:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2973:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2973:3:10"
																				},
																				"nativeSrc": "2973:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2973:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2997:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2997:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32_fromMemory",
																			"nativeSrc": "2942:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "2942:30:10"
																		},
																		"nativeSrc": "2942:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2942:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2932:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2932:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$877t_uint128t_uint96t_uint32_fromMemory",
												"nativeSrc": "2178:844:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2264:9:10",
														"nodeType": "YulTypedName",
														"src": "2264:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2275:7:10",
														"nodeType": "YulTypedName",
														"src": "2275:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2287:6:10",
														"nodeType": "YulTypedName",
														"src": "2287:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2295:6:10",
														"nodeType": "YulTypedName",
														"src": "2295:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2303:6:10",
														"nodeType": "YulTypedName",
														"src": "2303:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2311:6:10",
														"nodeType": "YulTypedName",
														"src": "2311:6:10",
														"type": ""
													}
												],
												"src": "2178:844:10"
											},
											{
												"body": {
													"nativeSrc": "3087:40:10",
													"nodeType": "YulBlock",
													"src": "3087:40:10",
													"statements": [
														{
															"nativeSrc": "3098:22:10",
															"nodeType": "YulAssignment",
															"src": "3098:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3114:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3114:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3108:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3108:5:10"
																},
																"nativeSrc": "3108:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3108:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3098:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3098:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3028:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3070:5:10",
														"nodeType": "YulTypedName",
														"src": "3070:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3080:6:10",
														"nodeType": "YulTypedName",
														"src": "3080:6:10",
														"type": ""
													}
												],
												"src": "3028:99:10"
											},
											{
												"body": {
													"nativeSrc": "3161:152:10",
													"nodeType": "YulBlock",
													"src": "3161:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3178:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3178:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3181:77:10",
																		"nodeType": "YulLiteral",
																		"src": "3181:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3171:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3171:6:10"
																},
																"nativeSrc": "3171:88:10",
																"nodeType": "YulFunctionCall",
																"src": "3171:88:10"
															},
															"nativeSrc": "3171:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "3171:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3275:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3275:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3278:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3278:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3268:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3268:6:10"
																},
																"nativeSrc": "3268:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3268:15:10"
															},
															"nativeSrc": "3268:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "3268:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3299:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3299:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3302:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3302:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3292:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:10"
																},
																"nativeSrc": "3292:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3292:15:10"
															},
															"nativeSrc": "3292:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "3292:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3133:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "3133:180:10"
											},
											{
												"body": {
													"nativeSrc": "3347:152:10",
													"nodeType": "YulBlock",
													"src": "3347:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3364:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3364:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3367:77:10",
																		"nodeType": "YulLiteral",
																		"src": "3367:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3357:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3357:6:10"
																},
																"nativeSrc": "3357:88:10",
																"nodeType": "YulFunctionCall",
																"src": "3357:88:10"
															},
															"nativeSrc": "3357:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "3357:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3461:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3461:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3464:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3464:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3454:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3454:6:10"
																},
																"nativeSrc": "3454:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3454:15:10"
															},
															"nativeSrc": "3454:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "3454:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3485:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3485:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3488:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3488:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3478:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3478:6:10"
																},
																"nativeSrc": "3478:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3478:15:10"
															},
															"nativeSrc": "3478:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "3478:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3319:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "3319:180:10"
											},
											{
												"body": {
													"nativeSrc": "3556:269:10",
													"nodeType": "YulBlock",
													"src": "3556:269:10",
													"statements": [
														{
															"nativeSrc": "3566:22:10",
															"nodeType": "YulAssignment",
															"src": "3566:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3580:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3580:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3586:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3586:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3576:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3576:3:10"
																},
																"nativeSrc": "3576:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3576:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3566:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3566:6:10"
																}
															]
														},
														{
															"nativeSrc": "3597:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3597:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3627:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3627:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3633:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3633:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3623:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3623:3:10"
																},
																"nativeSrc": "3623:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3623:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3601:18:10",
																	"nodeType": "YulTypedName",
																	"src": "3601:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3674:51:10",
																"nodeType": "YulBlock",
																"src": "3674:51:10",
																"statements": [
																	{
																		"nativeSrc": "3688:27:10",
																		"nodeType": "YulAssignment",
																		"src": "3688:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3702:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "3702:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3710:4:10",
																					"nodeType": "YulLiteral",
																					"src": "3710:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3698:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3698:3:10"
																			},
																			"nativeSrc": "3698:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3698:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3688:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3688:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3654:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "3654:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3647:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3647:6:10"
																},
																"nativeSrc": "3647:26:10",
																"nodeType": "YulFunctionCall",
																"src": "3647:26:10"
															},
															"nativeSrc": "3644:81:10",
															"nodeType": "YulIf",
															"src": "3644:81:10"
														},
														{
															"body": {
																"nativeSrc": "3777:42:10",
																"nodeType": "YulBlock",
																"src": "3777:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "3791:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "3791:16:10"
																			},
																			"nativeSrc": "3791:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3791:18:10"
																		},
																		"nativeSrc": "3791:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3791:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3741:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "3741:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3764:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3764:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3772:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3772:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3761:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3761:2:10"
																		},
																		"nativeSrc": "3761:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3738:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3738:2:10"
																},
																"nativeSrc": "3738:38:10",
																"nodeType": "YulFunctionCall",
																"src": "3738:38:10"
															},
															"nativeSrc": "3735:84:10",
															"nodeType": "YulIf",
															"src": "3735:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3505:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3540:4:10",
														"nodeType": "YulTypedName",
														"src": "3540:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3549:6:10",
														"nodeType": "YulTypedName",
														"src": "3549:6:10",
														"type": ""
													}
												],
												"src": "3505:320:10"
											},
											{
												"body": {
													"nativeSrc": "3885:87:10",
													"nodeType": "YulBlock",
													"src": "3885:87:10",
													"statements": [
														{
															"nativeSrc": "3895:11:10",
															"nodeType": "YulAssignment",
															"src": "3895:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "3903:3:10",
																"nodeType": "YulIdentifier",
																"src": "3903:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3895:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3895:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3923:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3923:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "3926:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3926:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3916:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3916:6:10"
																},
																"nativeSrc": "3916:14:10",
																"nodeType": "YulFunctionCall",
																"src": "3916:14:10"
															},
															"nativeSrc": "3916:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "3916:14:10"
														},
														{
															"nativeSrc": "3939:26:10",
															"nodeType": "YulAssignment",
															"src": "3939:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3957:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3957:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3960:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3960:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3947:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "3947:9:10"
																},
																"nativeSrc": "3947:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3947:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3939:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3939:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "3831:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3872:3:10",
														"nodeType": "YulTypedName",
														"src": "3872:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "3880:4:10",
														"nodeType": "YulTypedName",
														"src": "3880:4:10",
														"type": ""
													}
												],
												"src": "3831:141:10"
											},
											{
												"body": {
													"nativeSrc": "4022:49:10",
													"nodeType": "YulBlock",
													"src": "4022:49:10",
													"statements": [
														{
															"nativeSrc": "4032:33:10",
															"nodeType": "YulAssignment",
															"src": "4032:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4050:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4050:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4057:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4057:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4046:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4046:3:10"
																		},
																		"nativeSrc": "4046:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4046:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4062:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4062:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4042:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4042:3:10"
																},
																"nativeSrc": "4042:23:10",
																"nodeType": "YulFunctionCall",
																"src": "4042:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4032:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "3978:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4005:5:10",
														"nodeType": "YulTypedName",
														"src": "4005:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4015:6:10",
														"nodeType": "YulTypedName",
														"src": "4015:6:10",
														"type": ""
													}
												],
												"src": "3978:93:10"
											},
											{
												"body": {
													"nativeSrc": "4130:54:10",
													"nodeType": "YulBlock",
													"src": "4130:54:10",
													"statements": [
														{
															"nativeSrc": "4140:37:10",
															"nodeType": "YulAssignment",
															"src": "4140:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4165:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4165:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4171:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4171:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4161:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4161:3:10"
																},
																"nativeSrc": "4161:16:10",
																"nodeType": "YulFunctionCall",
																"src": "4161:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4140:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "4140:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4077:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4105:4:10",
														"nodeType": "YulTypedName",
														"src": "4105:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4111:5:10",
														"nodeType": "YulTypedName",
														"src": "4111:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4121:8:10",
														"nodeType": "YulTypedName",
														"src": "4121:8:10",
														"type": ""
													}
												],
												"src": "4077:107:10"
											},
											{
												"body": {
													"nativeSrc": "4266:317:10",
													"nodeType": "YulBlock",
													"src": "4266:317:10",
													"statements": [
														{
															"nativeSrc": "4276:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4276:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4297:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "4297:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4309:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4309:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4293:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4293:3:10"
																},
																"nativeSrc": "4293:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4293:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4280:9:10",
																	"nodeType": "YulTypedName",
																	"src": "4280:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4320:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4320:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4351:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4351:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4362:66:10",
																		"nodeType": "YulLiteral",
																		"src": "4362:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4332:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "4332:18:10"
																},
																"nativeSrc": "4332:97:10",
																"nodeType": "YulFunctionCall",
																"src": "4332:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4324:4:10",
																	"nodeType": "YulTypedName",
																	"src": "4324:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4438:51:10",
															"nodeType": "YulAssignment",
															"src": "4438:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4469:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4469:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4480:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "4480:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4450:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "4450:18:10"
																},
																"nativeSrc": "4450:39:10",
																"nodeType": "YulFunctionCall",
																"src": "4450:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4438:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "4438:8:10"
																}
															]
														},
														{
															"nativeSrc": "4498:30:10",
															"nodeType": "YulAssignment",
															"src": "4498:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4511:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4511:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4522:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4522:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4518:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4518:3:10"
																		},
																		"nativeSrc": "4518:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4518:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4507:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4507:3:10"
																},
																"nativeSrc": "4507:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4507:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4498:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4498:5:10"
																}
															]
														},
														{
															"nativeSrc": "4537:40:10",
															"nodeType": "YulAssignment",
															"src": "4537:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4550:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4561:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "4561:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4571:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4571:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4557:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4557:3:10"
																		},
																		"nativeSrc": "4557:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4557:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4547:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4547:2:10"
																},
																"nativeSrc": "4547:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4547:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4537:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4537:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4190:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4227:5:10",
														"nodeType": "YulTypedName",
														"src": "4227:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4234:10:10",
														"nodeType": "YulTypedName",
														"src": "4234:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4246:8:10",
														"nodeType": "YulTypedName",
														"src": "4246:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4259:6:10",
														"nodeType": "YulTypedName",
														"src": "4259:6:10",
														"type": ""
													}
												],
												"src": "4190:393:10"
											},
											{
												"body": {
													"nativeSrc": "4634:32:10",
													"nodeType": "YulBlock",
													"src": "4634:32:10",
													"statements": [
														{
															"nativeSrc": "4644:16:10",
															"nodeType": "YulAssignment",
															"src": "4644:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "4655:5:10",
																"nodeType": "YulIdentifier",
																"src": "4655:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4644:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4644:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4589:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4616:5:10",
														"nodeType": "YulTypedName",
														"src": "4616:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4626:7:10",
														"nodeType": "YulTypedName",
														"src": "4626:7:10",
														"type": ""
													}
												],
												"src": "4589:77:10"
											},
											{
												"body": {
													"nativeSrc": "4704:28:10",
													"nodeType": "YulBlock",
													"src": "4704:28:10",
													"statements": [
														{
															"nativeSrc": "4714:12:10",
															"nodeType": "YulAssignment",
															"src": "4714:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "4721:5:10",
																"nodeType": "YulIdentifier",
																"src": "4721:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4714:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4714:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4672:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4690:5:10",
														"nodeType": "YulTypedName",
														"src": "4690:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4700:3:10",
														"nodeType": "YulTypedName",
														"src": "4700:3:10",
														"type": ""
													}
												],
												"src": "4672:60:10"
											},
											{
												"body": {
													"nativeSrc": "4798:82:10",
													"nodeType": "YulBlock",
													"src": "4798:82:10",
													"statements": [
														{
															"nativeSrc": "4808:66:10",
															"nodeType": "YulAssignment",
															"src": "4808:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4866:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4866:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4848:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "4848:17:10"
																				},
																				"nativeSrc": "4848:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4848:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4839:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "4839:8:10"
																		},
																		"nativeSrc": "4839:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4839:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4821:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4821:17:10"
																},
																"nativeSrc": "4821:53:10",
																"nodeType": "YulFunctionCall",
																"src": "4821:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4808:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4808:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4738:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4778:5:10",
														"nodeType": "YulTypedName",
														"src": "4778:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4788:9:10",
														"nodeType": "YulTypedName",
														"src": "4788:9:10",
														"type": ""
													}
												],
												"src": "4738:142:10"
											},
											{
												"body": {
													"nativeSrc": "4933:28:10",
													"nodeType": "YulBlock",
													"src": "4933:28:10",
													"statements": [
														{
															"nativeSrc": "4943:12:10",
															"nodeType": "YulAssignment",
															"src": "4943:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "4950:5:10",
																"nodeType": "YulIdentifier",
																"src": "4950:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4943:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4943:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "4886:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4919:5:10",
														"nodeType": "YulTypedName",
														"src": "4919:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4929:3:10",
														"nodeType": "YulTypedName",
														"src": "4929:3:10",
														"type": ""
													}
												],
												"src": "4886:75:10"
											},
											{
												"body": {
													"nativeSrc": "5043:193:10",
													"nodeType": "YulBlock",
													"src": "5043:193:10",
													"statements": [
														{
															"nativeSrc": "5053:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5053:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5108:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "5108:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5077:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "5077:30:10"
																},
																"nativeSrc": "5077:39:10",
																"nodeType": "YulFunctionCall",
																"src": "5077:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5057:16:10",
																	"nodeType": "YulTypedName",
																	"src": "5057:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5132:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5132:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5172:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "5172:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5166:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "5166:5:10"
																				},
																				"nativeSrc": "5166:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5166:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5179:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5179:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5211:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "5211:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5187:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "5187:23:10"
																				},
																				"nativeSrc": "5187:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5187:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5138:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "5138:27:10"
																		},
																		"nativeSrc": "5138:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5138:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5125:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5125:6:10"
																},
																"nativeSrc": "5125:105:10",
																"nodeType": "YulFunctionCall",
																"src": "5125:105:10"
															},
															"nativeSrc": "5125:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "5125:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "4967:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5020:4:10",
														"nodeType": "YulTypedName",
														"src": "5020:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5026:6:10",
														"nodeType": "YulTypedName",
														"src": "5026:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5034:7:10",
														"nodeType": "YulTypedName",
														"src": "5034:7:10",
														"type": ""
													}
												],
												"src": "4967:269:10"
											},
											{
												"body": {
													"nativeSrc": "5291:24:10",
													"nodeType": "YulBlock",
													"src": "5291:24:10",
													"statements": [
														{
															"nativeSrc": "5301:8:10",
															"nodeType": "YulAssignment",
															"src": "5301:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "5308:1:10",
																"nodeType": "YulLiteral",
																"src": "5308:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5301:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5301:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5242:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5287:3:10",
														"nodeType": "YulTypedName",
														"src": "5287:3:10",
														"type": ""
													}
												],
												"src": "5242:73:10"
											},
											{
												"body": {
													"nativeSrc": "5374:136:10",
													"nodeType": "YulBlock",
													"src": "5374:136:10",
													"statements": [
														{
															"nativeSrc": "5384:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5384:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5398:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "5398:30:10"
																},
																"nativeSrc": "5398:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5398:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5388:6:10",
																	"nodeType": "YulTypedName",
																	"src": "5388:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5483:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5483:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5489:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5489:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5497:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5497:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5439:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5439:43:10"
																},
																"nativeSrc": "5439:65:10",
																"nodeType": "YulFunctionCall",
																"src": "5439:65:10"
															},
															"nativeSrc": "5439:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "5439:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5321:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5360:4:10",
														"nodeType": "YulTypedName",
														"src": "5360:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5366:6:10",
														"nodeType": "YulTypedName",
														"src": "5366:6:10",
														"type": ""
													}
												],
												"src": "5321:189:10"
											},
											{
												"body": {
													"nativeSrc": "5566:136:10",
													"nodeType": "YulBlock",
													"src": "5566:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5633:63:10",
																"nodeType": "YulBlock",
																"src": "5633:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5677:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "5677:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5684:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5684:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5647:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "5647:29:10"
																			},
																			"nativeSrc": "5647:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5647:39:10"
																		},
																		"nativeSrc": "5647:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5647:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5586:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5586:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5593:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5593:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5583:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5583:2:10"
																},
																"nativeSrc": "5583:14:10",
																"nodeType": "YulFunctionCall",
																"src": "5583:14:10"
															},
															"nativeSrc": "5576:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5598:26:10",
																"nodeType": "YulBlock",
																"src": "5598:26:10",
																"statements": [
																	{
																		"nativeSrc": "5600:22:10",
																		"nodeType": "YulAssignment",
																		"src": "5600:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5613:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "5613:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5620:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5620:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5609:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5609:3:10"
																			},
																			"nativeSrc": "5609:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5609:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5600:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5600:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5580:2:10",
																"nodeType": "YulBlock",
																"src": "5580:2:10",
																"statements": []
															},
															"src": "5576:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5516:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5554:5:10",
														"nodeType": "YulTypedName",
														"src": "5554:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5561:3:10",
														"nodeType": "YulTypedName",
														"src": "5561:3:10",
														"type": ""
													}
												],
												"src": "5516:186:10"
											},
											{
												"body": {
													"nativeSrc": "5787:464:10",
													"nodeType": "YulBlock",
													"src": "5787:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5813:431:10",
																"nodeType": "YulBlock",
																"src": "5813:431:10",
																"statements": [
																	{
																		"nativeSrc": "5827:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5827:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "5875:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "5875:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "5843:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "5843:31:10"
																			},
																			"nativeSrc": "5843:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5843:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "5831:8:10",
																				"nodeType": "YulTypedName",
																				"src": "5831:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5894:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5894:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "5917:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "5917:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "5945:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "5945:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "5927:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "5927:17:10"
																					},
																					"nativeSrc": "5927:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5927:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5913:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5913:3:10"
																			},
																			"nativeSrc": "5913:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5913:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "5898:11:10",
																				"nodeType": "YulTypedName",
																				"src": "5898:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6114:27:10",
																			"nodeType": "YulBlock",
																			"src": "6114:27:10",
																			"statements": [
																				{
																					"nativeSrc": "6116:23:10",
																					"nodeType": "YulAssignment",
																					"src": "6116:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6131:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "6131:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6116:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "6116:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6098:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "6098:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6110:2:10",
																					"nodeType": "YulLiteral",
																					"src": "6110:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6095:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "6095:2:10"
																			},
																			"nativeSrc": "6095:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6095:18:10"
																		},
																		"nativeSrc": "6092:49:10",
																		"nodeType": "YulIf",
																		"src": "6092:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6183:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "6183:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6200:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "6200:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6228:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "6228:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6210:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "6210:17:10"
																							},
																							"nativeSrc": "6210:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "6210:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6196:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "6196:3:10"
																					},
																					"nativeSrc": "6196:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6196:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6154:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "6154:28:10"
																			},
																			"nativeSrc": "6154:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6154:80:10"
																		},
																		"nativeSrc": "6154:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6154:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "5804:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5804:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5809:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5809:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5801:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5801:2:10"
																},
																"nativeSrc": "5801:11:10",
																"nodeType": "YulFunctionCall",
																"src": "5801:11:10"
															},
															"nativeSrc": "5798:446:10",
															"nodeType": "YulIf",
															"src": "5798:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5708:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5763:5:10",
														"nodeType": "YulTypedName",
														"src": "5763:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5770:3:10",
														"nodeType": "YulTypedName",
														"src": "5770:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5775:10:10",
														"nodeType": "YulTypedName",
														"src": "5775:10:10",
														"type": ""
													}
												],
												"src": "5708:543:10"
											},
											{
												"body": {
													"nativeSrc": "6320:54:10",
													"nodeType": "YulBlock",
													"src": "6320:54:10",
													"statements": [
														{
															"nativeSrc": "6330:37:10",
															"nodeType": "YulAssignment",
															"src": "6330:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6355:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6355:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6361:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6361:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6351:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6351:3:10"
																},
																"nativeSrc": "6351:16:10",
																"nodeType": "YulFunctionCall",
																"src": "6351:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6330:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "6330:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6257:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6295:4:10",
														"nodeType": "YulTypedName",
														"src": "6295:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6301:5:10",
														"nodeType": "YulTypedName",
														"src": "6301:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6311:8:10",
														"nodeType": "YulTypedName",
														"src": "6311:8:10",
														"type": ""
													}
												],
												"src": "6257:117:10"
											},
											{
												"body": {
													"nativeSrc": "6431:118:10",
													"nodeType": "YulBlock",
													"src": "6431:118:10",
													"statements": [
														{
															"nativeSrc": "6441:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6441:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6490:1:10",
																						"nodeType": "YulLiteral",
																						"src": "6490:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6493:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6493:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6486:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6486:3:10"
																				},
																				"nativeSrc": "6486:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6486:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6505:1:10",
																						"nodeType": "YulLiteral",
																						"src": "6505:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6501:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6501:3:10"
																				},
																				"nativeSrc": "6501:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6501:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6457:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "6457:28:10"
																		},
																		"nativeSrc": "6457:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6457:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6453:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6453:3:10"
																},
																"nativeSrc": "6453:56:10",
																"nodeType": "YulFunctionCall",
																"src": "6453:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6445:4:10",
																	"nodeType": "YulTypedName",
																	"src": "6445:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6518:25:10",
															"nodeType": "YulAssignment",
															"src": "6518:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6532:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6532:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6538:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6538:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6528:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6528:3:10"
																},
																"nativeSrc": "6528:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6528:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6518:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6518:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6380:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6408:4:10",
														"nodeType": "YulTypedName",
														"src": "6408:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6414:5:10",
														"nodeType": "YulTypedName",
														"src": "6414:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6424:6:10",
														"nodeType": "YulTypedName",
														"src": "6424:6:10",
														"type": ""
													}
												],
												"src": "6380:169:10"
											},
											{
												"body": {
													"nativeSrc": "6635:214:10",
													"nodeType": "YulBlock",
													"src": "6635:214:10",
													"statements": [
														{
															"nativeSrc": "6768:37:10",
															"nodeType": "YulAssignment",
															"src": "6768:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6795:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6795:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "6801:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6801:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6776:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "6776:18:10"
																},
																"nativeSrc": "6776:29:10",
																"nodeType": "YulFunctionCall",
																"src": "6776:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6768:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6768:4:10"
																}
															]
														},
														{
															"nativeSrc": "6814:29:10",
															"nodeType": "YulAssignment",
															"src": "6814:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6825:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6825:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6835:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6835:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "6838:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6838:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6831:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6831:3:10"
																		},
																		"nativeSrc": "6831:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6831:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6822:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6822:2:10"
																},
																"nativeSrc": "6822:21:10",
																"nodeType": "YulFunctionCall",
																"src": "6822:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "6814:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6814:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6554:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6616:4:10",
														"nodeType": "YulTypedName",
														"src": "6616:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6622:3:10",
														"nodeType": "YulTypedName",
														"src": "6622:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6630:4:10",
														"nodeType": "YulTypedName",
														"src": "6630:4:10",
														"type": ""
													}
												],
												"src": "6554:295:10"
											},
											{
												"body": {
													"nativeSrc": "6946:1303:10",
													"nodeType": "YulBlock",
													"src": "6946:1303:10",
													"statements": [
														{
															"nativeSrc": "6957:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6957:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7004:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7004:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6971:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "6971:32:10"
																},
																"nativeSrc": "6971:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6971:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "6961:6:10",
																	"nodeType": "YulTypedName",
																	"src": "6961:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7093:22:10",
																"nodeType": "YulBlock",
																"src": "7093:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7095:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7095:16:10"
																			},
																			"nativeSrc": "7095:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7095:18:10"
																		},
																		"nativeSrc": "7095:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7095:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7065:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7065:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7073:18:10",
																		"nodeType": "YulLiteral",
																		"src": "7073:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7062:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7062:2:10"
																},
																"nativeSrc": "7062:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7062:30:10"
															},
															"nativeSrc": "7059:56:10",
															"nodeType": "YulIf",
															"src": "7059:56:10"
														},
														{
															"nativeSrc": "7125:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7125:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7171:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7171:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7165:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "7165:5:10"
																		},
																		"nativeSrc": "7165:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7165:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7139:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "7139:25:10"
																},
																"nativeSrc": "7139:38:10",
																"nodeType": "YulFunctionCall",
																"src": "7139:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7129:6:10",
																	"nodeType": "YulTypedName",
																	"src": "7129:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7270:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7270:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7276:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7276:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7284:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7284:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7224:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "7224:45:10"
																},
																"nativeSrc": "7224:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7224:67:10"
															},
															"nativeSrc": "7224:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "7224:67:10"
														},
														{
															"nativeSrc": "7301:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7301:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "7318:1:10",
																"nodeType": "YulLiteral",
																"src": "7318:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7305:9:10",
																	"nodeType": "YulTypedName",
																	"src": "7305:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7329:17:10",
															"nodeType": "YulAssignment",
															"src": "7329:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "7342:4:10",
																"nodeType": "YulLiteral",
																"src": "7342:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7329:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "7329:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7393:611:10",
																		"nodeType": "YulBlock",
																		"src": "7393:611:10",
																		"statements": [
																			{
																				"nativeSrc": "7407:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7407:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7426:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "7426:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7438:4:10",
																									"nodeType": "YulLiteral",
																									"src": "7438:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7434:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "7434:3:10"
																							},
																							"nativeSrc": "7434:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "7434:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7422:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "7422:3:10"
																					},
																					"nativeSrc": "7422:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7422:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7411:7:10",
																						"nodeType": "YulTypedName",
																						"src": "7411:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7458:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7458:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7504:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "7504:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7472:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "7472:31:10"
																					},
																					"nativeSrc": "7472:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7472:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7462:6:10",
																						"nodeType": "YulTypedName",
																						"src": "7462:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7522:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7522:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7531:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7531:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7526:1:10",
																						"nodeType": "YulTypedName",
																						"src": "7526:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7590:163:10",
																					"nodeType": "YulBlock",
																					"src": "7590:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7615:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "7615:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7633:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "7633:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7638:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "7638:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7629:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "7629:3:10"
																												},
																												"nativeSrc": "7629:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "7629:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7623:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "7623:5:10"
																										},
																										"nativeSrc": "7623:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "7623:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7608:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "7608:6:10"
																								},
																								"nativeSrc": "7608:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "7608:42:10"
																							},
																							"nativeSrc": "7608:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "7608:42:10"
																						},
																						{
																							"nativeSrc": "7667:24:10",
																							"nodeType": "YulAssignment",
																							"src": "7667:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7681:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "7681:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7689:1:10",
																										"nodeType": "YulLiteral",
																										"src": "7689:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7677:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "7677:3:10"
																								},
																								"nativeSrc": "7677:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "7677:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7667:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "7667:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7708:31:10",
																							"nodeType": "YulAssignment",
																							"src": "7708:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7725:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "7725:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7736:2:10",
																										"nodeType": "YulLiteral",
																										"src": "7736:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7721:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "7721:3:10"
																								},
																								"nativeSrc": "7721:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "7721:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7708:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "7708:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7556:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "7556:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7559:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "7559:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7553:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "7553:2:10"
																					},
																					"nativeSrc": "7553:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7553:14:10"
																				},
																				"nativeSrc": "7545:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7568:21:10",
																					"nodeType": "YulBlock",
																					"src": "7568:21:10",
																					"statements": [
																						{
																							"nativeSrc": "7570:17:10",
																							"nodeType": "YulAssignment",
																							"src": "7570:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7579:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "7579:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7582:4:10",
																										"nodeType": "YulLiteral",
																										"src": "7582:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7575:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "7575:3:10"
																								},
																								"nativeSrc": "7575:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "7575:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7570:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "7570:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7549:3:10",
																					"nodeType": "YulBlock",
																					"src": "7549:3:10",
																					"statements": []
																				},
																				"src": "7545:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "7789:156:10",
																					"nodeType": "YulBlock",
																					"src": "7789:156:10",
																					"statements": [
																						{
																							"nativeSrc": "7807:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "7807:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7834:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "7834:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7839:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "7839:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7830:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "7830:3:10"
																										},
																										"nativeSrc": "7830:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "7830:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7824:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "7824:5:10"
																								},
																								"nativeSrc": "7824:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "7824:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "7811:9:10",
																									"nodeType": "YulTypedName",
																									"src": "7811:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7874:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "7874:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "7901:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "7901:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "7916:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "7916:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "7924:4:10",
																														"nodeType": "YulLiteral",
																														"src": "7924:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "7912:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "7912:3:10"
																												},
																												"nativeSrc": "7912:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "7912:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "7882:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "7882:18:10"
																										},
																										"nativeSrc": "7882:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "7882:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7867:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "7867:6:10"
																								},
																								"nativeSrc": "7867:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "7867:64:10"
																							},
																							"nativeSrc": "7867:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "7867:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7772:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "7772:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7781:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "7781:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7769:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "7769:2:10"
																					},
																					"nativeSrc": "7769:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7769:19:10"
																				},
																				"nativeSrc": "7766:179:10",
																				"nodeType": "YulIf",
																				"src": "7766:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7965:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "7965:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "7979:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "7979:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "7987:1:10",
																											"nodeType": "YulLiteral",
																											"src": "7987:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "7975:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "7975:3:10"
																									},
																									"nativeSrc": "7975:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "7975:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7991:1:10",
																									"nodeType": "YulLiteral",
																									"src": "7991:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7971:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "7971:3:10"
																							},
																							"nativeSrc": "7971:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "7971:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7958:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7958:6:10"
																					},
																					"nativeSrc": "7958:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7958:36:10"
																				},
																				"nativeSrc": "7958:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "7958:36:10"
																			}
																		]
																	},
																	"nativeSrc": "7386:618:10",
																	"nodeType": "YulCase",
																	"src": "7386:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7391:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7391:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8021:222:10",
																		"nodeType": "YulBlock",
																		"src": "8021:222:10",
																		"statements": [
																			{
																				"nativeSrc": "8035:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8035:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8048:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8048:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8039:5:10",
																						"nodeType": "YulTypedName",
																						"src": "8039:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8072:67:10",
																					"nodeType": "YulBlock",
																					"src": "8072:67:10",
																					"statements": [
																						{
																							"nativeSrc": "8090:35:10",
																							"nodeType": "YulAssignment",
																							"src": "8090:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8109:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "8109:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8114:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "8114:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8105:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "8105:3:10"
																										},
																										"nativeSrc": "8105:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8105:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8099:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "8099:5:10"
																								},
																								"nativeSrc": "8099:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8099:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8090:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "8090:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8065:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8065:6:10"
																				},
																				"nativeSrc": "8062:77:10",
																				"nodeType": "YulIf",
																				"src": "8062:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8159:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "8159:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8218:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "8218:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8225:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "8225:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8165:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "8165:52:10"
																							},
																							"nativeSrc": "8165:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "8165:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8152:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8152:6:10"
																					},
																					"nativeSrc": "8152:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8152:81:10"
																				},
																				"nativeSrc": "8152:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "8152:81:10"
																			}
																		]
																	},
																	"nativeSrc": "8013:230:10",
																	"nodeType": "YulCase",
																	"src": "8013:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7366:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7366:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7374:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7374:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7363:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7363:2:10"
																},
																"nativeSrc": "7363:14:10",
																"nodeType": "YulFunctionCall",
																"src": "7363:14:10"
															},
															"nativeSrc": "7356:887:10",
															"nodeType": "YulSwitch",
															"src": "7356:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "6854:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6935:4:10",
														"nodeType": "YulTypedName",
														"src": "6935:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "6941:3:10",
														"nodeType": "YulTypedName",
														"src": "6941:3:10",
														"type": ""
													}
												],
												"src": "6854:1395:10"
											},
											{
												"body": {
													"nativeSrc": "8320:53:10",
													"nodeType": "YulBlock",
													"src": "8320:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8337:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8337:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8360:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8360:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8342:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "8342:17:10"
																		},
																		"nativeSrc": "8342:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8342:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8330:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8330:6:10"
																},
																"nativeSrc": "8330:37:10",
																"nodeType": "YulFunctionCall",
																"src": "8330:37:10"
															},
															"nativeSrc": "8330:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "8330:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8255:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8308:5:10",
														"nodeType": "YulTypedName",
														"src": "8308:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8315:3:10",
														"nodeType": "YulTypedName",
														"src": "8315:3:10",
														"type": ""
													}
												],
												"src": "8255:118:10"
											},
											{
												"body": {
													"nativeSrc": "8477:124:10",
													"nodeType": "YulBlock",
													"src": "8477:124:10",
													"statements": [
														{
															"nativeSrc": "8487:26:10",
															"nodeType": "YulAssignment",
															"src": "8487:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8499:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8499:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8510:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8510:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8495:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8495:3:10"
																},
																"nativeSrc": "8495:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8495:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8487:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8487:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8567:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8567:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8580:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8580:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8591:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8591:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8576:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8576:3:10"
																		},
																		"nativeSrc": "8576:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8576:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8523:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8523:43:10"
																},
																"nativeSrc": "8523:71:10",
																"nodeType": "YulFunctionCall",
																"src": "8523:71:10"
															},
															"nativeSrc": "8523:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "8523:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8379:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8449:9:10",
														"nodeType": "YulTypedName",
														"src": "8449:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8461:6:10",
														"nodeType": "YulTypedName",
														"src": "8461:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8472:4:10",
														"nodeType": "YulTypedName",
														"src": "8472:4:10",
														"type": ""
													}
												],
												"src": "8379:222:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$877(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$877(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$877(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$877_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$877(value)\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint128(value) {\n        if iszero(eq(value, cleanup_t_uint128(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint128_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint128(value)\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$877t_uint128t_uint96t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$877_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint128_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040516128a23803806128a283398181016040528101906100319190610404565b336040518060400160405280601d81526020017fe68891e79a84e6b58be8af95e79c8be5a49ae69c9fe69d83546f6b656e0000008152506040518060400160405280600981526020017f43414c4c544f4b454e000000000000000000000000000000000000000000000081525081600390816100ad91906106a5565b5080600490816100bd91906106a5565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101279190610783565b60405180910390fd5b61013f8161021360201b60201c565b508260075f6101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555081600760106101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550806007601c6101000a81548163ffffffff021916908363ffffffff1602179055508360065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505061079c565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610303826102da565b9050919050565b5f610314826102f9565b9050919050565b6103248161030a565b811461032e575f5ffd5b50565b5f8151905061033f8161031b565b92915050565b5f6fffffffffffffffffffffffffffffffff82169050919050565b61036981610345565b8114610373575f5ffd5b50565b5f8151905061038481610360565b92915050565b5f6bffffffffffffffffffffffff82169050919050565b6103aa8161038a565b81146103b4575f5ffd5b50565b5f815190506103c5816103a1565b92915050565b5f63ffffffff82169050919050565b6103e3816103cb565b81146103ed575f5ffd5b50565b5f815190506103fe816103da565b92915050565b5f5f5f5f6080858703121561041c5761041b6102d6565b5b5f61042987828801610331565b945050602061043a87828801610376565b935050604061044b878288016103b7565b925050606061045c878288016103f0565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806104e357607f821691505b6020821081036104f6576104f561049f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026105587fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261051d565b610562868361051d565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6105a66105a161059c8461057a565b610583565b61057a565b9050919050565b5f819050919050565b6105bf8361058c565b6105d36105cb826105ad565b848454610529565b825550505050565b5f5f905090565b6105ea6105db565b6105f58184846105b6565b505050565b5b818110156106185761060d5f826105e2565b6001810190506105fb565b5050565b601f82111561065d5761062e816104fc565b6106378461050e565b81016020851015610646578190505b61065a6106528561050e565b8301826105fa565b50505b505050565b5f82821c905092915050565b5f61067d5f1984600802610662565b1980831691505092915050565b5f610695838361066e565b9150826002028217905092915050565b6106ae82610468565b67ffffffffffffffff8111156106c7576106c6610472565b5b6106d182546104cc565b6106dc82828561061c565b5f60209050601f83116001811461070d575f84156106fb578287015190505b610705858261068a565b86555061076c565b601f19841661071b866104fc565b5f5b828110156107425784890151825560018201915060208501945060208101905061071d565b8683101561075f578489015161075b601f89168261066e565b8355505b6001600288020188555050505b505050505050565b61077d816102f9565b82525050565b5f6020820190506107965f830184610774565b92915050565b6120f9806107a95f395ff3fe608060405260043610610113575f3560e01c8063715018a61161009f578063a9059cbb11610063578063a9059cbb1461034f578063dd62ed3e1461038b578063ec46c4ef146103c7578063f2fde38b146103f1578063f8b75fb51461041957610113565b8063715018a61461029357806383b6fa98146102a95780638da5cb5b146102d157806395d89b41146102fb578063a035b1fe1461032557610113565b8063313ce567116100e6578063313ce567146101e3578063384b23671461020d5780633e413bee146102175780636bdebcc91461024157806370a082311461025757610113565b806306fdde0314610117578063095ea7b31461014157806318160ddd1461017d57806323b872dd146101a7575b5f5ffd5b348015610122575f5ffd5b5061012b610443565b60405161013891906117f5565b60405180910390f35b34801561014c575f5ffd5b50610167600480360381019061016291906118a6565b6104d3565b60405161017491906118fe565b60405180910390f35b348015610188575f5ffd5b506101916104f5565b60405161019e9190611926565b60405180910390f35b3480156101b2575f5ffd5b506101cd60048036038101906101c8919061193f565b6104fe565b6040516101da91906118fe565b60405180910390f35b3480156101ee575f5ffd5b506101f761052c565b60405161020491906119aa565b60405180910390f35b610215610534565b005b348015610222575f5ffd5b5061022b61058a565b6040516102389190611a1e565b60405180910390f35b34801561024c575f5ffd5b506102556105af565b005b348015610262575f5ffd5b5061027d60048036038101906102789190611a37565b610742565b60405161028a9190611926565b60405180910390f35b34801561029e575f5ffd5b506102a7610787565b005b3480156102b4575f5ffd5b506102cf60048036038101906102ca9190611a62565b61079a565b005b3480156102dc575f5ffd5b506102e5610945565b6040516102f29190611a9c565b60405180910390f35b348015610306575f5ffd5b5061030f61096d565b60405161031c91906117f5565b60405180910390f35b348015610330575f5ffd5b506103396109fd565b6040516103469190611adf565b60405180910390f35b34801561035a575f5ffd5b50610375600480360381019061037091906118a6565b610a1e565b60405161038291906118fe565b60405180910390f35b348015610396575f5ffd5b506103b160048036038101906103ac9190611af8565b610a40565b6040516103be9190611926565b60405180910390f35b3480156103d2575f5ffd5b506103db610ac2565b6040516103e89190611b5c565b60405180910390f35b3480156103fc575f5ffd5b5061041760048036038101906104129190611a37565b610ae0565b005b348015610424575f5ffd5b5061042d610b64565b60405161043a9190611b93565b60405180910390f35b60606003805461045290611bd9565b80601f016020809104026020016040519081016040528092919081815260200182805461047e90611bd9565b80156104c95780601f106104a0576101008083540402835291602001916104c9565b820191905f5260205f20905b8154815290600101906020018083116104ac57829003601f168201915b5050505050905090565b5f5f6104dd610b7a565b90506104ea818585610b81565b600191505092915050565b5f600254905090565b5f5f610508610b7a565b9050610515858285610b93565b610520858585610c25565b60019150509392505050565b5f6012905090565b61053c610d15565b5f341161057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590611c53565b60405180910390fd5b6105883334610d9c565b565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105b7610d15565b6007601c9054906101000a900463ffffffff1663ffffffff16600760109054906101000a90046bffffffffffffffffffffffff166105f59190611c9e565b6bffffffffffffffffffffffff16421015610645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063c90611d27565b60405180910390fd5b6107293360065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106a39190611a9c565b602060405180830381865afa1580156106be573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106e29190611d59565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e1b9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff16ff5b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61078f610d15565b6107985f610e9a565b565b600760109054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16421015801561081c57506007601c9054906101000a900463ffffffff1663ffffffff16600760109054906101000a90046bffffffffffffffffffffffff1661080b9190611c9e565b6bffffffffffffffffffffffff1642105b61085b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085290611dce565b60405180910390fd5b8061086533610742565b10156108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089d90611e36565b60405180910390fd5b6108b03382610f5d565b610938333060075f9054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16846108f09190611e54565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fdc909392919063ffffffff16565b610942338261105e565b50565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461097c90611bd9565b80601f01602080910402602001604051908101604052809291908181526020018280546109a890611bd9565b80156109f35780601f106109ca576101008083540402835291602001916109f3565b820191905f5260205f20905b8154815290600101906020018083116109d657829003601f168201915b5050505050905090565b60075f9054906101000a90046fffffffffffffffffffffffffffffffff1681565b5f5f610a28610b7a565b9050610a35818585610c25565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b600760109054906101000a90046bffffffffffffffffffffffff1681565b610ae8610d15565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b58575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b4f9190611a9c565b60405180910390fd5b610b6181610e9a565b50565b6007601c9054906101000a900463ffffffff1681565b5f33905090565b610b8e8383836001611159565b505050565b5f610b9e8484610a40565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c1f5781811015610c10578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610c0793929190611e95565b60405180910390fd5b610c1e84848484035f611159565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c95575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c8c9190611a9c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d05575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610cfc9190611a9c565b60405180910390fd5b610d10838383611328565b505050565b610d1d610b7a565b73ffffffffffffffffffffffffffffffffffffffff16610d3b610945565b73ffffffffffffffffffffffffffffffffffffffff1614610d9a57610d5e610b7a565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d919190611a9c565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e0c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e039190611a9c565b60405180910390fd5b610e175f8383611328565b5050565b610e95838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610e4e929190611eca565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611541565b505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fcd575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610fc49190611a9c565b60405180910390fd5b610fd8825f83611328565b5050565b611058848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161101193929190611ef1565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611541565b50505050565b5f8273ffffffffffffffffffffffffffffffffffffffff16825f67ffffffffffffffff81111561109157611090611f26565b5b6040519080825280601f01601f1916602001820160405280156110c35781602001600182028036833780820191505090505b506040516110d19190611f97565b5f6040518083038185875af1925050503d805f811461110b576040519150601f19603f3d011682016040523d82523d5f602084013e611110565b606091505b5050905080611154576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114b9061201d565b60405180910390fd5b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036111c9575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016111c09190611a9c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611239575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112309190611a9c565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611322578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113199190611926565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611378578060025f82825461136c919061203b565b92505081905550611446565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611401578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016113f893929190611e95565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361148d578060025f82825403925050819055506114d7565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115349190611926565b60405180910390a3505050565b5f61156b828473ffffffffffffffffffffffffffffffffffffffff166115d690919063ffffffff16565b90505f81511415801561158f57508080602001905181019061158d9190612098565b155b156115d157826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016115c89190611a9c565b60405180910390fd5b505050565b60606115e383835f6115eb565b905092915050565b60608147101561163257306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016116299190611a9c565b60405180910390fd5b5f5f8573ffffffffffffffffffffffffffffffffffffffff16848660405161165a9190611f97565b5f6040518083038185875af1925050503d805f8114611694576040519150601f19603f3d011682016040523d82523d5f602084013e611699565b606091505b50915091506116a98683836116b4565b925050509392505050565b6060826116c9576116c482611741565b611739565b5f82511480156116ef57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561173157836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016117289190611a9c565b60405180910390fd5b81905061173a565b5b9392505050565b5f815111156117535780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6117c782611785565b6117d1818561178f565b93506117e181856020860161179f565b6117ea816117ad565b840191505092915050565b5f6020820190508181035f83015261180d81846117bd565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61184282611819565b9050919050565b61185281611838565b811461185c575f5ffd5b50565b5f8135905061186d81611849565b92915050565b5f819050919050565b61188581611873565b811461188f575f5ffd5b50565b5f813590506118a08161187c565b92915050565b5f5f604083850312156118bc576118bb611815565b5b5f6118c98582860161185f565b92505060206118da85828601611892565b9150509250929050565b5f8115159050919050565b6118f8816118e4565b82525050565b5f6020820190506119115f8301846118ef565b92915050565b61192081611873565b82525050565b5f6020820190506119395f830184611917565b92915050565b5f5f5f6060848603121561195657611955611815565b5b5f6119638682870161185f565b93505060206119748682870161185f565b925050604061198586828701611892565b9150509250925092565b5f60ff82169050919050565b6119a48161198f565b82525050565b5f6020820190506119bd5f83018461199b565b92915050565b5f819050919050565b5f6119e66119e16119dc84611819565b6119c3565b611819565b9050919050565b5f6119f7826119cc565b9050919050565b5f611a08826119ed565b9050919050565b611a18816119fe565b82525050565b5f602082019050611a315f830184611a0f565b92915050565b5f60208284031215611a4c57611a4b611815565b5b5f611a598482850161185f565b91505092915050565b5f60208284031215611a7757611a76611815565b5b5f611a8484828501611892565b91505092915050565b611a9681611838565b82525050565b5f602082019050611aaf5f830184611a8d565b92915050565b5f6fffffffffffffffffffffffffffffffff82169050919050565b611ad981611ab5565b82525050565b5f602082019050611af25f830184611ad0565b92915050565b5f5f60408385031215611b0e57611b0d611815565b5b5f611b1b8582860161185f565b9250506020611b2c8582860161185f565b9150509250929050565b5f6bffffffffffffffffffffffff82169050919050565b611b5681611b36565b82525050565b5f602082019050611b6f5f830184611b4d565b92915050565b5f63ffffffff82169050919050565b611b8d81611b75565b82525050565b5f602082019050611ba65f830184611b84565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611bf057607f821691505b602082108103611c0357611c02611bac565b5b50919050565b7f6574682076616c75652063616e742062652030000000000000000000000000005f82015250565b5f611c3d60138361178f565b9150611c4882611c09565b602082019050919050565b5f6020820190508181035f830152611c6a81611c31565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ca882611b36565b9150611cb383611b36565b925082820190506bffffffffffffffffffffffff811115611cd757611cd6611c71565b5b92915050565b7f6e6f7420657870697265207965740000000000000000000000000000000000005f82015250565b5f611d11600e8361178f565b9150611d1c82611cdd565b602082019050919050565b5f6020820190508181035f830152611d3e81611d05565b9050919050565b5f81519050611d538161187c565b92915050565b5f60208284031215611d6e57611d6d611815565b5b5f611d7b84828501611d45565b91505092915050565b7f6e6f7420696e20736574746c652074696d652072616e676500000000000000005f82015250565b5f611db860188361178f565b9150611dc382611d84565b602082019050919050565b5f6020820190508181035f830152611de581611dac565b9050919050565b7f616d6f756e74206d757374203e2062616c616e636500000000000000000000005f82015250565b5f611e2060158361178f565b9150611e2b82611dec565b602082019050919050565b5f6020820190508181035f830152611e4d81611e14565b9050919050565b5f611e5e82611873565b9150611e6983611873565b9250828202611e7781611873565b91508282048414831517611e8e57611e8d611c71565b5b5092915050565b5f606082019050611ea85f830186611a8d565b611eb56020830185611917565b611ec26040830184611917565b949350505050565b5f604082019050611edd5f830185611a8d565b611eea6020830184611917565b9392505050565b5f606082019050611f045f830186611a8d565b611f116020830185611a8d565b611f1e6040830184611917565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f81519050919050565b5f81905092915050565b5f611f7182611f53565b611f7b8185611f5d565b9350611f8b81856020860161179f565b80840191505092915050565b5f611fa28284611f67565b915081905092915050565b7f5472616e7366657248656c7065723a3a736166655472616e736665724554483a5f8201527f20455448207472616e73666572206661696c6564000000000000000000000000602082015250565b5f61200760348361178f565b915061201282611fad565b604082019050919050565b5f6020820190508181035f83015261203481611ffb565b9050919050565b5f61204582611873565b915061205083611873565b925082820190508082111561206857612067611c71565b5b92915050565b612077816118e4565b8114612081575f5ffd5b50565b5f815190506120928161206e565b92915050565b5f602082840312156120ad576120ac611815565b5b5f6120ba84828501612084565b9150509291505056fea26469706673582212209a4f95c4b892dfe0197508d4f4588e3bab2911227899c52fe1881ceff65f3af264736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x28A2 CODESIZE SUB DUP1 PUSH2 0x28A2 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x404 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xE68891E79A84E6B58BE8AF95E79C8BE5A49AE69C9FE69D83546F6B656E000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43414C4C544F4B454E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x6A5 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x6A5 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x783 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x213 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP3 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH2 0x79C JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x303 DUP3 PUSH2 0x2DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x314 DUP3 PUSH2 0x2F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x324 DUP2 PUSH2 0x30A JUMP JUMPDEST DUP2 EQ PUSH2 0x32E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x33F DUP2 PUSH2 0x31B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x369 DUP2 PUSH2 0x345 JUMP JUMPDEST DUP2 EQ PUSH2 0x373 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x384 DUP2 PUSH2 0x360 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AA DUP2 PUSH2 0x38A JUMP JUMPDEST DUP2 EQ PUSH2 0x3B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3C5 DUP2 PUSH2 0x3A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E3 DUP2 PUSH2 0x3CB JUMP JUMPDEST DUP2 EQ PUSH2 0x3ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3FE DUP2 PUSH2 0x3DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x41C JUMPI PUSH2 0x41B PUSH2 0x2D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x429 DUP8 DUP3 DUP9 ADD PUSH2 0x331 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x43A DUP8 DUP3 DUP9 ADD PUSH2 0x376 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x44B DUP8 DUP3 DUP9 ADD PUSH2 0x3B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x45C DUP8 DUP3 DUP9 ADD PUSH2 0x3F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4E3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4F6 JUMPI PUSH2 0x4F5 PUSH2 0x49F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x558 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x51D JUMP JUMPDEST PUSH2 0x562 DUP7 DUP4 PUSH2 0x51D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5A6 PUSH2 0x5A1 PUSH2 0x59C DUP5 PUSH2 0x57A JUMP JUMPDEST PUSH2 0x583 JUMP JUMPDEST PUSH2 0x57A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5BF DUP4 PUSH2 0x58C JUMP JUMPDEST PUSH2 0x5D3 PUSH2 0x5CB DUP3 PUSH2 0x5AD JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x529 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5EA PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x5F5 DUP2 DUP5 DUP5 PUSH2 0x5B6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x618 JUMPI PUSH2 0x60D PUSH0 DUP3 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5FB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x65D JUMPI PUSH2 0x62E DUP2 PUSH2 0x4FC JUMP JUMPDEST PUSH2 0x637 DUP5 PUSH2 0x50E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x646 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x65A PUSH2 0x652 DUP6 PUSH2 0x50E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x5FA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x67D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x662 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x695 DUP4 DUP4 PUSH2 0x66E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6AE DUP3 PUSH2 0x468 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6C7 JUMPI PUSH2 0x6C6 PUSH2 0x472 JUMP JUMPDEST JUMPDEST PUSH2 0x6D1 DUP3 SLOAD PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x6DC DUP3 DUP3 DUP6 PUSH2 0x61C JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x70D JUMPI PUSH0 DUP5 ISZERO PUSH2 0x6FB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x705 DUP6 DUP3 PUSH2 0x68A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x71B DUP7 PUSH2 0x4FC JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x742 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x71D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x75F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x75B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x66E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x77D DUP2 PUSH2 0x2F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x796 PUSH0 DUP4 ADD DUP5 PUSH2 0x774 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20F9 DUP1 PUSH2 0x7A9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x113 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xEC46C4EF EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0xF8B75FB5 EQ PUSH2 0x419 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x83B6FA98 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x325 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x384B2367 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x6BDEBCC9 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x257 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x122 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x188 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x19AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0x534 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x5AF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x1A37 JUMP JUMPDEST PUSH2 0x742 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2A7 PUSH2 0x787 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x1A62 JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2E5 PUSH2 0x945 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x30F PUSH2 0x96D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x1AF8 JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x417 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x1A37 JUMP JUMPDEST PUSH2 0xAE0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x424 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x42D PUSH2 0xB64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x1B93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x452 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x47E SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4A0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4AC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4DD PUSH2 0xB7A JUMP JUMPDEST SWAP1 POP PUSH2 0x4EA DUP2 DUP6 DUP6 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x508 PUSH2 0xB7A JUMP JUMPDEST SWAP1 POP PUSH2 0x515 DUP6 DUP3 DUP6 PUSH2 0xB93 JUMP JUMPDEST PUSH2 0x520 DUP6 DUP6 DUP6 PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x53C PUSH2 0xD15 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x575 SWAP1 PUSH2 0x1C53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x588 CALLER CALLVALUE PUSH2 0xD9C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x5B7 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x1C9E JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP LT ISZERO PUSH2 0x645 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63C SWAP1 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x729 CALLER PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A3 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6BE JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE1B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x78F PUSH2 0xD15 JUMP JUMPDEST PUSH2 0x798 PUSH0 PUSH2 0xE9A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x81C JUMPI POP PUSH1 0x7 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x80B SWAP2 SWAP1 PUSH2 0x1C9E JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP LT JUMPDEST PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x852 SWAP1 PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x865 CALLER PUSH2 0x742 JUMP JUMPDEST LT ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89D SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8B0 CALLER DUP3 PUSH2 0xF5D JUMP JUMPDEST PUSH2 0x938 CALLER ADDRESS PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x8F0 SWAP2 SWAP1 PUSH2 0x1E54 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFDC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x942 CALLER DUP3 PUSH2 0x105E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x97C SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9A8 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xA28 PUSH2 0xB7A JUMP JUMPDEST SWAP1 POP PUSH2 0xA35 DUP2 DUP6 DUP6 PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xAE8 PUSH2 0xD15 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB58 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4F SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB61 DUP2 PUSH2 0xE9A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB8E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1159 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB9E DUP5 DUP5 PUSH2 0xA40 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC1F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC10 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC07 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC1E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1159 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC95 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8C SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD05 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFC SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD10 DUP4 DUP4 DUP4 PUSH2 0x1328 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xD1D PUSH2 0xB7A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD3B PUSH2 0x945 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD9A JUMPI PUSH2 0xD5E PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD91 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE0C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE03 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE17 PUSH0 DUP4 DUP4 PUSH2 0x1328 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE95 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE4E SWAP3 SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1541 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFCD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC4 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD8 DUP3 PUSH0 DUP4 PUSH2 0x1328 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1058 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1011 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1541 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1091 JUMPI PUSH2 0x1090 PUSH2 0x1F26 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10C3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x10D1 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x110B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1154 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114B SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11C9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C0 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1239 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1230 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1322 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1319 SWAP2 SWAP1 PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1378 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x136C SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1446 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1401 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x148D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x14D7 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1534 SWAP2 SWAP1 PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x156B DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15D6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x158F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x158D SWAP2 SWAP1 PUSH2 0x2098 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x15D1 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C8 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x15E3 DUP4 DUP4 PUSH0 PUSH2 0x15EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1632 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1629 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x165A SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1694 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x16A9 DUP7 DUP4 DUP4 PUSH2 0x16B4 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x16C9 JUMPI PUSH2 0x16C4 DUP3 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0x1739 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x16EF JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1731 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1728 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x173A JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1753 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17C7 DUP3 PUSH2 0x1785 JUMP JUMPDEST PUSH2 0x17D1 DUP2 DUP6 PUSH2 0x178F JUMP JUMPDEST SWAP4 POP PUSH2 0x17E1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x179F JUMP JUMPDEST PUSH2 0x17EA DUP2 PUSH2 0x17AD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x180D DUP2 DUP5 PUSH2 0x17BD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1842 DUP3 PUSH2 0x1819 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1852 DUP2 PUSH2 0x1838 JUMP JUMPDEST DUP2 EQ PUSH2 0x185C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x186D DUP2 PUSH2 0x1849 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1885 DUP2 PUSH2 0x1873 JUMP JUMPDEST DUP2 EQ PUSH2 0x188F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18A0 DUP2 PUSH2 0x187C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18BC JUMPI PUSH2 0x18BB PUSH2 0x1815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18C9 DUP6 DUP3 DUP7 ADD PUSH2 0x185F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18DA DUP6 DUP3 DUP7 ADD PUSH2 0x1892 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F8 DUP2 PUSH2 0x18E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1911 PUSH0 DUP4 ADD DUP5 PUSH2 0x18EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1920 DUP2 PUSH2 0x1873 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1939 PUSH0 DUP4 ADD DUP5 PUSH2 0x1917 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1956 JUMPI PUSH2 0x1955 PUSH2 0x1815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1963 DUP7 DUP3 DUP8 ADD PUSH2 0x185F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1974 DUP7 DUP3 DUP8 ADD PUSH2 0x185F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1985 DUP7 DUP3 DUP8 ADD PUSH2 0x1892 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19A4 DUP2 PUSH2 0x198F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19BD PUSH0 DUP4 ADD DUP5 PUSH2 0x199B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19E6 PUSH2 0x19E1 PUSH2 0x19DC DUP5 PUSH2 0x1819 JUMP JUMPDEST PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x1819 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19F7 DUP3 PUSH2 0x19CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A08 DUP3 PUSH2 0x19ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A18 DUP2 PUSH2 0x19FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A31 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A4C JUMPI PUSH2 0x1A4B PUSH2 0x1815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A59 DUP5 DUP3 DUP6 ADD PUSH2 0x185F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A77 JUMPI PUSH2 0x1A76 PUSH2 0x1815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A84 DUP5 DUP3 DUP6 ADD PUSH2 0x1892 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A96 DUP2 PUSH2 0x1838 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AAF PUSH0 DUP4 ADD DUP5 PUSH2 0x1A8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AD9 DUP2 PUSH2 0x1AB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B0E JUMPI PUSH2 0x1B0D PUSH2 0x1815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B1B DUP6 DUP3 DUP7 ADD PUSH2 0x185F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B2C DUP6 DUP3 DUP7 ADD PUSH2 0x185F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B56 DUP2 PUSH2 0x1B36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6F PUSH0 DUP4 ADD DUP5 PUSH2 0x1B4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B8D DUP2 PUSH2 0x1B75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BA6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1BF0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C03 JUMPI PUSH2 0x1C02 PUSH2 0x1BAC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6574682076616C75652063616E74206265203000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C3D PUSH1 0x13 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C48 DUP3 PUSH2 0x1C09 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C6A DUP2 PUSH2 0x1C31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CA8 DUP3 PUSH2 0x1B36 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB3 DUP4 PUSH2 0x1B36 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CD7 JUMPI PUSH2 0x1CD6 PUSH2 0x1C71 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F742065787069726520796574000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D11 PUSH1 0xE DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x1D1C DUP3 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D3E DUP2 PUSH2 0x1D05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D53 DUP2 PUSH2 0x187C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D6E JUMPI PUSH2 0x1D6D PUSH2 0x1815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D7B DUP5 DUP3 DUP6 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F7420696E20736574746C652074696D652072616E67650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB8 PUSH1 0x18 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC3 DUP3 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DE5 DUP2 PUSH2 0x1DAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616D6F756E74206D757374203E2062616C616E63650000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E20 PUSH1 0x15 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x1E2B DUP3 PUSH2 0x1DEC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E4D DUP2 PUSH2 0x1E14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E5E DUP3 PUSH2 0x1873 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E69 DUP4 PUSH2 0x1873 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1E77 DUP2 PUSH2 0x1873 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1E8E JUMPI PUSH2 0x1E8D PUSH2 0x1C71 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EA8 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A8D JUMP JUMPDEST PUSH2 0x1EB5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x1EC2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1917 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EDD PUSH0 DUP4 ADD DUP6 PUSH2 0x1A8D JUMP JUMPDEST PUSH2 0x1EEA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1917 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F04 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A8D JUMP JUMPDEST PUSH2 0x1F11 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A8D JUMP JUMPDEST PUSH2 0x1F1E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1917 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F71 DUP3 PUSH2 0x1F53 JUMP JUMPDEST PUSH2 0x1F7B DUP2 DUP6 PUSH2 0x1F5D JUMP JUMPDEST SWAP4 POP PUSH2 0x1F8B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x179F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA2 DUP3 DUP5 PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665724554483A PUSH0 DUP3 ADD MSTORE PUSH32 0x20455448207472616E73666572206661696C6564000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2007 PUSH1 0x34 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x2012 DUP3 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2034 DUP2 PUSH2 0x1FFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2045 DUP3 PUSH2 0x1873 JUMP JUMPDEST SWAP2 POP PUSH2 0x2050 DUP4 PUSH2 0x1873 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2068 JUMPI PUSH2 0x2067 PUSH2 0x1C71 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2077 DUP2 PUSH2 0x18E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2081 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2092 DUP2 PUSH2 0x206E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20AD JUMPI PUSH2 0x20AC PUSH2 0x1815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20BA DUP5 DUP3 DUP6 ADD PUSH2 0x2084 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0x4F SWAP6 0xC4 0xB8 SWAP3 0xDF 0xE0 NOT PUSH22 0x8D4F4588E3BAB2911227899C52FE1881CEFF65F3AF2 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "383:1581:9:-:0;;;586:298;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;739:10;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;769:6:9::2;761:5;;:14;;;;;;;;;;;;;;;;;;801:13;786:12;;:28;;;;;;;;;;;;;;;;;;840:13;825:12;;:28;;;;;;;;;;;;;;;;;;871:5;864:4;;:12;;;;;;;;;;;;;;;;;;586:298:::0;;;;383:1581;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:118::-;1054:7;1094:34;1087:5;1083:46;1072:57;;1017:118;;;:::o;1141:122::-;1214:24;1232:5;1214:24;:::i;:::-;1207:5;1204:35;1194:63;;1253:1;1250;1243:12;1194:63;1141:122;:::o;1269:143::-;1326:5;1357:6;1351:13;1342:22;;1373:33;1400:5;1373:33;:::i;:::-;1269:143;;;;:::o;1418:109::-;1454:7;1494:26;1487:5;1483:38;1472:49;;1418:109;;;:::o;1533:120::-;1605:23;1622:5;1605:23;:::i;:::-;1598:5;1595:34;1585:62;;1643:1;1640;1633:12;1585:62;1533:120;:::o;1659:141::-;1715:5;1746:6;1740:13;1731:22;;1762:32;1788:5;1762:32;:::i;:::-;1659:141;;;;:::o;1806:93::-;1842:7;1882:10;1875:5;1871:22;1860:33;;1806:93;;;:::o;1905:120::-;1977:23;1994:5;1977:23;:::i;:::-;1970:5;1967:34;1957:62;;2015:1;2012;2005:12;1957:62;1905:120;:::o;2031:141::-;2087:5;2118:6;2112:13;2103:22;;2134:32;2160:5;2134:32;:::i;:::-;2031:141;;;;:::o;2178:844::-;2287:6;2295;2303;2311;2360:3;2348:9;2339:7;2335:23;2331:33;2328:120;;;2367:79;;:::i;:::-;2328:120;2487:1;2512:78;2582:7;2573:6;2562:9;2558:22;2512:78;:::i;:::-;2502:88;;2458:142;2639:2;2665:64;2721:7;2712:6;2701:9;2697:22;2665:64;:::i;:::-;2655:74;;2610:129;2778:2;2804:63;2859:7;2850:6;2839:9;2835:22;2804:63;:::i;:::-;2794:73;;2749:128;2916:2;2942:63;2997:7;2988:6;2977:9;2973:22;2942:63;:::i;:::-;2932:73;;2887:128;2178:844;;;;;;;:::o;3028:99::-;3080:6;3114:5;3108:12;3098:22;;3028:99;;;:::o;3133:180::-;3181:77;3178:1;3171:88;3278:4;3275:1;3268:15;3302:4;3299:1;3292:15;3319:180;3367:77;3364:1;3357:88;3464:4;3461:1;3454:15;3488:4;3485:1;3478:15;3505:320;3549:6;3586:1;3580:4;3576:12;3566:22;;3633:1;3627:4;3623:12;3654:18;3644:81;;3710:4;3702:6;3698:17;3688:27;;3644:81;3772:2;3764:6;3761:14;3741:18;3738:38;3735:84;;3791:18;;:::i;:::-;3735:84;3556:269;3505:320;;;:::o;3831:141::-;3880:4;3903:3;3895:11;;3926:3;3923:1;3916:14;3960:4;3957:1;3947:18;3939:26;;3831:141;;;:::o;3978:93::-;4015:6;4062:2;4057;4050:5;4046:14;4042:23;4032:33;;3978:93;;;:::o;4077:107::-;4121:8;4171:5;4165:4;4161:16;4140:37;;4077:107;;;;:::o;4190:393::-;4259:6;4309:1;4297:10;4293:18;4332:97;4362:66;4351:9;4332:97;:::i;:::-;4450:39;4480:8;4469:9;4450:39;:::i;:::-;4438:51;;4522:4;4518:9;4511:5;4507:21;4498:30;;4571:4;4561:8;4557:19;4550:5;4547:30;4537:40;;4266:317;;4190:393;;;;;:::o;4589:77::-;4626:7;4655:5;4644:16;;4589:77;;;:::o;4672:60::-;4700:3;4721:5;4714:12;;4672:60;;;:::o;4738:142::-;4788:9;4821:53;4839:34;4848:24;4866:5;4848:24;:::i;:::-;4839:34;:::i;:::-;4821:53;:::i;:::-;4808:66;;4738:142;;;:::o;4886:75::-;4929:3;4950:5;4943:12;;4886:75;;;:::o;4967:269::-;5077:39;5108:7;5077:39;:::i;:::-;5138:91;5187:41;5211:16;5187:41;:::i;:::-;5179:6;5172:4;5166:11;5138:91;:::i;:::-;5132:4;5125:105;5043:193;4967:269;;;:::o;5242:73::-;5287:3;5308:1;5301:8;;5242:73;:::o;5321:189::-;5398:32;;:::i;:::-;5439:65;5497:6;5489;5483:4;5439:65;:::i;:::-;5374:136;5321:189;;:::o;5516:186::-;5576:120;5593:3;5586:5;5583:14;5576:120;;;5647:39;5684:1;5677:5;5647:39;:::i;:::-;5620:1;5613:5;5609:13;5600:22;;5576:120;;;5516:186;;:::o;5708:543::-;5809:2;5804:3;5801:11;5798:446;;;5843:38;5875:5;5843:38;:::i;:::-;5927:29;5945:10;5927:29;:::i;:::-;5917:8;5913:44;6110:2;6098:10;6095:18;6092:49;;;6131:8;6116:23;;6092:49;6154:80;6210:22;6228:3;6210:22;:::i;:::-;6200:8;6196:37;6183:11;6154:80;:::i;:::-;5813:431;;5798:446;5708:543;;;:::o;6257:117::-;6311:8;6361:5;6355:4;6351:16;6330:37;;6257:117;;;;:::o;6380:169::-;6424:6;6457:51;6505:1;6501:6;6493:5;6490:1;6486:13;6457:51;:::i;:::-;6453:56;6538:4;6532;6528:15;6518:25;;6431:118;6380:169;;;;:::o;6554:295::-;6630:4;6776:29;6801:3;6795:4;6776:29;:::i;:::-;6768:37;;6838:3;6835:1;6831:11;6825:4;6822:21;6814:29;;6554:295;;;;:::o;6854:1395::-;6971:37;7004:3;6971:37;:::i;:::-;7073:18;7065:6;7062:30;7059:56;;;7095:18;;:::i;:::-;7059:56;7139:38;7171:4;7165:11;7139:38;:::i;:::-;7224:67;7284:6;7276;7270:4;7224:67;:::i;:::-;7318:1;7342:4;7329:17;;7374:2;7366:6;7363:14;7391:1;7386:618;;;;8048:1;8065:6;8062:77;;;8114:9;8109:3;8105:19;8099:26;8090:35;;8062:77;8165:67;8225:6;8218:5;8165:67;:::i;:::-;8159:4;8152:81;8021:222;7356:887;;7386:618;7438:4;7434:9;7426:6;7422:22;7472:37;7504:4;7472:37;:::i;:::-;7531:1;7545:208;7559:7;7556:1;7553:14;7545:208;;;7638:9;7633:3;7629:19;7623:26;7615:6;7608:42;7689:1;7681:6;7677:14;7667:24;;7736:2;7725:9;7721:18;7708:31;;7582:4;7579:1;7575:12;7570:17;;7545:208;;;7781:6;7772:7;7769:19;7766:179;;;7839:9;7834:3;7830:19;7824:26;7882:48;7924:4;7916:6;7912:17;7901:9;7882:48;:::i;:::-;7874:6;7867:64;7789:156;7766:179;7991:1;7987;7979:6;7975:14;7971:22;7965:4;7958:36;7393:611;;;7356:887;;6946:1303;;;6854:1395;;:::o;8255:118::-;8342:24;8360:5;8342:24;:::i;:::-;8337:3;8330:37;8255:118;;:::o;8379:222::-;8472:4;8510:2;8499:9;8495:18;8487:26;;8523:71;8591:1;8580:9;8576:17;8567:6;8523:71;:::i;:::-;8379:222;;;;:::o;383:1581:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2945,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4441,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 3933,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1179": {
									"entryPoint": 5441,
									"id": 1179,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3349,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 3484,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1494": {
									"entryPoint": 2938,
									"id": 1494,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1481": {
									"entryPoint": 5953,
									"id": 1481,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_798": {
									"entryPoint": 2963,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3738,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 3109,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 4904,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 2624,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1235,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1858,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 1324,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@destory_1716": {
									"entryPoint": 1455,
									"id": 1716,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@durationTime_1535": {
									"entryPoint": 2916,
									"id": 1535,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@exerciseTime_1533": {
									"entryPoint": 2754,
									"id": 1533,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_1349": {
									"entryPoint": 5611,
									"id": 1349,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_1303": {
									"entryPoint": 5590,
									"id": 1303,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@issueOption_1593": {
									"entryPoint": 1332,
									"id": 1593,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1091,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2373,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@price_1531": {
									"entryPoint": 2557,
									"id": 1531,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1927,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferETH_1678": {
									"entryPoint": 4190,
									"id": 1678,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_1016": {
									"entryPoint": 4060,
									"id": 1016,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_989": {
									"entryPoint": 3611,
									"id": 989,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@settleOption_1653": {
									"entryPoint": 1946,
									"id": 1653,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2413,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1269,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1278,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2784,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2590,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@usdc_1529": {
									"entryPoint": 1418,
									"id": 1529,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1441": {
									"entryPoint": 5812,
									"id": 1441,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack": {
									"entryPoint": 6671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0cd675348041524c27e0a10458b93eacebb240f1e4fa99c29ffa44c888ecdc94_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6ace33062e0a81aa62ef141bc3911c6f7ae64d84af8b1a71c3fc71963e3edb9c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6b3783b480a8bf5fa8a6f973d9985c95e9942055d1b48785f649a7c6ffa19dde_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8cc0384f7716f8237c4bc315fed8a6c2413c45b97b2f6b2db44c9a9c9e84c77c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint128_to_t_uint128_fromStack": {
									"entryPoint": 6864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint32_fromStack": {
									"entryPoint": 7044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint96_to_t_uint96_fromStack": {
									"entryPoint": 6989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7921,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7882,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7829,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed": {
									"entryPoint": 6686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0cd675348041524c27e0a10458b93eacebb240f1e4fa99c29ffa44c888ecdc94__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6ace33062e0a81aa62ef141bc3911c6f7ae64d84af8b1a71c3fc71963e3edb9c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6b3783b480a8bf5fa8a6f973d9985c95e9942055d1b48785f649a7c6ffa19dde__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8cc0384f7716f8237c4bc315fed8a6c2413c45b97b2f6b2db44c9a9c9e84c77c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed": {
									"entryPoint": 6879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": 7059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed": {
									"entryPoint": 7004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint96": {
									"entryPoint": 7326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint128": {
									"entryPoint": 6837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 7029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint96": {
									"entryPoint": 6966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$877_to_t_address": {
									"entryPoint": 6654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6047,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7281,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7084,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7974,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6165,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0cd675348041524c27e0a10458b93eacebb240f1e4fa99c29ffa44c888ecdc94": {
									"entryPoint": 7389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350": {
									"entryPoint": 8109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6ace33062e0a81aa62ef141bc3911c6f7ae64d84af8b1a71c3fc71963e3edb9c": {
									"entryPoint": 7556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6b3783b480a8bf5fa8a6f973d9985c95e9942055d1b48785f649a7c6ffa19dde": {
									"entryPoint": 7177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8cc0384f7716f8237c4bc315fed8a6c2413c45b97b2f6b2db44c9a9c9e84c77c": {
									"entryPoint": 7660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18468:10",
										"nodeType": "YulBlock",
										"src": "0:18468:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:10",
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nativeSrc": "77:22:10",
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nativeSrc": "87:12:10",
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:10",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:10",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nativeSrc": "208:73:10",
													"nodeType": "YulBlock",
													"src": "208:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:10"
																},
																"nativeSrc": "218:19:10",
																"nodeType": "YulFunctionCall",
																"src": "218:19:10"
															},
															"nativeSrc": "218:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:10"
														},
														{
															"nativeSrc": "246:29:10",
															"nodeType": "YulAssignment",
															"src": "246:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:10",
																		"nodeType": "YulLiteral",
																		"src": "270:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:10"
																},
																"nativeSrc": "261:14:10",
																"nodeType": "YulFunctionCall",
																"src": "261:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:10",
														"nodeType": "YulTypedName",
														"src": "180:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:10",
														"nodeType": "YulTypedName",
														"src": "185:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:10",
														"nodeType": "YulTypedName",
														"src": "196:11:10",
														"type": ""
													}
												],
												"src": "112:169:10"
											},
											{
												"body": {
													"nativeSrc": "349:77:10",
													"nodeType": "YulBlock",
													"src": "349:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:10"
																},
																"nativeSrc": "360:23:10",
																"nodeType": "YulFunctionCall",
																"src": "360:23:10"
															},
															"nativeSrc": "360:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:10"
																		},
																		"nativeSrc": "399:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:10",
																		"nodeType": "YulLiteral",
																		"src": "417:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:10"
																},
																"nativeSrc": "392:27:10",
																"nodeType": "YulFunctionCall",
																"src": "392:27:10"
															},
															"nativeSrc": "392:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:10",
														"nodeType": "YulTypedName",
														"src": "331:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:10",
														"nodeType": "YulTypedName",
														"src": "336:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:10",
														"nodeType": "YulTypedName",
														"src": "341:6:10",
														"type": ""
													}
												],
												"src": "287:139:10"
											},
											{
												"body": {
													"nativeSrc": "480:54:10",
													"nodeType": "YulBlock",
													"src": "480:54:10",
													"statements": [
														{
															"nativeSrc": "490:38:10",
															"nodeType": "YulAssignment",
															"src": "490:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:10",
																				"nodeType": "YulLiteral",
																				"src": "515:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:10"
																		},
																		"nativeSrc": "504:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:10",
																				"nodeType": "YulLiteral",
																				"src": "524:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:10"
																		},
																		"nativeSrc": "520:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:10"
																},
																"nativeSrc": "500:28:10",
																"nodeType": "YulFunctionCall",
																"src": "500:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:10",
														"nodeType": "YulTypedName",
														"src": "463:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:10",
														"nodeType": "YulTypedName",
														"src": "473:6:10",
														"type": ""
													}
												],
												"src": "432:102:10"
											},
											{
												"body": {
													"nativeSrc": "632:285:10",
													"nodeType": "YulBlock",
													"src": "632:285:10",
													"statements": [
														{
															"nativeSrc": "642:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:10"
																},
																"nativeSrc": "656:39:10",
																"nodeType": "YulFunctionCall",
																"src": "656:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:10",
																	"nodeType": "YulTypedName",
																	"src": "646:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:10",
															"nodeType": "YulAssignment",
															"src": "704:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:10"
																},
																"nativeSrc": "711:71:10",
																"nodeType": "YulFunctionCall",
																"src": "711:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:10",
																				"nodeType": "YulLiteral",
																				"src": "837:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:10"
																		},
																		"nativeSrc": "826:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:10"
																},
																"nativeSrc": "791:65:10",
																"nodeType": "YulFunctionCall",
																"src": "791:65:10"
															},
															"nativeSrc": "791:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:10"
														},
														{
															"nativeSrc": "865:46:10",
															"nodeType": "YulAssignment",
															"src": "865:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:10"
																		},
																		"nativeSrc": "881:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:10"
																},
																"nativeSrc": "872:39:10",
																"nodeType": "YulFunctionCall",
																"src": "872:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:10",
														"nodeType": "YulTypedName",
														"src": "613:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:10",
														"nodeType": "YulTypedName",
														"src": "620:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:10",
														"nodeType": "YulTypedName",
														"src": "628:3:10",
														"type": ""
													}
												],
												"src": "540:377:10"
											},
											{
												"body": {
													"nativeSrc": "1041:195:10",
													"nodeType": "YulBlock",
													"src": "1041:195:10",
													"statements": [
														{
															"nativeSrc": "1051:26:10",
															"nodeType": "YulAssignment",
															"src": "1051:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:10"
																},
																"nativeSrc": "1059:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:10"
																		},
																		"nativeSrc": "1094:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:10"
																		},
																		"nativeSrc": "1113:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:10"
																},
																"nativeSrc": "1087:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:10"
															},
															"nativeSrc": "1087:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:10"
														},
														{
															"nativeSrc": "1143:86:10",
															"nodeType": "YulAssignment",
															"src": "1143:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:10"
																},
																"nativeSrc": "1151:78:10",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:10",
														"nodeType": "YulTypedName",
														"src": "1013:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:10",
														"nodeType": "YulTypedName",
														"src": "1025:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:10",
														"nodeType": "YulTypedName",
														"src": "1036:4:10",
														"type": ""
													}
												],
												"src": "923:313:10"
											},
											{
												"body": {
													"nativeSrc": "1282:35:10",
													"nodeType": "YulBlock",
													"src": "1282:35:10",
													"statements": [
														{
															"nativeSrc": "1292:19:10",
															"nodeType": "YulAssignment",
															"src": "1292:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:10"
																},
																"nativeSrc": "1302:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:10",
														"nodeType": "YulTypedName",
														"src": "1275:6:10",
														"type": ""
													}
												],
												"src": "1242:75:10"
											},
											{
												"body": {
													"nativeSrc": "1412:28:10",
													"nodeType": "YulBlock",
													"src": "1412:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:10"
																},
																"nativeSrc": "1422:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:10"
															},
															"nativeSrc": "1422:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:10"
											},
											{
												"body": {
													"nativeSrc": "1535:28:10",
													"nodeType": "YulBlock",
													"src": "1535:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:10"
																},
																"nativeSrc": "1545:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:10"
															},
															"nativeSrc": "1545:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:10"
											},
											{
												"body": {
													"nativeSrc": "1614:81:10",
													"nodeType": "YulBlock",
													"src": "1614:81:10",
													"statements": [
														{
															"nativeSrc": "1624:65:10",
															"nodeType": "YulAssignment",
															"src": "1624:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:10"
																},
																"nativeSrc": "1635:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:10",
														"nodeType": "YulTypedName",
														"src": "1596:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:10",
														"nodeType": "YulTypedName",
														"src": "1606:7:10",
														"type": ""
													}
												],
												"src": "1569:126:10"
											},
											{
												"body": {
													"nativeSrc": "1746:51:10",
													"nodeType": "YulBlock",
													"src": "1746:51:10",
													"statements": [
														{
															"nativeSrc": "1756:35:10",
															"nodeType": "YulAssignment",
															"src": "1756:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:10"
																},
																"nativeSrc": "1767:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:10",
														"nodeType": "YulTypedName",
														"src": "1728:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:10",
														"nodeType": "YulTypedName",
														"src": "1738:7:10",
														"type": ""
													}
												],
												"src": "1701:96:10"
											},
											{
												"body": {
													"nativeSrc": "1846:79:10",
													"nodeType": "YulBlock",
													"src": "1846:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:10",
																"nodeType": "YulBlock",
																"src": "1903:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:10"
																			},
																			"nativeSrc": "1905:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:10"
																		},
																		"nativeSrc": "1905:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:10"
																				},
																				"nativeSrc": "1876:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:10"
																		},
																		"nativeSrc": "1866:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:10"
																},
																"nativeSrc": "1859:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:10"
															},
															"nativeSrc": "1856:63:10",
															"nodeType": "YulIf",
															"src": "1856:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:10",
														"nodeType": "YulTypedName",
														"src": "1839:5:10",
														"type": ""
													}
												],
												"src": "1803:122:10"
											},
											{
												"body": {
													"nativeSrc": "1983:87:10",
													"nodeType": "YulBlock",
													"src": "1983:87:10",
													"statements": [
														{
															"nativeSrc": "1993:29:10",
															"nodeType": "YulAssignment",
															"src": "1993:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:10"
																},
																"nativeSrc": "2002:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:10"
																},
																"nativeSrc": "2031:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:10"
															},
															"nativeSrc": "2031:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:10",
														"nodeType": "YulTypedName",
														"src": "1961:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:10",
														"nodeType": "YulTypedName",
														"src": "1969:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:10",
														"nodeType": "YulTypedName",
														"src": "1977:5:10",
														"type": ""
													}
												],
												"src": "1931:139:10"
											},
											{
												"body": {
													"nativeSrc": "2121:32:10",
													"nodeType": "YulBlock",
													"src": "2121:32:10",
													"statements": [
														{
															"nativeSrc": "2131:16:10",
															"nodeType": "YulAssignment",
															"src": "2131:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:10",
																"nodeType": "YulIdentifier",
																"src": "2142:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:10",
														"nodeType": "YulTypedName",
														"src": "2103:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:10",
														"nodeType": "YulTypedName",
														"src": "2113:7:10",
														"type": ""
													}
												],
												"src": "2076:77:10"
											},
											{
												"body": {
													"nativeSrc": "2202:79:10",
													"nodeType": "YulBlock",
													"src": "2202:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:10",
																"nodeType": "YulBlock",
																"src": "2259:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:10"
																			},
																			"nativeSrc": "2261:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:10"
																		},
																		"nativeSrc": "2261:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:10"
																				},
																				"nativeSrc": "2232:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:10"
																		},
																		"nativeSrc": "2222:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:10"
																},
																"nativeSrc": "2215:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:10"
															},
															"nativeSrc": "2212:63:10",
															"nodeType": "YulIf",
															"src": "2212:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:10",
														"nodeType": "YulTypedName",
														"src": "2195:5:10",
														"type": ""
													}
												],
												"src": "2159:122:10"
											},
											{
												"body": {
													"nativeSrc": "2339:87:10",
													"nodeType": "YulBlock",
													"src": "2339:87:10",
													"statements": [
														{
															"nativeSrc": "2349:29:10",
															"nodeType": "YulAssignment",
															"src": "2349:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:10"
																},
																"nativeSrc": "2358:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:10"
																},
																"nativeSrc": "2387:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:10"
															},
															"nativeSrc": "2387:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:10",
														"nodeType": "YulTypedName",
														"src": "2317:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:10",
														"nodeType": "YulTypedName",
														"src": "2325:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:10",
														"nodeType": "YulTypedName",
														"src": "2333:5:10",
														"type": ""
													}
												],
												"src": "2287:139:10"
											},
											{
												"body": {
													"nativeSrc": "2515:391:10",
													"nodeType": "YulBlock",
													"src": "2515:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:10",
																"nodeType": "YulBlock",
																"src": "2561:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:10"
																			},
																			"nativeSrc": "2563:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:10"
																		},
																		"nativeSrc": "2563:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:10"
																		},
																		"nativeSrc": "2532:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:10"
																},
																"nativeSrc": "2528:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:10"
															},
															"nativeSrc": "2525:119:10",
															"nodeType": "YulIf",
															"src": "2525:119:10"
														},
														{
															"nativeSrc": "2654:117:10",
															"nodeType": "YulBlock",
															"src": "2654:117:10",
															"statements": [
																{
																	"nativeSrc": "2669:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:10"
																				},
																				"nativeSrc": "2729:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:10"
																		},
																		"nativeSrc": "2708:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:10",
															"nodeType": "YulBlock",
															"src": "2781:118:10",
															"statements": [
																{
																	"nativeSrc": "2796:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:10"
																				},
																				"nativeSrc": "2857:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:10"
																		},
																		"nativeSrc": "2836:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:10",
														"nodeType": "YulTypedName",
														"src": "2477:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:10",
														"nodeType": "YulTypedName",
														"src": "2488:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:10",
														"nodeType": "YulTypedName",
														"src": "2500:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:10",
														"nodeType": "YulTypedName",
														"src": "2508:6:10",
														"type": ""
													}
												],
												"src": "2432:474:10"
											},
											{
												"body": {
													"nativeSrc": "2954:48:10",
													"nodeType": "YulBlock",
													"src": "2954:48:10",
													"statements": [
														{
															"nativeSrc": "2964:32:10",
															"nodeType": "YulAssignment",
															"src": "2964:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:10"
																		},
																		"nativeSrc": "2982:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:10"
																},
																"nativeSrc": "2975:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:10",
														"nodeType": "YulTypedName",
														"src": "2936:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:10",
														"nodeType": "YulTypedName",
														"src": "2946:7:10",
														"type": ""
													}
												],
												"src": "2912:90:10"
											},
											{
												"body": {
													"nativeSrc": "3067:50:10",
													"nodeType": "YulBlock",
													"src": "3067:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:10"
																		},
																		"nativeSrc": "3089:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:10"
																},
																"nativeSrc": "3077:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:10"
															},
															"nativeSrc": "3077:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:10",
														"nodeType": "YulTypedName",
														"src": "3055:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:10",
														"nodeType": "YulTypedName",
														"src": "3062:3:10",
														"type": ""
													}
												],
												"src": "3008:109:10"
											},
											{
												"body": {
													"nativeSrc": "3215:118:10",
													"nodeType": "YulBlock",
													"src": "3215:118:10",
													"statements": [
														{
															"nativeSrc": "3225:26:10",
															"nodeType": "YulAssignment",
															"src": "3225:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:10"
																},
																"nativeSrc": "3233:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:10"
																		},
																		"nativeSrc": "3308:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:10"
																},
																"nativeSrc": "3261:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:10"
															},
															"nativeSrc": "3261:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:10",
														"nodeType": "YulTypedName",
														"src": "3187:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:10",
														"nodeType": "YulTypedName",
														"src": "3199:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:10",
														"nodeType": "YulTypedName",
														"src": "3210:4:10",
														"type": ""
													}
												],
												"src": "3123:210:10"
											},
											{
												"body": {
													"nativeSrc": "3404:53:10",
													"nodeType": "YulBlock",
													"src": "3404:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:10"
																		},
																		"nativeSrc": "3426:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:10"
																},
																"nativeSrc": "3414:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:10"
															},
															"nativeSrc": "3414:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:10",
														"nodeType": "YulTypedName",
														"src": "3392:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:10",
														"nodeType": "YulTypedName",
														"src": "3399:3:10",
														"type": ""
													}
												],
												"src": "3339:118:10"
											},
											{
												"body": {
													"nativeSrc": "3561:124:10",
													"nodeType": "YulBlock",
													"src": "3561:124:10",
													"statements": [
														{
															"nativeSrc": "3571:26:10",
															"nodeType": "YulAssignment",
															"src": "3571:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:10"
																},
																"nativeSrc": "3579:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:10"
																		},
																		"nativeSrc": "3660:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:10"
																},
																"nativeSrc": "3607:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:10"
															},
															"nativeSrc": "3607:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:10",
														"nodeType": "YulTypedName",
														"src": "3533:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:10",
														"nodeType": "YulTypedName",
														"src": "3545:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:10",
														"nodeType": "YulTypedName",
														"src": "3556:4:10",
														"type": ""
													}
												],
												"src": "3463:222:10"
											},
											{
												"body": {
													"nativeSrc": "3791:519:10",
													"nodeType": "YulBlock",
													"src": "3791:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:10",
																"nodeType": "YulBlock",
																"src": "3837:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:10"
																			},
																			"nativeSrc": "3839:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:10"
																		},
																		"nativeSrc": "3839:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:10"
																		},
																		"nativeSrc": "3808:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:10"
																},
																"nativeSrc": "3804:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:10"
															},
															"nativeSrc": "3801:119:10",
															"nodeType": "YulIf",
															"src": "3801:119:10"
														},
														{
															"nativeSrc": "3930:117:10",
															"nodeType": "YulBlock",
															"src": "3930:117:10",
															"statements": [
																{
																	"nativeSrc": "3945:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:10"
																				},
																				"nativeSrc": "4005:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:10"
																		},
																		"nativeSrc": "3984:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:10",
															"nodeType": "YulBlock",
															"src": "4057:118:10",
															"statements": [
																{
																	"nativeSrc": "4072:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:10"
																				},
																				"nativeSrc": "4133:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:10"
																		},
																		"nativeSrc": "4112:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:10",
															"nodeType": "YulBlock",
															"src": "4185:118:10",
															"statements": [
																{
																	"nativeSrc": "4200:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:10"
																				},
																				"nativeSrc": "4261:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:10"
																		},
																		"nativeSrc": "4240:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:10",
														"nodeType": "YulTypedName",
														"src": "3745:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:10",
														"nodeType": "YulTypedName",
														"src": "3756:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:10",
														"nodeType": "YulTypedName",
														"src": "3768:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:10",
														"nodeType": "YulTypedName",
														"src": "3776:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:10",
														"nodeType": "YulTypedName",
														"src": "3784:6:10",
														"type": ""
													}
												],
												"src": "3691:619:10"
											},
											{
												"body": {
													"nativeSrc": "4359:43:10",
													"nodeType": "YulBlock",
													"src": "4359:43:10",
													"statements": [
														{
															"nativeSrc": "4369:27:10",
															"nodeType": "YulAssignment",
															"src": "4369:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:10"
																},
																"nativeSrc": "4380:16:10",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:10",
														"nodeType": "YulTypedName",
														"src": "4341:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:10",
														"nodeType": "YulTypedName",
														"src": "4351:7:10",
														"type": ""
													}
												],
												"src": "4316:86:10"
											},
											{
												"body": {
													"nativeSrc": "4469:51:10",
													"nodeType": "YulBlock",
													"src": "4469:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:10"
																		},
																		"nativeSrc": "4491:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:10"
																},
																"nativeSrc": "4479:35:10",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:10"
															},
															"nativeSrc": "4479:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:10",
														"nodeType": "YulTypedName",
														"src": "4457:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:10",
														"nodeType": "YulTypedName",
														"src": "4464:3:10",
														"type": ""
													}
												],
												"src": "4408:112:10"
											},
											{
												"body": {
													"nativeSrc": "4620:120:10",
													"nodeType": "YulBlock",
													"src": "4620:120:10",
													"statements": [
														{
															"nativeSrc": "4630:26:10",
															"nodeType": "YulAssignment",
															"src": "4630:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:10"
																},
																"nativeSrc": "4638:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:10"
																		},
																		"nativeSrc": "4715:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:10"
																},
																"nativeSrc": "4666:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:10"
															},
															"nativeSrc": "4666:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:10",
														"nodeType": "YulTypedName",
														"src": "4592:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:10",
														"nodeType": "YulTypedName",
														"src": "4604:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:10",
														"nodeType": "YulTypedName",
														"src": "4615:4:10",
														"type": ""
													}
												],
												"src": "4526:214:10"
											},
											{
												"body": {
													"nativeSrc": "4778:28:10",
													"nodeType": "YulBlock",
													"src": "4778:28:10",
													"statements": [
														{
															"nativeSrc": "4788:12:10",
															"nodeType": "YulAssignment",
															"src": "4788:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "4795:5:10",
																"nodeType": "YulIdentifier",
																"src": "4795:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4788:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4788:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4746:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4764:5:10",
														"nodeType": "YulTypedName",
														"src": "4764:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4774:3:10",
														"nodeType": "YulTypedName",
														"src": "4774:3:10",
														"type": ""
													}
												],
												"src": "4746:60:10"
											},
											{
												"body": {
													"nativeSrc": "4872:82:10",
													"nodeType": "YulBlock",
													"src": "4872:82:10",
													"statements": [
														{
															"nativeSrc": "4882:66:10",
															"nodeType": "YulAssignment",
															"src": "4882:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4940:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4940:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4922:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "4922:17:10"
																				},
																				"nativeSrc": "4922:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4922:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4913:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "4913:8:10"
																		},
																		"nativeSrc": "4913:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4913:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4895:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4895:17:10"
																},
																"nativeSrc": "4895:53:10",
																"nodeType": "YulFunctionCall",
																"src": "4895:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4882:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4882:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4812:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4852:5:10",
														"nodeType": "YulTypedName",
														"src": "4852:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4862:9:10",
														"nodeType": "YulTypedName",
														"src": "4862:9:10",
														"type": ""
													}
												],
												"src": "4812:142:10"
											},
											{
												"body": {
													"nativeSrc": "5020:66:10",
													"nodeType": "YulBlock",
													"src": "5020:66:10",
													"statements": [
														{
															"nativeSrc": "5030:50:10",
															"nodeType": "YulAssignment",
															"src": "5030:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5074:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5074:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5043:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "5043:30:10"
																},
																"nativeSrc": "5043:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5043:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5030:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5030:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4960:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5000:5:10",
														"nodeType": "YulTypedName",
														"src": "5000:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5010:9:10",
														"nodeType": "YulTypedName",
														"src": "5010:9:10",
														"type": ""
													}
												],
												"src": "4960:126:10"
											},
											{
												"body": {
													"nativeSrc": "5166:66:10",
													"nodeType": "YulBlock",
													"src": "5166:66:10",
													"statements": [
														{
															"nativeSrc": "5176:50:10",
															"nodeType": "YulAssignment",
															"src": "5176:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5220:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5220:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5189:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "5189:30:10"
																},
																"nativeSrc": "5189:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5189:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5176:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5176:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$877_to_t_address",
												"nativeSrc": "5092:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5146:5:10",
														"nodeType": "YulTypedName",
														"src": "5146:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5156:9:10",
														"nodeType": "YulTypedName",
														"src": "5156:9:10",
														"type": ""
													}
												],
												"src": "5092:140:10"
											},
											{
												"body": {
													"nativeSrc": "5317:80:10",
													"nodeType": "YulBlock",
													"src": "5317:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5334:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5334:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5384:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5384:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$877_to_t_address",
																			"nativeSrc": "5339:44:10",
																			"nodeType": "YulIdentifier",
																			"src": "5339:44:10"
																		},
																		"nativeSrc": "5339:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5327:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5327:6:10"
																},
																"nativeSrc": "5327:64:10",
																"nodeType": "YulFunctionCall",
																"src": "5327:64:10"
															},
															"nativeSrc": "5327:64:10",
															"nodeType": "YulExpressionStatement",
															"src": "5327:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack",
												"nativeSrc": "5238:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5305:5:10",
														"nodeType": "YulTypedName",
														"src": "5305:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5312:3:10",
														"nodeType": "YulTypedName",
														"src": "5312:3:10",
														"type": ""
													}
												],
												"src": "5238:159:10"
											},
											{
												"body": {
													"nativeSrc": "5515:138:10",
													"nodeType": "YulBlock",
													"src": "5515:138:10",
													"statements": [
														{
															"nativeSrc": "5525:26:10",
															"nodeType": "YulAssignment",
															"src": "5525:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5537:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5537:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5533:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5533:3:10"
																},
																"nativeSrc": "5533:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5533:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5525:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5525:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5619:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5619:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5632:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5632:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5643:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5643:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5628:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5628:3:10"
																		},
																		"nativeSrc": "5628:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5628:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack",
																	"nativeSrc": "5561:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "5561:57:10"
																},
																"nativeSrc": "5561:85:10",
																"nodeType": "YulFunctionCall",
																"src": "5561:85:10"
															},
															"nativeSrc": "5561:85:10",
															"nodeType": "YulExpressionStatement",
															"src": "5561:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed",
												"nativeSrc": "5403:250:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5487:9:10",
														"nodeType": "YulTypedName",
														"src": "5487:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5499:6:10",
														"nodeType": "YulTypedName",
														"src": "5499:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5510:4:10",
														"nodeType": "YulTypedName",
														"src": "5510:4:10",
														"type": ""
													}
												],
												"src": "5403:250:10"
											},
											{
												"body": {
													"nativeSrc": "5725:263:10",
													"nodeType": "YulBlock",
													"src": "5725:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5771:83:10",
																"nodeType": "YulBlock",
																"src": "5771:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5773:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5773:77:10"
																			},
																			"nativeSrc": "5773:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5773:79:10"
																		},
																		"nativeSrc": "5773:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5773:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5746:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5746:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5755:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5755:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5742:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5742:3:10"
																		},
																		"nativeSrc": "5742:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5742:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5767:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5767:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5738:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5738:3:10"
																},
																"nativeSrc": "5738:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5738:32:10"
															},
															"nativeSrc": "5735:119:10",
															"nodeType": "YulIf",
															"src": "5735:119:10"
														},
														{
															"nativeSrc": "5864:117:10",
															"nodeType": "YulBlock",
															"src": "5864:117:10",
															"statements": [
																{
																	"nativeSrc": "5879:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5879:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5893:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5893:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5883:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5883:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5908:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5908:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5943:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5943:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5954:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5954:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5939:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5939:3:10"
																				},
																				"nativeSrc": "5939:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5939:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5963:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5963:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5918:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5918:20:10"
																		},
																		"nativeSrc": "5918:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5918:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5908:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5908:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5659:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5695:9:10",
														"nodeType": "YulTypedName",
														"src": "5695:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5706:7:10",
														"nodeType": "YulTypedName",
														"src": "5706:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5718:6:10",
														"nodeType": "YulTypedName",
														"src": "5718:6:10",
														"type": ""
													}
												],
												"src": "5659:329:10"
											},
											{
												"body": {
													"nativeSrc": "6060:263:10",
													"nodeType": "YulBlock",
													"src": "6060:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6106:83:10",
																"nodeType": "YulBlock",
																"src": "6106:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6108:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6108:77:10"
																			},
																			"nativeSrc": "6108:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6108:79:10"
																		},
																		"nativeSrc": "6108:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6108:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6081:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6081:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6090:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6090:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6077:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6077:3:10"
																		},
																		"nativeSrc": "6077:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6077:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6102:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6102:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6073:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6073:3:10"
																},
																"nativeSrc": "6073:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6073:32:10"
															},
															"nativeSrc": "6070:119:10",
															"nodeType": "YulIf",
															"src": "6070:119:10"
														},
														{
															"nativeSrc": "6199:117:10",
															"nodeType": "YulBlock",
															"src": "6199:117:10",
															"statements": [
																{
																	"nativeSrc": "6214:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6214:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6228:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6228:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6218:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6218:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6243:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6243:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6278:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6278:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6289:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6289:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6274:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6274:3:10"
																				},
																				"nativeSrc": "6274:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6274:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6298:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6298:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6253:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6253:20:10"
																		},
																		"nativeSrc": "6253:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6253:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6243:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6243:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5994:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6030:9:10",
														"nodeType": "YulTypedName",
														"src": "6030:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6041:7:10",
														"nodeType": "YulTypedName",
														"src": "6041:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6053:6:10",
														"nodeType": "YulTypedName",
														"src": "6053:6:10",
														"type": ""
													}
												],
												"src": "5994:329:10"
											},
											{
												"body": {
													"nativeSrc": "6394:53:10",
													"nodeType": "YulBlock",
													"src": "6394:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6411:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6411:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6434:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6434:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6416:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "6416:17:10"
																		},
																		"nativeSrc": "6416:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6416:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6404:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6404:6:10"
																},
																"nativeSrc": "6404:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6404:37:10"
															},
															"nativeSrc": "6404:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "6404:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6329:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6382:5:10",
														"nodeType": "YulTypedName",
														"src": "6382:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6389:3:10",
														"nodeType": "YulTypedName",
														"src": "6389:3:10",
														"type": ""
													}
												],
												"src": "6329:118:10"
											},
											{
												"body": {
													"nativeSrc": "6551:124:10",
													"nodeType": "YulBlock",
													"src": "6551:124:10",
													"statements": [
														{
															"nativeSrc": "6561:26:10",
															"nodeType": "YulAssignment",
															"src": "6561:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6573:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6573:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6584:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6584:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6569:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6569:3:10"
																},
																"nativeSrc": "6569:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6569:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6561:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6561:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6641:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6641:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6654:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6654:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6665:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6665:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6650:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6650:3:10"
																		},
																		"nativeSrc": "6650:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6650:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6597:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6597:43:10"
																},
																"nativeSrc": "6597:71:10",
																"nodeType": "YulFunctionCall",
																"src": "6597:71:10"
															},
															"nativeSrc": "6597:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "6597:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6453:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6523:9:10",
														"nodeType": "YulTypedName",
														"src": "6523:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6535:6:10",
														"nodeType": "YulTypedName",
														"src": "6535:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6546:4:10",
														"nodeType": "YulTypedName",
														"src": "6546:4:10",
														"type": ""
													}
												],
												"src": "6453:222:10"
											},
											{
												"body": {
													"nativeSrc": "6726:73:10",
													"nodeType": "YulBlock",
													"src": "6726:73:10",
													"statements": [
														{
															"nativeSrc": "6736:57:10",
															"nodeType": "YulAssignment",
															"src": "6736:57:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6751:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6751:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6758:34:10",
																		"nodeType": "YulLiteral",
																		"src": "6758:34:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6747:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6747:3:10"
																},
																"nativeSrc": "6747:46:10",
																"nodeType": "YulFunctionCall",
																"src": "6747:46:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6736:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "6736:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint128",
												"nativeSrc": "6681:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6708:5:10",
														"nodeType": "YulTypedName",
														"src": "6708:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6718:7:10",
														"nodeType": "YulTypedName",
														"src": "6718:7:10",
														"type": ""
													}
												],
												"src": "6681:118:10"
											},
											{
												"body": {
													"nativeSrc": "6870:53:10",
													"nodeType": "YulBlock",
													"src": "6870:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6887:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6887:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6910:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6910:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint128",
																			"nativeSrc": "6892:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "6892:17:10"
																		},
																		"nativeSrc": "6892:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6892:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6880:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6880:6:10"
																},
																"nativeSrc": "6880:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6880:37:10"
															},
															"nativeSrc": "6880:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "6880:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
												"nativeSrc": "6805:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6858:5:10",
														"nodeType": "YulTypedName",
														"src": "6858:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6865:3:10",
														"nodeType": "YulTypedName",
														"src": "6865:3:10",
														"type": ""
													}
												],
												"src": "6805:118:10"
											},
											{
												"body": {
													"nativeSrc": "7027:124:10",
													"nodeType": "YulBlock",
													"src": "7027:124:10",
													"statements": [
														{
															"nativeSrc": "7037:26:10",
															"nodeType": "YulAssignment",
															"src": "7037:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7049:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7049:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7060:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7060:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7045:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7045:3:10"
																},
																"nativeSrc": "7045:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7045:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7037:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7037:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7117:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7117:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7130:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7130:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7141:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7141:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7126:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7126:3:10"
																		},
																		"nativeSrc": "7126:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7126:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nativeSrc": "7073:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7073:43:10"
																},
																"nativeSrc": "7073:71:10",
																"nodeType": "YulFunctionCall",
																"src": "7073:71:10"
															},
															"nativeSrc": "7073:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "7073:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed",
												"nativeSrc": "6929:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6999:9:10",
														"nodeType": "YulTypedName",
														"src": "6999:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7011:6:10",
														"nodeType": "YulTypedName",
														"src": "7011:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7022:4:10",
														"nodeType": "YulTypedName",
														"src": "7022:4:10",
														"type": ""
													}
												],
												"src": "6929:222:10"
											},
											{
												"body": {
													"nativeSrc": "7240:391:10",
													"nodeType": "YulBlock",
													"src": "7240:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7286:83:10",
																"nodeType": "YulBlock",
																"src": "7286:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7288:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7288:77:10"
																			},
																			"nativeSrc": "7288:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7288:79:10"
																		},
																		"nativeSrc": "7288:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7288:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7261:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7261:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7270:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7270:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7257:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7257:3:10"
																		},
																		"nativeSrc": "7257:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7257:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7282:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7282:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7253:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7253:3:10"
																},
																"nativeSrc": "7253:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7253:32:10"
															},
															"nativeSrc": "7250:119:10",
															"nodeType": "YulIf",
															"src": "7250:119:10"
														},
														{
															"nativeSrc": "7379:117:10",
															"nodeType": "YulBlock",
															"src": "7379:117:10",
															"statements": [
																{
																	"nativeSrc": "7394:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7394:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7408:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7408:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7398:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7398:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7423:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7423:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7458:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7458:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7469:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7469:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7454:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7454:3:10"
																				},
																				"nativeSrc": "7454:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7454:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7478:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7478:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7433:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7433:20:10"
																		},
																		"nativeSrc": "7433:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7433:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7423:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7423:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7506:118:10",
															"nodeType": "YulBlock",
															"src": "7506:118:10",
															"statements": [
																{
																	"nativeSrc": "7521:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7521:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7535:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7535:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7525:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7525:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7551:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7551:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7586:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7586:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7597:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7597:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7582:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7582:3:10"
																				},
																				"nativeSrc": "7582:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7582:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7606:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7606:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7561:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7561:20:10"
																		},
																		"nativeSrc": "7561:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7561:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7551:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7551:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7157:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7202:9:10",
														"nodeType": "YulTypedName",
														"src": "7202:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7213:7:10",
														"nodeType": "YulTypedName",
														"src": "7213:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7225:6:10",
														"nodeType": "YulTypedName",
														"src": "7225:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7233:6:10",
														"nodeType": "YulTypedName",
														"src": "7233:6:10",
														"type": ""
													}
												],
												"src": "7157:474:10"
											},
											{
												"body": {
													"nativeSrc": "7681:65:10",
													"nodeType": "YulBlock",
													"src": "7681:65:10",
													"statements": [
														{
															"nativeSrc": "7691:49:10",
															"nodeType": "YulAssignment",
															"src": "7691:49:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7706:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7706:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7713:26:10",
																		"nodeType": "YulLiteral",
																		"src": "7713:26:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7702:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7702:3:10"
																},
																"nativeSrc": "7702:38:10",
																"nodeType": "YulFunctionCall",
																"src": "7702:38:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7691:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "7691:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint96",
												"nativeSrc": "7637:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7663:5:10",
														"nodeType": "YulTypedName",
														"src": "7663:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7673:7:10",
														"nodeType": "YulTypedName",
														"src": "7673:7:10",
														"type": ""
													}
												],
												"src": "7637:109:10"
											},
											{
												"body": {
													"nativeSrc": "7815:52:10",
													"nodeType": "YulBlock",
													"src": "7815:52:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7832:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7832:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7854:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7854:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint96",
																			"nativeSrc": "7837:16:10",
																			"nodeType": "YulIdentifier",
																			"src": "7837:16:10"
																		},
																		"nativeSrc": "7837:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7837:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7825:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7825:6:10"
																},
																"nativeSrc": "7825:36:10",
																"nodeType": "YulFunctionCall",
																"src": "7825:36:10"
															},
															"nativeSrc": "7825:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "7825:36:10"
														}
													]
												},
												"name": "abi_encode_t_uint96_to_t_uint96_fromStack",
												"nativeSrc": "7752:115:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7803:5:10",
														"nodeType": "YulTypedName",
														"src": "7803:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7810:3:10",
														"nodeType": "YulTypedName",
														"src": "7810:3:10",
														"type": ""
													}
												],
												"src": "7752:115:10"
											},
											{
												"body": {
													"nativeSrc": "7969:122:10",
													"nodeType": "YulBlock",
													"src": "7969:122:10",
													"statements": [
														{
															"nativeSrc": "7979:26:10",
															"nodeType": "YulAssignment",
															"src": "7979:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7991:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7991:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8002:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8002:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7987:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7987:3:10"
																},
																"nativeSrc": "7987:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7987:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7979:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7979:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8057:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8057:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8070:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8070:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8081:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8081:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8066:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8066:3:10"
																		},
																		"nativeSrc": "8066:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8066:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint96_to_t_uint96_fromStack",
																	"nativeSrc": "8015:41:10",
																	"nodeType": "YulIdentifier",
																	"src": "8015:41:10"
																},
																"nativeSrc": "8015:69:10",
																"nodeType": "YulFunctionCall",
																"src": "8015:69:10"
															},
															"nativeSrc": "8015:69:10",
															"nodeType": "YulExpressionStatement",
															"src": "8015:69:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed",
												"nativeSrc": "7873:218:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7941:9:10",
														"nodeType": "YulTypedName",
														"src": "7941:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7953:6:10",
														"nodeType": "YulTypedName",
														"src": "7953:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7964:4:10",
														"nodeType": "YulTypedName",
														"src": "7964:4:10",
														"type": ""
													}
												],
												"src": "7873:218:10"
											},
											{
												"body": {
													"nativeSrc": "8141:49:10",
													"nodeType": "YulBlock",
													"src": "8141:49:10",
													"statements": [
														{
															"nativeSrc": "8151:33:10",
															"nodeType": "YulAssignment",
															"src": "8151:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8166:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8166:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8173:10:10",
																		"nodeType": "YulLiteral",
																		"src": "8173:10:10",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8162:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8162:3:10"
																},
																"nativeSrc": "8162:22:10",
																"nodeType": "YulFunctionCall",
																"src": "8162:22:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8151:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "8151:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nativeSrc": "8097:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8123:5:10",
														"nodeType": "YulTypedName",
														"src": "8123:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8133:7:10",
														"nodeType": "YulTypedName",
														"src": "8133:7:10",
														"type": ""
													}
												],
												"src": "8097:93:10"
											},
											{
												"body": {
													"nativeSrc": "8259:52:10",
													"nodeType": "YulBlock",
													"src": "8259:52:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8276:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8276:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8298:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8298:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nativeSrc": "8281:16:10",
																			"nodeType": "YulIdentifier",
																			"src": "8281:16:10"
																		},
																		"nativeSrc": "8281:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8281:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8269:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8269:6:10"
																},
																"nativeSrc": "8269:36:10",
																"nodeType": "YulFunctionCall",
																"src": "8269:36:10"
															},
															"nativeSrc": "8269:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "8269:36:10"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
												"nativeSrc": "8196:115:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8247:5:10",
														"nodeType": "YulTypedName",
														"src": "8247:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8254:3:10",
														"nodeType": "YulTypedName",
														"src": "8254:3:10",
														"type": ""
													}
												],
												"src": "8196:115:10"
											},
											{
												"body": {
													"nativeSrc": "8413:122:10",
													"nodeType": "YulBlock",
													"src": "8413:122:10",
													"statements": [
														{
															"nativeSrc": "8423:26:10",
															"nodeType": "YulAssignment",
															"src": "8423:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8435:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8435:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8446:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8446:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8431:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8431:3:10"
																},
																"nativeSrc": "8431:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8431:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8423:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8423:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8501:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8501:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8514:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8514:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8525:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8525:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8510:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8510:3:10"
																		},
																		"nativeSrc": "8510:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8510:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
																	"nativeSrc": "8459:41:10",
																	"nodeType": "YulIdentifier",
																	"src": "8459:41:10"
																},
																"nativeSrc": "8459:69:10",
																"nodeType": "YulFunctionCall",
																"src": "8459:69:10"
															},
															"nativeSrc": "8459:69:10",
															"nodeType": "YulExpressionStatement",
															"src": "8459:69:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nativeSrc": "8317:218:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8385:9:10",
														"nodeType": "YulTypedName",
														"src": "8385:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8397:6:10",
														"nodeType": "YulTypedName",
														"src": "8397:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8408:4:10",
														"nodeType": "YulTypedName",
														"src": "8408:4:10",
														"type": ""
													}
												],
												"src": "8317:218:10"
											},
											{
												"body": {
													"nativeSrc": "8569:152:10",
													"nodeType": "YulBlock",
													"src": "8569:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8586:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8586:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8589:77:10",
																		"nodeType": "YulLiteral",
																		"src": "8589:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8579:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8579:6:10"
																},
																"nativeSrc": "8579:88:10",
																"nodeType": "YulFunctionCall",
																"src": "8579:88:10"
															},
															"nativeSrc": "8579:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "8579:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8683:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8683:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8686:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8686:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8676:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8676:6:10"
																},
																"nativeSrc": "8676:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8676:15:10"
															},
															"nativeSrc": "8676:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8676:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8707:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8707:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8710:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8710:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8700:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8700:6:10"
																},
																"nativeSrc": "8700:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8700:15:10"
															},
															"nativeSrc": "8700:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8700:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8541:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "8541:180:10"
											},
											{
												"body": {
													"nativeSrc": "8778:269:10",
													"nodeType": "YulBlock",
													"src": "8778:269:10",
													"statements": [
														{
															"nativeSrc": "8788:22:10",
															"nodeType": "YulAssignment",
															"src": "8788:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8802:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8802:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8808:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8808:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8798:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8798:3:10"
																},
																"nativeSrc": "8798:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8798:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8788:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8788:6:10"
																}
															]
														},
														{
															"nativeSrc": "8819:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8819:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8849:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8849:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8855:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8855:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8845:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8845:3:10"
																},
																"nativeSrc": "8845:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8845:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8823:18:10",
																	"nodeType": "YulTypedName",
																	"src": "8823:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8896:51:10",
																"nodeType": "YulBlock",
																"src": "8896:51:10",
																"statements": [
																	{
																		"nativeSrc": "8910:27:10",
																		"nodeType": "YulAssignment",
																		"src": "8910:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8924:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8924:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8932:4:10",
																					"nodeType": "YulLiteral",
																					"src": "8932:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8920:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8920:3:10"
																			},
																			"nativeSrc": "8920:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8920:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8910:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8910:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8876:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "8876:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8869:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8869:6:10"
																},
																"nativeSrc": "8869:26:10",
																"nodeType": "YulFunctionCall",
																"src": "8869:26:10"
															},
															"nativeSrc": "8866:81:10",
															"nodeType": "YulIf",
															"src": "8866:81:10"
														},
														{
															"body": {
																"nativeSrc": "8999:42:10",
																"nodeType": "YulBlock",
																"src": "8999:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9013:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9013:16:10"
																			},
																			"nativeSrc": "9013:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9013:18:10"
																		},
																		"nativeSrc": "9013:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9013:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8963:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "8963:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8986:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8986:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8994:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8994:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8983:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8983:2:10"
																		},
																		"nativeSrc": "8983:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8983:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8960:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8960:2:10"
																},
																"nativeSrc": "8960:38:10",
																"nodeType": "YulFunctionCall",
																"src": "8960:38:10"
															},
															"nativeSrc": "8957:84:10",
															"nodeType": "YulIf",
															"src": "8957:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8727:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8762:4:10",
														"nodeType": "YulTypedName",
														"src": "8762:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8771:6:10",
														"nodeType": "YulTypedName",
														"src": "8771:6:10",
														"type": ""
													}
												],
												"src": "8727:320:10"
											},
											{
												"body": {
													"nativeSrc": "9159:63:10",
													"nodeType": "YulBlock",
													"src": "9159:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9181:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9181:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9189:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9189:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9177:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9177:3:10"
																		},
																		"nativeSrc": "9177:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9177:14:10"
																	},
																	{
																		"hexValue": "6574682076616c75652063616e742062652030",
																		"kind": "string",
																		"nativeSrc": "9193:21:10",
																		"nodeType": "YulLiteral",
																		"src": "9193:21:10",
																		"type": "",
																		"value": "eth value cant be 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9170:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9170:6:10"
																},
																"nativeSrc": "9170:45:10",
																"nodeType": "YulFunctionCall",
																"src": "9170:45:10"
															},
															"nativeSrc": "9170:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "9170:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_6b3783b480a8bf5fa8a6f973d9985c95e9942055d1b48785f649a7c6ffa19dde",
												"nativeSrc": "9053:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9151:6:10",
														"nodeType": "YulTypedName",
														"src": "9151:6:10",
														"type": ""
													}
												],
												"src": "9053:169:10"
											},
											{
												"body": {
													"nativeSrc": "9374:220:10",
													"nodeType": "YulBlock",
													"src": "9374:220:10",
													"statements": [
														{
															"nativeSrc": "9384:74:10",
															"nodeType": "YulAssignment",
															"src": "9384:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9450:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9450:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9455:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9455:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9391:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "9391:58:10"
																},
																"nativeSrc": "9391:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9391:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9384:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9384:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9556:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9556:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6b3783b480a8bf5fa8a6f973d9985c95e9942055d1b48785f649a7c6ffa19dde",
																	"nativeSrc": "9467:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "9467:88:10"
																},
																"nativeSrc": "9467:93:10",
																"nodeType": "YulFunctionCall",
																"src": "9467:93:10"
															},
															"nativeSrc": "9467:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "9467:93:10"
														},
														{
															"nativeSrc": "9569:19:10",
															"nodeType": "YulAssignment",
															"src": "9569:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9580:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9580:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9585:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9585:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9576:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9576:3:10"
																},
																"nativeSrc": "9576:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9576:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9569:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9569:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6b3783b480a8bf5fa8a6f973d9985c95e9942055d1b48785f649a7c6ffa19dde_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9228:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9362:3:10",
														"nodeType": "YulTypedName",
														"src": "9362:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9370:3:10",
														"nodeType": "YulTypedName",
														"src": "9370:3:10",
														"type": ""
													}
												],
												"src": "9228:366:10"
											},
											{
												"body": {
													"nativeSrc": "9771:248:10",
													"nodeType": "YulBlock",
													"src": "9771:248:10",
													"statements": [
														{
															"nativeSrc": "9781:26:10",
															"nodeType": "YulAssignment",
															"src": "9781:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9793:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9793:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9804:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9804:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9789:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9789:3:10"
																},
																"nativeSrc": "9789:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9789:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9781:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9781:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9828:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9828:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9839:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9839:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9824:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9824:3:10"
																		},
																		"nativeSrc": "9824:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9824:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9847:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9847:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9853:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9853:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9843:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9843:3:10"
																		},
																		"nativeSrc": "9843:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9843:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9817:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9817:6:10"
																},
																"nativeSrc": "9817:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9817:47:10"
															},
															"nativeSrc": "9817:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9817:47:10"
														},
														{
															"nativeSrc": "9873:139:10",
															"nodeType": "YulAssignment",
															"src": "9873:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10007:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10007:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6b3783b480a8bf5fa8a6f973d9985c95e9942055d1b48785f649a7c6ffa19dde_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9881:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "9881:124:10"
																},
																"nativeSrc": "9881:131:10",
																"nodeType": "YulFunctionCall",
																"src": "9881:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9873:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9873:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6b3783b480a8bf5fa8a6f973d9985c95e9942055d1b48785f649a7c6ffa19dde__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9600:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9751:9:10",
														"nodeType": "YulTypedName",
														"src": "9751:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9766:4:10",
														"nodeType": "YulTypedName",
														"src": "9766:4:10",
														"type": ""
													}
												],
												"src": "9600:419:10"
											},
											{
												"body": {
													"nativeSrc": "10053:152:10",
													"nodeType": "YulBlock",
													"src": "10053:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10070:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10070:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10073:77:10",
																		"nodeType": "YulLiteral",
																		"src": "10073:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10063:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10063:6:10"
																},
																"nativeSrc": "10063:88:10",
																"nodeType": "YulFunctionCall",
																"src": "10063:88:10"
															},
															"nativeSrc": "10063:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "10063:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10167:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10167:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10170:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10170:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10160:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10160:6:10"
																},
																"nativeSrc": "10160:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10160:15:10"
															},
															"nativeSrc": "10160:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10160:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10191:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10191:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10194:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10194:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10184:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10184:6:10"
																},
																"nativeSrc": "10184:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10184:15:10"
															},
															"nativeSrc": "10184:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10184:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10025:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "10025:180:10"
											},
											{
												"body": {
													"nativeSrc": "10254:170:10",
													"nodeType": "YulBlock",
													"src": "10254:170:10",
													"statements": [
														{
															"nativeSrc": "10264:24:10",
															"nodeType": "YulAssignment",
															"src": "10264:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10286:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10286:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint96",
																	"nativeSrc": "10269:16:10",
																	"nodeType": "YulIdentifier",
																	"src": "10269:16:10"
																},
																"nativeSrc": "10269:19:10",
																"nodeType": "YulFunctionCall",
																"src": "10269:19:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10264:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10264:1:10"
																}
															]
														},
														{
															"nativeSrc": "10297:24:10",
															"nodeType": "YulAssignment",
															"src": "10297:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10319:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10319:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint96",
																	"nativeSrc": "10302:16:10",
																	"nodeType": "YulIdentifier",
																	"src": "10302:16:10"
																},
																"nativeSrc": "10302:19:10",
																"nodeType": "YulFunctionCall",
																"src": "10302:19:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10297:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10297:1:10"
																}
															]
														},
														{
															"nativeSrc": "10330:16:10",
															"nodeType": "YulAssignment",
															"src": "10330:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10341:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10341:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10344:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10344:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10337:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10337:3:10"
																},
																"nativeSrc": "10337:9:10",
																"nodeType": "YulFunctionCall",
																"src": "10337:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10330:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10395:22:10",
																"nodeType": "YulBlock",
																"src": "10395:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10397:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10397:16:10"
																			},
																			"nativeSrc": "10397:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10397:18:10"
																		},
																		"nativeSrc": "10397:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10397:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "10362:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10362:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10367:26:10",
																		"nodeType": "YulLiteral",
																		"src": "10367:26:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10359:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10359:2:10"
																},
																"nativeSrc": "10359:35:10",
																"nodeType": "YulFunctionCall",
																"src": "10359:35:10"
															},
															"nativeSrc": "10356:61:10",
															"nodeType": "YulIf",
															"src": "10356:61:10"
														}
													]
												},
												"name": "checked_add_t_uint96",
												"nativeSrc": "10211:213:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10241:1:10",
														"nodeType": "YulTypedName",
														"src": "10241:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10244:1:10",
														"nodeType": "YulTypedName",
														"src": "10244:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10250:3:10",
														"nodeType": "YulTypedName",
														"src": "10250:3:10",
														"type": ""
													}
												],
												"src": "10211:213:10"
											},
											{
												"body": {
													"nativeSrc": "10536:58:10",
													"nodeType": "YulBlock",
													"src": "10536:58:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10558:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10558:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10566:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10566:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10554:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10554:3:10"
																		},
																		"nativeSrc": "10554:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10554:14:10"
																	},
																	{
																		"hexValue": "6e6f742065787069726520796574",
																		"kind": "string",
																		"nativeSrc": "10570:16:10",
																		"nodeType": "YulLiteral",
																		"src": "10570:16:10",
																		"type": "",
																		"value": "not expire yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10547:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10547:6:10"
																},
																"nativeSrc": "10547:40:10",
																"nodeType": "YulFunctionCall",
																"src": "10547:40:10"
															},
															"nativeSrc": "10547:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "10547:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_0cd675348041524c27e0a10458b93eacebb240f1e4fa99c29ffa44c888ecdc94",
												"nativeSrc": "10430:164:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10528:6:10",
														"nodeType": "YulTypedName",
														"src": "10528:6:10",
														"type": ""
													}
												],
												"src": "10430:164:10"
											},
											{
												"body": {
													"nativeSrc": "10746:220:10",
													"nodeType": "YulBlock",
													"src": "10746:220:10",
													"statements": [
														{
															"nativeSrc": "10756:74:10",
															"nodeType": "YulAssignment",
															"src": "10756:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10822:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10822:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10827:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10827:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10763:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10763:58:10"
																},
																"nativeSrc": "10763:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10763:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10756:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10756:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10928:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10928:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0cd675348041524c27e0a10458b93eacebb240f1e4fa99c29ffa44c888ecdc94",
																	"nativeSrc": "10839:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10839:88:10"
																},
																"nativeSrc": "10839:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10839:93:10"
															},
															"nativeSrc": "10839:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10839:93:10"
														},
														{
															"nativeSrc": "10941:19:10",
															"nodeType": "YulAssignment",
															"src": "10941:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10952:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10952:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10957:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10957:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10948:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10948:3:10"
																},
																"nativeSrc": "10948:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10948:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10941:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10941:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0cd675348041524c27e0a10458b93eacebb240f1e4fa99c29ffa44c888ecdc94_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10600:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10734:3:10",
														"nodeType": "YulTypedName",
														"src": "10734:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10742:3:10",
														"nodeType": "YulTypedName",
														"src": "10742:3:10",
														"type": ""
													}
												],
												"src": "10600:366:10"
											},
											{
												"body": {
													"nativeSrc": "11143:248:10",
													"nodeType": "YulBlock",
													"src": "11143:248:10",
													"statements": [
														{
															"nativeSrc": "11153:26:10",
															"nodeType": "YulAssignment",
															"src": "11153:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11165:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11165:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11176:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11176:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11161:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11161:3:10"
																},
																"nativeSrc": "11161:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11161:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11153:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11153:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11200:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11200:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11211:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11211:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11196:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11196:3:10"
																		},
																		"nativeSrc": "11196:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11196:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11219:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11219:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11225:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11225:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11215:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11215:3:10"
																		},
																		"nativeSrc": "11215:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11215:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11189:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11189:6:10"
																},
																"nativeSrc": "11189:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11189:47:10"
															},
															"nativeSrc": "11189:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11189:47:10"
														},
														{
															"nativeSrc": "11245:139:10",
															"nodeType": "YulAssignment",
															"src": "11245:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11379:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11379:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0cd675348041524c27e0a10458b93eacebb240f1e4fa99c29ffa44c888ecdc94_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11253:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11253:124:10"
																},
																"nativeSrc": "11253:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11253:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11245:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11245:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0cd675348041524c27e0a10458b93eacebb240f1e4fa99c29ffa44c888ecdc94__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10972:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11123:9:10",
														"nodeType": "YulTypedName",
														"src": "11123:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11138:4:10",
														"nodeType": "YulTypedName",
														"src": "11138:4:10",
														"type": ""
													}
												],
												"src": "10972:419:10"
											},
											{
												"body": {
													"nativeSrc": "11460:80:10",
													"nodeType": "YulBlock",
													"src": "11460:80:10",
													"statements": [
														{
															"nativeSrc": "11470:22:10",
															"nodeType": "YulAssignment",
															"src": "11470:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11485:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11485:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11479:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11479:5:10"
																},
																"nativeSrc": "11479:13:10",
																"nodeType": "YulFunctionCall",
																"src": "11479:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11470:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11470:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11528:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11528:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "11501:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "11501:26:10"
																},
																"nativeSrc": "11501:33:10",
																"nodeType": "YulFunctionCall",
																"src": "11501:33:10"
															},
															"nativeSrc": "11501:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "11501:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "11397:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11438:6:10",
														"nodeType": "YulTypedName",
														"src": "11438:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11446:3:10",
														"nodeType": "YulTypedName",
														"src": "11446:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11454:5:10",
														"nodeType": "YulTypedName",
														"src": "11454:5:10",
														"type": ""
													}
												],
												"src": "11397:143:10"
											},
											{
												"body": {
													"nativeSrc": "11623:274:10",
													"nodeType": "YulBlock",
													"src": "11623:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "11669:83:10",
																"nodeType": "YulBlock",
																"src": "11669:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11671:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "11671:77:10"
																			},
																			"nativeSrc": "11671:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11671:79:10"
																		},
																		"nativeSrc": "11671:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11671:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11644:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11644:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11653:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11653:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11640:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11640:3:10"
																		},
																		"nativeSrc": "11640:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11640:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11665:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11665:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11636:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11636:3:10"
																},
																"nativeSrc": "11636:32:10",
																"nodeType": "YulFunctionCall",
																"src": "11636:32:10"
															},
															"nativeSrc": "11633:119:10",
															"nodeType": "YulIf",
															"src": "11633:119:10"
														},
														{
															"nativeSrc": "11762:128:10",
															"nodeType": "YulBlock",
															"src": "11762:128:10",
															"statements": [
																{
																	"nativeSrc": "11777:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11777:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11791:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11791:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11781:6:10",
																			"nodeType": "YulTypedName",
																			"src": "11781:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11806:74:10",
																	"nodeType": "YulAssignment",
																	"src": "11806:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11852:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "11852:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11863:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "11863:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11848:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11848:3:10"
																				},
																				"nativeSrc": "11848:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11848:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11872:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11872:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "11816:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "11816:31:10"
																		},
																		"nativeSrc": "11816:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11816:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11806:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "11806:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "11546:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11593:9:10",
														"nodeType": "YulTypedName",
														"src": "11593:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11604:7:10",
														"nodeType": "YulTypedName",
														"src": "11604:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11616:6:10",
														"nodeType": "YulTypedName",
														"src": "11616:6:10",
														"type": ""
													}
												],
												"src": "11546:351:10"
											},
											{
												"body": {
													"nativeSrc": "12009:68:10",
													"nodeType": "YulBlock",
													"src": "12009:68:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12031:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12031:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12039:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12039:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12027:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12027:3:10"
																		},
																		"nativeSrc": "12027:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12027:14:10"
																	},
																	{
																		"hexValue": "6e6f7420696e20736574746c652074696d652072616e6765",
																		"kind": "string",
																		"nativeSrc": "12043:26:10",
																		"nodeType": "YulLiteral",
																		"src": "12043:26:10",
																		"type": "",
																		"value": "not in settle time range"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12020:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12020:6:10"
																},
																"nativeSrc": "12020:50:10",
																"nodeType": "YulFunctionCall",
																"src": "12020:50:10"
															},
															"nativeSrc": "12020:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "12020:50:10"
														}
													]
												},
												"name": "store_literal_in_memory_6ace33062e0a81aa62ef141bc3911c6f7ae64d84af8b1a71c3fc71963e3edb9c",
												"nativeSrc": "11903:174:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12001:6:10",
														"nodeType": "YulTypedName",
														"src": "12001:6:10",
														"type": ""
													}
												],
												"src": "11903:174:10"
											},
											{
												"body": {
													"nativeSrc": "12229:220:10",
													"nodeType": "YulBlock",
													"src": "12229:220:10",
													"statements": [
														{
															"nativeSrc": "12239:74:10",
															"nodeType": "YulAssignment",
															"src": "12239:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12305:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12305:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12310:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12310:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12246:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "12246:58:10"
																},
																"nativeSrc": "12246:67:10",
																"nodeType": "YulFunctionCall",
																"src": "12246:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12239:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12239:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12411:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12411:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6ace33062e0a81aa62ef141bc3911c6f7ae64d84af8b1a71c3fc71963e3edb9c",
																	"nativeSrc": "12322:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "12322:88:10"
																},
																"nativeSrc": "12322:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12322:93:10"
															},
															"nativeSrc": "12322:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "12322:93:10"
														},
														{
															"nativeSrc": "12424:19:10",
															"nodeType": "YulAssignment",
															"src": "12424:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12435:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12435:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12440:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12440:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12431:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12431:3:10"
																},
																"nativeSrc": "12431:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12431:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12424:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12424:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6ace33062e0a81aa62ef141bc3911c6f7ae64d84af8b1a71c3fc71963e3edb9c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12083:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12217:3:10",
														"nodeType": "YulTypedName",
														"src": "12217:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12225:3:10",
														"nodeType": "YulTypedName",
														"src": "12225:3:10",
														"type": ""
													}
												],
												"src": "12083:366:10"
											},
											{
												"body": {
													"nativeSrc": "12626:248:10",
													"nodeType": "YulBlock",
													"src": "12626:248:10",
													"statements": [
														{
															"nativeSrc": "12636:26:10",
															"nodeType": "YulAssignment",
															"src": "12636:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12648:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12648:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12659:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12659:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12644:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12644:3:10"
																},
																"nativeSrc": "12644:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12644:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12636:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12636:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12683:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12683:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12694:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12694:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12679:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12679:3:10"
																		},
																		"nativeSrc": "12679:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12679:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12702:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12702:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12708:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12708:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12698:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12698:3:10"
																		},
																		"nativeSrc": "12698:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12698:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12672:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12672:6:10"
																},
																"nativeSrc": "12672:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12672:47:10"
															},
															"nativeSrc": "12672:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12672:47:10"
														},
														{
															"nativeSrc": "12728:139:10",
															"nodeType": "YulAssignment",
															"src": "12728:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12862:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12862:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6ace33062e0a81aa62ef141bc3911c6f7ae64d84af8b1a71c3fc71963e3edb9c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12736:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12736:124:10"
																},
																"nativeSrc": "12736:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12736:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12728:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12728:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6ace33062e0a81aa62ef141bc3911c6f7ae64d84af8b1a71c3fc71963e3edb9c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12455:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12606:9:10",
														"nodeType": "YulTypedName",
														"src": "12606:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12621:4:10",
														"nodeType": "YulTypedName",
														"src": "12621:4:10",
														"type": ""
													}
												],
												"src": "12455:419:10"
											},
											{
												"body": {
													"nativeSrc": "12986:65:10",
													"nodeType": "YulBlock",
													"src": "12986:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13008:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13008:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13016:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13016:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13004:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13004:3:10"
																		},
																		"nativeSrc": "13004:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13004:14:10"
																	},
																	{
																		"hexValue": "616d6f756e74206d757374203e2062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "13020:23:10",
																		"nodeType": "YulLiteral",
																		"src": "13020:23:10",
																		"type": "",
																		"value": "amount must > balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12997:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12997:6:10"
																},
																"nativeSrc": "12997:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12997:47:10"
															},
															"nativeSrc": "12997:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12997:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_8cc0384f7716f8237c4bc315fed8a6c2413c45b97b2f6b2db44c9a9c9e84c77c",
												"nativeSrc": "12880:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12978:6:10",
														"nodeType": "YulTypedName",
														"src": "12978:6:10",
														"type": ""
													}
												],
												"src": "12880:171:10"
											},
											{
												"body": {
													"nativeSrc": "13203:220:10",
													"nodeType": "YulBlock",
													"src": "13203:220:10",
													"statements": [
														{
															"nativeSrc": "13213:74:10",
															"nodeType": "YulAssignment",
															"src": "13213:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13279:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13279:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13284:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13284:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13220:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13220:58:10"
																},
																"nativeSrc": "13220:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13220:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13213:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13213:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13385:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13385:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8cc0384f7716f8237c4bc315fed8a6c2413c45b97b2f6b2db44c9a9c9e84c77c",
																	"nativeSrc": "13296:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13296:88:10"
																},
																"nativeSrc": "13296:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13296:93:10"
															},
															"nativeSrc": "13296:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13296:93:10"
														},
														{
															"nativeSrc": "13398:19:10",
															"nodeType": "YulAssignment",
															"src": "13398:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13409:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13409:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13414:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13414:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13405:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13405:3:10"
																},
																"nativeSrc": "13405:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13405:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13398:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13398:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8cc0384f7716f8237c4bc315fed8a6c2413c45b97b2f6b2db44c9a9c9e84c77c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13057:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13191:3:10",
														"nodeType": "YulTypedName",
														"src": "13191:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13199:3:10",
														"nodeType": "YulTypedName",
														"src": "13199:3:10",
														"type": ""
													}
												],
												"src": "13057:366:10"
											},
											{
												"body": {
													"nativeSrc": "13600:248:10",
													"nodeType": "YulBlock",
													"src": "13600:248:10",
													"statements": [
														{
															"nativeSrc": "13610:26:10",
															"nodeType": "YulAssignment",
															"src": "13610:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13622:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13622:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13633:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13633:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13618:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13618:3:10"
																},
																"nativeSrc": "13618:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13618:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13610:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13610:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13657:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13657:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13668:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13668:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13653:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13653:3:10"
																		},
																		"nativeSrc": "13653:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13653:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13676:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13676:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13682:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13682:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13672:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13672:3:10"
																		},
																		"nativeSrc": "13672:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13672:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13646:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13646:6:10"
																},
																"nativeSrc": "13646:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13646:47:10"
															},
															"nativeSrc": "13646:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13646:47:10"
														},
														{
															"nativeSrc": "13702:139:10",
															"nodeType": "YulAssignment",
															"src": "13702:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13836:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13836:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8cc0384f7716f8237c4bc315fed8a6c2413c45b97b2f6b2db44c9a9c9e84c77c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13710:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13710:124:10"
																},
																"nativeSrc": "13710:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13710:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13702:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13702:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8cc0384f7716f8237c4bc315fed8a6c2413c45b97b2f6b2db44c9a9c9e84c77c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13429:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13580:9:10",
														"nodeType": "YulTypedName",
														"src": "13580:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13595:4:10",
														"nodeType": "YulTypedName",
														"src": "13595:4:10",
														"type": ""
													}
												],
												"src": "13429:419:10"
											},
											{
												"body": {
													"nativeSrc": "13902:362:10",
													"nodeType": "YulBlock",
													"src": "13902:362:10",
													"statements": [
														{
															"nativeSrc": "13912:25:10",
															"nodeType": "YulAssignment",
															"src": "13912:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13935:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13935:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13917:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13917:17:10"
																},
																"nativeSrc": "13917:20:10",
																"nodeType": "YulFunctionCall",
																"src": "13917:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13912:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "13912:1:10"
																}
															]
														},
														{
															"nativeSrc": "13946:25:10",
															"nodeType": "YulAssignment",
															"src": "13946:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13969:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13969:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13951:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13951:17:10"
																},
																"nativeSrc": "13951:20:10",
																"nodeType": "YulFunctionCall",
																"src": "13951:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13946:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "13946:1:10"
																}
															]
														},
														{
															"nativeSrc": "13980:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "13980:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14003:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14003:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14006:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14006:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13999:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13999:3:10"
																},
																"nativeSrc": "13999:9:10",
																"nodeType": "YulFunctionCall",
																"src": "13999:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "13984:11:10",
																	"nodeType": "YulTypedName",
																	"src": "13984:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14017:41:10",
															"nodeType": "YulAssignment",
															"src": "14017:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "14046:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "14046:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14028:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14028:17:10"
																},
																"nativeSrc": "14028:30:10",
																"nodeType": "YulFunctionCall",
																"src": "14028:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14017:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "14017:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14235:22:10",
																"nodeType": "YulBlock",
																"src": "14235:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14237:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "14237:16:10"
																			},
																			"nativeSrc": "14237:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14237:18:10"
																		},
																		"nativeSrc": "14237:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14237:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "14168:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "14168:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14161:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "14161:6:10"
																				},
																				"nativeSrc": "14161:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14161:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "14191:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "14191:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "14198:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "14198:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "14207:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "14207:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "14194:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "14194:3:10"
																						},
																						"nativeSrc": "14194:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "14194:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "14188:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "14188:2:10"
																				},
																				"nativeSrc": "14188:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14188:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "14141:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "14141:2:10"
																		},
																		"nativeSrc": "14141:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14141:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14121:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14121:6:10"
																},
																"nativeSrc": "14121:113:10",
																"nodeType": "YulFunctionCall",
																"src": "14121:113:10"
															},
															"nativeSrc": "14118:139:10",
															"nodeType": "YulIf",
															"src": "14118:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "13854:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13885:1:10",
														"nodeType": "YulTypedName",
														"src": "13885:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13888:1:10",
														"nodeType": "YulTypedName",
														"src": "13888:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "13894:7:10",
														"nodeType": "YulTypedName",
														"src": "13894:7:10",
														"type": ""
													}
												],
												"src": "13854:410:10"
											},
											{
												"body": {
													"nativeSrc": "14424:288:10",
													"nodeType": "YulBlock",
													"src": "14424:288:10",
													"statements": [
														{
															"nativeSrc": "14434:26:10",
															"nodeType": "YulAssignment",
															"src": "14434:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14446:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14446:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14457:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14457:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14442:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14442:3:10"
																},
																"nativeSrc": "14442:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14442:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14434:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14434:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14514:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14514:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14527:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14527:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14538:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14538:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14523:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14523:3:10"
																		},
																		"nativeSrc": "14523:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14523:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14470:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14470:43:10"
																},
																"nativeSrc": "14470:71:10",
																"nodeType": "YulFunctionCall",
																"src": "14470:71:10"
															},
															"nativeSrc": "14470:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "14470:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14595:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14595:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14608:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14608:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14619:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14619:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14604:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14604:3:10"
																		},
																		"nativeSrc": "14604:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14604:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14551:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14551:43:10"
																},
																"nativeSrc": "14551:72:10",
																"nodeType": "YulFunctionCall",
																"src": "14551:72:10"
															},
															"nativeSrc": "14551:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "14551:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14677:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14677:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14690:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14690:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14701:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14701:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14686:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14686:3:10"
																		},
																		"nativeSrc": "14686:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14686:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14633:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14633:43:10"
																},
																"nativeSrc": "14633:72:10",
																"nodeType": "YulFunctionCall",
																"src": "14633:72:10"
															},
															"nativeSrc": "14633:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "14633:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14270:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14380:9:10",
														"nodeType": "YulTypedName",
														"src": "14380:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14392:6:10",
														"nodeType": "YulTypedName",
														"src": "14392:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14400:6:10",
														"nodeType": "YulTypedName",
														"src": "14400:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14408:6:10",
														"nodeType": "YulTypedName",
														"src": "14408:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14419:4:10",
														"nodeType": "YulTypedName",
														"src": "14419:4:10",
														"type": ""
													}
												],
												"src": "14270:442:10"
											},
											{
												"body": {
													"nativeSrc": "14844:206:10",
													"nodeType": "YulBlock",
													"src": "14844:206:10",
													"statements": [
														{
															"nativeSrc": "14854:26:10",
															"nodeType": "YulAssignment",
															"src": "14854:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14866:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14866:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14877:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14877:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14862:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14862:3:10"
																},
																"nativeSrc": "14862:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14862:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14854:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14854:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14934:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14934:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14947:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14947:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14958:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14958:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14943:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14943:3:10"
																		},
																		"nativeSrc": "14943:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14943:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14890:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14890:43:10"
																},
																"nativeSrc": "14890:71:10",
																"nodeType": "YulFunctionCall",
																"src": "14890:71:10"
															},
															"nativeSrc": "14890:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "14890:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15015:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15015:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15028:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15028:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15039:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15039:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15024:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15024:3:10"
																		},
																		"nativeSrc": "15024:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15024:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14971:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14971:43:10"
																},
																"nativeSrc": "14971:72:10",
																"nodeType": "YulFunctionCall",
																"src": "14971:72:10"
															},
															"nativeSrc": "14971:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "14971:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14718:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14808:9:10",
														"nodeType": "YulTypedName",
														"src": "14808:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14820:6:10",
														"nodeType": "YulTypedName",
														"src": "14820:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14828:6:10",
														"nodeType": "YulTypedName",
														"src": "14828:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14839:4:10",
														"nodeType": "YulTypedName",
														"src": "14839:4:10",
														"type": ""
													}
												],
												"src": "14718:332:10"
											},
											{
												"body": {
													"nativeSrc": "15210:288:10",
													"nodeType": "YulBlock",
													"src": "15210:288:10",
													"statements": [
														{
															"nativeSrc": "15220:26:10",
															"nodeType": "YulAssignment",
															"src": "15220:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15232:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15232:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15243:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15243:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15228:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15228:3:10"
																},
																"nativeSrc": "15228:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15228:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15220:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15220:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15300:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15300:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15313:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15313:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15324:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15324:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15309:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15309:3:10"
																		},
																		"nativeSrc": "15309:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15309:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15256:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15256:43:10"
																},
																"nativeSrc": "15256:71:10",
																"nodeType": "YulFunctionCall",
																"src": "15256:71:10"
															},
															"nativeSrc": "15256:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "15256:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15381:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15381:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15394:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15394:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15405:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15405:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15390:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15390:3:10"
																		},
																		"nativeSrc": "15390:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15390:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15337:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15337:43:10"
																},
																"nativeSrc": "15337:72:10",
																"nodeType": "YulFunctionCall",
																"src": "15337:72:10"
															},
															"nativeSrc": "15337:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "15337:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15463:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15463:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15476:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15476:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15487:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15487:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15472:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15472:3:10"
																		},
																		"nativeSrc": "15472:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15472:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15419:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15419:43:10"
																},
																"nativeSrc": "15419:72:10",
																"nodeType": "YulFunctionCall",
																"src": "15419:72:10"
															},
															"nativeSrc": "15419:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "15419:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "15056:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15166:9:10",
														"nodeType": "YulTypedName",
														"src": "15166:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15178:6:10",
														"nodeType": "YulTypedName",
														"src": "15178:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15186:6:10",
														"nodeType": "YulTypedName",
														"src": "15186:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15194:6:10",
														"nodeType": "YulTypedName",
														"src": "15194:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15205:4:10",
														"nodeType": "YulTypedName",
														"src": "15205:4:10",
														"type": ""
													}
												],
												"src": "15056:442:10"
											},
											{
												"body": {
													"nativeSrc": "15532:152:10",
													"nodeType": "YulBlock",
													"src": "15532:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15549:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15549:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15552:77:10",
																		"nodeType": "YulLiteral",
																		"src": "15552:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15542:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15542:6:10"
																},
																"nativeSrc": "15542:88:10",
																"nodeType": "YulFunctionCall",
																"src": "15542:88:10"
															},
															"nativeSrc": "15542:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "15542:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15646:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15646:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15649:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15649:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15639:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15639:6:10"
																},
																"nativeSrc": "15639:15:10",
																"nodeType": "YulFunctionCall",
																"src": "15639:15:10"
															},
															"nativeSrc": "15639:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "15639:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15670:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15670:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15673:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15673:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15663:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15663:6:10"
																},
																"nativeSrc": "15663:15:10",
																"nodeType": "YulFunctionCall",
																"src": "15663:15:10"
															},
															"nativeSrc": "15663:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "15663:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "15504:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "15504:180:10"
											},
											{
												"body": {
													"nativeSrc": "15748:40:10",
													"nodeType": "YulBlock",
													"src": "15748:40:10",
													"statements": [
														{
															"nativeSrc": "15759:22:10",
															"nodeType": "YulAssignment",
															"src": "15759:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15775:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "15775:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "15769:5:10"
																},
																"nativeSrc": "15769:12:10",
																"nodeType": "YulFunctionCall",
																"src": "15769:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "15759:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15759:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "15690:98:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15731:5:10",
														"nodeType": "YulTypedName",
														"src": "15731:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "15741:6:10",
														"nodeType": "YulTypedName",
														"src": "15741:6:10",
														"type": ""
													}
												],
												"src": "15690:98:10"
											},
											{
												"body": {
													"nativeSrc": "15907:34:10",
													"nodeType": "YulBlock",
													"src": "15907:34:10",
													"statements": [
														{
															"nativeSrc": "15917:18:10",
															"nodeType": "YulAssignment",
															"src": "15917:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "15932:3:10",
																"nodeType": "YulIdentifier",
																"src": "15932:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "15917:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "15917:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15794:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15879:3:10",
														"nodeType": "YulTypedName",
														"src": "15879:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15884:6:10",
														"nodeType": "YulTypedName",
														"src": "15884:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "15895:11:10",
														"nodeType": "YulTypedName",
														"src": "15895:11:10",
														"type": ""
													}
												],
												"src": "15794:147:10"
											},
											{
												"body": {
													"nativeSrc": "16055:278:10",
													"nodeType": "YulBlock",
													"src": "16055:278:10",
													"statements": [
														{
															"nativeSrc": "16065:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "16065:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16111:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "16111:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "16079:31:10",
																	"nodeType": "YulIdentifier",
																	"src": "16079:31:10"
																},
																"nativeSrc": "16079:38:10",
																"nodeType": "YulFunctionCall",
																"src": "16079:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16069:6:10",
																	"nodeType": "YulTypedName",
																	"src": "16069:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16126:95:10",
															"nodeType": "YulAssignment",
															"src": "16126:95:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16209:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16209:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16214:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "16214:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16133:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "16133:75:10"
																},
																"nativeSrc": "16133:88:10",
																"nodeType": "YulFunctionCall",
																"src": "16133:88:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16126:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16126:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16269:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "16269:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16276:4:10",
																				"nodeType": "YulLiteral",
																				"src": "16276:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16265:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16265:3:10"
																		},
																		"nativeSrc": "16265:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16265:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16283:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16283:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16288:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "16288:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "16230:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "16230:34:10"
																},
																"nativeSrc": "16230:65:10",
																"nodeType": "YulFunctionCall",
																"src": "16230:65:10"
															},
															"nativeSrc": "16230:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "16230:65:10"
														},
														{
															"nativeSrc": "16304:23:10",
															"nodeType": "YulAssignment",
															"src": "16304:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16315:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16315:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16320:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "16320:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16311:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16311:3:10"
																},
																"nativeSrc": "16311:16:10",
																"nodeType": "YulFunctionCall",
																"src": "16311:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16304:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16304:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15947:386:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16036:5:10",
														"nodeType": "YulTypedName",
														"src": "16036:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16043:3:10",
														"nodeType": "YulTypedName",
														"src": "16043:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16051:3:10",
														"nodeType": "YulTypedName",
														"src": "16051:3:10",
														"type": ""
													}
												],
												"src": "15947:386:10"
											},
											{
												"body": {
													"nativeSrc": "16473:137:10",
													"nodeType": "YulBlock",
													"src": "16473:137:10",
													"statements": [
														{
															"nativeSrc": "16484:100:10",
															"nodeType": "YulAssignment",
															"src": "16484:100:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16571:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "16571:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16580:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16580:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16491:79:10",
																	"nodeType": "YulIdentifier",
																	"src": "16491:79:10"
																},
																"nativeSrc": "16491:93:10",
																"nodeType": "YulFunctionCall",
																"src": "16491:93:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16484:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16484:3:10"
																}
															]
														},
														{
															"nativeSrc": "16594:10:10",
															"nodeType": "YulAssignment",
															"src": "16594:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "16601:3:10",
																"nodeType": "YulIdentifier",
																"src": "16601:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16594:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16594:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "16339:271:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16452:3:10",
														"nodeType": "YulTypedName",
														"src": "16452:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16458:6:10",
														"nodeType": "YulTypedName",
														"src": "16458:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16469:3:10",
														"nodeType": "YulTypedName",
														"src": "16469:3:10",
														"type": ""
													}
												],
												"src": "16339:271:10"
											},
											{
												"body": {
													"nativeSrc": "16722:133:10",
													"nodeType": "YulBlock",
													"src": "16722:133:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16744:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16744:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16752:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16752:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16740:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16740:3:10"
																		},
																		"nativeSrc": "16740:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16740:14:10"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665724554483a",
																		"kind": "string",
																		"nativeSrc": "16756:34:10",
																		"nodeType": "YulLiteral",
																		"src": "16756:34:10",
																		"type": "",
																		"value": "TransferHelper::safeTransferETH:"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16733:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16733:6:10"
																},
																"nativeSrc": "16733:58:10",
																"nodeType": "YulFunctionCall",
																"src": "16733:58:10"
															},
															"nativeSrc": "16733:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "16733:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16812:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16812:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16820:2:10",
																				"nodeType": "YulLiteral",
																				"src": "16820:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16808:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16808:3:10"
																		},
																		"nativeSrc": "16808:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16808:15:10"
																	},
																	{
																		"hexValue": "20455448207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "16825:22:10",
																		"nodeType": "YulLiteral",
																		"src": "16825:22:10",
																		"type": "",
																		"value": " ETH transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16801:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16801:6:10"
																},
																"nativeSrc": "16801:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16801:47:10"
															},
															"nativeSrc": "16801:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16801:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
												"nativeSrc": "16616:239:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16714:6:10",
														"nodeType": "YulTypedName",
														"src": "16714:6:10",
														"type": ""
													}
												],
												"src": "16616:239:10"
											},
											{
												"body": {
													"nativeSrc": "17007:220:10",
													"nodeType": "YulBlock",
													"src": "17007:220:10",
													"statements": [
														{
															"nativeSrc": "17017:74:10",
															"nodeType": "YulAssignment",
															"src": "17017:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17083:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17083:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17088:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17088:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17024:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "17024:58:10"
																},
																"nativeSrc": "17024:67:10",
																"nodeType": "YulFunctionCall",
																"src": "17024:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17017:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17017:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17189:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17189:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																	"nativeSrc": "17100:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "17100:88:10"
																},
																"nativeSrc": "17100:93:10",
																"nodeType": "YulFunctionCall",
																"src": "17100:93:10"
															},
															"nativeSrc": "17100:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "17100:93:10"
														},
														{
															"nativeSrc": "17202:19:10",
															"nodeType": "YulAssignment",
															"src": "17202:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17213:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17213:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17218:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17218:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17209:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17209:3:10"
																},
																"nativeSrc": "17209:12:10",
																"nodeType": "YulFunctionCall",
																"src": "17209:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17202:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17202:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16861:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16995:3:10",
														"nodeType": "YulTypedName",
														"src": "16995:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17003:3:10",
														"nodeType": "YulTypedName",
														"src": "17003:3:10",
														"type": ""
													}
												],
												"src": "16861:366:10"
											},
											{
												"body": {
													"nativeSrc": "17404:248:10",
													"nodeType": "YulBlock",
													"src": "17404:248:10",
													"statements": [
														{
															"nativeSrc": "17414:26:10",
															"nodeType": "YulAssignment",
															"src": "17414:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17426:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17426:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17437:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17437:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17422:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17422:3:10"
																},
																"nativeSrc": "17422:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17422:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17414:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17414:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17461:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17461:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17472:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17472:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17457:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17457:3:10"
																		},
																		"nativeSrc": "17457:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17457:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17480:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "17480:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17486:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17486:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17476:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17476:3:10"
																		},
																		"nativeSrc": "17476:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17476:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17450:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17450:6:10"
																},
																"nativeSrc": "17450:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17450:47:10"
															},
															"nativeSrc": "17450:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17450:47:10"
														},
														{
															"nativeSrc": "17506:139:10",
															"nodeType": "YulAssignment",
															"src": "17506:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17640:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17640:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17514:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "17514:124:10"
																},
																"nativeSrc": "17514:131:10",
																"nodeType": "YulFunctionCall",
																"src": "17514:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17506:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17506:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17233:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17384:9:10",
														"nodeType": "YulTypedName",
														"src": "17384:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17399:4:10",
														"nodeType": "YulTypedName",
														"src": "17399:4:10",
														"type": ""
													}
												],
												"src": "17233:419:10"
											},
											{
												"body": {
													"nativeSrc": "17702:147:10",
													"nodeType": "YulBlock",
													"src": "17702:147:10",
													"statements": [
														{
															"nativeSrc": "17712:25:10",
															"nodeType": "YulAssignment",
															"src": "17712:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17735:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17735:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17717:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "17717:17:10"
																},
																"nativeSrc": "17717:20:10",
																"nodeType": "YulFunctionCall",
																"src": "17717:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17712:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "17712:1:10"
																}
															]
														},
														{
															"nativeSrc": "17746:25:10",
															"nodeType": "YulAssignment",
															"src": "17746:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17769:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17769:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17751:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "17751:17:10"
																},
																"nativeSrc": "17751:20:10",
																"nodeType": "YulFunctionCall",
																"src": "17751:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17746:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "17746:1:10"
																}
															]
														},
														{
															"nativeSrc": "17780:16:10",
															"nodeType": "YulAssignment",
															"src": "17780:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17791:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17791:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17794:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17794:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17787:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17787:3:10"
																},
																"nativeSrc": "17787:9:10",
																"nodeType": "YulFunctionCall",
																"src": "17787:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "17780:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17780:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17820:22:10",
																"nodeType": "YulBlock",
																"src": "17820:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17822:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "17822:16:10"
																			},
																			"nativeSrc": "17822:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "17822:18:10"
																		},
																		"nativeSrc": "17822:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "17822:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17812:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17812:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "17815:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17815:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17809:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "17809:2:10"
																},
																"nativeSrc": "17809:10:10",
																"nodeType": "YulFunctionCall",
																"src": "17809:10:10"
															},
															"nativeSrc": "17806:36:10",
															"nodeType": "YulIf",
															"src": "17806:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "17658:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17689:1:10",
														"nodeType": "YulTypedName",
														"src": "17689:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17692:1:10",
														"nodeType": "YulTypedName",
														"src": "17692:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "17698:3:10",
														"nodeType": "YulTypedName",
														"src": "17698:3:10",
														"type": ""
													}
												],
												"src": "17658:191:10"
											},
											{
												"body": {
													"nativeSrc": "17895:76:10",
													"nodeType": "YulBlock",
													"src": "17895:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "17949:16:10",
																"nodeType": "YulBlock",
																"src": "17949:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17958:1:10",
																					"nodeType": "YulLiteral",
																					"src": "17958:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17961:1:10",
																					"nodeType": "YulLiteral",
																					"src": "17961:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17951:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17951:6:10"
																			},
																			"nativeSrc": "17951:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "17951:12:10"
																		},
																		"nativeSrc": "17951:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "17951:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17918:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "17918:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17940:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "17940:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "17925:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "17925:14:10"
																				},
																				"nativeSrc": "17925:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "17925:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "17915:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "17915:2:10"
																		},
																		"nativeSrc": "17915:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17915:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17908:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17908:6:10"
																},
																"nativeSrc": "17908:40:10",
																"nodeType": "YulFunctionCall",
																"src": "17908:40:10"
															},
															"nativeSrc": "17905:60:10",
															"nodeType": "YulIf",
															"src": "17905:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "17855:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17888:5:10",
														"nodeType": "YulTypedName",
														"src": "17888:5:10",
														"type": ""
													}
												],
												"src": "17855:116:10"
											},
											{
												"body": {
													"nativeSrc": "18037:77:10",
													"nodeType": "YulBlock",
													"src": "18037:77:10",
													"statements": [
														{
															"nativeSrc": "18047:22:10",
															"nodeType": "YulAssignment",
															"src": "18047:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "18062:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18062:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18056:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "18056:5:10"
																},
																"nativeSrc": "18056:13:10",
																"nodeType": "YulFunctionCall",
																"src": "18056:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18047:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "18047:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18102:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "18102:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "18078:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "18078:23:10"
																},
																"nativeSrc": "18078:30:10",
																"nodeType": "YulFunctionCall",
																"src": "18078:30:10"
															},
															"nativeSrc": "18078:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "18078:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "17977:137:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "18015:6:10",
														"nodeType": "YulTypedName",
														"src": "18015:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "18023:3:10",
														"nodeType": "YulTypedName",
														"src": "18023:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "18031:5:10",
														"nodeType": "YulTypedName",
														"src": "18031:5:10",
														"type": ""
													}
												],
												"src": "17977:137:10"
											},
											{
												"body": {
													"nativeSrc": "18194:271:10",
													"nodeType": "YulBlock",
													"src": "18194:271:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "18240:83:10",
																"nodeType": "YulBlock",
																"src": "18240:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18242:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "18242:77:10"
																			},
																			"nativeSrc": "18242:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "18242:79:10"
																		},
																		"nativeSrc": "18242:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "18242:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18215:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "18215:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18224:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18224:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18211:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18211:3:10"
																		},
																		"nativeSrc": "18211:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18211:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18236:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18236:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18207:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18207:3:10"
																},
																"nativeSrc": "18207:32:10",
																"nodeType": "YulFunctionCall",
																"src": "18207:32:10"
															},
															"nativeSrc": "18204:119:10",
															"nodeType": "YulIf",
															"src": "18204:119:10"
														},
														{
															"nativeSrc": "18333:125:10",
															"nodeType": "YulBlock",
															"src": "18333:125:10",
															"statements": [
																{
																	"nativeSrc": "18348:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18348:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18362:1:10",
																		"nodeType": "YulLiteral",
																		"src": "18362:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18352:6:10",
																			"nodeType": "YulTypedName",
																			"src": "18352:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18377:71:10",
																	"nodeType": "YulAssignment",
																	"src": "18377:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18420:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "18420:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18431:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "18431:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18416:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "18416:3:10"
																				},
																				"nativeSrc": "18416:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "18416:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18440:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "18440:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "18387:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "18387:28:10"
																		},
																		"nativeSrc": "18387:61:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18387:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18377:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "18377:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "18120:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18164:9:10",
														"nodeType": "YulTypedName",
														"src": "18164:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18175:7:10",
														"nodeType": "YulTypedName",
														"src": "18175:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18187:6:10",
														"nodeType": "YulTypedName",
														"src": "18187:6:10",
														"type": ""
													}
												],
												"src": "18120:345:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$877_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$877_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint128_to_t_uint128_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint128(value))\n    }\n\n    function abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint96_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_6b3783b480a8bf5fa8a6f973d9985c95e9942055d1b48785f649a7c6ffa19dde(memPtr) {\n\n        mstore(add(memPtr, 0), \"eth value cant be 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_6b3783b480a8bf5fa8a6f973d9985c95e9942055d1b48785f649a7c6ffa19dde_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_6b3783b480a8bf5fa8a6f973d9985c95e9942055d1b48785f649a7c6ffa19dde(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6b3783b480a8bf5fa8a6f973d9985c95e9942055d1b48785f649a7c6ffa19dde__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6b3783b480a8bf5fa8a6f973d9985c95e9942055d1b48785f649a7c6ffa19dde_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint96(x, y) -> sum {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_0cd675348041524c27e0a10458b93eacebb240f1e4fa99c29ffa44c888ecdc94(memPtr) {\n\n        mstore(add(memPtr, 0), \"not expire yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_0cd675348041524c27e0a10458b93eacebb240f1e4fa99c29ffa44c888ecdc94_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_0cd675348041524c27e0a10458b93eacebb240f1e4fa99c29ffa44c888ecdc94(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0cd675348041524c27e0a10458b93eacebb240f1e4fa99c29ffa44c888ecdc94__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0cd675348041524c27e0a10458b93eacebb240f1e4fa99c29ffa44c888ecdc94_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_6ace33062e0a81aa62ef141bc3911c6f7ae64d84af8b1a71c3fc71963e3edb9c(memPtr) {\n\n        mstore(add(memPtr, 0), \"not in settle time range\")\n\n    }\n\n    function abi_encode_t_stringliteral_6ace33062e0a81aa62ef141bc3911c6f7ae64d84af8b1a71c3fc71963e3edb9c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_6ace33062e0a81aa62ef141bc3911c6f7ae64d84af8b1a71c3fc71963e3edb9c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6ace33062e0a81aa62ef141bc3911c6f7ae64d84af8b1a71c3fc71963e3edb9c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6ace33062e0a81aa62ef141bc3911c6f7ae64d84af8b1a71c3fc71963e3edb9c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8cc0384f7716f8237c4bc315fed8a6c2413c45b97b2f6b2db44c9a9c9e84c77c(memPtr) {\n\n        mstore(add(memPtr, 0), \"amount must > balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_8cc0384f7716f8237c4bc315fed8a6c2413c45b97b2f6b2db44c9a9c9e84c77c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_8cc0384f7716f8237c4bc315fed8a6c2413c45b97b2f6b2db44c9a9c9e84c77c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8cc0384f7716f8237c4bc315fed8a6c2413c45b97b2f6b2db44c9a9c9e84c77c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8cc0384f7716f8237c4bc315fed8a6c2413c45b97b2f6b2db44c9a9c9e84c77c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350(memPtr) {\n\n        mstore(add(memPtr, 0), \"TransferHelper::safeTransferETH:\")\n\n        mstore(add(memPtr, 32), \" ETH transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610113575f3560e01c8063715018a61161009f578063a9059cbb11610063578063a9059cbb1461034f578063dd62ed3e1461038b578063ec46c4ef146103c7578063f2fde38b146103f1578063f8b75fb51461041957610113565b8063715018a61461029357806383b6fa98146102a95780638da5cb5b146102d157806395d89b41146102fb578063a035b1fe1461032557610113565b8063313ce567116100e6578063313ce567146101e3578063384b23671461020d5780633e413bee146102175780636bdebcc91461024157806370a082311461025757610113565b806306fdde0314610117578063095ea7b31461014157806318160ddd1461017d57806323b872dd146101a7575b5f5ffd5b348015610122575f5ffd5b5061012b610443565b60405161013891906117f5565b60405180910390f35b34801561014c575f5ffd5b50610167600480360381019061016291906118a6565b6104d3565b60405161017491906118fe565b60405180910390f35b348015610188575f5ffd5b506101916104f5565b60405161019e9190611926565b60405180910390f35b3480156101b2575f5ffd5b506101cd60048036038101906101c8919061193f565b6104fe565b6040516101da91906118fe565b60405180910390f35b3480156101ee575f5ffd5b506101f761052c565b60405161020491906119aa565b60405180910390f35b610215610534565b005b348015610222575f5ffd5b5061022b61058a565b6040516102389190611a1e565b60405180910390f35b34801561024c575f5ffd5b506102556105af565b005b348015610262575f5ffd5b5061027d60048036038101906102789190611a37565b610742565b60405161028a9190611926565b60405180910390f35b34801561029e575f5ffd5b506102a7610787565b005b3480156102b4575f5ffd5b506102cf60048036038101906102ca9190611a62565b61079a565b005b3480156102dc575f5ffd5b506102e5610945565b6040516102f29190611a9c565b60405180910390f35b348015610306575f5ffd5b5061030f61096d565b60405161031c91906117f5565b60405180910390f35b348015610330575f5ffd5b506103396109fd565b6040516103469190611adf565b60405180910390f35b34801561035a575f5ffd5b50610375600480360381019061037091906118a6565b610a1e565b60405161038291906118fe565b60405180910390f35b348015610396575f5ffd5b506103b160048036038101906103ac9190611af8565b610a40565b6040516103be9190611926565b60405180910390f35b3480156103d2575f5ffd5b506103db610ac2565b6040516103e89190611b5c565b60405180910390f35b3480156103fc575f5ffd5b5061041760048036038101906104129190611a37565b610ae0565b005b348015610424575f5ffd5b5061042d610b64565b60405161043a9190611b93565b60405180910390f35b60606003805461045290611bd9565b80601f016020809104026020016040519081016040528092919081815260200182805461047e90611bd9565b80156104c95780601f106104a0576101008083540402835291602001916104c9565b820191905f5260205f20905b8154815290600101906020018083116104ac57829003601f168201915b5050505050905090565b5f5f6104dd610b7a565b90506104ea818585610b81565b600191505092915050565b5f600254905090565b5f5f610508610b7a565b9050610515858285610b93565b610520858585610c25565b60019150509392505050565b5f6012905090565b61053c610d15565b5f341161057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590611c53565b60405180910390fd5b6105883334610d9c565b565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105b7610d15565b6007601c9054906101000a900463ffffffff1663ffffffff16600760109054906101000a90046bffffffffffffffffffffffff166105f59190611c9e565b6bffffffffffffffffffffffff16421015610645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063c90611d27565b60405180910390fd5b6107293360065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106a39190611a9c565b602060405180830381865afa1580156106be573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106e29190611d59565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e1b9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff16ff5b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61078f610d15565b6107985f610e9a565b565b600760109054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16421015801561081c57506007601c9054906101000a900463ffffffff1663ffffffff16600760109054906101000a90046bffffffffffffffffffffffff1661080b9190611c9e565b6bffffffffffffffffffffffff1642105b61085b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085290611dce565b60405180910390fd5b8061086533610742565b10156108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089d90611e36565b60405180910390fd5b6108b03382610f5d565b610938333060075f9054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16846108f09190611e54565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fdc909392919063ffffffff16565b610942338261105e565b50565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461097c90611bd9565b80601f01602080910402602001604051908101604052809291908181526020018280546109a890611bd9565b80156109f35780601f106109ca576101008083540402835291602001916109f3565b820191905f5260205f20905b8154815290600101906020018083116109d657829003601f168201915b5050505050905090565b60075f9054906101000a90046fffffffffffffffffffffffffffffffff1681565b5f5f610a28610b7a565b9050610a35818585610c25565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b600760109054906101000a90046bffffffffffffffffffffffff1681565b610ae8610d15565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b58575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b4f9190611a9c565b60405180910390fd5b610b6181610e9a565b50565b6007601c9054906101000a900463ffffffff1681565b5f33905090565b610b8e8383836001611159565b505050565b5f610b9e8484610a40565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c1f5781811015610c10578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610c0793929190611e95565b60405180910390fd5b610c1e84848484035f611159565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c95575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c8c9190611a9c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d05575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610cfc9190611a9c565b60405180910390fd5b610d10838383611328565b505050565b610d1d610b7a565b73ffffffffffffffffffffffffffffffffffffffff16610d3b610945565b73ffffffffffffffffffffffffffffffffffffffff1614610d9a57610d5e610b7a565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d919190611a9c565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e0c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e039190611a9c565b60405180910390fd5b610e175f8383611328565b5050565b610e95838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610e4e929190611eca565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611541565b505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fcd575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610fc49190611a9c565b60405180910390fd5b610fd8825f83611328565b5050565b611058848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161101193929190611ef1565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611541565b50505050565b5f8273ffffffffffffffffffffffffffffffffffffffff16825f67ffffffffffffffff81111561109157611090611f26565b5b6040519080825280601f01601f1916602001820160405280156110c35781602001600182028036833780820191505090505b506040516110d19190611f97565b5f6040518083038185875af1925050503d805f811461110b576040519150601f19603f3d011682016040523d82523d5f602084013e611110565b606091505b5050905080611154576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114b9061201d565b60405180910390fd5b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036111c9575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016111c09190611a9c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611239575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112309190611a9c565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611322578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113199190611926565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611378578060025f82825461136c919061203b565b92505081905550611446565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611401578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016113f893929190611e95565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361148d578060025f82825403925050819055506114d7565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115349190611926565b60405180910390a3505050565b5f61156b828473ffffffffffffffffffffffffffffffffffffffff166115d690919063ffffffff16565b90505f81511415801561158f57508080602001905181019061158d9190612098565b155b156115d157826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016115c89190611a9c565b60405180910390fd5b505050565b60606115e383835f6115eb565b905092915050565b60608147101561163257306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016116299190611a9c565b60405180910390fd5b5f5f8573ffffffffffffffffffffffffffffffffffffffff16848660405161165a9190611f97565b5f6040518083038185875af1925050503d805f8114611694576040519150601f19603f3d011682016040523d82523d5f602084013e611699565b606091505b50915091506116a98683836116b4565b925050509392505050565b6060826116c9576116c482611741565b611739565b5f82511480156116ef57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561173157836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016117289190611a9c565b60405180910390fd5b81905061173a565b5b9392505050565b5f815111156117535780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6117c782611785565b6117d1818561178f565b93506117e181856020860161179f565b6117ea816117ad565b840191505092915050565b5f6020820190508181035f83015261180d81846117bd565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61184282611819565b9050919050565b61185281611838565b811461185c575f5ffd5b50565b5f8135905061186d81611849565b92915050565b5f819050919050565b61188581611873565b811461188f575f5ffd5b50565b5f813590506118a08161187c565b92915050565b5f5f604083850312156118bc576118bb611815565b5b5f6118c98582860161185f565b92505060206118da85828601611892565b9150509250929050565b5f8115159050919050565b6118f8816118e4565b82525050565b5f6020820190506119115f8301846118ef565b92915050565b61192081611873565b82525050565b5f6020820190506119395f830184611917565b92915050565b5f5f5f6060848603121561195657611955611815565b5b5f6119638682870161185f565b93505060206119748682870161185f565b925050604061198586828701611892565b9150509250925092565b5f60ff82169050919050565b6119a48161198f565b82525050565b5f6020820190506119bd5f83018461199b565b92915050565b5f819050919050565b5f6119e66119e16119dc84611819565b6119c3565b611819565b9050919050565b5f6119f7826119cc565b9050919050565b5f611a08826119ed565b9050919050565b611a18816119fe565b82525050565b5f602082019050611a315f830184611a0f565b92915050565b5f60208284031215611a4c57611a4b611815565b5b5f611a598482850161185f565b91505092915050565b5f60208284031215611a7757611a76611815565b5b5f611a8484828501611892565b91505092915050565b611a9681611838565b82525050565b5f602082019050611aaf5f830184611a8d565b92915050565b5f6fffffffffffffffffffffffffffffffff82169050919050565b611ad981611ab5565b82525050565b5f602082019050611af25f830184611ad0565b92915050565b5f5f60408385031215611b0e57611b0d611815565b5b5f611b1b8582860161185f565b9250506020611b2c8582860161185f565b9150509250929050565b5f6bffffffffffffffffffffffff82169050919050565b611b5681611b36565b82525050565b5f602082019050611b6f5f830184611b4d565b92915050565b5f63ffffffff82169050919050565b611b8d81611b75565b82525050565b5f602082019050611ba65f830184611b84565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611bf057607f821691505b602082108103611c0357611c02611bac565b5b50919050565b7f6574682076616c75652063616e742062652030000000000000000000000000005f82015250565b5f611c3d60138361178f565b9150611c4882611c09565b602082019050919050565b5f6020820190508181035f830152611c6a81611c31565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ca882611b36565b9150611cb383611b36565b925082820190506bffffffffffffffffffffffff811115611cd757611cd6611c71565b5b92915050565b7f6e6f7420657870697265207965740000000000000000000000000000000000005f82015250565b5f611d11600e8361178f565b9150611d1c82611cdd565b602082019050919050565b5f6020820190508181035f830152611d3e81611d05565b9050919050565b5f81519050611d538161187c565b92915050565b5f60208284031215611d6e57611d6d611815565b5b5f611d7b84828501611d45565b91505092915050565b7f6e6f7420696e20736574746c652074696d652072616e676500000000000000005f82015250565b5f611db860188361178f565b9150611dc382611d84565b602082019050919050565b5f6020820190508181035f830152611de581611dac565b9050919050565b7f616d6f756e74206d757374203e2062616c616e636500000000000000000000005f82015250565b5f611e2060158361178f565b9150611e2b82611dec565b602082019050919050565b5f6020820190508181035f830152611e4d81611e14565b9050919050565b5f611e5e82611873565b9150611e6983611873565b9250828202611e7781611873565b91508282048414831517611e8e57611e8d611c71565b5b5092915050565b5f606082019050611ea85f830186611a8d565b611eb56020830185611917565b611ec26040830184611917565b949350505050565b5f604082019050611edd5f830185611a8d565b611eea6020830184611917565b9392505050565b5f606082019050611f045f830186611a8d565b611f116020830185611a8d565b611f1e6040830184611917565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f81519050919050565b5f81905092915050565b5f611f7182611f53565b611f7b8185611f5d565b9350611f8b81856020860161179f565b80840191505092915050565b5f611fa28284611f67565b915081905092915050565b7f5472616e7366657248656c7065723a3a736166655472616e736665724554483a5f8201527f20455448207472616e73666572206661696c6564000000000000000000000000602082015250565b5f61200760348361178f565b915061201282611fad565b604082019050919050565b5f6020820190508181035f83015261203481611ffb565b9050919050565b5f61204582611873565b915061205083611873565b925082820190508082111561206857612067611c71565b5b92915050565b612077816118e4565b8114612081575f5ffd5b50565b5f815190506120928161206e565b92915050565b5f602082840312156120ad576120ac611815565b5b5f6120ba84828501612084565b9150509291505056fea26469706673582212209a4f95c4b892dfe0197508d4f4588e3bab2911227899c52fe1881ceff65f3af264736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x113 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xEC46C4EF EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0xF8B75FB5 EQ PUSH2 0x419 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x83B6FA98 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x325 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x384B2367 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x6BDEBCC9 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x257 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x122 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x188 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x19AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0x534 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x5AF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x1A37 JUMP JUMPDEST PUSH2 0x742 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2A7 PUSH2 0x787 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x1A62 JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2E5 PUSH2 0x945 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x30F PUSH2 0x96D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x1AF8 JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x417 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x1A37 JUMP JUMPDEST PUSH2 0xAE0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x424 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x42D PUSH2 0xB64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x1B93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x452 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x47E SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4A0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4AC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4DD PUSH2 0xB7A JUMP JUMPDEST SWAP1 POP PUSH2 0x4EA DUP2 DUP6 DUP6 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x508 PUSH2 0xB7A JUMP JUMPDEST SWAP1 POP PUSH2 0x515 DUP6 DUP3 DUP6 PUSH2 0xB93 JUMP JUMPDEST PUSH2 0x520 DUP6 DUP6 DUP6 PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x53C PUSH2 0xD15 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x575 SWAP1 PUSH2 0x1C53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x588 CALLER CALLVALUE PUSH2 0xD9C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x5B7 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x1C9E JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP LT ISZERO PUSH2 0x645 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63C SWAP1 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x729 CALLER PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A3 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6BE JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE1B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x78F PUSH2 0xD15 JUMP JUMPDEST PUSH2 0x798 PUSH0 PUSH2 0xE9A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x81C JUMPI POP PUSH1 0x7 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x80B SWAP2 SWAP1 PUSH2 0x1C9E JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP LT JUMPDEST PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x852 SWAP1 PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x865 CALLER PUSH2 0x742 JUMP JUMPDEST LT ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89D SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8B0 CALLER DUP3 PUSH2 0xF5D JUMP JUMPDEST PUSH2 0x938 CALLER ADDRESS PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x8F0 SWAP2 SWAP1 PUSH2 0x1E54 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFDC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x942 CALLER DUP3 PUSH2 0x105E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x97C SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9A8 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xA28 PUSH2 0xB7A JUMP JUMPDEST SWAP1 POP PUSH2 0xA35 DUP2 DUP6 DUP6 PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xAE8 PUSH2 0xD15 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB58 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4F SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB61 DUP2 PUSH2 0xE9A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB8E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1159 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB9E DUP5 DUP5 PUSH2 0xA40 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC1F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC10 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC07 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC1E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1159 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC95 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8C SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD05 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFC SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD10 DUP4 DUP4 DUP4 PUSH2 0x1328 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xD1D PUSH2 0xB7A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD3B PUSH2 0x945 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD9A JUMPI PUSH2 0xD5E PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD91 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE0C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE03 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE17 PUSH0 DUP4 DUP4 PUSH2 0x1328 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE95 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE4E SWAP3 SWAP2 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1541 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFCD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC4 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD8 DUP3 PUSH0 DUP4 PUSH2 0x1328 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1058 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1011 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1541 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1091 JUMPI PUSH2 0x1090 PUSH2 0x1F26 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10C3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x10D1 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x110B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1154 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114B SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11C9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C0 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1239 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1230 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1322 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1319 SWAP2 SWAP1 PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1378 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x136C SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1446 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1401 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x148D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x14D7 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1534 SWAP2 SWAP1 PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x156B DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15D6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x158F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x158D SWAP2 SWAP1 PUSH2 0x2098 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x15D1 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C8 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x15E3 DUP4 DUP4 PUSH0 PUSH2 0x15EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1632 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1629 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x165A SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1694 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x16A9 DUP7 DUP4 DUP4 PUSH2 0x16B4 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x16C9 JUMPI PUSH2 0x16C4 DUP3 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0x1739 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x16EF JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1731 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1728 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x173A JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1753 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17C7 DUP3 PUSH2 0x1785 JUMP JUMPDEST PUSH2 0x17D1 DUP2 DUP6 PUSH2 0x178F JUMP JUMPDEST SWAP4 POP PUSH2 0x17E1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x179F JUMP JUMPDEST PUSH2 0x17EA DUP2 PUSH2 0x17AD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x180D DUP2 DUP5 PUSH2 0x17BD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1842 DUP3 PUSH2 0x1819 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1852 DUP2 PUSH2 0x1838 JUMP JUMPDEST DUP2 EQ PUSH2 0x185C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x186D DUP2 PUSH2 0x1849 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1885 DUP2 PUSH2 0x1873 JUMP JUMPDEST DUP2 EQ PUSH2 0x188F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18A0 DUP2 PUSH2 0x187C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18BC JUMPI PUSH2 0x18BB PUSH2 0x1815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18C9 DUP6 DUP3 DUP7 ADD PUSH2 0x185F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18DA DUP6 DUP3 DUP7 ADD PUSH2 0x1892 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F8 DUP2 PUSH2 0x18E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1911 PUSH0 DUP4 ADD DUP5 PUSH2 0x18EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1920 DUP2 PUSH2 0x1873 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1939 PUSH0 DUP4 ADD DUP5 PUSH2 0x1917 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1956 JUMPI PUSH2 0x1955 PUSH2 0x1815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1963 DUP7 DUP3 DUP8 ADD PUSH2 0x185F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1974 DUP7 DUP3 DUP8 ADD PUSH2 0x185F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1985 DUP7 DUP3 DUP8 ADD PUSH2 0x1892 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19A4 DUP2 PUSH2 0x198F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19BD PUSH0 DUP4 ADD DUP5 PUSH2 0x199B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19E6 PUSH2 0x19E1 PUSH2 0x19DC DUP5 PUSH2 0x1819 JUMP JUMPDEST PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x1819 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19F7 DUP3 PUSH2 0x19CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A08 DUP3 PUSH2 0x19ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A18 DUP2 PUSH2 0x19FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A31 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A4C JUMPI PUSH2 0x1A4B PUSH2 0x1815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A59 DUP5 DUP3 DUP6 ADD PUSH2 0x185F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A77 JUMPI PUSH2 0x1A76 PUSH2 0x1815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A84 DUP5 DUP3 DUP6 ADD PUSH2 0x1892 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A96 DUP2 PUSH2 0x1838 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AAF PUSH0 DUP4 ADD DUP5 PUSH2 0x1A8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AD9 DUP2 PUSH2 0x1AB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B0E JUMPI PUSH2 0x1B0D PUSH2 0x1815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B1B DUP6 DUP3 DUP7 ADD PUSH2 0x185F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B2C DUP6 DUP3 DUP7 ADD PUSH2 0x185F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B56 DUP2 PUSH2 0x1B36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6F PUSH0 DUP4 ADD DUP5 PUSH2 0x1B4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B8D DUP2 PUSH2 0x1B75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BA6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1BF0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C03 JUMPI PUSH2 0x1C02 PUSH2 0x1BAC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6574682076616C75652063616E74206265203000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C3D PUSH1 0x13 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C48 DUP3 PUSH2 0x1C09 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C6A DUP2 PUSH2 0x1C31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CA8 DUP3 PUSH2 0x1B36 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB3 DUP4 PUSH2 0x1B36 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CD7 JUMPI PUSH2 0x1CD6 PUSH2 0x1C71 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F742065787069726520796574000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D11 PUSH1 0xE DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x1D1C DUP3 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D3E DUP2 PUSH2 0x1D05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D53 DUP2 PUSH2 0x187C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D6E JUMPI PUSH2 0x1D6D PUSH2 0x1815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D7B DUP5 DUP3 DUP6 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F7420696E20736574746C652074696D652072616E67650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB8 PUSH1 0x18 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC3 DUP3 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DE5 DUP2 PUSH2 0x1DAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616D6F756E74206D757374203E2062616C616E63650000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E20 PUSH1 0x15 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x1E2B DUP3 PUSH2 0x1DEC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E4D DUP2 PUSH2 0x1E14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E5E DUP3 PUSH2 0x1873 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E69 DUP4 PUSH2 0x1873 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1E77 DUP2 PUSH2 0x1873 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1E8E JUMPI PUSH2 0x1E8D PUSH2 0x1C71 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EA8 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A8D JUMP JUMPDEST PUSH2 0x1EB5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x1EC2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1917 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EDD PUSH0 DUP4 ADD DUP6 PUSH2 0x1A8D JUMP JUMPDEST PUSH2 0x1EEA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1917 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F04 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A8D JUMP JUMPDEST PUSH2 0x1F11 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A8D JUMP JUMPDEST PUSH2 0x1F1E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1917 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F71 DUP3 PUSH2 0x1F53 JUMP JUMPDEST PUSH2 0x1F7B DUP2 DUP6 PUSH2 0x1F5D JUMP JUMPDEST SWAP4 POP PUSH2 0x1F8B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x179F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA2 DUP3 DUP5 PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665724554483A PUSH0 DUP3 ADD MSTORE PUSH32 0x20455448207472616E73666572206661696C6564000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2007 PUSH1 0x34 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x2012 DUP3 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2034 DUP2 PUSH2 0x1FFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2045 DUP3 PUSH2 0x1873 JUMP JUMPDEST SWAP2 POP PUSH2 0x2050 DUP4 PUSH2 0x1873 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2068 JUMPI PUSH2 0x2067 PUSH2 0x1C71 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2077 DUP2 PUSH2 0x18E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2081 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2092 DUP2 PUSH2 0x206E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20AD JUMPI PUSH2 0x20AC PUSH2 0x1815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20BA DUP5 DUP3 DUP6 ADD PUSH2 0x2084 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0x4F SWAP6 0xC4 0xB8 SWAP3 0xDF 0xE0 NOT PUSH22 0x8D4F4588E3BAB2911227899C52FE1881CEFF65F3AF2 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "383:1581:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;892:151:9;;;:::i;:::-;;466:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1712:243;;;;;;;;;;;;;:::i;:::-;;3299:116:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1051:428:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;491:20:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;518:26:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;551:26:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;892:151:9:-;1531:13:0;:11;:13::i;:::-;971:1:9::1;959:9;:13;951:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;1007:28;1013:10;1025:9;1007:5;:28::i;:::-;892:151::o:0;466:18::-;;;;;;;;;;;;;:::o;1712:243::-;1531:13:0;:11;:13::i;:::-;1801:12:9::1;;;;;;;;;;;1786:27;;:12;;;;;;;;;;;:27;;;;:::i;:::-;1767:46;;:15;:46;;1759:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1843:60;1861:10;1873:4;;;;;;;;;;;:14;;;1896:4;1873:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1843:4;;;;;;;;;;;:17;;;;:60;;;;;:::i;:::-;1935:10;1914:33;;;3299:116:2::0;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1051:428:9:-;1135:12;;;;;;;;;;;1116:31;;:15;:31;;:80;;;;;1184:12;;;;;;;;;;;1169:27;;:12;;;;;;;;;;;:27;;;;:::i;:::-;1151:45;;:15;:45;1116:80;1108:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;1269:7;1244:21;1254:10;1244:9;:21::i;:::-;:32;;1236:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1313:26;1319:10;1331:7;1313:5;:26::i;:::-;1350:65;1372:10;1392:4;1409:5;;;;;;;;;;;1399:15;;:7;:15;;;;:::i;:::-;1350:4;;;;;;;;;;;:21;;;;:65;;;;;;:::i;:::-;1426:45;1450:10;1463:7;1426:15;:45::i;:::-;1051:428;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;491:20:9:-;;;;;;;;;;;;;:::o;3610:178:2:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;3846:140::-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;518:26:9:-;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;551:26:9:-;;;;;;;;;;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;1303:160:6:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;8247:206:2:-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;1702:188:6:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;1487:217:9:-;1560:12;1578:2;:7;;1593:5;1610:1;1600:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1578:35;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1559:54;;;1632:7;1624:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1548:156;1487:217;;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;4059:629:6:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:7:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:99:10;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:60::-;4774:3;4795:5;4788:12;;4746:60;;;:::o;4812:142::-;4862:9;4895:53;4913:34;4922:24;4940:5;4922:24;:::i;:::-;4913:34;:::i;:::-;4895:53;:::i;:::-;4882:66;;4812:142;;;:::o;4960:126::-;5010:9;5043:37;5074:5;5043:37;:::i;:::-;5030:50;;4960:126;;;:::o;5092:140::-;5156:9;5189:37;5220:5;5189:37;:::i;:::-;5176:50;;5092:140;;;:::o;5238:159::-;5339:51;5384:5;5339:51;:::i;:::-;5334:3;5327:64;5238:159;;:::o;5403:250::-;5510:4;5548:2;5537:9;5533:18;5525:26;;5561:85;5643:1;5632:9;5628:17;5619:6;5561:85;:::i;:::-;5403:250;;;;:::o;5659:329::-;5718:6;5767:2;5755:9;5746:7;5742:23;5738:32;5735:119;;;5773:79;;:::i;:::-;5735:119;5893:1;5918:53;5963:7;5954:6;5943:9;5939:22;5918:53;:::i;:::-;5908:63;;5864:117;5659:329;;;;:::o;5994:::-;6053:6;6102:2;6090:9;6081:7;6077:23;6073:32;6070:119;;;6108:79;;:::i;:::-;6070:119;6228:1;6253:53;6298:7;6289:6;6278:9;6274:22;6253:53;:::i;:::-;6243:63;;6199:117;5994:329;;;;:::o;6329:118::-;6416:24;6434:5;6416:24;:::i;:::-;6411:3;6404:37;6329:118;;:::o;6453:222::-;6546:4;6584:2;6573:9;6569:18;6561:26;;6597:71;6665:1;6654:9;6650:17;6641:6;6597:71;:::i;:::-;6453:222;;;;:::o;6681:118::-;6718:7;6758:34;6751:5;6747:46;6736:57;;6681:118;;;:::o;6805:::-;6892:24;6910:5;6892:24;:::i;:::-;6887:3;6880:37;6805:118;;:::o;6929:222::-;7022:4;7060:2;7049:9;7045:18;7037:26;;7073:71;7141:1;7130:9;7126:17;7117:6;7073:71;:::i;:::-;6929:222;;;;:::o;7157:474::-;7225:6;7233;7282:2;7270:9;7261:7;7257:23;7253:32;7250:119;;;7288:79;;:::i;:::-;7250:119;7408:1;7433:53;7478:7;7469:6;7458:9;7454:22;7433:53;:::i;:::-;7423:63;;7379:117;7535:2;7561:53;7606:7;7597:6;7586:9;7582:22;7561:53;:::i;:::-;7551:63;;7506:118;7157:474;;;;;:::o;7637:109::-;7673:7;7713:26;7706:5;7702:38;7691:49;;7637:109;;;:::o;7752:115::-;7837:23;7854:5;7837:23;:::i;:::-;7832:3;7825:36;7752:115;;:::o;7873:218::-;7964:4;8002:2;7991:9;7987:18;7979:26;;8015:69;8081:1;8070:9;8066:17;8057:6;8015:69;:::i;:::-;7873:218;;;;:::o;8097:93::-;8133:7;8173:10;8166:5;8162:22;8151:33;;8097:93;;;:::o;8196:115::-;8281:23;8298:5;8281:23;:::i;:::-;8276:3;8269:36;8196:115;;:::o;8317:218::-;8408:4;8446:2;8435:9;8431:18;8423:26;;8459:69;8525:1;8514:9;8510:17;8501:6;8459:69;:::i;:::-;8317:218;;;;:::o;8541:180::-;8589:77;8586:1;8579:88;8686:4;8683:1;8676:15;8710:4;8707:1;8700:15;8727:320;8771:6;8808:1;8802:4;8798:12;8788:22;;8855:1;8849:4;8845:12;8876:18;8866:81;;8932:4;8924:6;8920:17;8910:27;;8866:81;8994:2;8986:6;8983:14;8963:18;8960:38;8957:84;;9013:18;;:::i;:::-;8957:84;8778:269;8727:320;;;:::o;9053:169::-;9193:21;9189:1;9181:6;9177:14;9170:45;9053:169;:::o;9228:366::-;9370:3;9391:67;9455:2;9450:3;9391:67;:::i;:::-;9384:74;;9467:93;9556:3;9467:93;:::i;:::-;9585:2;9580:3;9576:12;9569:19;;9228:366;;;:::o;9600:419::-;9766:4;9804:2;9793:9;9789:18;9781:26;;9853:9;9847:4;9843:20;9839:1;9828:9;9824:17;9817:47;9881:131;10007:4;9881:131;:::i;:::-;9873:139;;9600:419;;;:::o;10025:180::-;10073:77;10070:1;10063:88;10170:4;10167:1;10160:15;10194:4;10191:1;10184:15;10211:213;10250:3;10269:19;10286:1;10269:19;:::i;:::-;10264:24;;10302:19;10319:1;10302:19;:::i;:::-;10297:24;;10344:1;10341;10337:9;10330:16;;10367:26;10362:3;10359:35;10356:61;;;10397:18;;:::i;:::-;10356:61;10211:213;;;;:::o;10430:164::-;10570:16;10566:1;10558:6;10554:14;10547:40;10430:164;:::o;10600:366::-;10742:3;10763:67;10827:2;10822:3;10763:67;:::i;:::-;10756:74;;10839:93;10928:3;10839:93;:::i;:::-;10957:2;10952:3;10948:12;10941:19;;10600:366;;;:::o;10972:419::-;11138:4;11176:2;11165:9;11161:18;11153:26;;11225:9;11219:4;11215:20;11211:1;11200:9;11196:17;11189:47;11253:131;11379:4;11253:131;:::i;:::-;11245:139;;10972:419;;;:::o;11397:143::-;11454:5;11485:6;11479:13;11470:22;;11501:33;11528:5;11501:33;:::i;:::-;11397:143;;;;:::o;11546:351::-;11616:6;11665:2;11653:9;11644:7;11640:23;11636:32;11633:119;;;11671:79;;:::i;:::-;11633:119;11791:1;11816:64;11872:7;11863:6;11852:9;11848:22;11816:64;:::i;:::-;11806:74;;11762:128;11546:351;;;;:::o;11903:174::-;12043:26;12039:1;12031:6;12027:14;12020:50;11903:174;:::o;12083:366::-;12225:3;12246:67;12310:2;12305:3;12246:67;:::i;:::-;12239:74;;12322:93;12411:3;12322:93;:::i;:::-;12440:2;12435:3;12431:12;12424:19;;12083:366;;;:::o;12455:419::-;12621:4;12659:2;12648:9;12644:18;12636:26;;12708:9;12702:4;12698:20;12694:1;12683:9;12679:17;12672:47;12736:131;12862:4;12736:131;:::i;:::-;12728:139;;12455:419;;;:::o;12880:171::-;13020:23;13016:1;13008:6;13004:14;12997:47;12880:171;:::o;13057:366::-;13199:3;13220:67;13284:2;13279:3;13220:67;:::i;:::-;13213:74;;13296:93;13385:3;13296:93;:::i;:::-;13414:2;13409:3;13405:12;13398:19;;13057:366;;;:::o;13429:419::-;13595:4;13633:2;13622:9;13618:18;13610:26;;13682:9;13676:4;13672:20;13668:1;13657:9;13653:17;13646:47;13710:131;13836:4;13710:131;:::i;:::-;13702:139;;13429:419;;;:::o;13854:410::-;13894:7;13917:20;13935:1;13917:20;:::i;:::-;13912:25;;13951:20;13969:1;13951:20;:::i;:::-;13946:25;;14006:1;14003;13999:9;14028:30;14046:11;14028:30;:::i;:::-;14017:41;;14207:1;14198:7;14194:15;14191:1;14188:22;14168:1;14161:9;14141:83;14118:139;;14237:18;;:::i;:::-;14118:139;13902:362;13854:410;;;;:::o;14270:442::-;14419:4;14457:2;14446:9;14442:18;14434:26;;14470:71;14538:1;14527:9;14523:17;14514:6;14470:71;:::i;:::-;14551:72;14619:2;14608:9;14604:18;14595:6;14551:72;:::i;:::-;14633;14701:2;14690:9;14686:18;14677:6;14633:72;:::i;:::-;14270:442;;;;;;:::o;14718:332::-;14839:4;14877:2;14866:9;14862:18;14854:26;;14890:71;14958:1;14947:9;14943:17;14934:6;14890:71;:::i;:::-;14971:72;15039:2;15028:9;15024:18;15015:6;14971:72;:::i;:::-;14718:332;;;;;:::o;15056:442::-;15205:4;15243:2;15232:9;15228:18;15220:26;;15256:71;15324:1;15313:9;15309:17;15300:6;15256:71;:::i;:::-;15337:72;15405:2;15394:9;15390:18;15381:6;15337:72;:::i;:::-;15419;15487:2;15476:9;15472:18;15463:6;15419:72;:::i;:::-;15056:442;;;;;;:::o;15504:180::-;15552:77;15549:1;15542:88;15649:4;15646:1;15639:15;15673:4;15670:1;15663:15;15690:98;15741:6;15775:5;15769:12;15759:22;;15690:98;;;:::o;15794:147::-;15895:11;15932:3;15917:18;;15794:147;;;;:::o;15947:386::-;16051:3;16079:38;16111:5;16079:38;:::i;:::-;16133:88;16214:6;16209:3;16133:88;:::i;:::-;16126:95;;16230:65;16288:6;16283:3;16276:4;16269:5;16265:16;16230:65;:::i;:::-;16320:6;16315:3;16311:16;16304:23;;16055:278;15947:386;;;;:::o;16339:271::-;16469:3;16491:93;16580:3;16571:6;16491:93;:::i;:::-;16484:100;;16601:3;16594:10;;16339:271;;;;:::o;16616:239::-;16756:34;16752:1;16744:6;16740:14;16733:58;16825:22;16820:2;16812:6;16808:15;16801:47;16616:239;:::o;16861:366::-;17003:3;17024:67;17088:2;17083:3;17024:67;:::i;:::-;17017:74;;17100:93;17189:3;17100:93;:::i;:::-;17218:2;17213:3;17209:12;17202:19;;16861:366;;;:::o;17233:419::-;17399:4;17437:2;17426:9;17422:18;17414:26;;17486:9;17480:4;17476:20;17472:1;17461:9;17457:17;17450:47;17514:131;17640:4;17514:131;:::i;:::-;17506:139;;17233:419;;;:::o;17658:191::-;17698:3;17717:20;17735:1;17717:20;:::i;:::-;17712:25;;17751:20;17769:1;17751:20;:::i;:::-;17746:25;;17794:1;17791;17787:9;17780:16;;17815:3;17812:1;17809:10;17806:36;;;17822:18;;:::i;:::-;17806:36;17658:191;;;;:::o;17855:116::-;17925:21;17940:5;17925:21;:::i;:::-;17918:5;17915:32;17905:60;;17961:1;17958;17951:12;17905:60;17855:116;:::o;17977:137::-;18031:5;18062:6;18056:13;18047:22;;18078:30;18102:5;18078:30;:::i;:::-;17977:137;;;;:::o;18120:345::-;18187:6;18236:2;18224:9;18215:7;18211:23;18207:32;18204:119;;;18242:79;;:::i;:::-;18204:119;18362:1;18387:61;18440:7;18431:6;18420:9;18416:22;18387:61;:::i;:::-;18377:71;;18333:125;18120:345;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1688200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2939",
								"decimals()": "361",
								"destory()": "infinite",
								"durationTime()": "2627",
								"exerciseTime()": "2583",
								"issueOption()": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"price()": "2577",
								"renounceOwnership()": "infinite",
								"settleOption(uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"usdc()": "infinite"
							},
							"internal": {
								"safeTransferETH(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 383,
									"end": 1964,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 383,
									"end": 1964,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 383,
									"end": 1964,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 586,
									"end": 884,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 586,
									"end": 884,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 586,
									"end": 884,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 586,
									"end": 884,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 884,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 884,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 586,
									"end": 884,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 586,
									"end": 884,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 586,
									"end": 884,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 739,
									"end": 749,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "1D"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "E68891E79A84E6B58BE8AF95E79C8BE5A49AE69C9FE69D83546F6B656E000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "43414C4C544F4B454E0000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 769,
									"end": 775,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 761,
									"end": 766,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 761,
									"end": 766,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 761,
									"end": 775,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 761,
									"end": 775,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 761,
									"end": 775,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 761,
									"end": 775,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 761,
									"end": 775,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 761,
									"end": 775,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 761,
									"end": 775,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 761,
									"end": 775,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 761,
									"end": 775,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 761,
									"end": 775,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 761,
									"end": 775,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 761,
									"end": 775,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 761,
									"end": 775,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 761,
									"end": 775,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 761,
									"end": 775,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 761,
									"end": 775,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 761,
									"end": 775,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 761,
									"end": 775,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 801,
									"end": 814,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 786,
									"end": 798,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 786,
									"end": 798,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 786,
									"end": 814,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 786,
									"end": 814,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 786,
									"end": 814,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 786,
									"end": 814,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 786,
									"end": 814,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 786,
									"end": 814,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 786,
									"end": 814,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 786,
									"end": 814,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 786,
									"end": 814,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 786,
									"end": 814,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 786,
									"end": 814,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 786,
									"end": 814,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 786,
									"end": 814,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 786,
									"end": 814,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 786,
									"end": 814,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 786,
									"end": 814,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 786,
									"end": 814,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 786,
									"end": 814,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 840,
									"end": 853,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 825,
									"end": 837,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 825,
									"end": 837,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1C"
								},
								{
									"begin": 825,
									"end": 853,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 825,
									"end": 853,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 825,
									"end": 853,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 825,
									"end": 853,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 825,
									"end": 853,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 825,
									"end": 853,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFF"
								},
								{
									"begin": 825,
									"end": 853,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 825,
									"end": 853,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 825,
									"end": 853,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 825,
									"end": 853,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 825,
									"end": 853,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 825,
									"end": 853,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFF"
								},
								{
									"begin": 825,
									"end": 853,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 825,
									"end": 853,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 825,
									"end": 853,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 825,
									"end": 853,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 825,
									"end": 853,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 825,
									"end": 853,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 871,
									"end": 876,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 864,
									"end": 868,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 864,
									"end": 868,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 864,
									"end": 876,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 864,
									"end": 876,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 864,
									"end": 876,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 864,
									"end": 876,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 864,
									"end": 876,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 864,
									"end": 876,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 864,
									"end": 876,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 864,
									"end": 876,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 864,
									"end": 876,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 864,
									"end": 876,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 864,
									"end": 876,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 864,
									"end": 876,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 864,
									"end": 876,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 864,
									"end": 876,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 864,
									"end": 876,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 864,
									"end": 876,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 864,
									"end": 876,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 864,
									"end": 876,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 586,
									"end": 884,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 383,
									"end": 1964,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 383,
									"end": 1964,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1017,
									"end": 1135,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1017,
									"end": 1135,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1054,
									"end": 1061,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1094,
									"end": 1128,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1087,
									"end": 1092,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1083,
									"end": 1129,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1129,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1129,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1017,
									"end": 1135,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1017,
									"end": 1135,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1017,
									"end": 1135,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1017,
									"end": 1135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1141,
									"end": 1263,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1141,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1214,
									"end": 1238,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 1232,
									"end": 1237,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1214,
									"end": 1238,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1214,
									"end": 1238,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1214,
									"end": 1238,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 1214,
									"end": 1238,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1207,
									"end": 1212,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1204,
									"end": 1239,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1194,
									"end": 1257,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 1194,
									"end": 1257,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1253,
									"end": 1254,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1250,
									"end": 1251,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1243,
									"end": 1255,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1194,
									"end": 1257,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 1194,
									"end": 1257,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1141,
									"end": 1263,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1141,
									"end": 1263,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1412,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1269,
									"end": 1412,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1331,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1357,
									"end": 1363,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1351,
									"end": 1364,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1342,
									"end": 1364,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1342,
									"end": 1364,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1373,
									"end": 1406,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 1400,
									"end": 1405,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1373,
									"end": 1406,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1373,
									"end": 1406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1373,
									"end": 1406,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 1373,
									"end": 1406,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1412,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1412,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1412,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1412,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1412,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1418,
									"end": 1527,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1418,
									"end": 1527,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1454,
									"end": 1461,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1494,
									"end": 1520,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1487,
									"end": 1492,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1483,
									"end": 1521,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1472,
									"end": 1521,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1472,
									"end": 1521,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1418,
									"end": 1527,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1418,
									"end": 1527,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1418,
									"end": 1527,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1418,
									"end": 1527,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1533,
									"end": 1653,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1533,
									"end": 1653,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1605,
									"end": 1628,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1622,
									"end": 1627,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1605,
									"end": 1628,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1605,
									"end": 1628,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1605,
									"end": 1628,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1605,
									"end": 1628,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1595,
									"end": 1629,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1585,
									"end": 1647,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 1585,
									"end": 1647,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1643,
									"end": 1644,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1640,
									"end": 1641,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1585,
									"end": 1647,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 1585,
									"end": 1647,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1533,
									"end": 1653,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1533,
									"end": 1653,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1659,
									"end": 1800,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1659,
									"end": 1800,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1715,
									"end": 1720,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1746,
									"end": 1752,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1740,
									"end": 1753,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1731,
									"end": 1753,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1731,
									"end": 1753,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1762,
									"end": 1794,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 1788,
									"end": 1793,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1762,
									"end": 1794,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1762,
									"end": 1794,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1762,
									"end": 1794,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 1762,
									"end": 1794,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1659,
									"end": 1800,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1659,
									"end": 1800,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1659,
									"end": 1800,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1659,
									"end": 1800,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1659,
									"end": 1800,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1806,
									"end": 1899,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1806,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1842,
									"end": 1849,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1882,
									"end": 1892,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1875,
									"end": 1880,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1871,
									"end": 1893,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1860,
									"end": 1893,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1860,
									"end": 1893,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1806,
									"end": 1899,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1806,
									"end": 1899,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1806,
									"end": 1899,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1806,
									"end": 1899,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1905,
									"end": 2025,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1905,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1977,
									"end": 2000,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 1994,
									"end": 1999,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1977,
									"end": 2000,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1977,
									"end": 2000,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1977,
									"end": 2000,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 1977,
									"end": 2000,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1967,
									"end": 2001,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 1957,
									"end": 2019,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2015,
									"end": 2016,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2012,
									"end": 2013,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2005,
									"end": 2017,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 2019,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 1957,
									"end": 2019,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1905,
									"end": 2025,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1905,
									"end": 2025,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2031,
									"end": 2172,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 2031,
									"end": 2172,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2087,
									"end": 2092,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2118,
									"end": 2124,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2112,
									"end": 2125,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2103,
									"end": 2125,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2103,
									"end": 2125,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2134,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 2160,
									"end": 2165,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2134,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 2134,
									"end": 2166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2134,
									"end": 2166,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 2134,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2031,
									"end": 2172,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2031,
									"end": 2172,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2031,
									"end": 2172,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2031,
									"end": 2172,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2031,
									"end": 2172,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2178,
									"end": 3022,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2178,
									"end": 3022,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2287,
									"end": 2293,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2295,
									"end": 2301,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2303,
									"end": 2309,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2311,
									"end": 2317,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2360,
									"end": 2363,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2348,
									"end": 2357,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2339,
									"end": 2346,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2335,
									"end": 2358,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2331,
									"end": 2364,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 2328,
									"end": 2448,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2328,
									"end": 2448,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 2328,
									"end": 2448,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2367,
									"end": 2446,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 2367,
									"end": 2446,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 2367,
									"end": 2446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2367,
									"end": 2446,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 2367,
									"end": 2446,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2328,
									"end": 2448,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 2328,
									"end": 2448,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2487,
									"end": 2488,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2512,
									"end": 2590,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 2582,
									"end": 2589,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2573,
									"end": 2579,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2562,
									"end": 2571,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2558,
									"end": 2580,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2512,
									"end": 2590,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 2512,
									"end": 2590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2512,
									"end": 2590,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 2512,
									"end": 2590,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2502,
									"end": 2590,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2502,
									"end": 2590,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2600,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2639,
									"end": 2641,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2665,
									"end": 2729,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 2721,
									"end": 2728,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2712,
									"end": 2718,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2701,
									"end": 2710,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2697,
									"end": 2719,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2665,
									"end": 2729,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 2665,
									"end": 2729,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2665,
									"end": 2729,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 2665,
									"end": 2729,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2655,
									"end": 2729,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2655,
									"end": 2729,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2610,
									"end": 2739,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2778,
									"end": 2780,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2804,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 2859,
									"end": 2866,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2850,
									"end": 2856,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2839,
									"end": 2848,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2835,
									"end": 2857,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2804,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 2804,
									"end": 2867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2804,
									"end": 2867,
									"name": "tag",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 2804,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2794,
									"end": 2867,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2794,
									"end": 2867,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2749,
									"end": 2877,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2916,
									"end": 2918,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2942,
									"end": 3005,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 2997,
									"end": 3004,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2988,
									"end": 2994,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2977,
									"end": 2986,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2973,
									"end": 2995,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2942,
									"end": 3005,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 2942,
									"end": 3005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2942,
									"end": 3005,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 2942,
									"end": 3005,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 3005,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 3005,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2887,
									"end": 3015,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2178,
									"end": 3022,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2178,
									"end": 3022,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 2178,
									"end": 3022,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2178,
									"end": 3022,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2178,
									"end": 3022,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2178,
									"end": 3022,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2178,
									"end": 3022,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2178,
									"end": 3022,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3028,
									"end": 3127,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 3028,
									"end": 3127,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3080,
									"end": 3086,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3114,
									"end": 3119,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3108,
									"end": 3120,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3098,
									"end": 3120,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3098,
									"end": 3120,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3028,
									"end": 3127,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3028,
									"end": 3127,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3028,
									"end": 3127,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3028,
									"end": 3127,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3313,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 3133,
									"end": 3313,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3181,
									"end": 3258,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3178,
									"end": 3179,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3171,
									"end": 3259,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3278,
									"end": 3282,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 3275,
									"end": 3276,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 3268,
									"end": 3283,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3302,
									"end": 3306,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3299,
									"end": 3300,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3292,
									"end": 3307,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3319,
									"end": 3499,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 3319,
									"end": 3499,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3367,
									"end": 3444,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3364,
									"end": 3365,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3357,
									"end": 3445,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3464,
									"end": 3468,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 3461,
									"end": 3462,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 3454,
									"end": 3469,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3488,
									"end": 3492,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3485,
									"end": 3486,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3478,
									"end": 3493,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3505,
									"end": 3825,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3505,
									"end": 3825,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3549,
									"end": 3555,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3586,
									"end": 3587,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 3580,
									"end": 3584,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3576,
									"end": 3588,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 3566,
									"end": 3588,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3566,
									"end": 3588,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3633,
									"end": 3634,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3627,
									"end": 3631,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3623,
									"end": 3635,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3654,
									"end": 3672,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3644,
									"end": 3725,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 3644,
									"end": 3725,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3710,
									"end": 3714,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 3702,
									"end": 3708,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3698,
									"end": 3715,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3688,
									"end": 3715,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3688,
									"end": 3715,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3644,
									"end": 3725,
									"name": "tag",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 3644,
									"end": 3725,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3772,
									"end": 3774,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3764,
									"end": 3770,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3761,
									"end": 3775,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3741,
									"end": 3759,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3738,
									"end": 3776,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3735,
									"end": 3819,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 3735,
									"end": 3819,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3791,
									"end": 3809,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 3791,
									"end": 3809,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 3791,
									"end": 3809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3791,
									"end": 3809,
									"name": "tag",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 3791,
									"end": 3809,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3735,
									"end": 3819,
									"name": "tag",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 3735,
									"end": 3819,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3556,
									"end": 3825,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3505,
									"end": 3825,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3505,
									"end": 3825,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3505,
									"end": 3825,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3505,
									"end": 3825,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3831,
									"end": 3972,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 3831,
									"end": 3972,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3880,
									"end": 3884,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3903,
									"end": 3906,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3895,
									"end": 3906,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3895,
									"end": 3906,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3926,
									"end": 3929,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3923,
									"end": 3924,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3916,
									"end": 3930,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3960,
									"end": 3964,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3957,
									"end": 3958,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3947,
									"end": 3965,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 3939,
									"end": 3965,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3939,
									"end": 3965,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3831,
									"end": 3972,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3831,
									"end": 3972,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3831,
									"end": 3972,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3831,
									"end": 3972,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3978,
									"end": 4071,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 3978,
									"end": 4071,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4015,
									"end": 4021,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4062,
									"end": 4064,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4057,
									"end": 4059,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4050,
									"end": 4055,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4046,
									"end": 4060,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4042,
									"end": 4065,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 4032,
									"end": 4065,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4032,
									"end": 4065,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3978,
									"end": 4071,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3978,
									"end": 4071,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3978,
									"end": 4071,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3978,
									"end": 4071,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4077,
									"end": 4184,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 4077,
									"end": 4184,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4121,
									"end": 4129,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4171,
									"end": 4176,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4165,
									"end": 4169,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4161,
									"end": 4177,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 4140,
									"end": 4177,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4140,
									"end": 4177,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4077,
									"end": 4184,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4077,
									"end": 4184,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4077,
									"end": 4184,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4077,
									"end": 4184,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4077,
									"end": 4184,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4190,
									"end": 4583,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 4190,
									"end": 4583,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4259,
									"end": 4265,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4309,
									"end": 4310,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 4297,
									"end": 4307,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4293,
									"end": 4311,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4332,
									"end": 4429,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 4362,
									"end": 4428,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4351,
									"end": 4360,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4332,
									"end": 4429,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 4332,
									"end": 4429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4332,
									"end": 4429,
									"name": "tag",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 4332,
									"end": 4429,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4450,
									"end": 4489,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 4480,
									"end": 4488,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4469,
									"end": 4478,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4450,
									"end": 4489,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 4450,
									"end": 4489,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4450,
									"end": 4489,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 4450,
									"end": 4489,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4438,
									"end": 4489,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 4438,
									"end": 4489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4522,
									"end": 4526,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4518,
									"end": 4527,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4511,
									"end": 4516,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4507,
									"end": 4528,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4498,
									"end": 4528,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 4498,
									"end": 4528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4571,
									"end": 4575,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4561,
									"end": 4569,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4557,
									"end": 4576,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4550,
									"end": 4555,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4547,
									"end": 4577,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 4537,
									"end": 4577,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4537,
									"end": 4577,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4266,
									"end": 4583,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4266,
									"end": 4583,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4190,
									"end": 4583,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 4190,
									"end": 4583,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4190,
									"end": 4583,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4190,
									"end": 4583,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4190,
									"end": 4583,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4190,
									"end": 4583,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4589,
									"end": 4666,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 4589,
									"end": 4666,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4626,
									"end": 4633,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4655,
									"end": 4660,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4644,
									"end": 4660,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4644,
									"end": 4660,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4589,
									"end": 4666,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4589,
									"end": 4666,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4589,
									"end": 4666,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4589,
									"end": 4666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4672,
									"end": 4732,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 4672,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4700,
									"end": 4703,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4721,
									"end": 4726,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4714,
									"end": 4726,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4714,
									"end": 4726,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4672,
									"end": 4732,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4672,
									"end": 4732,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4672,
									"end": 4732,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4672,
									"end": 4732,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4738,
									"end": 4880,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 4738,
									"end": 4880,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4788,
									"end": 4797,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4821,
									"end": 4874,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 4839,
									"end": 4873,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 4848,
									"end": 4872,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 4866,
									"end": 4871,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4848,
									"end": 4872,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 4848,
									"end": 4872,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4848,
									"end": 4872,
									"name": "tag",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 4848,
									"end": 4872,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4839,
									"end": 4873,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 4839,
									"end": 4873,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4839,
									"end": 4873,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 4839,
									"end": 4873,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4821,
									"end": 4874,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 4821,
									"end": 4874,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4821,
									"end": 4874,
									"name": "tag",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 4821,
									"end": 4874,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4808,
									"end": 4874,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4808,
									"end": 4874,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4738,
									"end": 4880,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4738,
									"end": 4880,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4738,
									"end": 4880,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4738,
									"end": 4880,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4886,
									"end": 4961,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 4886,
									"end": 4961,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4929,
									"end": 4932,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4955,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4943,
									"end": 4955,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4943,
									"end": 4955,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4886,
									"end": 4961,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4886,
									"end": 4961,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4886,
									"end": 4961,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4886,
									"end": 4961,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4967,
									"end": 5236,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 4967,
									"end": 5236,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5077,
									"end": 5116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 5108,
									"end": 5115,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5077,
									"end": 5116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 5077,
									"end": 5116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5077,
									"end": 5116,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 5077,
									"end": 5116,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5138,
									"end": 5229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 5187,
									"end": 5228,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 5211,
									"end": 5227,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5187,
									"end": 5228,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 5187,
									"end": 5228,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5187,
									"end": 5228,
									"name": "tag",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 5187,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5179,
									"end": 5185,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5172,
									"end": 5176,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5166,
									"end": 5177,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 5138,
									"end": 5229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 5138,
									"end": 5229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5138,
									"end": 5229,
									"name": "tag",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 5138,
									"end": 5229,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5132,
									"end": 5136,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5125,
									"end": 5230,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5043,
									"end": 5236,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4967,
									"end": 5236,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4967,
									"end": 5236,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4967,
									"end": 5236,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4967,
									"end": 5236,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5242,
									"end": 5315,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 5242,
									"end": 5315,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5287,
									"end": 5290,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5308,
									"end": 5309,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5301,
									"end": 5309,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5301,
									"end": 5309,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5242,
									"end": 5315,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5242,
									"end": 5315,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5321,
									"end": 5510,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 5321,
									"end": 5510,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5398,
									"end": 5430,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 5398,
									"end": 5430,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 5398,
									"end": 5430,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5398,
									"end": 5430,
									"name": "tag",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 5398,
									"end": 5430,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5439,
									"end": 5504,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 5497,
									"end": 5503,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5489,
									"end": 5495,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5483,
									"end": 5487,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5439,
									"end": 5504,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 5439,
									"end": 5504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5439,
									"end": 5504,
									"name": "tag",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 5439,
									"end": 5504,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5374,
									"end": 5510,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5321,
									"end": 5510,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5321,
									"end": 5510,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5321,
									"end": 5510,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5516,
									"end": 5702,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 5516,
									"end": 5702,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5576,
									"end": 5696,
									"name": "tag",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 5576,
									"end": 5696,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5593,
									"end": 5596,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5586,
									"end": 5591,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5583,
									"end": 5597,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 5576,
									"end": 5696,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5576,
									"end": 5696,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 5576,
									"end": 5696,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5647,
									"end": 5686,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 5684,
									"end": 5685,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5677,
									"end": 5682,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5647,
									"end": 5686,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 5647,
									"end": 5686,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5647,
									"end": 5686,
									"name": "tag",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 5647,
									"end": 5686,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5620,
									"end": 5621,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5613,
									"end": 5618,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5609,
									"end": 5622,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5600,
									"end": 5622,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5600,
									"end": 5622,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5576,
									"end": 5696,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 5576,
									"end": 5696,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5576,
									"end": 5696,
									"name": "tag",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 5576,
									"end": 5696,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5516,
									"end": 5702,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5516,
									"end": 5702,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5516,
									"end": 5702,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5708,
									"end": 6251,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 5708,
									"end": 6251,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5809,
									"end": 5811,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 5804,
									"end": 5807,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5801,
									"end": 5812,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5798,
									"end": 6244,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5798,
									"end": 6244,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 5798,
									"end": 6244,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5843,
									"end": 5881,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 5875,
									"end": 5880,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5843,
									"end": 5881,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 5843,
									"end": 5881,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5843,
									"end": 5881,
									"name": "tag",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 5843,
									"end": 5881,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5927,
									"end": 5956,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 5945,
									"end": 5955,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5927,
									"end": 5956,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 5927,
									"end": 5956,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5927,
									"end": 5956,
									"name": "tag",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 5927,
									"end": 5956,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5917,
									"end": 5925,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5913,
									"end": 5957,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6110,
									"end": 6112,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6098,
									"end": 6108,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6095,
									"end": 6113,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 6092,
									"end": 6141,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6092,
									"end": 6141,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 6092,
									"end": 6141,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6131,
									"end": 6139,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6116,
									"end": 6139,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6116,
									"end": 6139,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6092,
									"end": 6141,
									"name": "tag",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 6092,
									"end": 6141,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6154,
									"end": 6234,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 6210,
									"end": 6232,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 6228,
									"end": 6231,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6210,
									"end": 6232,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 6210,
									"end": 6232,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6210,
									"end": 6232,
									"name": "tag",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 6210,
									"end": 6232,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6200,
									"end": 6208,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6196,
									"end": 6233,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6183,
									"end": 6194,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6154,
									"end": 6234,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 6154,
									"end": 6234,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6154,
									"end": 6234,
									"name": "tag",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 6154,
									"end": 6234,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5813,
									"end": 6244,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5813,
									"end": 6244,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5798,
									"end": 6244,
									"name": "tag",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 5798,
									"end": 6244,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5708,
									"end": 6251,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5708,
									"end": 6251,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5708,
									"end": 6251,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5708,
									"end": 6251,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6257,
									"end": 6374,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 6257,
									"end": 6374,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6311,
									"end": 6319,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6361,
									"end": 6366,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6355,
									"end": 6359,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6351,
									"end": 6367,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 6330,
									"end": 6367,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6330,
									"end": 6367,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6257,
									"end": 6374,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6257,
									"end": 6374,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6257,
									"end": 6374,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6257,
									"end": 6374,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6257,
									"end": 6374,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6380,
									"end": 6549,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 6380,
									"end": 6549,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6424,
									"end": 6430,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6457,
									"end": 6508,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 6505,
									"end": 6506,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6501,
									"end": 6507,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 6493,
									"end": 6498,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6490,
									"end": 6491,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 6486,
									"end": 6499,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 6457,
									"end": 6508,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 6457,
									"end": 6508,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6457,
									"end": 6508,
									"name": "tag",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 6457,
									"end": 6508,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6453,
									"end": 6509,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 6538,
									"end": 6542,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6532,
									"end": 6536,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6528,
									"end": 6543,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6518,
									"end": 6543,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6518,
									"end": 6543,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6431,
									"end": 6549,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6380,
									"end": 6549,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6380,
									"end": 6549,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6380,
									"end": 6549,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6380,
									"end": 6549,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6380,
									"end": 6549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6554,
									"end": 6849,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 6554,
									"end": 6849,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6630,
									"end": 6634,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6776,
									"end": 6805,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 6801,
									"end": 6804,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6795,
									"end": 6799,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6776,
									"end": 6805,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 6776,
									"end": 6805,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6776,
									"end": 6805,
									"name": "tag",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 6776,
									"end": 6805,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6768,
									"end": 6805,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6768,
									"end": 6805,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6838,
									"end": 6841,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6835,
									"end": 6836,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 6831,
									"end": 6842,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 6825,
									"end": 6829,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6822,
									"end": 6843,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 6814,
									"end": 6843,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6814,
									"end": 6843,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6554,
									"end": 6849,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6554,
									"end": 6849,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6554,
									"end": 6849,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6554,
									"end": 6849,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6554,
									"end": 6849,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6854,
									"end": 8249,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 6854,
									"end": 8249,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6971,
									"end": 7008,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 7004,
									"end": 7007,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6971,
									"end": 7008,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 6971,
									"end": 7008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6971,
									"end": 7008,
									"name": "tag",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 6971,
									"end": 7008,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7073,
									"end": 7091,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7065,
									"end": 7071,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7062,
									"end": 7092,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7059,
									"end": 7115,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7059,
									"end": 7115,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 7059,
									"end": 7115,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7095,
									"end": 7113,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 7095,
									"end": 7113,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 7095,
									"end": 7113,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7095,
									"end": 7113,
									"name": "tag",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 7095,
									"end": 7113,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7059,
									"end": 7115,
									"name": "tag",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 7059,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7139,
									"end": 7177,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 7171,
									"end": 7175,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7165,
									"end": 7176,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 7139,
									"end": 7177,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 7139,
									"end": 7177,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7139,
									"end": 7177,
									"name": "tag",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 7139,
									"end": 7177,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7224,
									"end": 7291,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "147"
								},
								{
									"begin": 7284,
									"end": 7290,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7276,
									"end": 7282,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7270,
									"end": 7274,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 7224,
									"end": 7291,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 7224,
									"end": 7291,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7224,
									"end": 7291,
									"name": "tag",
									"source": 10,
									"value": "147"
								},
								{
									"begin": 7224,
									"end": 7291,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7318,
									"end": 7319,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7342,
									"end": 7346,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7329,
									"end": 7346,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7329,
									"end": 7346,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7374,
									"end": 7376,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 7366,
									"end": 7372,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7363,
									"end": 7377,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7391,
									"end": 7392,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 7386,
									"end": 8004,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7386,
									"end": 8004,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 7386,
									"end": 8004,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "149"
								},
								{
									"begin": 7386,
									"end": 8004,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8048,
									"end": 8049,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8065,
									"end": 8071,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8062,
									"end": 8139,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8062,
									"end": 8139,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 8062,
									"end": 8139,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8114,
									"end": 8123,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8109,
									"end": 8112,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 8105,
									"end": 8124,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8099,
									"end": 8125,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8090,
									"end": 8125,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8090,
									"end": 8125,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8062,
									"end": 8139,
									"name": "tag",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 8062,
									"end": 8139,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "151"
								},
								{
									"begin": 8225,
									"end": 8231,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8218,
									"end": 8223,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 8165,
									"end": 8232,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "tag",
									"source": 10,
									"value": "151"
								},
								{
									"begin": 8165,
									"end": 8232,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8159,
									"end": 8163,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8152,
									"end": 8233,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8021,
									"end": 8243,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7356,
									"end": 8243,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 7356,
									"end": 8243,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7386,
									"end": 8004,
									"name": "tag",
									"source": 10,
									"value": "149"
								},
								{
									"begin": 7386,
									"end": 8004,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7438,
									"end": 7442,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 7434,
									"end": 7443,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 7426,
									"end": 7432,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7422,
									"end": 7444,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 7472,
									"end": 7509,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 7504,
									"end": 7508,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 7472,
									"end": 7509,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 7472,
									"end": 7509,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7472,
									"end": 7509,
									"name": "tag",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 7472,
									"end": 7509,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7531,
									"end": 7532,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7545,
									"end": 7753,
									"name": "tag",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 7545,
									"end": 7753,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7559,
									"end": 7566,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7556,
									"end": 7557,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7553,
									"end": 7567,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 7545,
									"end": 7753,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7545,
									"end": 7753,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 7545,
									"end": 7753,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7638,
									"end": 7647,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7633,
									"end": 7636,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 7629,
									"end": 7648,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7623,
									"end": 7649,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 7615,
									"end": 7621,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7608,
									"end": 7650,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 7689,
									"end": 7690,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 7681,
									"end": 7687,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7677,
									"end": 7691,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7667,
									"end": 7691,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7667,
									"end": 7691,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7736,
									"end": 7738,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7725,
									"end": 7734,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 7721,
									"end": 7739,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7708,
									"end": 7739,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 7708,
									"end": 7739,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7582,
									"end": 7586,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7579,
									"end": 7580,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7575,
									"end": 7587,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7570,
									"end": 7587,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7570,
									"end": 7587,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7545,
									"end": 7753,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 7545,
									"end": 7753,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7545,
									"end": 7753,
									"name": "tag",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 7545,
									"end": 7753,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7781,
									"end": 7787,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 7772,
									"end": 7779,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7769,
									"end": 7788,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 7766,
									"end": 7945,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7766,
									"end": 7945,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 7766,
									"end": 7945,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7839,
									"end": 7848,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7834,
									"end": 7837,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 7830,
									"end": 7849,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7824,
									"end": 7850,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 7882,
									"end": 7930,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "157"
								},
								{
									"begin": 7924,
									"end": 7928,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 7916,
									"end": 7922,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 7912,
									"end": 7929,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 7901,
									"end": 7910,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7882,
									"end": 7930,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 7882,
									"end": 7930,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7882,
									"end": 7930,
									"name": "tag",
									"source": 10,
									"value": "157"
								},
								{
									"begin": 7882,
									"end": 7930,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7874,
									"end": 7880,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7867,
									"end": 7931,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 7789,
									"end": 7945,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7766,
									"end": 7945,
									"name": "tag",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 7766,
									"end": 7945,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7991,
									"end": 7992,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 7987,
									"end": 7988,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 7979,
									"end": 7985,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 7975,
									"end": 7989,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 7971,
									"end": 7993,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7965,
									"end": 7969,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 7958,
									"end": 7994,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 7393,
									"end": 8004,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7393,
									"end": 8004,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7393,
									"end": 8004,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7356,
									"end": 8243,
									"name": "tag",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 7356,
									"end": 8243,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7356,
									"end": 8243,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6946,
									"end": 8249,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6946,
									"end": 8249,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6946,
									"end": 8249,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6854,
									"end": 8249,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6854,
									"end": 8249,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6854,
									"end": 8249,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8255,
									"end": 8373,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 8255,
									"end": 8373,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8342,
									"end": 8366,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 8360,
									"end": 8365,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8342,
									"end": 8366,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 8342,
									"end": 8366,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8342,
									"end": 8366,
									"name": "tag",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 8342,
									"end": 8366,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8337,
									"end": 8340,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8330,
									"end": 8367,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 8255,
									"end": 8373,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8255,
									"end": 8373,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8255,
									"end": 8373,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8379,
									"end": 8601,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 8379,
									"end": 8601,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8472,
									"end": 8476,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8510,
									"end": 8512,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8499,
									"end": 8508,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8495,
									"end": 8513,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8487,
									"end": 8513,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8487,
									"end": 8513,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8523,
									"end": 8594,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 8591,
									"end": 8592,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8580,
									"end": 8589,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8576,
									"end": 8593,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8567,
									"end": 8573,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8523,
									"end": 8594,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 8523,
									"end": 8594,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8523,
									"end": 8594,
									"name": "tag",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 8523,
									"end": 8594,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8379,
									"end": 8601,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 8379,
									"end": 8601,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8379,
									"end": 8601,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8379,
									"end": 8601,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8379,
									"end": 8601,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 383,
									"end": 1964,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 383,
									"end": 1964,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 383,
									"end": 1964,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 383,
									"end": 1964,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 383,
									"end": 1964,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 383,
									"end": 1964,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 383,
									"end": 1964,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 383,
									"end": 1964,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 383,
									"end": 1964,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209a4f95c4b892dfe0197508d4f4588e3bab2911227899c52fe1881ceff65f3af264736f6c634300081b0033",
									".code": [
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "EC46C4EF"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "F8B75FB5"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "83B6FA98"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "A035B1FE"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "384B2367"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "3E413BEE"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "6BDEBCC9"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 1964,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 892,
											"end": 1043,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 892,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 892,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 892,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 892,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 892,
											"end": 1043,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 892,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 892,
											"end": 1043,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 466,
											"end": 484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 466,
											"end": 484,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 484,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 466,
											"end": 484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 466,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 466,
											"end": 484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 466,
											"end": 484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 484,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 466,
											"end": 484,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 466,
											"end": 484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 466,
											"end": 484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 484,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1955,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1712,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1955,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1955,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1955,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1712,
											"end": 1955,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1955,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1955,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1712,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1955,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1712,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1712,
											"end": 1955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1955,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1712,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1955,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1051,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1051,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 491,
											"end": 511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 491,
											"end": 511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 518,
											"end": 544,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 518,
											"end": 544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 518,
											"end": 544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 551,
											"end": 577,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 551,
											"end": 577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 551,
											"end": 577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 892,
											"end": 1043,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 892,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 971,
											"end": 972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 968,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 959,
											"end": 972,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 951,
											"end": 996,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 951,
											"end": 996,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1007,
											"end": 1035,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1013,
											"end": 1023,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1034,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1007,
											"end": 1012,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 1007,
											"end": 1035,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1007,
											"end": 1035,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1007,
											"end": 1035,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 892,
											"end": 1043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 466,
											"end": 484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 484,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 466,
											"end": 484,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 466,
											"end": 484,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 466,
											"end": 484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1955,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1712,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1801,
											"end": 1813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 1801,
											"end": 1813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 1813,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 1813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 1813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1801,
											"end": 1813,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 1813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 1813,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 1813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1801,
											"end": 1813,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1786,
											"end": 1813,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1786,
											"end": 1798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1786,
											"end": 1798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1798,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1786,
											"end": 1798,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1798,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1786,
											"end": 1798,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1813,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1786,
											"end": 1813,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1813,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1786,
											"end": 1813,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1813,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1786,
											"end": 1813,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1767,
											"end": 1813,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1782,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1813,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1813,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1759,
											"end": 1832,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 1759,
											"end": 1832,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 1861,
											"end": 1871,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1873,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1873,
											"end": 1877,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1873,
											"end": 1877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1873,
											"end": 1887,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 1896,
											"end": 1900,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1873,
											"end": 1902,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1873,
											"end": 1902,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1873,
											"end": 1902,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1843,
											"end": 1847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1847,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1843,
											"end": 1847,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1847,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1843,
											"end": 1847,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1843,
											"end": 1860,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1843,
											"end": 1860,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1935,
											"end": 1945,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1914,
											"end": 1947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1914,
											"end": 1947,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1914,
											"end": 1947,
											"modifierDepth": 1,
											"name": "SELFDESTRUCT",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1131,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1196,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1196,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1116,
											"end": 1196,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1196,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 1196,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1184,
											"end": 1196,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 1184,
											"end": 1196,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 1196,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 1196,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 1196,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1184,
											"end": 1196,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 1196,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 1196,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 1196,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1196,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1196,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1169,
											"end": 1196,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1181,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1169,
											"end": 1181,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1169,
											"end": 1181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1181,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1181,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1169,
											"end": 1181,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1181,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1181,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1169,
											"end": 1181,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1169,
											"end": 1196,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1196,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1169,
											"end": 1196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1196,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1169,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1196,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1151,
											"end": 1196,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1166,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1196,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1196,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1116,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 1108,
											"end": 1225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 1108,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1269,
											"end": 1276,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1244,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1244,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1244,
											"end": 1265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1244,
											"end": 1265,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 1244,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1244,
											"end": 1276,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1244,
											"end": 1276,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 1236,
											"end": 1302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1236,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 1319,
											"end": 1329,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1331,
											"end": 1338,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 1313,
											"end": 1339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1339,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 1313,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 1372,
											"end": 1382,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1392,
											"end": 1396,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 1414,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1409,
											"end": 1414,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1414,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 1414,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 1414,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 1414,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1409,
											"end": 1414,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 1414,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 1414,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 1414,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1409,
											"end": 1414,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1414,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1399,
											"end": 1414,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1406,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 1399,
											"end": 1414,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1414,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 1399,
											"end": 1414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1414,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 1399,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1354,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1350,
											"end": 1354,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1354,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1354,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1354,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1354,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1350,
											"end": 1354,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1354,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1354,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1354,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1350,
											"end": 1354,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1350,
											"end": 1371,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 1350,
											"end": 1371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1415,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1415,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1415,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1415,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1415,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1350,
											"end": 1415,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1415,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 1350,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1426,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 1450,
											"end": 1460,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1470,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1426,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 1426,
											"end": 1471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1426,
											"end": 1471,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 1426,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 511,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 491,
											"end": 511,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 491,
											"end": 511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 518,
											"end": 544,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 518,
											"end": 544,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 518,
											"end": 544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 551,
											"end": 577,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 551,
											"end": 577,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 551,
											"end": 577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1704,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 1487,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1560,
											"end": 1572,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1580,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1585,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1578,
											"end": 1585,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1611,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 1600,
											"end": 1612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1612,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 1578,
											"end": 1613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1559,
											"end": 1613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1559,
											"end": 1613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1559,
											"end": 1613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1639,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 1624,
											"end": 1696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 1624,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1548,
											"end": 1704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 7,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 7,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 7,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 4806,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 4746,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4774,
											"end": 4777,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4795,
											"end": 4800,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4788,
											"end": 4800,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4788,
											"end": 4800,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 4806,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 4806,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 4806,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 4806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4812,
											"end": 4954,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 4812,
											"end": 4954,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4871,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4895,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 4913,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 4922,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 4940,
											"end": 4945,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4922,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 4922,
											"end": 4946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4922,
											"end": 4946,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 4922,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4913,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 4913,
											"end": 4947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4913,
											"end": 4947,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 4913,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 4895,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 4948,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 4895,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4948,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4812,
											"end": 4954,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4812,
											"end": 4954,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4812,
											"end": 4954,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4812,
											"end": 4954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4960,
											"end": 5086,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 4960,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5010,
											"end": 5019,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 5074,
											"end": 5079,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5043,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 5043,
											"end": 5080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5043,
											"end": 5080,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 5043,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5080,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5080,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4960,
											"end": 5086,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4960,
											"end": 5086,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4960,
											"end": 5086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4960,
											"end": 5086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5092,
											"end": 5232,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 5092,
											"end": 5232,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5156,
											"end": 5165,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 5220,
											"end": 5225,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5189,
											"end": 5226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 5189,
											"end": 5226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5189,
											"end": 5226,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 5189,
											"end": 5226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5176,
											"end": 5226,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5176,
											"end": 5226,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5092,
											"end": 5232,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5092,
											"end": 5232,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5092,
											"end": 5232,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5092,
											"end": 5232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5238,
											"end": 5397,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 5238,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5339,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 5384,
											"end": 5389,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5339,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 5339,
											"end": 5390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5339,
											"end": 5390,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 5339,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5334,
											"end": 5337,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5327,
											"end": 5391,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5238,
											"end": 5397,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5238,
											"end": 5397,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5238,
											"end": 5397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5653,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 5403,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5510,
											"end": 5514,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5548,
											"end": 5550,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5546,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5551,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 5643,
											"end": 5644,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5632,
											"end": 5641,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5628,
											"end": 5645,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5619,
											"end": 5625,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 5561,
											"end": 5646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5646,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 5561,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5653,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5653,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5653,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5653,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5718,
											"end": 5724,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5767,
											"end": 5769,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5755,
											"end": 5764,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5753,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5742,
											"end": 5765,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5738,
											"end": 5770,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5735,
											"end": 5854,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5735,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 5735,
											"end": 5854,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5773,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 5773,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 5773,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5773,
											"end": 5852,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 5773,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5735,
											"end": 5854,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 5735,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5893,
											"end": 5894,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5918,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 5963,
											"end": 5970,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5954,
											"end": 5960,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5952,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5939,
											"end": 5961,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 5918,
											"end": 5971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 5971,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 5918,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5908,
											"end": 5971,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5908,
											"end": 5971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5659,
											"end": 5988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6323,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 5994,
											"end": 6323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6053,
											"end": 6059,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6102,
											"end": 6104,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6090,
											"end": 6099,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6088,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6077,
											"end": 6100,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6073,
											"end": 6105,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6070,
											"end": 6189,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6070,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 6070,
											"end": 6189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6108,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 6108,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 6108,
											"end": 6187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6108,
											"end": 6187,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 6108,
											"end": 6187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6070,
											"end": 6189,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 6070,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6228,
											"end": 6229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 6298,
											"end": 6305,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6289,
											"end": 6295,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6278,
											"end": 6287,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6274,
											"end": 6296,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6253,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 6253,
											"end": 6306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6253,
											"end": 6306,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 6253,
											"end": 6306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 6306,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 6306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6323,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6323,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6323,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6323,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6329,
											"end": 6447,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 6329,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 6434,
											"end": 6439,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 6416,
											"end": 6440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6440,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 6416,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6411,
											"end": 6414,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6404,
											"end": 6441,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6329,
											"end": 6447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6329,
											"end": 6447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6329,
											"end": 6447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6453,
											"end": 6675,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 6453,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6550,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6586,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6569,
											"end": 6587,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6587,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6597,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 6665,
											"end": 6666,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6654,
											"end": 6663,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6650,
											"end": 6667,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6641,
											"end": 6647,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6597,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 6597,
											"end": 6668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6597,
											"end": 6668,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 6597,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6453,
											"end": 6675,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6453,
											"end": 6675,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6453,
											"end": 6675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6453,
											"end": 6675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6453,
											"end": 6675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6681,
											"end": 6799,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 6681,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6718,
											"end": 6725,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6758,
											"end": 6792,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6751,
											"end": 6756,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6747,
											"end": 6793,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6736,
											"end": 6793,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6736,
											"end": 6793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6681,
											"end": 6799,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6681,
											"end": 6799,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6681,
											"end": 6799,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6681,
											"end": 6799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6805,
											"end": 6923,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 6805,
											"end": 6923,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6892,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 6910,
											"end": 6915,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6892,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 6892,
											"end": 6916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6892,
											"end": 6916,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 6892,
											"end": 6916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6887,
											"end": 6890,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6880,
											"end": 6917,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6805,
											"end": 6923,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6805,
											"end": 6923,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6805,
											"end": 6923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 7151,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 6929,
											"end": 7151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7022,
											"end": 7026,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7060,
											"end": 7062,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7049,
											"end": 7058,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7045,
											"end": 7063,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7037,
											"end": 7063,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7037,
											"end": 7063,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7073,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 7141,
											"end": 7142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7130,
											"end": 7139,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7126,
											"end": 7143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7117,
											"end": 7123,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7073,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 7073,
											"end": 7144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7073,
											"end": 7144,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 7073,
											"end": 7144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 7151,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 7151,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 7151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 7151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 7151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7157,
											"end": 7631,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 7157,
											"end": 7631,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7225,
											"end": 7231,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7233,
											"end": 7239,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7282,
											"end": 7284,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7270,
											"end": 7279,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7261,
											"end": 7268,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7257,
											"end": 7280,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7253,
											"end": 7285,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7250,
											"end": 7369,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7250,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 7250,
											"end": 7369,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 7288,
											"end": 7367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7250,
											"end": 7369,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 7250,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7408,
											"end": 7409,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7433,
											"end": 7486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 7478,
											"end": 7485,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7469,
											"end": 7475,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7458,
											"end": 7467,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7454,
											"end": 7476,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7433,
											"end": 7486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 7433,
											"end": 7486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7433,
											"end": 7486,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 7433,
											"end": 7486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7423,
											"end": 7486,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7423,
											"end": 7486,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7379,
											"end": 7496,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7535,
											"end": 7537,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7561,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 7606,
											"end": 7613,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7597,
											"end": 7603,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7586,
											"end": 7595,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7582,
											"end": 7604,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7561,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 7561,
											"end": 7614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7561,
											"end": 7614,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 7561,
											"end": 7614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7614,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7157,
											"end": 7631,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7157,
											"end": 7631,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7157,
											"end": 7631,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7157,
											"end": 7631,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7157,
											"end": 7631,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7157,
											"end": 7631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7637,
											"end": 7746,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 7637,
											"end": 7746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7680,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7713,
											"end": 7739,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7706,
											"end": 7711,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7702,
											"end": 7740,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7637,
											"end": 7746,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7637,
											"end": 7746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7637,
											"end": 7746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7637,
											"end": 7746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7752,
											"end": 7867,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 7752,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7837,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 7854,
											"end": 7859,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7837,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 7837,
											"end": 7860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7837,
											"end": 7860,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 7837,
											"end": 7860,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7832,
											"end": 7835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7825,
											"end": 7861,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7752,
											"end": 7867,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7752,
											"end": 7867,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7752,
											"end": 7867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7873,
											"end": 8091,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 7873,
											"end": 8091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7964,
											"end": 7968,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8002,
											"end": 8004,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7991,
											"end": 8000,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7987,
											"end": 8005,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7979,
											"end": 8005,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7979,
											"end": 8005,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8015,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 8081,
											"end": 8082,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8079,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8083,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8057,
											"end": 8063,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8015,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 8015,
											"end": 8084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8015,
											"end": 8084,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 8015,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7873,
											"end": 8091,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7873,
											"end": 8091,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7873,
											"end": 8091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7873,
											"end": 8091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7873,
											"end": 8091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8097,
											"end": 8190,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 8097,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8133,
											"end": 8140,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8173,
											"end": 8183,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8166,
											"end": 8171,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8162,
											"end": 8184,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8151,
											"end": 8184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8151,
											"end": 8184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8097,
											"end": 8190,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8097,
											"end": 8190,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8097,
											"end": 8190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8097,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8196,
											"end": 8311,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 8196,
											"end": 8311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8281,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 8298,
											"end": 8303,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8281,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 8281,
											"end": 8304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8281,
											"end": 8304,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 8281,
											"end": 8304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8276,
											"end": 8279,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8269,
											"end": 8305,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8196,
											"end": 8311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8196,
											"end": 8311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8196,
											"end": 8311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8317,
											"end": 8535,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 8317,
											"end": 8535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8408,
											"end": 8412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8446,
											"end": 8448,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8435,
											"end": 8444,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8431,
											"end": 8449,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8449,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 8525,
											"end": 8526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8514,
											"end": 8523,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8510,
											"end": 8527,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8507,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 8459,
											"end": 8528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8528,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 8459,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8317,
											"end": 8535,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8317,
											"end": 8535,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8317,
											"end": 8535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8317,
											"end": 8535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8317,
											"end": 8535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8541,
											"end": 8721,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 8541,
											"end": 8721,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8589,
											"end": 8666,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8586,
											"end": 8587,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8579,
											"end": 8667,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8686,
											"end": 8690,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 8683,
											"end": 8684,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8676,
											"end": 8691,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8710,
											"end": 8714,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8707,
											"end": 8708,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8700,
											"end": 8715,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8727,
											"end": 9047,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 8727,
											"end": 9047,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8771,
											"end": 8777,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8808,
											"end": 8809,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8802,
											"end": 8806,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8798,
											"end": 8810,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8788,
											"end": 8810,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8788,
											"end": 8810,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8855,
											"end": 8856,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8849,
											"end": 8853,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8845,
											"end": 8857,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8876,
											"end": 8894,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8866,
											"end": 8947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 8866,
											"end": 8947,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8932,
											"end": 8936,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 8924,
											"end": 8930,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8920,
											"end": 8937,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8910,
											"end": 8937,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8910,
											"end": 8937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8866,
											"end": 8947,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 8866,
											"end": 8947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8994,
											"end": 8996,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8986,
											"end": 8992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 8997,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8963,
											"end": 8981,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8960,
											"end": 8998,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8957,
											"end": 9041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 8957,
											"end": 9041,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9013,
											"end": 9031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 9013,
											"end": 9031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 9013,
											"end": 9031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9013,
											"end": 9031,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 9013,
											"end": 9031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8957,
											"end": 9041,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 8957,
											"end": 9041,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8778,
											"end": 9047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8727,
											"end": 9047,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8727,
											"end": 9047,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8727,
											"end": 9047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8727,
											"end": 9047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9053,
											"end": 9222,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 9053,
											"end": 9222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9193,
											"end": 9214,
											"name": "PUSH",
											"source": 10,
											"value": "6574682076616C75652063616E74206265203000000000000000000000000000"
										},
										{
											"begin": 9189,
											"end": 9190,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9181,
											"end": 9187,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9177,
											"end": 9191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9170,
											"end": 9215,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9053,
											"end": 9222,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9053,
											"end": 9222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9228,
											"end": 9594,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 9228,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9370,
											"end": 9373,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9391,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 9455,
											"end": 9457,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 9450,
											"end": 9453,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9391,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 9391,
											"end": 9458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9391,
											"end": 9458,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 9391,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9384,
											"end": 9458,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9384,
											"end": 9458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9467,
											"end": 9560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 9556,
											"end": 9559,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9467,
											"end": 9560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 9467,
											"end": 9560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9467,
											"end": 9560,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 9467,
											"end": 9560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9585,
											"end": 9587,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9580,
											"end": 9583,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9576,
											"end": 9588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9569,
											"end": 9588,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9569,
											"end": 9588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9228,
											"end": 9594,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9228,
											"end": 9594,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9228,
											"end": 9594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9228,
											"end": 9594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9600,
											"end": 10019,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 9600,
											"end": 10019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9766,
											"end": 9770,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9804,
											"end": 9806,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9793,
											"end": 9802,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9789,
											"end": 9807,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9781,
											"end": 9807,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9781,
											"end": 9807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9853,
											"end": 9862,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9847,
											"end": 9851,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9843,
											"end": 9863,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9839,
											"end": 9840,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9828,
											"end": 9837,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9824,
											"end": 9841,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9817,
											"end": 9864,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9881,
											"end": 10012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 10007,
											"end": 10011,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9881,
											"end": 10012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 9881,
											"end": 10012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9881,
											"end": 10012,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 9881,
											"end": 10012,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9873,
											"end": 10012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9873,
											"end": 10012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9600,
											"end": 10019,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9600,
											"end": 10019,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9600,
											"end": 10019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9600,
											"end": 10019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10025,
											"end": 10205,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 10025,
											"end": 10205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10073,
											"end": 10150,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10070,
											"end": 10071,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10063,
											"end": 10151,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10170,
											"end": 10174,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10160,
											"end": 10175,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10194,
											"end": 10198,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10191,
											"end": 10192,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10211,
											"end": 10424,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 10211,
											"end": 10424,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10250,
											"end": 10253,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10269,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 10286,
											"end": 10287,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10269,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 10269,
											"end": 10288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10269,
											"end": 10288,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 10269,
											"end": 10288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10264,
											"end": 10288,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10264,
											"end": 10288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10302,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 10319,
											"end": 10320,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10302,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 10302,
											"end": 10321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10302,
											"end": 10321,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 10302,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10297,
											"end": 10321,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10297,
											"end": 10321,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10344,
											"end": 10345,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10341,
											"end": 10342,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10337,
											"end": 10346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10330,
											"end": 10346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10330,
											"end": 10346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10367,
											"end": 10393,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10362,
											"end": 10365,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10359,
											"end": 10394,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10356,
											"end": 10417,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10356,
											"end": 10417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 10356,
											"end": 10417,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10397,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 10397,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 10397,
											"end": 10415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10397,
											"end": 10415,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 10397,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10356,
											"end": 10417,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 10356,
											"end": 10417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10211,
											"end": 10424,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10211,
											"end": 10424,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10211,
											"end": 10424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10211,
											"end": 10424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10211,
											"end": 10424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10430,
											"end": 10594,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 10430,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10570,
											"end": 10586,
											"name": "PUSH",
											"source": 10,
											"value": "6E6F742065787069726520796574000000000000000000000000000000000000"
										},
										{
											"begin": 10566,
											"end": 10567,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10558,
											"end": 10564,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10554,
											"end": 10568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10547,
											"end": 10587,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10430,
											"end": 10594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10430,
											"end": 10594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10600,
											"end": 10966,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 10600,
											"end": 10966,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10742,
											"end": 10745,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10763,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 10827,
											"end": 10829,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 10822,
											"end": 10825,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10763,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 10763,
											"end": 10830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10763,
											"end": 10830,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 10763,
											"end": 10830,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10756,
											"end": 10830,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10756,
											"end": 10830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10839,
											"end": 10932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 10928,
											"end": 10931,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10839,
											"end": 10932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 10839,
											"end": 10932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10839,
											"end": 10932,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 10839,
											"end": 10932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10957,
											"end": 10959,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10952,
											"end": 10955,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10948,
											"end": 10960,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10941,
											"end": 10960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10941,
											"end": 10960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10600,
											"end": 10966,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10600,
											"end": 10966,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10600,
											"end": 10966,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10600,
											"end": 10966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10972,
											"end": 11391,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 10972,
											"end": 11391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11138,
											"end": 11142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11176,
											"end": 11178,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11165,
											"end": 11174,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11161,
											"end": 11179,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11153,
											"end": 11179,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11153,
											"end": 11179,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11225,
											"end": 11234,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11219,
											"end": 11223,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11215,
											"end": 11235,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11211,
											"end": 11212,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11200,
											"end": 11209,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11196,
											"end": 11213,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11189,
											"end": 11236,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11253,
											"end": 11384,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 11379,
											"end": 11383,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11253,
											"end": 11384,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 11253,
											"end": 11384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11253,
											"end": 11384,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 11253,
											"end": 11384,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11245,
											"end": 11384,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11245,
											"end": 11384,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10972,
											"end": 11391,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10972,
											"end": 11391,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10972,
											"end": 11391,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10972,
											"end": 11391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11540,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 11397,
											"end": 11540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11454,
											"end": 11459,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11485,
											"end": 11491,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11479,
											"end": 11492,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11470,
											"end": 11492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11470,
											"end": 11492,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11501,
											"end": 11534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 11528,
											"end": 11533,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11501,
											"end": 11534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 11501,
											"end": 11534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11501,
											"end": 11534,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 11501,
											"end": 11534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11540,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11540,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11540,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11540,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11546,
											"end": 11897,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 11546,
											"end": 11897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11616,
											"end": 11622,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11665,
											"end": 11667,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11653,
											"end": 11662,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11644,
											"end": 11651,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11640,
											"end": 11663,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11636,
											"end": 11668,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11752,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 11633,
											"end": 11752,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11671,
											"end": 11750,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 11671,
											"end": 11750,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 11671,
											"end": 11750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11671,
											"end": 11750,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 11671,
											"end": 11750,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11752,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 11633,
											"end": 11752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11791,
											"end": 11792,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11816,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 11872,
											"end": 11879,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11863,
											"end": 11869,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11852,
											"end": 11861,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11848,
											"end": 11870,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11816,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 11816,
											"end": 11880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11816,
											"end": 11880,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 11816,
											"end": 11880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11806,
											"end": 11880,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11806,
											"end": 11880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11762,
											"end": 11890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11546,
											"end": 11897,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11546,
											"end": 11897,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11546,
											"end": 11897,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11546,
											"end": 11897,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11546,
											"end": 11897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11903,
											"end": 12077,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 11903,
											"end": 12077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12043,
											"end": 12069,
											"name": "PUSH",
											"source": 10,
											"value": "6E6F7420696E20736574746C652074696D652072616E67650000000000000000"
										},
										{
											"begin": 12039,
											"end": 12040,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12031,
											"end": 12037,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12027,
											"end": 12041,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12020,
											"end": 12070,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11903,
											"end": 12077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11903,
											"end": 12077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12083,
											"end": 12449,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 12083,
											"end": 12449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12225,
											"end": 12228,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12246,
											"end": 12313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 12310,
											"end": 12312,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 12305,
											"end": 12308,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12246,
											"end": 12313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 12246,
											"end": 12313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12246,
											"end": 12313,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 12246,
											"end": 12313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12239,
											"end": 12313,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12239,
											"end": 12313,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12322,
											"end": 12415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 12411,
											"end": 12414,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12322,
											"end": 12415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 12322,
											"end": 12415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12322,
											"end": 12415,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 12322,
											"end": 12415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12440,
											"end": 12442,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12435,
											"end": 12438,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12431,
											"end": 12443,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12424,
											"end": 12443,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12424,
											"end": 12443,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12083,
											"end": 12449,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12083,
											"end": 12449,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12083,
											"end": 12449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12083,
											"end": 12449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12455,
											"end": 12874,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 12455,
											"end": 12874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12621,
											"end": 12625,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12659,
											"end": 12661,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12648,
											"end": 12657,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12644,
											"end": 12662,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12636,
											"end": 12662,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12636,
											"end": 12662,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12708,
											"end": 12717,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12702,
											"end": 12706,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12698,
											"end": 12718,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12694,
											"end": 12695,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12683,
											"end": 12692,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12679,
											"end": 12696,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12672,
											"end": 12719,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12736,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 12862,
											"end": 12866,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12736,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 12736,
											"end": 12867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12736,
											"end": 12867,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 12736,
											"end": 12867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12728,
											"end": 12867,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12728,
											"end": 12867,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12455,
											"end": 12874,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12455,
											"end": 12874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12455,
											"end": 12874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12455,
											"end": 12874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12880,
											"end": 13051,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 12880,
											"end": 13051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13020,
											"end": 13043,
											"name": "PUSH",
											"source": 10,
											"value": "616D6F756E74206D757374203E2062616C616E63650000000000000000000000"
										},
										{
											"begin": 13016,
											"end": 13017,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13008,
											"end": 13014,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13004,
											"end": 13018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12997,
											"end": 13044,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12880,
											"end": 13051,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12880,
											"end": 13051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13057,
											"end": 13423,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 13057,
											"end": 13423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13199,
											"end": 13202,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13220,
											"end": 13287,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 13284,
											"end": 13286,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 13279,
											"end": 13282,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13287,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 13220,
											"end": 13287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13287,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 13220,
											"end": 13287,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13213,
											"end": 13287,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13213,
											"end": 13287,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13296,
											"end": 13389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 13385,
											"end": 13388,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13296,
											"end": 13389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 13296,
											"end": 13389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13296,
											"end": 13389,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 13296,
											"end": 13389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13414,
											"end": 13416,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13409,
											"end": 13412,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13405,
											"end": 13417,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13398,
											"end": 13417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13398,
											"end": 13417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13057,
											"end": 13423,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13057,
											"end": 13423,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13057,
											"end": 13423,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13057,
											"end": 13423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13429,
											"end": 13848,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 13429,
											"end": 13848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13595,
											"end": 13599,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13633,
											"end": 13635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13622,
											"end": 13631,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13618,
											"end": 13636,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13610,
											"end": 13636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13610,
											"end": 13636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13682,
											"end": 13691,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13676,
											"end": 13680,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13672,
											"end": 13692,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13668,
											"end": 13669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13657,
											"end": 13666,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13653,
											"end": 13670,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13646,
											"end": 13693,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13710,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 13836,
											"end": 13840,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13710,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 13710,
											"end": 13841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13710,
											"end": 13841,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 13710,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13702,
											"end": 13841,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13702,
											"end": 13841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13429,
											"end": 13848,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13429,
											"end": 13848,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13429,
											"end": 13848,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13429,
											"end": 13848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13854,
											"end": 14264,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 13854,
											"end": 14264,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13894,
											"end": 13901,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13917,
											"end": 13937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 13935,
											"end": 13936,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13917,
											"end": 13937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 13917,
											"end": 13937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13917,
											"end": 13937,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 13917,
											"end": 13937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13912,
											"end": 13937,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13912,
											"end": 13937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13951,
											"end": 13971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 13969,
											"end": 13970,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13951,
											"end": 13971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 13951,
											"end": 13971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13951,
											"end": 13971,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 13951,
											"end": 13971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13946,
											"end": 13971,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13946,
											"end": 13971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14006,
											"end": 14007,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14003,
											"end": 14004,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13999,
											"end": 14008,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 14028,
											"end": 14058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 14046,
											"end": 14057,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14028,
											"end": 14058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 14028,
											"end": 14058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14028,
											"end": 14058,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 14028,
											"end": 14058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14017,
											"end": 14058,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14017,
											"end": 14058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14207,
											"end": 14208,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14198,
											"end": 14205,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14209,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 14191,
											"end": 14192,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14188,
											"end": 14210,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14168,
											"end": 14169,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14161,
											"end": 14170,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14141,
											"end": 14224,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 14118,
											"end": 14257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 14118,
											"end": 14257,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14237,
											"end": 14255,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 14237,
											"end": 14255,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 14237,
											"end": 14255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14237,
											"end": 14255,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 14237,
											"end": 14255,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14118,
											"end": 14257,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 14118,
											"end": 14257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13902,
											"end": 14264,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13854,
											"end": 14264,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13854,
											"end": 14264,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13854,
											"end": 14264,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13854,
											"end": 14264,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13854,
											"end": 14264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14270,
											"end": 14712,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 14270,
											"end": 14712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14419,
											"end": 14423,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14457,
											"end": 14459,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 14446,
											"end": 14455,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14442,
											"end": 14460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14434,
											"end": 14460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14434,
											"end": 14460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14470,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 14538,
											"end": 14539,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14527,
											"end": 14536,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14523,
											"end": 14540,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14514,
											"end": 14520,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14470,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 14470,
											"end": 14541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14470,
											"end": 14541,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 14470,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14551,
											"end": 14623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 14619,
											"end": 14621,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14608,
											"end": 14617,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14604,
											"end": 14622,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14595,
											"end": 14601,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14551,
											"end": 14623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 14551,
											"end": 14623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14551,
											"end": 14623,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 14551,
											"end": 14623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14633,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 14701,
											"end": 14703,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14690,
											"end": 14699,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14686,
											"end": 14704,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14677,
											"end": 14683,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14633,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 14633,
											"end": 14705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14633,
											"end": 14705,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 14633,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14270,
											"end": 14712,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 14270,
											"end": 14712,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14270,
											"end": 14712,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14270,
											"end": 14712,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14270,
											"end": 14712,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14270,
											"end": 14712,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14270,
											"end": 14712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14718,
											"end": 15050,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 14718,
											"end": 15050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14839,
											"end": 14843,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14877,
											"end": 14879,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14866,
											"end": 14875,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14862,
											"end": 14880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14854,
											"end": 14880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14854,
											"end": 14880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14890,
											"end": 14961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 14958,
											"end": 14959,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14947,
											"end": 14956,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14943,
											"end": 14960,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14934,
											"end": 14940,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14890,
											"end": 14961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 14890,
											"end": 14961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14890,
											"end": 14961,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 14890,
											"end": 14961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14971,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 15039,
											"end": 15041,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15028,
											"end": 15037,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15024,
											"end": 15042,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15015,
											"end": 15021,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14971,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 14971,
											"end": 15043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14971,
											"end": 15043,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 14971,
											"end": 15043,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14718,
											"end": 15050,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14718,
											"end": 15050,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14718,
											"end": 15050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14718,
											"end": 15050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14718,
											"end": 15050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14718,
											"end": 15050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15056,
											"end": 15498,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 15056,
											"end": 15498,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15205,
											"end": 15209,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15243,
											"end": 15245,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 15232,
											"end": 15241,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15228,
											"end": 15246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15220,
											"end": 15246,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15220,
											"end": 15246,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15256,
											"end": 15327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 15324,
											"end": 15325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15313,
											"end": 15322,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15309,
											"end": 15326,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15300,
											"end": 15306,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15256,
											"end": 15327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 15256,
											"end": 15327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15256,
											"end": 15327,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 15256,
											"end": 15327,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15337,
											"end": 15409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 15405,
											"end": 15407,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15394,
											"end": 15403,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15390,
											"end": 15408,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15381,
											"end": 15387,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15337,
											"end": 15409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 15337,
											"end": 15409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15337,
											"end": 15409,
											"name": "tag",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 15337,
											"end": 15409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15419,
											"end": 15491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 15487,
											"end": 15489,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15476,
											"end": 15485,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15472,
											"end": 15490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15463,
											"end": 15469,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15419,
											"end": 15491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 15419,
											"end": 15491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15419,
											"end": 15491,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 15419,
											"end": 15491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15056,
											"end": 15498,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 15056,
											"end": 15498,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15056,
											"end": 15498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15056,
											"end": 15498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15056,
											"end": 15498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15056,
											"end": 15498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15056,
											"end": 15498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15504,
											"end": 15684,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 15504,
											"end": 15684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15552,
											"end": 15629,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15549,
											"end": 15550,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15542,
											"end": 15630,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15649,
											"end": 15653,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 15646,
											"end": 15647,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15639,
											"end": 15654,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15673,
											"end": 15677,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15670,
											"end": 15671,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15663,
											"end": 15678,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15690,
											"end": 15788,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 15690,
											"end": 15788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15741,
											"end": 15747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15775,
											"end": 15780,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15769,
											"end": 15781,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15759,
											"end": 15781,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15759,
											"end": 15781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15690,
											"end": 15788,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15690,
											"end": 15788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15690,
											"end": 15788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15690,
											"end": 15788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15794,
											"end": 15941,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 15794,
											"end": 15941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15895,
											"end": 15906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15932,
											"end": 15935,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15917,
											"end": 15935,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15917,
											"end": 15935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15794,
											"end": 15941,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15794,
											"end": 15941,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15794,
											"end": 15941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15794,
											"end": 15941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15794,
											"end": 15941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15947,
											"end": 16333,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 15947,
											"end": 16333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16051,
											"end": 16054,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16079,
											"end": 16117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 16111,
											"end": 16116,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16079,
											"end": 16117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 16079,
											"end": 16117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16079,
											"end": 16117,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 16079,
											"end": 16117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16133,
											"end": 16221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 16214,
											"end": 16220,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16209,
											"end": 16212,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16133,
											"end": 16221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 16133,
											"end": 16221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16133,
											"end": 16221,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 16133,
											"end": 16221,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16126,
											"end": 16221,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16126,
											"end": 16221,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16230,
											"end": 16295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 16288,
											"end": 16294,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16283,
											"end": 16286,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16276,
											"end": 16280,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16269,
											"end": 16274,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16265,
											"end": 16281,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16230,
											"end": 16295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 16230,
											"end": 16295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16230,
											"end": 16295,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 16230,
											"end": 16295,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16320,
											"end": 16326,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16315,
											"end": 16318,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16311,
											"end": 16327,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16304,
											"end": 16327,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16304,
											"end": 16327,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16055,
											"end": 16333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15947,
											"end": 16333,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15947,
											"end": 16333,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15947,
											"end": 16333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15947,
											"end": 16333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15947,
											"end": 16333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16339,
											"end": 16610,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 16339,
											"end": 16610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16469,
											"end": 16472,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16491,
											"end": 16584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 16580,
											"end": 16583,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16571,
											"end": 16577,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16491,
											"end": 16584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 16491,
											"end": 16584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16491,
											"end": 16584,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 16491,
											"end": 16584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16484,
											"end": 16584,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16484,
											"end": 16584,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16601,
											"end": 16604,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16594,
											"end": 16604,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16594,
											"end": 16604,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16339,
											"end": 16610,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16339,
											"end": 16610,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16339,
											"end": 16610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16339,
											"end": 16610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16339,
											"end": 16610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16616,
											"end": 16855,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 16616,
											"end": 16855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16756,
											"end": 16790,
											"name": "PUSH",
											"source": 10,
											"value": "5472616E7366657248656C7065723A3A736166655472616E736665724554483A"
										},
										{
											"begin": 16752,
											"end": 16753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16744,
											"end": 16750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16740,
											"end": 16754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16733,
											"end": 16791,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16825,
											"end": 16847,
											"name": "PUSH",
											"source": 10,
											"value": "20455448207472616E73666572206661696C6564000000000000000000000000"
										},
										{
											"begin": 16820,
											"end": 16822,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16812,
											"end": 16818,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16808,
											"end": 16823,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16801,
											"end": 16848,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16616,
											"end": 16855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16616,
											"end": 16855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16861,
											"end": 17227,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 16861,
											"end": 17227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17003,
											"end": 17006,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17024,
											"end": 17091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 17083,
											"end": 17086,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17024,
											"end": 17091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 17024,
											"end": 17091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17024,
											"end": 17091,
											"name": "tag",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 17024,
											"end": 17091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17017,
											"end": 17091,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17017,
											"end": 17091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17100,
											"end": 17193,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 17189,
											"end": 17192,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17100,
											"end": 17193,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 17100,
											"end": 17193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17100,
											"end": 17193,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 17100,
											"end": 17193,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17218,
											"end": 17220,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17213,
											"end": 17216,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17209,
											"end": 17221,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17202,
											"end": 17221,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17202,
											"end": 17221,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16861,
											"end": 17227,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16861,
											"end": 17227,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16861,
											"end": 17227,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16861,
											"end": 17227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17233,
											"end": 17652,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 17233,
											"end": 17652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17399,
											"end": 17403,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17437,
											"end": 17439,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17426,
											"end": 17435,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17422,
											"end": 17440,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17414,
											"end": 17440,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17414,
											"end": 17440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17486,
											"end": 17495,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17480,
											"end": 17484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17476,
											"end": 17496,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17472,
											"end": 17473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17461,
											"end": 17470,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17457,
											"end": 17474,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17450,
											"end": 17497,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17514,
											"end": 17645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 17640,
											"end": 17644,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17514,
											"end": 17645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 17514,
											"end": 17645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17514,
											"end": 17645,
											"name": "tag",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 17514,
											"end": 17645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17506,
											"end": 17645,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17506,
											"end": 17645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17233,
											"end": 17652,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17233,
											"end": 17652,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17233,
											"end": 17652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17233,
											"end": 17652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17658,
											"end": 17849,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 17658,
											"end": 17849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17698,
											"end": 17701,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17717,
											"end": 17737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 17735,
											"end": 17736,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17717,
											"end": 17737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 17717,
											"end": 17737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17717,
											"end": 17737,
											"name": "tag",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 17717,
											"end": 17737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17712,
											"end": 17737,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17712,
											"end": 17737,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17751,
											"end": 17771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 17769,
											"end": 17770,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17751,
											"end": 17771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 17751,
											"end": 17771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17751,
											"end": 17771,
											"name": "tag",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 17751,
											"end": 17771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17746,
											"end": 17771,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17746,
											"end": 17771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17794,
											"end": 17795,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17791,
											"end": 17792,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17787,
											"end": 17796,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17780,
											"end": 17796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17780,
											"end": 17796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17815,
											"end": 17818,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17812,
											"end": 17813,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17809,
											"end": 17819,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17806,
											"end": 17842,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17806,
											"end": 17842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 17806,
											"end": 17842,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17822,
											"end": 17840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 17822,
											"end": 17840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 17822,
											"end": 17840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17822,
											"end": 17840,
											"name": "tag",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 17822,
											"end": 17840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17806,
											"end": 17842,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 17806,
											"end": 17842,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17658,
											"end": 17849,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17658,
											"end": 17849,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17658,
											"end": 17849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17658,
											"end": 17849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17658,
											"end": 17849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17855,
											"end": 17971,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 17855,
											"end": 17971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17925,
											"end": 17946,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 17940,
											"end": 17945,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17925,
											"end": 17946,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 17925,
											"end": 17946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17925,
											"end": 17946,
											"name": "tag",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 17925,
											"end": 17946,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17918,
											"end": 17923,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17915,
											"end": 17947,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17905,
											"end": 17965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 17905,
											"end": 17965,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17961,
											"end": 17962,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17958,
											"end": 17959,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17951,
											"end": 17963,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17905,
											"end": 17965,
											"name": "tag",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 17905,
											"end": 17965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17855,
											"end": 17971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17855,
											"end": 17971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17977,
											"end": 18114,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 17977,
											"end": 18114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18031,
											"end": 18036,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18062,
											"end": 18068,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18056,
											"end": 18069,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 18047,
											"end": 18069,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18047,
											"end": 18069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18078,
											"end": 18108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 18102,
											"end": 18107,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18078,
											"end": 18108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 18078,
											"end": 18108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18078,
											"end": 18108,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 18078,
											"end": 18108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17977,
											"end": 18114,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17977,
											"end": 18114,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17977,
											"end": 18114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17977,
											"end": 18114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17977,
											"end": 18114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18120,
											"end": 18465,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 18120,
											"end": 18465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18187,
											"end": 18193,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18236,
											"end": 18238,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18224,
											"end": 18233,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18215,
											"end": 18222,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18211,
											"end": 18234,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18207,
											"end": 18239,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 18204,
											"end": 18323,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18204,
											"end": 18323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 18204,
											"end": 18323,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18242,
											"end": 18321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 18242,
											"end": 18321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 18242,
											"end": 18321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18242,
											"end": 18321,
											"name": "tag",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 18242,
											"end": 18321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18204,
											"end": 18323,
											"name": "tag",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 18204,
											"end": 18323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18362,
											"end": 18363,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18387,
											"end": 18448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 18440,
											"end": 18447,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18431,
											"end": 18437,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18420,
											"end": 18429,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 18416,
											"end": 18438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18387,
											"end": 18448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 18387,
											"end": 18448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18387,
											"end": 18448,
											"name": "tag",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 18387,
											"end": 18448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18377,
											"end": 18448,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18377,
											"end": 18448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18333,
											"end": 18458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18120,
											"end": 18465,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18120,
											"end": 18465,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18120,
											"end": 18465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18120,
											"end": 18465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18120,
											"end": 18465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"MyCallOption.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"destory()": "6bdebcc9",
							"durationTime()": "f8b75fb5",
							"exerciseTime()": "ec46c4ef",
							"issueOption()": "384b2367",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"price()": "a035b1fe",
							"renounceOwnership()": "715018a6",
							"settleOption(uint256)": "83b6fa98",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"usdc()": "3e413bee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_price\",\"type\":\"uint128\"},{\"internalType\":\"uint96\",\"name\":\"_exerciseTime\",\"type\":\"uint96\"},{\"internalType\":\"uint32\",\"name\":\"_durationTime\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"durationTime\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exerciseTime\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issueOption\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"settleOption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MyCallOption.sol\":\"MyCallOption\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"MyCallOption.sol\":{\"keccak256\":\"0x4cb8e1471de3de6d30dd4cd813cd47b0c878044047b08b20c7d4e818c6e43d3b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fad5b075a4fab1a5fcd1ff09205b1171b0e391136e945da1a6a7b0a2a4ba250b\",\"dweb:/ipfs/QmZpjP11dTjuq7iwUUUHiynx6q5KbstVNEeNV4cDNhx96X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "MyCallOption.sol:MyCallOption",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "MyCallOption.sol:MyCallOption",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "MyCallOption.sol:MyCallOption",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "MyCallOption.sol:MyCallOption",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "MyCallOption.sol:MyCallOption",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "MyCallOption.sol:MyCallOption",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1529,
								"contract": "MyCallOption.sol:MyCallOption",
								"label": "usdc",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IERC20)877"
							},
							{
								"astId": 1531,
								"contract": "MyCallOption.sol:MyCallOption",
								"label": "price",
								"offset": 0,
								"slot": "7",
								"type": "t_uint128"
							},
							{
								"astId": 1533,
								"contract": "MyCallOption.sol:MyCallOption",
								"label": "exerciseTime",
								"offset": 16,
								"slot": "7",
								"type": "t_uint96"
							},
							{
								"astId": 1535,
								"contract": "MyCallOption.sol:MyCallOption",
								"label": "durationTime",
								"offset": 28,
								"slot": "7",
								"type": "t_uint32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)877": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5159",
				"formattedMessage": "Warning: \"selfdestruct\" has been deprecated. Note that, starting from the Cancun hard fork, the underlying opcode no longer deletes the code and data associated with an account and only transfers its Ether to the beneficiary, unless executed in the same transaction in which the contract was created (see EIP-6780). Any use in newly deployed contracts is strongly discouraged even if the new behavior is taken into account. Future changes to the EVM might further reduce the functionality of the opcode.\n  --> MyCallOption.sol:48:9:\n   |\n48 |         selfdestruct(payable(msg.sender));\n   |         ^^^^^^^^^^^^\n\n",
				"message": "\"selfdestruct\" has been deprecated. Note that, starting from the Cancun hard fork, the underlying opcode no longer deletes the code and data associated with an account and only transfers its Ether to the beneficiary, unless executed in the same transaction in which the contract was created (see EIP-6780). Any use in newly deployed contracts is strongly discouraged even if the new behavior is taken into account. Future changes to the EVM might further reduce the functionality of the opcode.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1926,
					"file": "MyCallOption.sol",
					"start": 1914
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1512
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1513,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1512,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1512,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1512
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1494,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1512
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 1513,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1512,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1512,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								1512
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							939
						]
					},
					"id": 940,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:5",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 939,
							"linearizedBaseContracts": [
								939
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:5",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3022:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3045:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3070:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3093:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3119:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 916,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3136:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 918,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3155:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 920,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:5"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:5"
									},
									"scope": 939,
									"src": "2997:183:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:5",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3501:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:5"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3539:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:5"
									},
									"scope": 939,
									"src": "3485:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:5",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 938,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:5"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "3791:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 935,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:5"
									},
									"scope": 939,
									"src": "3740:60:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 940,
							"src": "2113:1689:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1482
						],
						"IERC20": [
							877
						],
						"IERC20Permit": [
							939
						],
						"SafeERC20": [
							1229
						]
					},
					"id": 1230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 941,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 943,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1230,
							"sourceUnit": 878,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 942,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 945,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1230,
							"sourceUnit": 940,
							"src": "179:60:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 944,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 939,
										"src": "187:12:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 947,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1230,
							"sourceUnit": 1483,
							"src": "240:51:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 946,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1482,
										"src": "248:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 948,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1229,
							"linearizedBaseContracts": [
								1229
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 951,
									"libraryName": {
										"id": 949,
										"name": "Address",
										"nameLocations": [
											"781:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1482,
										"src": "781:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:6",
									"typeName": {
										"id": 950,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:6",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 956,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "907:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:6"
									},
									"src": "876:46:6"
								},
								{
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 965,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1043:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1060:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1086:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:6"
									},
									"src": "1004:109:6"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "1375:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 977,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "1405:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 980,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "1427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 844,
																	"src": "1427:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 982,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 971,
																			"src": "1444:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 983,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 973,
																			"src": "1448:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 984,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 978,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 976,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "1385:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:6"
											}
										]
									},
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1325:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 968,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 967,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "1325:6:6"
													},
													"referencedDeclaration": 877,
													"src": "1325:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1339:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1351:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:6"
									},
									"scope": 1229,
									"src": "1303:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "1792:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1003,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "1822:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1006,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "1844:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 876,
																	"src": "1844:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1008,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 995,
																			"src": "1865:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1009,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 997,
																			"src": "1871:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1010,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 999,
																			"src": "1875:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1011,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 1004,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1002,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "1802:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:6"
											}
										]
									},
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1728:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 992,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 991,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "1728:6:6"
													},
													"referencedDeclaration": 877,
													"src": "1728:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1742:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1756:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1768:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:6"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:6"
									},
									"scope": 1229,
									"src": "1702:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "2167:139:6",
										"statements": [
											{
												"assignments": [
													1028
												],
												"declarations": [
													{
														"constant": false,
														"id": 1028,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1046,
														"src": "2177:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1027,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1037,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1033,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1229",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1229",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1031,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1035,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "2231:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1029,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "2200:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 854,
														"src": "2200:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1039,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "2262:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1040,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "2269:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1041,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "2278:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1042,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "2293:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1038,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "2249:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:6"
											}
										]
									},
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "2112:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1019,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1018,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "2112:6:6"
													},
													"referencedDeclaration": 877,
													"src": "2112:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "2126:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "2143:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:6"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:6"
									},
									"scope": 1229,
									"src": "2081:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "2607:370:6",
										"statements": [
											{
												"id": 1088,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:6",
												"statements": [
													{
														"assignments": [
															1059
														],
														"declarations": [
															{
																"constant": false,
																"id": 1059,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 1088,
																"src": "2641:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1058,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1068,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1064,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1229",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1229",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1062,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1066,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "2699:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1060,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "2668:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 854,
																"src": "2668:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1069,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "2725:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1070,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "2744:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1079,
														"nodeType": "IfStatement",
														"src": "2721:160:6",
														"trueBody": {
															"id": 1078,
															"nodeType": "Block",
															"src": "2763:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1073,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1053,
																				"src": "2821:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1074,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1059,
																				"src": "2830:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1075,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1055,
																				"src": "2848:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1072,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 965,
																			"src": "2788:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1077,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1081,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "2907:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1082,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "2914:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1083,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "2923:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1084,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1055,
																		"src": "2942:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1080,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "2894:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1087,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "2540:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1050,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1049,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "2540:6:6"
													},
													"referencedDeclaration": 877,
													"src": "2540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "2554:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "2571:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:6"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:6"
									},
									"scope": 1229,
									"src": "2509:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "3373:303:6",
										"statements": [
											{
												"assignments": [
													1102
												],
												"declarations": [
													{
														"constant": false,
														"id": 1102,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "3383:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1101,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1111,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1105,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "3426:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$877",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 864,
															"src": "3426:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 1107,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "3442:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1108,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "3451:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1109,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 1103,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:6"
											},
											{
												"condition": {
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 1113,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "3498:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$877",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1114,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "3505:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$877",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1112,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "3474:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1135,
												"nodeType": "IfStatement",
												"src": "3469:201:6",
												"trueBody": {
													"id": 1134,
													"nodeType": "Block",
													"src": "3520:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1118,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "3554:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1121,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1094,
																					"src": "3576:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$877",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 864,
																				"src": "3576:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1123,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1096,
																						"src": "3592:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1124,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 1125,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 1119,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1117,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "3534:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1128,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1130,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "3639:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1131,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "3646:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1129,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "3619:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1133,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "3318:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1093,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1092,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "3318:6:6"
													},
													"referencedDeclaration": 877,
													"src": "3318:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "3332:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "3349:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:6"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:6"
									},
									"scope": 1229,
									"src": "3296:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "4129:559:6",
										"statements": [
											{
												"assignments": [
													1147
												],
												"declarations": [
													{
														"constant": false,
														"id": 1147,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1178,
														"src": "4478:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1146,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1155,
												"initialValue": {
													"arguments": [
														{
															"id": 1153,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "4532:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1150,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "4512:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1148,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:6",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1303,
														"src": "4504:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1156,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "4551:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 1162,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "4589:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 1163,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:6",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1165,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 1160,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:6",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1177,
												"nodeType": "IfStatement",
												"src": "4547:135:6",
												"trueBody": {
													"id": 1176,
													"nodeType": "Block",
													"src": "4610:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1172,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1141,
																				"src": "4664:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$877",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$877",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1170,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1169,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "4631:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1175,
															"nodeType": "RevertStatement",
															"src": "4624:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "4088:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1140,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1139,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "4088:6:6"
													},
													"referencedDeclaration": 877,
													"src": "4088:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "4102:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:6"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:6"
									},
									"scope": 1229,
									"src": "4059:629:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "5278:489:6",
										"statements": [
											{
												"assignments": [
													1191,
													1193
												],
												"declarations": [
													{
														"constant": false,
														"id": 1191,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "5574:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1190,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1193,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "5588:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1192,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1201,
												"initialValue": {
													"arguments": [
														{
															"id": 1199,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "5635:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1196,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "5623:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1194,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:6",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1202,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "5657:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1203,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1193,
																				"src": "5669:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:6",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1209,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1193,
																				"src": "5706:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1211,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1210,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1212,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1207,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:6",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1215,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1219,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "5738:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$877",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$877",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1217,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1189,
												"id": 1226,
												"nodeType": "Return",
												"src": "5650:110:6"
											}
										]
									},
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "5222:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1182,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1181,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "5222:6:6"
													},
													"referencedDeclaration": 877,
													"src": "5222:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "5236:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:6"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "5272:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1187,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:6"
									},
									"scope": 1229,
									"src": "5189:578:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1230,
							"src": "751:5018:6",
							"usedErrors": [
								956,
								965
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1482
						]
					},
					"id": 1483,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1232,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1482,
							"linearizedBaseContracts": [
								1482
							],
							"name": "Address",
							"nameLocation": "203:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:7",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1237,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "349:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:7"
									},
									"src": "316:50:7"
								},
								{
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:7",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1242,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "475:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:7"
									},
									"src": "452:39:7"
								},
								{
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:7",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1245,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:7"
									},
									"src": "591:24:7"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "1602:260:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1255,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1482",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1482",
																		"typeString": "library Address"
																	}
																],
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1253,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1258,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "1640:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1268,
												"nodeType": "IfStatement",
												"src": "1612:109:7",
												"trueBody": {
													"id": 1267,
													"nodeType": "Block",
													"src": "1648:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1263,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1482",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1482",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1261,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1260,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1237,
																	"src": "1669:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1266,
															"nodeType": "RevertStatement",
															"src": "1662:48:7"
														}
													]
												}
											},
											{
												"assignments": [
													1270,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1270,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1285,
														"src": "1732:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1269,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1277,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1271,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1248,
																"src": "1750:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1273,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "1772:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:7"
											},
											{
												"condition": {
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:7",
													"subExpression": {
														"id": 1278,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "1798:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1284,
												"nodeType": "IfStatement",
												"src": "1793:63:7",
												"trueBody": {
													"id": 1283,
													"nodeType": "Block",
													"src": "1807:49:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1280,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1245,
																	"src": "1828:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1282,
															"nodeType": "RevertStatement",
															"src": "1821:24:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1246,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1550:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1577:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:7"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:7"
									},
									"scope": 1482,
									"src": "1531:331:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "2794:62:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1297,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "2833:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1298,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "2841:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1296,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "2811:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1295,
												"id": 1301,
												"nodeType": "Return",
												"src": "2804:45:7"
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2727:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2743:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1290,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:7"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2780:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1293,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:7"
									},
									"scope": 1482,
									"src": "2705:151:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "3293:279:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1317,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1482",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1482",
																		"typeString": "library Address"
																	}
																],
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1315,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1320,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "3331:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1330,
												"nodeType": "IfStatement",
												"src": "3303:108:7",
												"trueBody": {
													"id": 1329,
													"nodeType": "Block",
													"src": "3338:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1325,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1482",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1482",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1323,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1322,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1237,
																	"src": "3359:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1328,
															"nodeType": "RevertStatement",
															"src": "3352:48:7"
														}
													]
												}
											},
											{
												"assignments": [
													1332,
													1334
												],
												"declarations": [
													{
														"constant": false,
														"id": 1332,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1348,
														"src": "3421:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1331,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1334,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1348,
														"src": "3435:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1333,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1341,
												"initialValue": {
													"arguments": [
														{
															"id": 1339,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "3488:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1335,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1306,
																"src": "3462:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1337,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "3481:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1343,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "3537:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1344,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "3545:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1345,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "3554:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1342,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "3510:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1314,
												"id": 1347,
												"nodeType": "Return",
												"src": "3503:62:7"
											}
										]
									},
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "3211:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "3227:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1307,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "3246:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:7"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "3279:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1312,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:7"
									},
									"scope": 1482,
									"src": "3180:392:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "3811:154:7",
										"statements": [
											{
												"assignments": [
													1360,
													1362
												],
												"declarations": [
													{
														"constant": false,
														"id": 1360,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1374,
														"src": "3822:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1359,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1362,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1374,
														"src": "3836:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1361,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1367,
												"initialValue": {
													"arguments": [
														{
															"id": 1365,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "3881:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1363,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "3863:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1369,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "3930:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1370,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "3938:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1371,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "3947:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1368,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "3903:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1358,
												"id": 1373,
												"nodeType": "Return",
												"src": "3896:62:7"
											}
										]
									},
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3739:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3755:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1353,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:7"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3797:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:7"
									},
									"scope": 1482,
									"src": "3711:254:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "4203:156:7",
										"statements": [
											{
												"assignments": [
													1386,
													1388
												],
												"declarations": [
													{
														"constant": false,
														"id": 1386,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "4214:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1385,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1388,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "4228:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1387,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1393,
												"initialValue": {
													"arguments": [
														{
															"id": 1391,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "4275:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1389,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "4255:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1395,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "4324:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1396,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "4332:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1397,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "4341:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1394,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "4297:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1384,
												"id": 1399,
												"nodeType": "Return",
												"src": "4290:62:7"
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "4136:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "4152:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:7"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "4189:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1382,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:7"
									},
									"scope": 1482,
									"src": "4106:253:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1440,
										"nodeType": "Block",
										"src": "4783:424:7",
										"statements": [
											{
												"condition": {
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:7",
													"subExpression": {
														"id": 1413,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "4798:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1438,
													"nodeType": "Block",
													"src": "4857:344:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1420,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1408,
																			"src": "5045:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1424,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1404,
																				"src": "5071:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1435,
															"nodeType": "IfStatement",
															"src": "5041:119:7",
															"trueBody": {
																"id": 1434,
																"nodeType": "Block",
																"src": "5096:64:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1431,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1404,
																					"src": "5138:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1430,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1242,
																				"src": "5121:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1433,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1436,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1408,
																"src": "5180:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1412,
															"id": 1437,
															"nodeType": "Return",
															"src": "5173:17:7"
														}
													]
												},
												"id": 1439,
												"nodeType": "IfStatement",
												"src": "4793:408:7",
												"trueBody": {
													"id": 1419,
													"nodeType": "Block",
													"src": "4807:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1416,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1408,
																		"src": "4829:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1415,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "4821:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1418,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1402,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4670:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4694:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4716:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:7"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4769:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1410,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:7"
									},
									"scope": 1482,
									"src": "4625:582:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "5509:122:7",
										"statements": [
											{
												"condition": {
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:7",
													"subExpression": {
														"id": 1451,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "5524:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1460,
													"nodeType": "Block",
													"src": "5583:42:7",
													"statements": [
														{
															"expression": {
																"id": 1458,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1446,
																"src": "5604:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1450,
															"id": 1459,
															"nodeType": "Return",
															"src": "5597:17:7"
														}
													]
												},
												"id": 1461,
												"nodeType": "IfStatement",
												"src": "5519:106:7",
												"trueBody": {
													"id": 1457,
													"nodeType": "Block",
													"src": "5533:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1454,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1446,
																		"src": "5555:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1453,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "5547:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1456,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:7",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "5433:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "5447:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1445,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:7"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "5495:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1448,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:7"
									},
									"scope": 1482,
									"src": "5407:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1480,
										"nodeType": "Block",
										"src": "5798:461:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1469,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "5874:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1478,
													"nodeType": "Block",
													"src": "6204:49:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1475,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1245,
																	"src": "6225:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1477,
															"nodeType": "RevertStatement",
															"src": "6218:24:7"
														}
													]
												},
												"id": 1479,
												"nodeType": "IfStatement",
												"src": "5870:383:7",
												"trueBody": {
													"id": 1474,
													"nodeType": "Block",
													"src": "5897:301:7",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:7",
																"nodeType": "YulBlock",
																"src": "6055:133:7",
																"statements": [
																	{
																		"nativeSrc": "6073:40:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:7"
																			},
																			"nativeSrc": "6096:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:7",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:7",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:7"
																					},
																					"nativeSrc": "6137:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:7",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:7"
																			},
																			"nativeSrc": "6130:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:7"
																		},
																		"nativeSrc": "6130:44:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1466,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1466,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:7",
																	"valueSize": 1
																}
															],
															"id": 1473,
															"nodeType": "InlineAssembly",
															"src": "6046:142:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:7",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "5760:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:7"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:7"
									},
									"scope": 1482,
									"src": "5743:516:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1483,
							"src": "195:6066:7",
							"usedErrors": [
								1237,
								1242,
								1245
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1512
						]
					},
					"id": 1513,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1484,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1485,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1512,
							"linearizedBaseContracts": [
								1512
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1490,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1489,
												"id": 1492,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1512,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1499,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1498,
												"id": 1501,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1496,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1512,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1507,
												"id": 1509,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1512,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1513,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"MyCallOption.sol": {
				"ast": {
					"absolutePath": "MyCallOption.sol",
					"exportedSymbols": {
						"Address": [
							1482
						],
						"Context": [
							1512
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"IERC20Permit": [
							939
						],
						"MyCallOption": [
							1717
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							1229
						]
					},
					"id": 1718,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1514,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1515,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1718,
							"sourceUnit": 878,
							"src": "145:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1516,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1718,
							"sourceUnit": 800,
							"src": "203:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1517,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1718,
							"sourceUnit": 1230,
							"src": "260:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1518,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1718,
							"sourceUnit": 148,
							"src": "327:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1519,
										"name": "ERC20",
										"nameLocations": [
											"408:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "408:5:9"
									},
									"id": 1520,
									"nodeType": "InheritanceSpecifier",
									"src": "408:5:9"
								},
								{
									"baseName": {
										"id": 1521,
										"name": "Ownable",
										"nameLocations": [
											"415:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "415:7:9"
									},
									"id": 1522,
									"nodeType": "InheritanceSpecifier",
									"src": "415:7:9"
								}
							],
							"canonicalName": "MyCallOption",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1717,
							"linearizedBaseContracts": [
								1717,
								147,
								799,
								189,
								903,
								877,
								1512
							],
							"name": "MyCallOption",
							"nameLocation": "392:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1526,
									"libraryName": {
										"id": 1523,
										"name": "SafeERC20",
										"nameLocations": [
											"437:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1229,
										"src": "437:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "431:27:9",
									"typeName": {
										"id": 1525,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1524,
											"name": "IERC20",
											"nameLocations": [
												"451:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 877,
											"src": "451:6:9"
										},
										"referencedDeclaration": 877,
										"src": "451:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$877",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "3e413bee",
									"id": 1529,
									"mutability": "mutable",
									"name": "usdc",
									"nameLocation": "480:4:9",
									"nodeType": "VariableDeclaration",
									"scope": 1717,
									"src": "466:18:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$877",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1528,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1527,
											"name": "IERC20",
											"nameLocations": [
												"466:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 877,
											"src": "466:6:9"
										},
										"referencedDeclaration": 877,
										"src": "466:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$877",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a035b1fe",
									"id": 1531,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "506:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1717,
									"src": "491:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 1530,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "491:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ec46c4ef",
									"id": 1533,
									"mutability": "mutable",
									"name": "exerciseTime",
									"nameLocation": "532:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1717,
									"src": "518:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint96",
										"typeString": "uint96"
									},
									"typeName": {
										"id": 1532,
										"name": "uint96",
										"nodeType": "ElementaryTypeName",
										"src": "518:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint96",
											"typeString": "uint96"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f8b75fb5",
									"id": 1535,
									"mutability": "mutable",
									"name": "durationTime",
									"nameLocation": "565:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1717,
									"src": "551:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 1534,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "551:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "750:134:9",
										"statements": [
											{
												"expression": {
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1555,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1531,
														"src": "761:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1556,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "769:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "761:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 1558,
												"nodeType": "ExpressionStatement",
												"src": "761:14:9"
											},
											{
												"expression": {
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1559,
														"name": "exerciseTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "786:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1560,
														"name": "_exerciseTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "801:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "786:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 1562,
												"nodeType": "ExpressionStatement",
												"src": "786:28:9"
											},
											{
												"expression": {
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1563,
														"name": "durationTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "825:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1564,
														"name": "_durationTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "840:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "825:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1566,
												"nodeType": "ExpressionStatement",
												"src": "825:28:9"
											},
											{
												"expression": {
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1567,
														"name": "usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "864:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$877",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1568,
														"name": "_usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "871:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$877",
															"typeString": "contract IERC20"
														}
													},
													"src": "864:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "864:12:9"
											}
										]
									},
									"id": 1572,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "e68891e79a84e6b58be8af95e79c8be5a49ae69c9fe69d83546f6b656e",
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "unicodeString",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "678:38:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a6bf1ccc4e9af8f2a5fd3a995eca1d8610914cdcdc2ab888c60c98dd08ac6cf7",
														"typeString": "literal_string hex\"e68891e79a84e6b58be8af95e79c8be5a49ae69c9fe69d83546f6b656e\""
													},
													"value": "我的测试看多期权Token"
												},
												{
													"hexValue": "43414c4c544f4b454e",
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "718:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_08c178f236dab5708dc6ebe8f51b6f0106ee1919c38262494a45adc4ff004fb8",
														"typeString": "literal_string \"CALLTOKEN\""
													},
													"value": "CALLTOKEN"
												}
											],
											"id": 1549,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1546,
												"name": "ERC20",
												"nameLocations": [
													"672:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "672:5:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "672:58:9"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1551,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "739:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "743:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "739:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1553,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1550,
												"name": "Ownable",
												"nameLocations": [
													"731:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "731:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "731:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "_usdc",
												"nameLocation": "605:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "598:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1537,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1536,
														"name": "IERC20",
														"nameLocations": [
															"598:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "598:6:9"
													},
													"referencedDeclaration": 877,
													"src": "598:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "620:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "612:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1539,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "_exerciseTime",
												"nameLocation": "635:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "628:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1541,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "628:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "_durationTime",
												"nameLocation": "657:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "650:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1543,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "650:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "597:74:9"
									},
									"returnParameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "750:0:9"
									},
									"scope": 1717,
									"src": "586:298:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1592,
										"nodeType": "Block",
										"src": "940:103:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1578,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "959:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "963:5:9",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "959:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "971:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "959:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6574682076616c75652063616e742062652030",
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "974:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6b3783b480a8bf5fa8a6f973d9985c95e9942055d1b48785f649a7c6ffa19dde",
																"typeString": "literal_string \"eth value cant be 0\""
															},
															"value": "eth value cant be 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6b3783b480a8bf5fa8a6f973d9985c95e9942055d1b48785f649a7c6ffa19dde",
																"typeString": "literal_string \"eth value cant be 0\""
															}
														],
														"id": 1577,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "951:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "951:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1584,
												"nodeType": "ExpressionStatement",
												"src": "951:45:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1586,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1013:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1017:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1013:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1588,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1025:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1029:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1025:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1585,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1007:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1007:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1591,
												"nodeType": "ExpressionStatement",
												"src": "1007:28:9"
											}
										]
									},
									"functionSelector": "384b2367",
									"id": 1593,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1575,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1574,
												"name": "onlyOwner",
												"nameLocations": [
													"915:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "915:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "915:9:9"
										}
									],
									"name": "issueOption",
									"nameLocation": "901:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "912:2:9"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "940:0:9"
									},
									"scope": 1717,
									"src": "892:151:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1652,
										"nodeType": "Block",
										"src": "1097:382:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1599,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1116:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1122:9:9",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1116:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1601,
																	"name": "exerciseTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "1135:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "1116:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1603,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1151:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1157:9:9",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1151:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	"id": 1607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1605,
																		"name": "exerciseTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1533,
																		"src": "1169:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1606,
																		"name": "durationTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1535,
																		"src": "1184:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "1169:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "1151:45:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1116:80:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420696e20736574746c652074696d652072616e6765",
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1198:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6ace33062e0a81aa62ef141bc3911c6f7ae64d84af8b1a71c3fc71963e3edb9c",
																"typeString": "literal_string \"not in settle time range\""
															},
															"value": "not in settle time range"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6ace33062e0a81aa62ef141bc3911c6f7ae64d84af8b1a71c3fc71963e3edb9c",
																"typeString": "literal_string \"not in settle time range\""
															}
														],
														"id": 1598,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1108:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1108:117:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1612,
												"nodeType": "ExpressionStatement",
												"src": "1108:117:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1615,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1254:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1258:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1254:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1614,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "1244:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1244:21:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1618,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "1269:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1244:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616d6f756e74206d757374203e2062616c616e6365",
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1278:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8cc0384f7716f8237c4bc315fed8a6c2413c45b97b2f6b2db44c9a9c9e84c77c",
																"typeString": "literal_string \"amount must > balance\""
															},
															"value": "amount must > balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8cc0384f7716f8237c4bc315fed8a6c2413c45b97b2f6b2db44c9a9c9e84c77c",
																"typeString": "literal_string \"amount must > balance\""
															}
														],
														"id": 1613,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1236:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1236:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1622,
												"nodeType": "ExpressionStatement",
												"src": "1236:66:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1624,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1319:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1323:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1319:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1626,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "1331:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1623,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1313:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1313:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1628,
												"nodeType": "ExpressionStatement",
												"src": "1313:26:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1632,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1372:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1376:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1372:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1636,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1392:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyCallOption_$1717",
																		"typeString": "contract MyCallOption"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyCallOption_$1717",
																		"typeString": "contract MyCallOption"
																	}
																],
																"id": 1635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1384:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1634,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1384:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1384:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1638,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "1399:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1639,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1531,
																"src": "1409:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "1399:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1629,
															"name": "usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "1350:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1355:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1016,
														"src": "1350:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$877_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "1350:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1646,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1450:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1454:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1450:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1442:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1644,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1442:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1442:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1649,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "1463:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1643,
														"name": "safeTransferETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "1426:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1426:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1651,
												"nodeType": "ExpressionStatement",
												"src": "1426:45:9"
											}
										]
									},
									"functionSelector": "83b6fa98",
									"id": 1653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "settleOption",
									"nameLocation": "1060:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1081:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "1073:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1072:17:9"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1097:0:9"
									},
									"scope": 1717,
									"src": "1051:428:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1677,
										"nodeType": "Block",
										"src": "1548:156:9",
										"statements": [
											{
												"assignments": [
													1661,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1661,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1565:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1677,
														"src": "1560:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1660,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1560:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1671,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1610:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1600:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 1666,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1604:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1600:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1662,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "1578:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1581:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1578:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1664,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1657,
																"src": "1593:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1578:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1578:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1559:54:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1673,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "1632:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c6564",
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1641:54:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															},
															"value": "TransferHelper::safeTransferETH: ETH transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															}
														],
														"id": 1672,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1624:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1624:72:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1676,
												"nodeType": "ExpressionStatement",
												"src": "1624:72:9"
											}
										]
									},
									"id": 1678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "1496:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1520:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "1512:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1512:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1532:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "1524:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1524:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1511:27:9"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1548:0:9"
									},
									"scope": 1717,
									"src": "1487:217:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "1748:207:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1684,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1767:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1773:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1767:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 1688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1686,
																	"name": "exerciseTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "1786:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1687,
																	"name": "durationTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "1801:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "1786:27:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "1767:46:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742065787069726520796574",
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1815:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0cd675348041524c27e0a10458b93eacebb240f1e4fa99c29ffa44c888ecdc94",
																"typeString": "literal_string \"not expire yet\""
															},
															"value": "not expire yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0cd675348041524c27e0a10458b93eacebb240f1e4fa99c29ffa44c888ecdc94",
																"typeString": "literal_string \"not expire yet\""
															}
														],
														"id": 1683,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1759:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1759:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1692,
												"nodeType": "ExpressionStatement",
												"src": "1759:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1696,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1861:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1865:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1861:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1702,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1896:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MyCallOption_$1717",
																				"typeString": "contract MyCallOption"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MyCallOption_$1717",
																				"typeString": "contract MyCallOption"
																			}
																		],
																		"id": 1701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1888:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1700,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1888:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1888:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1698,
																	"name": "usdc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1529,
																	"src": "1873:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1878:9:9",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 834,
																"src": "1873:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1873:29:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1693,
															"name": "usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "1843:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1848:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 989,
														"src": "1843:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$877_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1843:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1706,
												"nodeType": "ExpressionStatement",
												"src": "1843:60:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1710,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1935:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1939:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1935:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1927:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1708,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1927:8:9",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1927:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1707,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "1914:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1914:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1714,
												"nodeType": "ExpressionStatement",
												"src": "1914:33:9"
											}
										]
									},
									"functionSelector": "6bdebcc9",
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1681,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1680,
												"name": "onlyOwner",
												"nameLocations": [
													"1738:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1738:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1738:9:9"
										}
									],
									"name": "destory",
									"nameLocation": "1721:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1728:2:9"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1748:0:9"
									},
									"scope": 1717,
									"src": "1712:243:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1718,
							"src": "383:1581:9",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								956,
								1237,
								1242,
								1245
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "40:1926:9"
				},
				"id": 9
			}
		}
	}
}